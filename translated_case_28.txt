I0123 21:39:38.426732 139974069698560 inference_utils.py:69] Parsing gin configuration.
I0123 21:39:38.426829 139974069698560 inference_utils.py:71] Added Gin search path meliad_lib/meliad/transformer/configs
I0123 21:39:38.427024 139974069698560 inference_utils.py:74] Loading Gin config file base_htrans.gin
I0123 21:39:38.427056 139974069698560 inference_utils.py:74] Loading Gin config file size/medium_150M.gin
I0123 21:39:38.427086 139974069698560 inference_utils.py:74] Loading Gin config file options/positions_t5.gin
I0123 21:39:38.427113 139974069698560 inference_utils.py:74] Loading Gin config file options/lr_cosine_decay.gin
I0123 21:39:38.427139 139974069698560 inference_utils.py:74] Loading Gin config file options/seq_1024_nocache.gin
I0123 21:39:38.427165 139974069698560 inference_utils.py:74] Loading Gin config file geometry_150M_generate.gin
I0123 21:39:38.427191 139974069698560 inference_utils.py:76] Overriding Gin param DecoderOnlyLanguageModelGenerate.output_token_losses=True
I0123 21:39:38.427217 139974069698560 inference_utils.py:76] Overriding Gin param TransformerTaskConfig.batch_size=32
I0123 21:39:38.427242 139974069698560 inference_utils.py:76] Overriding Gin param TransformerTaskConfig.sequence_length=128
I0123 21:39:38.427268 139974069698560 inference_utils.py:76] Overriding Gin param Trainer.restore_state_variables=False
I0123 21:39:38.427313 139974069698560 resource_reader.py:50] system_path_file_exists:base_htrans.gin
E0123 21:39:38.427446 139974069698560 resource_reader.py:55] Path not found: base_htrans.gin
I0123 21:39:38.427647 139974069698560 resource_reader.py:50] system_path_file_exists:trainer_configuration.gin
E0123 21:39:38.427748 139974069698560 resource_reader.py:55] Path not found: trainer_configuration.gin
I0123 21:39:38.434142 139974069698560 resource_reader.py:50] system_path_file_exists:size/medium_150M.gin
E0123 21:39:38.434264 139974069698560 resource_reader.py:55] Path not found: size/medium_150M.gin
I0123 21:39:38.434585 139974069698560 resource_reader.py:50] system_path_file_exists:options/positions_t5.gin
E0123 21:39:38.434689 139974069698560 resource_reader.py:55] Path not found: options/positions_t5.gin
I0123 21:39:38.434969 139974069698560 resource_reader.py:50] system_path_file_exists:options/lr_cosine_decay.gin
E0123 21:39:38.435068 139974069698560 resource_reader.py:55] Path not found: options/lr_cosine_decay.gin
I0123 21:39:38.435476 139974069698560 resource_reader.py:50] system_path_file_exists:options/seq_1024_nocache.gin
E0123 21:39:38.435577 139974069698560 resource_reader.py:55] Path not found: options/seq_1024_nocache.gin
I0123 21:39:38.439277 139974069698560 training_loop.py:334] ==== Training loop: initializing model ====
I0123 21:39:38.553481 139974069698560 xla_bridge.py:660] Unable to initialize backend 'rocm': NOT_FOUND: Could not find registered platform with name: "rocm". Available platform names are: CUDA
I0123 21:39:38.554205 139974069698560 xla_bridge.py:660] Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
I0123 21:39:38.560846 139974069698560 training_loop.py:335] Process 0 of 1
I0123 21:39:38.560900 139974069698560 training_loop.py:336] Local device count = 1
I0123 21:39:38.560939 139974069698560 training_loop.py:337] Number of replicas = 1
I0123 21:39:38.560971 139974069698560 training_loop.py:339] Using random number seed 42
I0123 21:39:39.059928 139974069698560 training_loop.py:359] Initializing the model.
I0123 21:39:39.429543 139974069698560 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.429851 139974069698560 decoder_stack.py:316] dstack: scanning over 1 windows.
I0123 21:39:39.429959 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 21:39:39.430037 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 21:39:39.430113 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 21:39:39.430194 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 21:39:39.430266 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 21:39:39.430337 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 21:39:39.430406 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 21:39:39.430476 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 21:39:39.430544 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 21:39:39.430612 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 21:39:39.430682 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 21:39:39.430749 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 21:39:39.430789 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:39.430834 139974069698560 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 21:39:39.430951 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:39.430991 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:39.431022 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:39.433032 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.438374 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:39.449098 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.449379 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:39.453788 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:39.464422 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:39.464480 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:39.464519 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:39.464551 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.464619 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.465810 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.465888 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.466605 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.469074 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.475244 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.476548 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.476628 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:39.476664 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:39.476724 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.476853 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:39.477184 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:39.477233 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.479149 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.479247 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.482129 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.482208 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:39.482707 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:39.492912 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.501787 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.501884 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.502185 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.502267 139974069698560 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 21:39:39.502378 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:39.502416 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:39.502447 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:39.504311 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.506809 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:39.512433 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.512695 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:39.515337 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:39.519172 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:39.519228 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:39.519264 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:39.519295 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.519355 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.519919 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.519993 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.520351 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.521123 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.523632 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.524246 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.524325 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:39.524360 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:39.524416 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.524541 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:39.524862 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:39.524904 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.526877 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.526969 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.529441 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.529522 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:39.529959 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:39.532264 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.534156 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.534249 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.534537 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.534617 139974069698560 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 21:39:39.534727 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:39.534766 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:39.534796 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:39.537040 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.539421 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:39.544955 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.545223 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:39.547886 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:39.551681 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:39.551737 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:39.551772 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:39.551802 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.551866 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.552419 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.552494 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.552852 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.553614 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.556122 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.556787 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.556863 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:39.556898 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:39.556955 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.557082 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:39.557404 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:39.557447 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.559357 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.559450 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.562143 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.562227 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:39.562700 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:39.564976 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.566909 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.567003 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.567297 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.567377 139974069698560 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 21:39:39.567487 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:39.567527 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:39.567557 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:39.569446 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.571847 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:39.577484 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.577757 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:39.580403 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:39.584163 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:39.584218 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:39.584253 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:39.584282 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.584342 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.584901 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.584974 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.585331 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.586108 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.588645 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.589268 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.589344 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:39.589379 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:39.589437 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.589563 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:39.589892 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:39.589935 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.591824 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.591919 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.594488 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.594572 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:39.594992 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:39.597250 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.599154 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.599249 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.599540 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.599619 139974069698560 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 21:39:39.599726 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:39.599765 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:39.599795 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:39.601713 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.604100 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:39.609761 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.610029 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:39.613041 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:39.616767 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:39.616822 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:39.616857 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:39.616887 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.616950 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.617507 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.617583 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.617949 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.618704 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.621223 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.621853 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.621930 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:39.621964 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:39.622023 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.622151 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:39.622473 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:39.622516 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.624417 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.624508 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.627048 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.627128 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:39.627556 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:39.629824 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.631771 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.631867 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.632159 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.632238 139974069698560 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 21:39:39.632347 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:39.632385 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:39.632415 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:39.634259 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.636613 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:39.642200 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.642453 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:39.645098 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:39.648776 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:39.648829 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:39.648864 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:39.648894 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.648954 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.649558 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.649633 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.649997 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.650770 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.653239 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.653868 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.653945 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:39.653980 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:39.654041 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.654168 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:39.654484 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:39.654527 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.656414 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.656505 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.660055 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.660194 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:39.660639 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:39.662997 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.664921 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.665017 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.665308 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.665390 139974069698560 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 21:39:39.665499 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:39.665537 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:39.665568 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:39.667417 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.669848 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:39.675450 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.675716 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:39.678361 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:39.682191 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:39.682250 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:39.682285 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:39.682315 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.682376 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.682950 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.683025 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.683387 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.684156 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.686847 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.687461 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.687537 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:39.687572 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:39.687628 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.687753 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:39.688080 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:39.688123 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.690408 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.690500 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.692986 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.693067 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:39.693490 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:39.834434 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.836662 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.836809 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.837125 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.837215 139974069698560 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 21:39:39.837330 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:39.837370 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:39.837404 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:39.839475 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.842012 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:39.847831 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.848111 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:39.850850 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:39.854801 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:39.854857 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:39.854895 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:39.854927 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.854990 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.855607 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.855685 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.856065 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.856868 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.859522 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.860164 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.860242 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:39.860278 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:39.860339 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.860468 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:39.860794 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:39.860838 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.862811 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.862905 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.865448 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.865528 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:39.866032 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:39.868417 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.870393 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.870497 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.870797 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.870879 139974069698560 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 21:39:39.870990 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:39.871030 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:39.871062 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:39.872986 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.875416 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:39.881095 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.881355 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:39.884069 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:39.887992 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:39.888047 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:39.888082 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:39.888112 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.888173 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.888738 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.888817 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.889172 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.889955 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.892693 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.893306 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.893385 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:39.893420 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:39.893478 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.893606 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:39.893937 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:39.893980 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.895877 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.895968 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.898536 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.898615 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:39.899039 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:39.901314 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.903230 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.903327 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.903619 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.903706 139974069698560 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 21:39:39.903817 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:39.903856 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:39.903886 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:39.905792 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.908169 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:39.914113 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.914379 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:39.917050 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:39.920789 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:39.920845 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:39.920880 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:39.920911 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.920971 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.921535 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.921611 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.921973 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.922787 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.925264 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.925882 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.925959 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:39.925993 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:39.926049 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.926179 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:39.926496 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:39.926538 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.928445 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.928536 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.931098 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.931176 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:39.931607 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:39.933885 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.935850 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.935944 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.936233 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.936319 139974069698560 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 21:39:39.936433 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:39.936472 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:39.936503 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:39.938367 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.940819 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:39.946399 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.946670 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:39.949328 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:39.953012 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:39.953068 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:39.953103 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:39.953133 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.953234 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.953806 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.953887 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.954251 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.955032 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.957502 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.958126 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.958202 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:39.958237 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:39.958299 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.958425 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:39.958745 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:39.958787 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.960751 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.960843 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.963603 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.963681 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:39.964107 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:39.966411 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.968306 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.968397 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.968683 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.968762 139974069698560 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 21:39:39.968876 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:39.968915 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:39.968945 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:39.970776 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.973200 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:39.978819 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.979080 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:39.981700 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:39.985752 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:39.985806 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:39.985841 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:39.985871 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.985933 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.986485 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.986560 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.986920 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.987681 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.990162 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.990935 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.991012 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:39.991046 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:39.991103 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.991231 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:39.991554 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:39.991598 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:39.993521 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.993616 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:39.996128 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:39.996206 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:39.996644 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:39.999125 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.001028 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:40.001121 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.001411 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:40.001696 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 21:39:40.001767 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 21:39:40.001832 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 21:39:40.001888 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 21:39:40.001941 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 21:39:40.001995 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 21:39:40.002048 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 21:39:40.002100 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 21:39:40.002151 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 21:39:40.002203 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 21:39:40.002254 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 21:39:40.002305 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 21:39:40.002342 139974069698560 decoder_stack.py:344] dstack: Final layernorm.
I0123 21:39:40.005832 139974069698560 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:40.053321 139974069698560 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.053410 139974069698560 decoder_stack.py:333] dstack: autoregressive generator.
I0123 21:39:40.053465 139974069698560 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 21:39:40.053570 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.053607 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.053638 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.053708 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.056135 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.061589 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.061855 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.064497 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.081010 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.081066 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.081101 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.081133 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.081195 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.082335 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.082414 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.083123 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.085121 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.089882 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.091187 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.091273 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.091309 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.091368 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.091497 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.091614 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.091655 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.093556 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.093655 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.096090 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.096171 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.096280 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.098685 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.100629 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.100723 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.101015 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.101097 139974069698560 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 21:39:40.101207 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.101246 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.101276 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.101341 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.103625 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.109114 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.109374 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.112066 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.125100 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.125157 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.125193 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.125223 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.125284 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.125858 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.125939 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.126301 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.126990 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.129481 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.130106 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.130187 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.130227 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.130287 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.130418 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.130528 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.130566 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.132489 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.132582 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.135013 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.135094 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.135201 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.137410 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.139320 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.139415 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.139702 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.139782 139974069698560 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 21:39:40.139891 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.139930 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.139961 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.140026 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.142264 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.147698 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.147952 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.150645 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.163275 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.163330 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.163366 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.163396 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.163458 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.164016 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.164091 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.164448 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.165146 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.167623 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.168240 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.168329 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.168365 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.168429 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.168562 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.168672 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.168710 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.170635 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.170728 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.173156 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.173235 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.173344 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.175561 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.177463 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.177557 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.177856 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.177940 139974069698560 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 21:39:40.178050 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.178089 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.178119 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.178183 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.180437 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.185879 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.186138 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.188813 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.201456 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.201511 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.201546 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.201576 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.201643 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.202215 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.202291 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.202646 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.203331 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.205830 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.206453 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.206529 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.206564 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.206623 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.206761 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.206872 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.206911 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.209145 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.209239 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.211653 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.211733 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.211853 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.214082 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.215962 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.216057 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.216344 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.216425 139974069698560 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 21:39:40.216534 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.216573 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.216604 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.216666 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.218979 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.224439 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.224699 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.227310 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.239904 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.239959 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.239995 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.240026 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.240090 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.240644 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.240720 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.241079 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.241778 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.244326 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.244947 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.245023 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.245059 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.245117 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.245252 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.245363 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.245402 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.247297 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.247390 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.249827 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.249907 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.250015 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.252297 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.254176 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.254272 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.254560 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.254641 139974069698560 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 21:39:40.254749 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.254787 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.254818 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.254882 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.257133 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.262561 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.262818 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.265515 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.278172 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.278228 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.278264 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.278294 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.278356 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.278915 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.278991 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.279352 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.280052 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.282543 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.283164 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.283241 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.283275 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.283336 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.283464 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.283581 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.283620 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.285550 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.285648 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.288050 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.288129 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.288237 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.290465 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.292307 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.292402 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.292845 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.292925 139974069698560 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 21:39:40.293032 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.293071 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.293101 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.293164 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.295400 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.300897 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.301156 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.303761 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.316725 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.316782 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.316818 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.316849 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.316911 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.317468 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.317547 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.324443 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.325252 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.327851 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.328586 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.328666 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.328701 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.328774 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.328907 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.329025 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.329069 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.331094 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.331190 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.333671 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.333751 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.333863 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.336115 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.338077 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.338173 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.338464 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.338547 139974069698560 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 21:39:40.338662 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.338703 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.338734 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.338800 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.341079 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.346761 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.347031 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.349763 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.362614 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.362670 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.362705 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.362735 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.362796 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.363408 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.363485 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.363844 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.364542 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.367029 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.367655 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.367732 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.367769 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.367830 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.367961 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.368072 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.368115 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.370018 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.370112 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.372604 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.372690 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.372801 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.375052 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.376932 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.377026 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.377313 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.377394 139974069698560 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 21:39:40.377503 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.377542 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.377573 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.377637 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.379909 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.385456 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.385724 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.388382 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.401185 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.401241 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.401277 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.401307 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.401371 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.401934 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.402010 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.402367 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.403055 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.405566 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.406243 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.406320 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.406355 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.406413 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.406542 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.406652 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.406690 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.408604 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.408697 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.411131 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.411210 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.411317 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.413537 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.415472 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.415566 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.415852 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.415932 139974069698560 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 21:39:40.416040 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.416078 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.416109 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.416173 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.418434 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.423898 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.424157 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.427297 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.439916 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.439970 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.440006 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.440037 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.440101 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.440712 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.440790 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.441150 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.441855 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.444364 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.444986 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.445063 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.445096 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.445154 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.445281 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.445389 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.445431 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.447328 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.447427 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.449918 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.449996 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.450105 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.452326 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.454195 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.454290 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.454581 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.454660 139974069698560 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 21:39:40.454768 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.454807 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.454837 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.454900 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.457153 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.462704 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.462961 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.465590 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.478288 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.478343 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.478378 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.478408 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.478468 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.479021 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.479096 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.479463 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.480164 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.482657 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.483319 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.483400 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.483436 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.483493 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.483625 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.483736 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.483774 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.485680 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.485780 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.488228 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.488307 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.488416 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.490653 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.492584 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.492679 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.492965 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.493045 139974069698560 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 21:39:40.493152 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.493190 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.493219 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.493281 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.495539 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.500967 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.501227 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.503869 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.516505 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.516561 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.516603 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.516634 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.516695 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.517253 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.517329 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.517692 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.518391 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.520915 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.521532 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.521608 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.521649 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.521710 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.521842 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.521953 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.521992 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.523885 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.523979 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.526594 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.526674 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.526782 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.529376 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.531244 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.531338 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.531624 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.531713 139974069698560 decoder_stack.py:344] dstack: Final layernorm.
I0123 21:39:40.534786 139974069698560 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:40.590372 139974069698560 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.590460 139974069698560 decoder_stack.py:333] dstack: autoregressive generator.
I0123 21:39:40.590514 139974069698560 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 21:39:40.590617 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.590655 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.590684 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.590747 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.593102 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.598514 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.598769 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.601324 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.613567 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.613622 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.613664 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.613695 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.613757 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.614315 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.614391 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.614751 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.615422 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.617908 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.618520 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.618595 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.618630 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.618687 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.618813 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.618927 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.618965 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.620783 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.620875 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.623270 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.623350 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.623458 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.625708 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.627631 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.627730 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.628031 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.628111 139974069698560 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 21:39:40.628216 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.628254 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.628284 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.628345 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.630577 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.635999 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.636253 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.638905 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.651058 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.651114 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.651150 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.651181 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.651241 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.651792 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.651867 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.652214 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.652872 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.655365 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.655977 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.656054 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.656088 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.656145 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.656269 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.656375 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.656418 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.658249 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.658342 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.660709 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.660786 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.660894 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.663122 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.664951 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.665043 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.665328 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.665406 139974069698560 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 21:39:40.665513 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.665551 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.665581 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.665647 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.667844 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.673148 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.673404 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.676042 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.688217 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.688273 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.688309 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.688339 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.688401 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.688951 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.689026 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.689376 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.690070 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.692964 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.693576 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.693658 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.693693 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.693752 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.693881 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.693988 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.694026 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.695849 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.695941 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.698309 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.698386 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.698492 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.700720 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.702534 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.702628 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.702913 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.702993 139974069698560 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 21:39:40.703100 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.703138 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.703168 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.703229 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.705434 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.710743 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.710999 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.713656 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.725919 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.725975 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.726024 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.726063 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.726125 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.726679 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.726753 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.727099 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.727776 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.730285 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.730901 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.730976 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.731010 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.731067 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.731193 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.731299 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.731338 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.733197 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.733288 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.735816 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.735893 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.736002 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.738282 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.740132 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.740225 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.740513 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.740593 139974069698560 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 21:39:40.740699 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.740736 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.740765 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.740826 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.743227 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.748634 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.748885 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.751565 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.763962 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.764016 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.764052 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.764081 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.764147 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.764697 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.764770 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.765120 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.765803 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.768340 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.768955 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.769030 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.769063 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.769119 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.769248 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.769354 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.769390 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.771244 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.771341 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.773755 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.773833 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.773940 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.776202 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.778046 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.778139 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.778424 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.778503 139974069698560 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 21:39:40.778610 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.778647 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.778676 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.778737 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.780954 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.786300 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.786554 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.789219 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.801586 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.801645 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.801680 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.801709 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.801769 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.802319 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.802393 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.802742 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.803428 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.806377 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.806993 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.807066 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.807100 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.807156 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.807281 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.807386 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.807423 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.809292 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.809387 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.811780 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.811858 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.811963 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.814246 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.816092 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.816183 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.816466 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.816543 139974069698560 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 21:39:40.816649 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.816686 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.816715 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.816775 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.819017 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.824403 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.824653 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.827342 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.839735 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.839789 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.839823 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.839853 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.839912 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.840465 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.840539 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.840896 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.841738 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.844273 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.844891 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.844964 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.844997 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.845053 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.845176 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.845281 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.845317 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.847189 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.847279 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.849700 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.849777 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.849882 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.852142 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.853986 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.854080 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.854364 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.854443 139974069698560 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 21:39:40.854548 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.854585 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.854614 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.854673 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.856897 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.862297 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.862554 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.865237 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.877791 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.877845 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.877879 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.877908 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.877967 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.878530 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.878606 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.878965 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.879641 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.882194 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.882825 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.882900 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.882933 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.882989 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.883113 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.883222 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.883259 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.885117 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.885208 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.887624 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.887707 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.887815 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.890085 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.891940 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.892034 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.892317 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.892396 139974069698560 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 21:39:40.892501 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.892537 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.892565 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.892625 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.894879 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.900294 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.900547 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.903244 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.915679 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.915733 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.915767 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.915796 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.915860 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.916416 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.916490 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.916839 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.917519 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.920504 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.921123 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.921200 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.921233 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.921289 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.921413 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.921519 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.921556 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.923420 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.923511 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.925899 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.925982 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.926090 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.928352 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.930197 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.930290 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.930572 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.930650 139974069698560 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 21:39:40.930755 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.930793 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.930822 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.930882 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.933097 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.938482 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.938733 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.941404 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.953772 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.953826 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.953860 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.953888 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.953952 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.954506 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.954579 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.954929 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.955614 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.958147 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.958762 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.958836 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.958869 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.958923 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.959047 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.959152 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.959189 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.961594 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.961694 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.964072 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.964149 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:40.964261 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:40.966483 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.968297 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.968389 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:40.968670 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.968747 139974069698560 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 21:39:40.968851 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:40.968887 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:40.968915 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:40.968975 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.971189 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:40.976552 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.976802 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:40.979444 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:40.991673 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:40.991727 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:40.991762 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:40.991792 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.991852 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.992405 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.992479 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.992828 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.993510 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.996042 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.996651 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.996728 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:40.996761 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:40.996816 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.996940 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:40.997044 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:40.997081 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:40.998938 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:40.999028 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:41.001386 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.001463 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:41.001567 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:41.003815 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:41.005636 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.005735 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:41.006019 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.006098 139974069698560 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 21:39:41.006202 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:41.006239 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:41.006269 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:41.006329 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.008540 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:41.013910 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.014162 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:41.016813 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:41.029182 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:41.029236 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:41.029271 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:41.029299 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.029362 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.029914 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.029989 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.030348 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.031029 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.033923 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.034535 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.034610 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:41.034642 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:41.034698 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.034821 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:41.034926 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:41.034963 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:41.036805 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.036895 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:41.039289 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.039368 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:41.039474 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:41.041745 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:41.043589 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.043680 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:41.043966 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:41.044050 139974069698560 decoder_stack.py:344] dstack: Final layernorm.
I0123 21:39:41.046835 139974069698560 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:45.450890 139974069698560 optimizer_config.py:74] Using Flax Adafactor Optimizer. lr=1.000000, b1=0.900000
I0123 21:39:45.983946 139974069698560 training_loop.py:409] No working directory specified.
I0123 21:39:45.984059 139974069698560 training_loop.py:431] Loading pre-trained model from ag_ckpt_vocab:
I0123 21:39:45.984788 139974069698560 checkpoints.py:1062] Restoring legacy Flax checkpoint from ag_ckpt_vocab/checkpoint_10999999
I0123 21:39:49.250541 139974069698560 training_loop.py:447] Only restoring trainable parameters.
I0123 21:39:49.251143 139974069698560 training_loop.py:724] parameter: decoder/embed/embedding, shape (1024, 1024), size 1048576
I0123 21:39:49.251222 139974069698560 training_loop.py:724] parameter: decoder/final_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.251270 139974069698560 training_loop.py:724] parameter: decoder/transformer0/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 21:39:49.251315 139974069698560 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 21:39:49.251358 139974069698560 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.251399 139974069698560 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.251439 139974069698560 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.251479 139974069698560 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.251518 139974069698560 training_loop.py:724] parameter: decoder/transformer0/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 21:39:49.251558 139974069698560 training_loop.py:724] parameter: decoder/transformer0/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 21:39:49.251597 139974069698560 training_loop.py:724] parameter: decoder/transformer0/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.251634 139974069698560 training_loop.py:724] parameter: decoder/transformer0/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.251672 139974069698560 training_loop.py:724] parameter: decoder/transformer1/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 21:39:49.251709 139974069698560 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 21:39:49.251747 139974069698560 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.251784 139974069698560 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.251820 139974069698560 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.251856 139974069698560 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.251893 139974069698560 training_loop.py:724] parameter: decoder/transformer1/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 21:39:49.251929 139974069698560 training_loop.py:724] parameter: decoder/transformer1/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 21:39:49.251978 139974069698560 training_loop.py:724] parameter: decoder/transformer1/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.252015 139974069698560 training_loop.py:724] parameter: decoder/transformer1/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.252053 139974069698560 training_loop.py:724] parameter: decoder/transformer10/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 21:39:49.252090 139974069698560 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 21:39:49.252126 139974069698560 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.252164 139974069698560 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.252202 139974069698560 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.252239 139974069698560 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.252277 139974069698560 training_loop.py:724] parameter: decoder/transformer10/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 21:39:49.252314 139974069698560 training_loop.py:724] parameter: decoder/transformer10/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 21:39:49.252350 139974069698560 training_loop.py:724] parameter: decoder/transformer10/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.252386 139974069698560 training_loop.py:724] parameter: decoder/transformer10/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.252422 139974069698560 training_loop.py:724] parameter: decoder/transformer11/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 21:39:49.252458 139974069698560 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 21:39:49.252494 139974069698560 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.252529 139974069698560 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.252565 139974069698560 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.252601 139974069698560 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.252637 139974069698560 training_loop.py:724] parameter: decoder/transformer11/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 21:39:49.252673 139974069698560 training_loop.py:724] parameter: decoder/transformer11/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 21:39:49.252709 139974069698560 training_loop.py:724] parameter: decoder/transformer11/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.252745 139974069698560 training_loop.py:724] parameter: decoder/transformer11/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.252780 139974069698560 training_loop.py:724] parameter: decoder/transformer2/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 21:39:49.252816 139974069698560 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 21:39:49.252853 139974069698560 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.252889 139974069698560 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.252931 139974069698560 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.252968 139974069698560 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.253004 139974069698560 training_loop.py:724] parameter: decoder/transformer2/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 21:39:49.253039 139974069698560 training_loop.py:724] parameter: decoder/transformer2/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 21:39:49.253076 139974069698560 training_loop.py:724] parameter: decoder/transformer2/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.253111 139974069698560 training_loop.py:724] parameter: decoder/transformer2/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.253146 139974069698560 training_loop.py:724] parameter: decoder/transformer3/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 21:39:49.253182 139974069698560 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 21:39:49.253218 139974069698560 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.253253 139974069698560 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.253288 139974069698560 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.253324 139974069698560 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.253359 139974069698560 training_loop.py:724] parameter: decoder/transformer3/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 21:39:49.253393 139974069698560 training_loop.py:724] parameter: decoder/transformer3/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 21:39:49.253428 139974069698560 training_loop.py:724] parameter: decoder/transformer3/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.253464 139974069698560 training_loop.py:724] parameter: decoder/transformer3/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.253500 139974069698560 training_loop.py:724] parameter: decoder/transformer4/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 21:39:49.253535 139974069698560 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 21:39:49.253571 139974069698560 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.253607 139974069698560 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.253647 139974069698560 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.253686 139974069698560 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.253722 139974069698560 training_loop.py:724] parameter: decoder/transformer4/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 21:39:49.253757 139974069698560 training_loop.py:724] parameter: decoder/transformer4/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 21:39:49.253793 139974069698560 training_loop.py:724] parameter: decoder/transformer4/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.253828 139974069698560 training_loop.py:724] parameter: decoder/transformer4/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.253865 139974069698560 training_loop.py:724] parameter: decoder/transformer5/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 21:39:49.253905 139974069698560 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 21:39:49.253942 139974069698560 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.253978 139974069698560 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.254013 139974069698560 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.254049 139974069698560 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.254084 139974069698560 training_loop.py:724] parameter: decoder/transformer5/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 21:39:49.254118 139974069698560 training_loop.py:724] parameter: decoder/transformer5/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 21:39:49.254153 139974069698560 training_loop.py:724] parameter: decoder/transformer5/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.254193 139974069698560 training_loop.py:724] parameter: decoder/transformer5/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.254230 139974069698560 training_loop.py:724] parameter: decoder/transformer6/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 21:39:49.254266 139974069698560 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 21:39:49.254302 139974069698560 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.254338 139974069698560 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.254373 139974069698560 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.254409 139974069698560 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.254444 139974069698560 training_loop.py:724] parameter: decoder/transformer6/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 21:39:49.254479 139974069698560 training_loop.py:724] parameter: decoder/transformer6/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 21:39:49.254515 139974069698560 training_loop.py:724] parameter: decoder/transformer6/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.254550 139974069698560 training_loop.py:724] parameter: decoder/transformer6/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.254586 139974069698560 training_loop.py:724] parameter: decoder/transformer7/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 21:39:49.254620 139974069698560 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 21:39:49.254656 139974069698560 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.254690 139974069698560 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.254726 139974069698560 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.254761 139974069698560 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.254796 139974069698560 training_loop.py:724] parameter: decoder/transformer7/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 21:39:49.254831 139974069698560 training_loop.py:724] parameter: decoder/transformer7/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 21:39:49.254871 139974069698560 training_loop.py:724] parameter: decoder/transformer7/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.254908 139974069698560 training_loop.py:724] parameter: decoder/transformer7/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.254943 139974069698560 training_loop.py:724] parameter: decoder/transformer8/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 21:39:49.254978 139974069698560 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 21:39:49.255013 139974069698560 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.255049 139974069698560 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.255084 139974069698560 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.255119 139974069698560 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.255154 139974069698560 training_loop.py:724] parameter: decoder/transformer8/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 21:39:49.255190 139974069698560 training_loop.py:724] parameter: decoder/transformer8/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 21:39:49.255225 139974069698560 training_loop.py:724] parameter: decoder/transformer8/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.255260 139974069698560 training_loop.py:724] parameter: decoder/transformer8/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.255296 139974069698560 training_loop.py:724] parameter: decoder/transformer9/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 21:39:49.255496 139974069698560 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 21:39:49.255532 139974069698560 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.255566 139974069698560 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.255601 139974069698560 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.255637 139974069698560 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.255672 139974069698560 training_loop.py:724] parameter: decoder/transformer9/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 21:39:49.255707 139974069698560 training_loop.py:724] parameter: decoder/transformer9/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 21:39:49.255741 139974069698560 training_loop.py:724] parameter: decoder/transformer9/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 21:39:49.255777 139974069698560 training_loop.py:724] parameter: decoder/transformer9/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 21:39:49.255805 139974069698560 training_loop.py:725] Total parameters: 152072288
I0123 21:39:49.256028 139974069698560 training_loop.py:739] Total state size: 0
I0123 21:39:49.281412 139974069698560 training_loop.py:492] Training loop: creating task for mode beam_search
I0123 21:39:49.281661 139974069698560 training_loop.py:685] Creating logging writer (train) for mode beam_search
I0123 21:39:49.282299 139974069698560 training_loop.py:652] Compiling mode beam_search with jit.
I0123 21:39:49.282636 139974069698560 training_loop.py:89] registering functions: dict_keys([])
I0123 21:39:49.298988 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g ? cong j f j e
I0123 21:39:49.856936 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5139412879943848
I0123 21:39:50.653224 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7961111068725586
I0123 21:39:51.448352 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7949442863464355
I0123 21:39:52.240667 139974069698560 ddar.py:60] Depth 4/1000 time = 0.7921361923217773
I0123 21:39:53.027613 139974069698560 ddar.py:60] Depth 5/1000 time = 0.7865707874298096
I0123 21:39:54.016776 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9825184345245361
I0123 21:39:54.833342 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8163864612579346
I0123 21:39:55.653675 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8166372776031494
I0123 21:39:55.654560 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:39:55.654639 139974069698560 alphageometry.py:540] Depth 0. There are 1 nodes to expand:
I0123 21:39:55.654677 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00
I0123 21:39:55.654710 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00
I0123 21:39:55.779370 139974069698560 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.779561 139974069698560 decoder_stack.py:316] dstack: scanning over 1 windows.
I0123 21:39:55.779659 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 21:39:55.779734 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 21:39:55.779804 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 21:39:55.779873 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 21:39:55.779940 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 21:39:55.780007 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 21:39:55.780074 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 21:39:55.780142 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 21:39:55.780208 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 21:39:55.780274 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 21:39:55.780339 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 21:39:55.780404 139974069698560 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 21:39:55.780441 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:55.780485 139974069698560 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 21:39:55.780588 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:55.780625 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:55.780654 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:55.782492 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.784961 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:55.790680 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.790947 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:55.793517 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:55.797355 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:55.797410 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:55.797447 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:55.797479 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.797539 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.798156 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.798231 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.798587 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.799344 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.801846 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.802469 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.802544 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:55.802577 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:55.802636 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.802762 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:55.803079 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:55.803120 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:55.805071 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.805162 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:55.807587 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.807664 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:55.808077 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:55.810368 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:55.812291 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.812384 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:55.812671 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.812750 139974069698560 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 21:39:55.812855 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:55.812893 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:55.812923 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:55.814765 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.817030 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:55.822527 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.822792 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:55.825376 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:55.829006 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:55.829061 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:55.829095 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:55.829124 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.829184 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.829773 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.829849 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.830198 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.830936 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.833345 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.834011 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.834087 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:55.834121 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:55.834177 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.834303 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:55.834611 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:55.834651 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:55.836514 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.836603 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:55.839000 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.839077 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:55.839490 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:55.841785 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:55.843664 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.843755 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:55.844037 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.844115 139974069698560 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 21:39:55.844220 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:55.844256 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:55.844285 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:55.846045 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.848315 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:55.853915 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.854171 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:55.856680 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:55.860299 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:55.860352 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:55.860386 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:55.860415 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.860475 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.861078 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.861153 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.861506 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.862273 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.864725 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.865338 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.865414 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:55.865447 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:55.865501 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.865625 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:55.865938 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:55.865978 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:55.867916 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.868006 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:55.870415 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.870493 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:55.870905 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:55.873129 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:55.875023 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.875114 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:55.875398 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.875477 139974069698560 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 21:39:55.875582 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:55.875619 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:55.875648 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:55.877468 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.879781 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:55.885324 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.885577 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:55.888557 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:55.892165 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:55.892218 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:55.892251 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:55.892280 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.892339 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.892889 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.892961 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.893310 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.894063 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.896486 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.897139 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.897215 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:55.897248 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:55.897302 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.897425 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:55.897740 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:55.897781 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:55.899639 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.899730 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:55.902139 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.902216 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:55.902628 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:55.904906 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:55.906777 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.906869 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:55.907151 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.907230 139974069698560 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 21:39:55.907335 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:55.907372 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:55.907401 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:55.909158 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.911442 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:55.916965 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.917212 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:55.919726 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:55.923289 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:55.923342 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:55.923375 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:55.923403 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.923511 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.924062 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.924135 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.924483 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.925219 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.927623 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.928229 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.928303 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:55.928337 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:55.928390 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.928513 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:55.928821 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:55.928861 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:55.930785 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.930875 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:55.933289 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.933366 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:55.933786 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:55.936001 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:55.937883 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.937975 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:55.938257 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.938335 139974069698560 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 21:39:55.938441 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:55.938477 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:55.938507 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:55.940336 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.942623 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:55.948145 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.948397 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:55.950974 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:55.954531 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:55.954590 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:55.954624 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:55.954653 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.954713 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.955255 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.955329 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.955677 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.956422 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.958825 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.959481 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.959556 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:55.959589 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:55.959645 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.959788 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:55.960100 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:55.960141 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:55.962033 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.962124 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:55.964525 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.964601 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:55.965016 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:55.967291 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:55.969159 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.969250 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:55.969534 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.969612 139974069698560 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 21:39:55.969722 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:55.969760 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:55.969789 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:55.971529 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.973806 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:55.979382 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.979632 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:55.982133 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:55.985680 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:55.985733 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:55.985772 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:55.985802 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.985910 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.986461 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.986533 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.986882 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.987630 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.990037 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.990643 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.990718 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:55.990751 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:55.990806 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.990931 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:55.991243 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:55.991284 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:55.993557 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.993654 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:55.996074 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:55.996151 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:55.996565 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:55.998775 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.000651 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.000741 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.001025 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.001103 139974069698560 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 21:39:56.001207 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.001243 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.001272 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.003088 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.005354 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.010849 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.011101 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.013665 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:56.017253 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.017306 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.017341 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.017370 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.017436 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.017991 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.018066 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.018413 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.019148 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.021559 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.022222 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.022298 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.022331 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.022387 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.022512 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.022820 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.022861 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.024723 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.024811 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.027208 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.027286 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.027697 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.029977 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.031862 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.031953 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.032237 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.032316 139974069698560 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 21:39:56.032421 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.032457 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.032487 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.034245 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.036516 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.042108 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.042360 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.044875 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:56.048406 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.048459 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.048493 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.048522 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.048587 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.049185 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.049258 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.049608 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.050350 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.052741 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.053345 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.053419 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.053452 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.053506 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.053631 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.053945 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.053986 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.055845 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.055934 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.058412 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.058488 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.058902 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.061112 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.062980 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.063074 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.063355 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.063433 139974069698560 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 21:39:56.063537 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.063574 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.063603 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.065339 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.067700 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.073182 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.073431 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.075937 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:56.079483 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.079536 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.079569 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.079597 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.079707 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.080270 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.080344 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.080696 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.081445 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.083877 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.084479 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.084553 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.084586 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.084640 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.084764 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.085073 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.085114 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.087023 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.087112 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.089506 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.089582 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.089999 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.092195 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.094073 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.094166 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.094452 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.094531 139974069698560 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 21:39:56.094635 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.094672 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.094701 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.096537 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.098804 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.104252 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.104501 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.107000 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:56.110985 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.111038 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.111072 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.111100 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.111160 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.111704 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.111784 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.112139 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.112877 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.115283 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.115885 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.115959 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.115991 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.116047 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.116170 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.116474 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.116514 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.118439 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.118529 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.120915 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.120990 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.121400 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.123626 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.125479 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.125570 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.125864 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.125944 139974069698560 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 21:39:56.126049 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.126086 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.126115 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.127941 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.130208 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.135699 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.135949 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.138467 139974069698560 transformer_layer.py:213] tlayer: windowed attention.
I0123 21:39:56.142110 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.142163 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.142198 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.142227 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.142287 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.142834 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.142915 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.143269 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.144010 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.146456 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.147062 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.147137 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.147171 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.147226 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.147350 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.147658 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.147698 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.149617 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.149714 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.152121 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.152197 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.152606 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.154807 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.156671 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.156762 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.157046 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.157289 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 21:39:56.157355 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 21:39:56.157410 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 21:39:56.157462 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 21:39:56.157513 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 21:39:56.157563 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 21:39:56.157613 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 21:39:56.157671 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 21:39:56.157725 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 21:39:56.157775 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 21:39:56.157825 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 21:39:56.157875 139974069698560 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 21:39:56.157910 139974069698560 decoder_stack.py:344] dstack: Final layernorm.
I0123 21:39:56.160754 139974069698560 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 21:39:56.204712 139974069698560 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.204804 139974069698560 decoder_stack.py:333] dstack: autoregressive generator.
I0123 21:39:56.204856 139974069698560 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 21:39:56.204960 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.204996 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.205025 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.205084 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.207437 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.212769 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.213024 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.215562 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.228069 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.228123 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.228158 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.228187 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.228248 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.228804 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.228878 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.229233 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.229923 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.232446 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.233055 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.233129 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.233163 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.233217 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.233342 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.233448 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.233484 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.235302 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.235393 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.237755 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.237833 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.237940 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.240141 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.241975 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.242066 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.242355 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.242438 139974069698560 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 21:39:56.242545 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.242583 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.242612 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.242672 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.244878 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.250158 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.250412 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.253035 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.265147 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.265201 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.265235 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.265265 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.265325 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.266190 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.266266 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.266624 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.267357 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.269792 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.270398 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.270473 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.270507 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.270563 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.270689 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.270796 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.270833 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.272669 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.272759 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.275134 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.275212 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.275319 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.277534 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.279365 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.279458 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.279742 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.279827 139974069698560 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 21:39:56.279935 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.279973 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.280002 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.280061 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.282273 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.287593 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.287846 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.290853 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.302956 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.303009 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.303044 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.303073 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.303133 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.303679 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.303753 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.304105 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.304822 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.307237 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.307843 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.307919 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.307952 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.308008 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.308135 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.308241 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.308277 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.310105 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.310195 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.312567 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.312643 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.312748 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.314966 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.316773 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.316865 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.317148 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.317227 139974069698560 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 21:39:56.317339 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.317377 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.317407 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.317467 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.319663 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.324954 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.325209 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.327807 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.339882 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.339936 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.339972 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.340002 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.340063 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.340614 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.340689 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.341037 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.341756 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.344161 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.344771 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.344846 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.344879 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.344936 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.345061 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.345168 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.345204 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.347043 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.347132 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.349502 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.349578 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.349691 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.351917 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.353761 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.353854 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.354142 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.354222 139974069698560 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 21:39:56.354336 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.354372 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.354402 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.354461 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.356683 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.362027 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.362280 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.364930 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.377062 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.377117 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.377151 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.377181 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.377242 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.377795 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.377870 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.378220 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.378945 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.381360 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.381974 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.382049 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.382081 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.382137 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.382262 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.382368 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.382405 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.384226 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.384315 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.386690 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.386767 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.386873 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.389096 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.390949 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.391041 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.391329 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.391408 139974069698560 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 21:39:56.391514 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.391558 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.391588 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.391648 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.393875 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.399262 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.399515 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.402553 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.414721 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.414774 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.414809 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.414838 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.414901 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.415453 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.415527 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.415877 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.416601 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.419061 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.419671 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.419746 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.419779 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.419835 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.419964 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.420070 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.420107 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.421932 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.422024 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.424382 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.424459 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.424566 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.426788 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.428624 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.428716 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.429001 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.429080 139974069698560 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 21:39:56.429187 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.429225 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.429259 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.429321 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.431536 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.436909 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.437162 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.439784 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.451943 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.451998 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.452032 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.452062 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.452123 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.452666 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.452740 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.453087 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.453824 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.456229 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.456830 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.456906 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.456939 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.456994 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.457119 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.457223 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.457260 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.459092 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.459182 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.461547 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.461625 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.461741 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.463959 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.465785 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.465877 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.466165 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.466245 139974069698560 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 21:39:56.466352 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.466389 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.466418 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.466484 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.468672 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.473976 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.474234 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.476824 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.488876 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.488931 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.488964 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.488993 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.489053 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.489594 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.489673 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.490022 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.490737 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.493143 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.493754 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.493829 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.493862 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.493918 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.494041 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.494147 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.494184 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.495996 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.496086 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.498435 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.498514 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.498623 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.500826 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.502646 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.502738 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.503020 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.503098 139974069698560 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 21:39:56.503204 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.503241 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.503270 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.503336 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.505535 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.510821 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.511074 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.514073 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.526288 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.526344 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.526380 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.526410 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.526471 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.527020 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.527096 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.527448 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.528119 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.530591 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.531200 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.531275 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.531309 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.531364 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.531490 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.531598 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.531635 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.533461 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.533550 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.535919 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.535997 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.536104 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.538328 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.540148 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.540239 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.540525 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.540604 139974069698560 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 21:39:56.540708 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.540745 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.540774 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.540833 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.543071 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.548382 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.548638 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.551265 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.563442 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.563496 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.563531 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.563561 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.563620 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.564171 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.564245 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.564594 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.565263 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.567767 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.568376 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.568451 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.568485 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.568541 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.568666 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.568771 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.568808 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.570640 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.570730 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.573104 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.573181 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.573288 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.575525 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.577365 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.577458 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.577756 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.577836 139974069698560 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 21:39:56.577943 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.577981 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.578010 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.578071 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.580317 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.585671 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.585927 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.588565 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.600752 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.600807 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.600841 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.600871 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.600932 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.601483 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.601558 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.601914 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.602599 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.605091 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.605705 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.605784 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.605817 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.605872 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.605999 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.606106 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.606143 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.607984 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.608074 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.610465 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.610543 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.610650 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.612892 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.614754 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.614847 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.615137 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.615217 139974069698560 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 21:39:56.615325 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.615361 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.615391 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.615450 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.617678 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.623094 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.623354 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.626449 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.638794 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.638849 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.638883 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.638913 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.638973 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.639519 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.639593 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.639948 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.640626 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.643135 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.643749 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.643825 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.643859 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.643915 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.644043 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.644148 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.644185 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.646028 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.646120 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.648502 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.648580 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.648688 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.650925 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.652751 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.652842 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.653131 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.653216 139974069698560 decoder_stack.py:344] dstack: Final layernorm.
I0123 21:39:56.656021 139974069698560 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 21:39:56.705341 139974069698560 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.705425 139974069698560 decoder_stack.py:333] dstack: autoregressive generator.
I0123 21:39:56.705477 139974069698560 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 21:39:56.705578 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.705623 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.705659 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.705722 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.707993 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.713383 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.713637 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.716175 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.728360 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.728414 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.728447 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.728477 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.728536 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.729078 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.729151 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.729495 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.730165 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.732573 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.733174 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.733247 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.733280 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.733335 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.733460 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.733566 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.733604 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.735512 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.735603 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.737968 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.738045 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.738152 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.740307 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.742160 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.742253 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.742542 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.742620 139974069698560 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 21:39:56.742725 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.742763 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.742798 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.742860 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.745090 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.750524 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.750775 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.753327 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.765498 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.765552 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.765586 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.765614 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.765680 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.766230 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.766303 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.766657 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.767330 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.769750 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.770356 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.770431 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.770464 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.770520 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.770646 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.770750 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.770787 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.772672 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.772762 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.775135 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.775213 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.775320 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.777472 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.779287 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.779379 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.779667 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.779746 139974069698560 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 21:39:56.779853 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.779890 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.779918 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.779983 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.782189 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.787558 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.787814 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.790385 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:56.803028 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:56.803081 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:56.803115 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:56.803144 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.803203 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.803748 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.803822 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.804174 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.804847 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.807263 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.807870 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.807945 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:56.807979 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:56.808035 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.808161 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:56.808269 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:56.808306 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.971654 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.971863 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.974530 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.974622 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:56.974734 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:56.977014 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:56.978982 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.979079 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:56.979375 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.979460 139974069698560 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 21:39:56.979568 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:56.979606 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:56.979636 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:56.979701 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.982007 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:56.987480 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:56.987751 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:56.990443 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:57.002924 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:57.002979 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:57.003014 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:57.003043 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.003102 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.003690 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.003764 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.004117 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.004790 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.007227 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.007841 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.007914 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:57.007946 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:57.008001 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.008123 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:57.008228 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:57.008264 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.010140 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.010230 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.012606 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.012684 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:57.012790 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:57.015161 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.017102 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.017194 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.017486 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.017565 139974069698560 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 21:39:57.017677 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:57.017715 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:57.017744 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:57.017806 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.020037 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:57.025368 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.025622 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:57.028248 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:57.040441 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:57.040495 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:57.040530 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:57.040560 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.040621 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.041172 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.041246 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.041594 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.042267 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.044703 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.045314 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.045388 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:57.045422 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:57.045478 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.045601 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:57.045714 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:57.045753 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.047637 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.047728 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.050114 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.050191 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:57.050298 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:57.052474 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.054384 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.054479 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.054769 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.054849 139974069698560 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 21:39:57.054956 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:57.054994 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:57.055023 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:57.055086 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.057309 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:57.062683 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.062935 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:57.065966 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:57.078263 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:57.078318 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:57.078354 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:57.078383 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.078443 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.078993 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.079067 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.079421 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.080096 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.082538 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.083142 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.083217 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:57.083250 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:57.083307 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.083431 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:57.083538 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:57.083575 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.085439 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.085530 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.087904 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.087982 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:57.088087 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:57.090246 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.092134 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.092228 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.092517 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.092597 139974069698560 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 21:39:57.092704 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:57.092742 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:57.092771 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:57.092832 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.095035 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:57.100339 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.100598 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:57.103220 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:57.115442 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:57.115497 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:57.115532 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:57.115562 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.115623 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.116178 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.116251 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.116599 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.117265 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.119678 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.120285 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.120360 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:57.120394 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:57.120450 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.120575 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:57.120682 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:57.120719 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.122597 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.122689 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.125053 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.125131 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:57.125238 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:57.127392 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.129283 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.129376 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.129672 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.129753 139974069698560 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 21:39:57.129859 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:57.129897 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:57.129927 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:57.129987 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.132185 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:57.137501 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.137770 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:57.140386 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:57.152946 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:57.153000 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:57.153034 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:57.153064 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.153124 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.153684 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.153759 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.154111 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.154783 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.157216 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.157834 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.157910 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:57.157943 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:57.157999 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.158123 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:57.158229 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:57.158266 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.160166 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.160256 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.162650 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.162726 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:57.162837 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:57.165006 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.166907 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.166999 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.167290 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.167369 139974069698560 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 21:39:57.167474 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:57.167511 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:57.167541 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:57.167602 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.169808 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:57.175156 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.175416 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:57.178060 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:57.190267 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:57.190322 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:57.190357 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:57.190387 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.190447 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.190998 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.191070 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.191421 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.192079 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.194481 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.195084 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.195159 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:57.195192 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:57.195248 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.195370 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:57.195475 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:57.195512 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.197389 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.197479 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.199862 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.199938 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:57.200047 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:57.202233 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.204123 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.204214 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.204502 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.204580 139974069698560 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 21:39:57.204686 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:57.204723 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:57.204753 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:57.204813 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.207046 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:57.212402 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.212658 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:57.215274 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:57.227501 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:57.227554 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:57.227589 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:57.227619 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.227678 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.228232 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.228306 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.228657 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.229325 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.231733 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.232337 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.232409 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:57.232442 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:57.232497 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.232616 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:57.232721 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:57.232757 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.234632 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.234722 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.237072 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.237148 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:57.237256 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:57.239444 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.241654 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.241746 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.242040 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.242118 139974069698560 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 21:39:57.242225 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:57.242262 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:57.242292 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:57.242353 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.244562 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:57.249904 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.250154 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:57.252767 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:57.264973 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:57.265027 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:57.265062 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:57.265092 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.265150 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.265704 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.265777 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.266127 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.266787 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.269210 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.269830 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.269904 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:57.269937 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:57.269992 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.270113 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:57.270219 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:57.270256 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.272130 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.272220 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.274615 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.274692 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:57.274801 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:57.276953 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.278844 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.278936 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.279224 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.279303 139974069698560 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 21:39:57.279410 139974069698560 transformer_layer.py:154] tlayer: recurrent = False
I0123 21:39:57.279447 139974069698560 transformer_layer.py:155] tlayer: compute_importance = False
I0123 21:39:57.279478 139974069698560 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 21:39:57.279540 139974069698560 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.281761 139974069698560 transformer_base.py:161] kvq: pre_attn dropout.
I0123 21:39:57.287094 139974069698560 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.287348 139974069698560 transformer_base.py:194] kvq: normalize keys, queries.
I0123 21:39:57.289974 139974069698560 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 21:39:57.302194 139974069698560 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 21:39:57.302249 139974069698560 attention.py:418] Single window, no scan.
I0123 21:39:57.302284 139974069698560 transformer_layer.py:389] tlayer: self-attention.
I0123 21:39:57.302313 139974069698560 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.302372 139974069698560 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.302921 139974069698560 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.302994 139974069698560 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.303342 139974069698560 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.304007 139974069698560 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.306408 139974069698560 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.307012 139974069698560 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.307085 139974069698560 transformer_layer.py:468] tlayer: End windows.
I0123 21:39:57.307117 139974069698560 transformer_layer.py:472] tlayer: final FFN.
I0123 21:39:57.307173 139974069698560 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.307295 139974069698560 transformer_base.py:410] tbase: post-attention MLP.
I0123 21:39:57.307400 139974069698560 nn_components.py:325] mlp: activation = None
I0123 21:39:57.307436 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.309306 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.309394 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.311783 139974069698560 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.311860 139974069698560 transformer_base.py:443] tbase: final FFN
I0123 21:39:57.311968 139974069698560 nn_components.py:320] mlp: hidden 4096, relu
I0123 21:39:57.314135 139974069698560 nn_components.py:329] mlp: final activation = None
I0123 21:39:57.316014 139974069698560 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.316105 139974069698560 nn_components.py:261] mlp: residual
I0123 21:39:57.316392 139974069698560 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:39:57.316476 139974069698560 decoder_stack.py:344] dstack: Final layernorm.
I0123 21:39:57.319286 139974069698560 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 21:40:09.170974 139974069698560 alphageometry.py:566] LM output (score=-1.491090): "k : T b c c k 14 ;"
I0123 21:40:09.171192 139974069698560 alphageometry.py:567] Translation: "k = on_tline k c b c"

I0123 21:40:09.171244 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c ? cong j f j e"
I0123 21:40:09.171375 139974069698560 graph.py:498] 
I0123 21:40:09.171427 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c ? cong j f j e
I0123 21:40:09.842423 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6316306591033936
I0123 21:40:10.737579 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8949904441833496
I0123 21:40:11.651906 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9141650199890137
I0123 21:40:12.746176 139974069698560 ddar.py:60] Depth 4/1000 time = 1.094102144241333
I0123 21:40:13.681141 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9345901012420654
I0123 21:40:14.683648 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9937152862548828
I0123 21:40:15.644933 139974069698560 ddar.py:60] Depth 7/1000 time = 0.961127758026123
I0123 21:40:16.611682 139974069698560 ddar.py:60] Depth 8/1000 time = 0.9627735614776611
I0123 21:40:16.612548 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:40:16.612649 139974069698560 alphageometry.py:566] LM output (score=-1.686481): "k : T b c b k 14 ;"
I0123 21:40:16.612689 139974069698560 alphageometry.py:567] Translation: "k = on_tline k b b c"

I0123 21:40:16.612728 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c ? cong j f j e"
I0123 21:40:16.612858 139974069698560 graph.py:498] 
I0123 21:40:16.612906 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c ? cong j f j e
I0123 21:40:17.240963 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5870342254638672
I0123 21:40:18.123056 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8819229602813721
I0123 21:40:19.037809 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9145703315734863
I0123 21:40:20.141093 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1031064987182617
I0123 21:40:21.067157 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9257073402404785
I0123 21:40:22.057055 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9814817905426025
I0123 21:40:23.022387 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9651720523834229
I0123 21:40:23.985702 139974069698560 ddar.py:60] Depth 8/1000 time = 0.9595906734466553
I0123 21:40:23.986586 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:40:23.986669 139974069698560 alphageometry.py:566] LM output (score=-1.920903): "k : D a k c k 14 T a c b k 15 ;"
I0123 21:40:23.986707 139974069698560 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2622, in add_clause
    nums = draw_fn()
  File "/home/chi/alphageometry-test/graph.py", line 2608, in draw_fn
    return nm.reduce(to_be_intersected, existing_points)
  File "/home/chi/alphageometry-test/numericals.py", line 1310, in reduce
    result = a.intersect(b)
  File "/home/chi/alphageometry-test/numericals.py", line 213, in intersect
    return line_line_intersection(self, obj)
  File "/home/chi/alphageometry-test/numericals.py", line 584, in line_line_intersection
    raise InvalidLineIntersectError
numericals.InvalidLineIntersectError
"

I0123 21:40:23.986767 139974069698560 alphageometry.py:566] LM output (score=-1.969852): "k : D a k b k 14 ;"
I0123 21:40:23.986796 139974069698560 alphageometry.py:567] Translation: "k = on_bline k b a"

I0123 21:40:23.986828 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a ? cong j f j e"
I0123 21:40:23.986952 139974069698560 graph.py:498] 
I0123 21:40:23.987000 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a ? cong j f j e
I0123 21:40:24.678669 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6394953727722168
I0123 21:40:25.663964 139974069698560 ddar.py:60] Depth 2/1000 time = 0.985130786895752
I0123 21:40:26.677556 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0134201049804688
I0123 21:40:27.725882 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0481321811676025
I0123 21:40:28.747005 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0207502841949463
I0123 21:40:30.037573 139974069698560 ddar.py:60] Depth 6/1000 time = 1.2796263694763184
I0123 21:40:31.107756 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0700035095214844
I0123 21:40:32.191845 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0799083709716797
I0123 21:40:32.192764 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:40:32.192843 139974069698560 alphageometry.py:566] LM output (score=-1.997827): "k : T i j i k 14 ;"
I0123 21:40:32.192880 139974069698560 alphageometry.py:567] Translation: "k = on_tline k i i j"

I0123 21:40:32.192936 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j ? cong j f j e"
I0123 21:40:32.193063 139974069698560 graph.py:498] 
I0123 21:40:32.193115 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j ? cong j f j e
I0123 21:40:32.805804 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5707244873046875
I0123 21:40:33.696325 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8903524875640869
I0123 21:40:34.593096 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8966031074523926
I0123 21:40:35.488040 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8947689533233643
I0123 21:40:36.383774 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8953900337219238
I0123 21:40:37.354064 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9622361660003662
I0123 21:40:38.295211 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9409863948822021
I0123 21:40:39.231535 139974069698560 ddar.py:60] Depth 8/1000 time = 0.9325768947601318
I0123 21:40:39.232431 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:40:39.232514 139974069698560 alphageometry.py:566] LM output (score=-2.027621): "k : C b c k 14 D b k c k 15 ;"
I0123 21:40:39.232553 139974069698560 alphageometry.py:567] Translation: "k = on_line k b c, on_bline k c b"

I0123 21:40:39.232591 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b ? cong j f j e"
I0123 21:40:39.232721 139974069698560 graph.py:498] 
I0123 21:40:39.232770 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b ? cong j f j e
I0123 21:40:39.948460 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6640441417694092
I0123 21:40:41.265549 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3169245719909668
I0123 21:40:42.408253 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1425235271453857
I0123 21:40:43.743281 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3348422050476074
I0123 21:40:45.087207 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3435308933258057
I0123 21:40:46.481798 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3848752975463867
I0123 21:40:47.671206 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1892461776733398
I0123 21:40:49.064486 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3884904384613037
I0123 21:40:49.065463 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:40:49.065538 139974069698560 alphageometry.py:566] LM output (score=-2.121396): "k : T c e e k 14 ;"
I0123 21:40:49.065574 139974069698560 alphageometry.py:567] Translation: "k = on_tline k e c e"

I0123 21:40:49.065612 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e ? cong j f j e"
I0123 21:40:49.065741 139974069698560 graph.py:498] 
I0123 21:40:49.065791 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e ? cong j f j e
I0123 21:40:49.705614 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5995995998382568
I0123 21:40:50.636117 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9303228855133057
I0123 21:40:51.533077 139974069698560 ddar.py:60] Depth 3/1000 time = 0.896752119064331
I0123 21:40:52.437987 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9046621322631836
I0123 21:40:53.351278 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9129035472869873
I0123 21:40:54.337683 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9780397415161133
I0123 21:40:55.293436 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9555983543395996
I0123 21:40:56.253090 139974069698560 ddar.py:60] Depth 8/1000 time = 0.955446720123291
I0123 21:40:56.253955 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:40:56.254044 139974069698560 alphageometry.py:566] LM output (score=-2.162356): "k : D b d d k 14 T b d d k 15 ;"
I0123 21:40:56.254084 139974069698560 alphageometry.py:567] Translation: "k = on_circle k d b, on_tline k d b d"

I0123 21:40:56.254133 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d ? cong j f j e"
I0123 21:40:56.254272 139974069698560 graph.py:498] 
I0123 21:40:56.254326 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d ? cong j f j e
I0123 21:40:57.016319 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7124795913696289
I0123 21:40:58.432568 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4160776138305664
I0123 21:40:59.674333 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2415952682495117
I0123 21:41:01.129215 139974069698560 ddar.py:60] Depth 4/1000 time = 1.454712152481079
I0123 21:41:02.383788 139974069698560 ddar.py:60] Depth 5/1000 time = 1.254201889038086
I0123 21:41:03.634049 139974069698560 ddar.py:60] Depth 6/1000 time = 1.249570608139038
I0123 21:41:04.950600 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3056588172912598
I0123 21:41:06.433182 139974069698560 ddar.py:60] Depth 8/1000 time = 1.4823534488677979
I0123 21:41:07.752306 139974069698560 ddar.py:60] Depth 9/1000 time = 1.3150274753570557
I0123 21:41:07.753226 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:41:07.753318 139974069698560 alphageometry.py:566] LM output (score=-2.291546): "k : D a k b k 14 D b k c k 15 ;"
I0123 21:41:07.753355 139974069698560 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2635, in add_clause
    raise PointTooCloseError()
graph.PointTooCloseError
"

I0123 21:41:07.753414 139974069698560 alphageometry.py:566] LM output (score=-2.324056): "k : T b c d k 14 ;"
I0123 21:41:07.753445 139974069698560 alphageometry.py:567] Translation: "k = on_tline k d b c"

I0123 21:41:07.753482 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c ? cong j f j e"
I0123 21:41:07.753609 139974069698560 graph.py:498] 
I0123 21:41:07.753665 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c ? cong j f j e
I0123 21:41:08.411299 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6168332099914551
I0123 21:41:09.334103 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9226498603820801
I0123 21:41:10.302774 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9685018062591553
I0123 21:41:11.350746 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0478127002716064
I0123 21:41:12.418035 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0671195983886719
I0123 21:41:13.461356 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0429468154907227
I0123 21:41:14.583689 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1133270263671875
I0123 21:41:15.873697 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2898359298706055
I0123 21:41:16.984469 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1069982051849365
I0123 21:41:18.094707 139974069698560 ddar.py:60] Depth 10/1000 time = 1.1074707508087158
I0123 21:41:18.095600 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:41:18.095675 139974069698560 alphageometry.py:566] LM output (score=-2.453898): "k : C b h k 14 D b k h k 15 ;"
I0123 21:41:18.095710 139974069698560 alphageometry.py:567] Translation: "k = on_line k b h, on_bline k h b"

I0123 21:41:18.095748 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b ? cong j f j e"
I0123 21:41:18.095875 139974069698560 graph.py:498] 
I0123 21:41:18.095923 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b ? cong j f j e
I0123 21:41:18.826945 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6785078048706055
I0123 21:41:19.918690 139974069698560 ddar.py:60] Depth 2/1000 time = 1.0915751457214355
I0123 21:41:21.015392 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0965216159820557
I0123 21:41:22.330835 139974069698560 ddar.py:60] Depth 4/1000 time = 1.31526517868042
I0123 21:41:23.449145 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1178841590881348
I0123 21:41:24.851377 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3936495780944824
I0123 21:41:26.044852 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1932883262634277
I0123 21:41:27.214063 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1626787185668945
I0123 21:41:27.215182 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:41:27.215284 139974069698560 alphageometry.py:566] LM output (score=-2.499752): "k : D a b a k 14 D a b b k 15 ;"
I0123 21:41:27.215321 139974069698560 alphageometry.py:567] Translation: "k = on_circle k a b, on_circle k b a"

I0123 21:41:27.215366 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a ? cong j f j e"
I0123 21:41:27.215525 139974069698560 graph.py:498] 
I0123 21:41:27.215578 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a ? cong j f j e
I0123 21:41:28.019407 139974069698560 ddar.py:60] Depth 1/1000 time = 0.743342399597168
I0123 21:41:29.117189 139974069698560 ddar.py:60] Depth 2/1000 time = 1.0976085662841797
I0123 21:41:30.245705 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1283459663391113
I0123 21:41:31.378382 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1324889659881592
I0123 21:41:32.736851 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3581030368804932
I0123 21:41:33.899599 139974069698560 ddar.py:60] Depth 6/1000 time = 1.161952257156372
I0123 21:41:35.154924 139974069698560 ddar.py:60] Depth 7/1000 time = 1.244408130645752
I0123 21:41:36.357244 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2021629810333252
I0123 21:41:37.570774 139974069698560 ddar.py:60] Depth 9/1000 time = 1.208993673324585
I0123 21:41:37.571693 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:41:37.571777 139974069698560 alphageometry.py:566] LM output (score=-2.502929): "k : D b k d k 14 D c k d k 15 ;"
I0123 21:41:37.571816 139974069698560 alphageometry.py:567] Translation: "k = on_bline k d b, on_bline k d c"

I0123 21:41:37.571855 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c ? cong j f j e"
I0123 21:41:37.571986 139974069698560 graph.py:498] 
I0123 21:41:37.572034 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c ? cong j f j e
I0123 21:41:38.423192 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7893157005310059
I0123 21:41:39.562144 139974069698560 ddar.py:60] Depth 2/1000 time = 1.1387839317321777
I0123 21:41:40.871488 139974069698560 ddar.py:60] Depth 3/1000 time = 1.309166669845581
I0123 21:41:42.173256 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3015806674957275
I0123 21:41:43.688396 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5147836208343506
I0123 21:41:45.089281 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3865230083465576
I0123 21:41:46.645430 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5559251308441162
I0123 21:41:48.030542 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3807446956634521
I0123 21:41:48.031759 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:41:48.031849 139974069698560 alphageometry.py:566] LM output (score=-2.514301): "k : D a c a k 14 D a c c k 15 ;"
I0123 21:41:48.031885 139974069698560 alphageometry.py:567] Translation: "k = on_circle k a c, on_circle k c a"

I0123 21:41:48.031929 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a ? cong j f j e"
I0123 21:41:48.032063 139974069698560 graph.py:498] 
I0123 21:41:48.032115 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a ? cong j f j e
I0123 21:41:48.611428 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5203008651733398
I0123 21:41:49.924390 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3128104209899902
I0123 21:41:51.039453 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1149065494537354
I0123 21:41:52.159894 139974069698560 ddar.py:60] Depth 4/1000 time = 1.120255470275879
I0123 21:41:53.280326 139974069698560 ddar.py:60] Depth 5/1000 time = 1.120063304901123
I0123 21:41:54.407653 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1267142295837402
I0123 21:41:55.672673 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2543418407440186
I0123 21:41:56.915126 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2422826290130615
I0123 21:41:58.175906 139974069698560 ddar.py:60] Depth 9/1000 time = 1.2564058303833008
I0123 21:41:58.176825 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:41:58.176908 139974069698560 alphageometry.py:566] LM output (score=-2.600596): "k : T d g g k 14 ;"
I0123 21:41:58.176949 139974069698560 alphageometry.py:567] Translation: "k = on_tline k g d g"

I0123 21:41:58.176988 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g ? cong j f j e"
I0123 21:41:58.177111 139974069698560 graph.py:498] 
I0123 21:41:58.177158 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g ? cong j f j e
I0123 21:41:58.851583 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6326322555541992
I0123 21:41:59.780430 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9286940097808838
I0123 21:42:00.719687 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9390912055969238
I0123 21:42:01.667696 139974069698560 ddar.py:60] Depth 4/1000 time = 0.947843074798584
I0123 21:42:02.379993 139974069698560 ddar.py:60] Depth 5/1000 time = 0.7119636535644531
I0123 21:42:03.633453 139974069698560 ddar.py:60] Depth 6/1000 time = 1.244933843612671
I0123 21:42:04.404370 139974069698560 ddar.py:60] Depth 7/1000 time = 0.7707483768463135
I0123 21:42:05.627859 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2197213172912598
I0123 21:42:05.628752 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:42:05.628837 139974069698560 alphageometry.py:566] LM output (score=-2.617896): "k : D a b a k 14 T a b a k 15 ;"
I0123 21:42:05.628875 139974069698560 alphageometry.py:567] Translation: "k = on_circle k a b, on_tline k a a b"

I0123 21:42:05.628914 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_tline k a a b ? cong j f j e"
I0123 21:42:05.629048 139974069698560 graph.py:498] 
I0123 21:42:05.629097 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_tline k a a b ? cong j f j e
I0123 21:42:06.132760 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4504563808441162
I0123 21:42:07.125329 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9924249649047852
I0123 21:42:08.136399 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0108587741851807
I0123 21:42:09.409745 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2730891704559326
I0123 21:42:10.466708 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0565667152404785
I0123 21:42:11.479958 139974069698560 ddar.py:60] Depth 6/1000 time = 1.012742280960083
I0123 21:42:12.599681 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1099882125854492
I0123 21:42:13.685048 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0851945877075195
I0123 21:42:14.785597 139974069698560 ddar.py:60] Depth 9/1000 time = 1.096247911453247
I0123 21:42:14.786494 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:42:14.786591 139974069698560 alphageometry.py:566] LM output (score=-2.618709): "k : T b c h k 14 ;"
I0123 21:42:14.786628 139974069698560 alphageometry.py:567] Translation: "k = on_tline k h b c"

I0123 21:42:14.786680 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k h b c ? cong j f j e"
I0123 21:42:14.786807 139974069698560 graph.py:498] 
I0123 21:42:14.786858 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k h b c ? cong j f j e
I0123 21:42:15.235260 139974069698560 ddar.py:60] Depth 1/1000 time = 0.40725159645080566
I0123 21:42:16.171728 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9363396167755127
I0123 21:42:17.118288 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9463851451873779
I0123 21:42:18.063356 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9448885917663574
I0123 21:42:19.254732 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1910247802734375
I0123 21:42:20.305383 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0422570705413818
I0123 21:42:21.079849 139974069698560 ddar.py:60] Depth 7/1000 time = 0.7743127346038818
I0123 21:42:22.322613 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2390131950378418
I0123 21:42:22.323473 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:42:22.323551 139974069698560 alphageometry.py:566] LM output (score=-2.648549): "k : C b c k 14 T b c d k 15 ;"
I0123 21:42:22.323589 139974069698560 alphageometry.py:567] Translation: "k = on_line k b c, on_tline k d b c"

I0123 21:42:22.323627 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_tline k d b c ? cong j f j e"
I0123 21:42:22.323756 139974069698560 graph.py:498] 
I0123 21:42:22.323804 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_tline k d b c ? cong j f j e
I0123 21:42:22.819362 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4542205333709717
I0123 21:42:24.175139 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3556420803070068
I0123 21:42:25.374848 139974069698560 ddar.py:60] Depth 3/1000 time = 1.199547529220581
I0123 21:42:26.824753 139974069698560 ddar.py:60] Depth 4/1000 time = 1.449730396270752
I0123 21:42:28.048363 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2234313488006592
I0123 21:42:29.250324 139974069698560 ddar.py:60] Depth 6/1000 time = 1.201561689376831
I0123 21:42:30.774454 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5152390003204346
I0123 21:42:32.278557 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5039231777191162
I0123 21:42:33.536922 139974069698560 ddar.py:60] Depth 9/1000 time = 1.2534668445587158
I0123 21:42:33.538838 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:42:33.538933 139974069698560 alphageometry.py:566] LM output (score=-2.650056): "k : D a b a k 14 D b c c k 15 ;"
I0123 21:42:33.538969 139974069698560 alphageometry.py:567] Translation: "k = on_circle k a b, on_circle k c b"

I0123 21:42:33.539014 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k c b ? cong j f j e"
I0123 21:42:33.539152 139974069698560 graph.py:498] 
I0123 21:42:33.539204 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k c b ? cong j f j e
I0123 21:42:34.351917 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7466213703155518
I0123 21:42:35.452426 139974069698560 ddar.py:60] Depth 2/1000 time = 1.1003451347351074
I0123 21:42:36.649954 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1973700523376465
I0123 21:42:37.914421 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2643089294433594
I0123 21:42:39.196878 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2822954654693604
I0123 21:42:40.472042 139974069698560 ddar.py:60] Depth 6/1000 time = 1.2748289108276367
I0123 21:42:42.072744 139974069698560 ddar.py:60] Depth 7/1000 time = 1.585866928100586
I0123 21:42:43.400177 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3272712230682373
I0123 21:42:44.732764 139974069698560 ddar.py:60] Depth 9/1000 time = 1.3277249336242676
I0123 21:42:44.734190 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:42:44.734262 139974069698560 alphageometry.py:566] LM output (score=-2.660577): "k : D i j j k 14 ;"
I0123 21:42:44.734297 139974069698560 alphageometry.py:567] Translation: "k = on_circle k j i"

I0123 21:42:44.734334 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k j i ? cong j f j e"
I0123 21:42:44.734457 139974069698560 graph.py:498] 
I0123 21:42:44.734504 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k j i ? cong j f j e
I0123 21:42:45.347501 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5653767585754395
I0123 21:42:46.640367 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2927367687225342
I0123 21:42:48.060912 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4203734397888184
I0123 21:42:49.275987 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2148892879486084
I0123 21:42:50.220947 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9446039199829102
I0123 21:42:51.746594 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5163817405700684
I0123 21:42:52.975963 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2291772365570068
I0123 21:42:54.236075 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2561306953430176
I0123 21:42:54.236999 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:42:54.237089 139974069698560 alphageometry.py:566] LM output (score=-2.718985): "k : T b d d k 14 ;"
I0123 21:42:54.237128 139974069698560 alphageometry.py:567] Translation: "k = on_tline k d b d"

I0123 21:42:54.237181 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b d ? cong j f j e"
I0123 21:42:54.237317 139974069698560 graph.py:498] 
I0123 21:42:54.237370 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b d ? cong j f j e
I0123 21:42:54.707106 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4278090000152588
I0123 21:42:55.694769 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9875349998474121
I0123 21:42:56.672480 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9775526523590088
I0123 21:42:57.648600 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9759402275085449
I0123 21:42:58.620360 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9713394641876221
I0123 21:42:59.640799 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0134828090667725
I0123 21:43:00.627562 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9865701198577881
I0123 21:43:01.885615 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2542657852172852
I0123 21:43:01.886496 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:43:01.886578 139974069698560 alphageometry.py:566] LM output (score=-2.826418): "k : T g h g k 14 ;"
I0123 21:43:01.886617 139974069698560 alphageometry.py:567] Translation: "k = on_tline k g g h"

I0123 21:43:01.886656 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g g h ? cong j f j e"
I0123 21:43:01.886788 139974069698560 graph.py:498] 
I0123 21:43:01.886838 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g g h ? cong j f j e
I0123 21:43:02.333280 139974069698560 ddar.py:60] Depth 1/1000 time = 0.40487146377563477
I0123 21:43:03.268367 139974069698560 ddar.py:60] Depth 2/1000 time = 0.934950590133667
I0123 21:43:04.208935 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9403903484344482
I0123 21:43:05.150962 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9418482780456543
I0123 21:43:06.108678 139974069698560 ddar.py:60] Depth 5/1000 time = 0.957383394241333
I0123 21:43:07.170544 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0535883903503418
I0123 21:43:07.940361 139974069698560 ddar.py:60] Depth 7/1000 time = 0.7696611881256104
I0123 21:43:09.221218 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2772226333618164
I0123 21:43:09.222097 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:43:09.222183 139974069698560 alphageometry.py:566] LM output (score=-2.849796): "k : T a b b k 14 ;"
I0123 21:43:09.222222 139974069698560 alphageometry.py:567] Translation: "k = on_tline k b a b"

I0123 21:43:09.222261 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b a b ? cong j f j e"
I0123 21:43:09.222387 139974069698560 graph.py:498] 
I0123 21:43:09.222436 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b a b ? cong j f j e
I0123 21:43:09.668166 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4048502445220947
I0123 21:43:10.628275 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9599685668945312
I0123 21:43:11.603472 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9750163555145264
I0123 21:43:12.597213 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9935309886932373
I0123 21:43:13.585076 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9874396324157715
I0123 21:43:14.644425 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0507185459136963
I0123 21:43:15.670449 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0258479118347168
I0123 21:43:16.440706 139974069698560 ddar.py:60] Depth 8/1000 time = 0.7666263580322266
I0123 21:43:16.441562 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:43:16.441646 139974069698560 alphageometry.py:566] LM output (score=-2.873450): "k : T c g g k 14 ;"
I0123 21:43:16.441684 139974069698560 alphageometry.py:567] Translation: "k = on_tline k g c g"

I0123 21:43:16.441739 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g c g ? cong j f j e"
I0123 21:43:16.441889 139974069698560 graph.py:498] 
I0123 21:43:16.441942 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g c g ? cong j f j e
I0123 21:43:17.134407 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6508662700653076
I0123 21:43:18.094520 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9599409103393555
I0123 21:43:19.051347 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9566521644592285
I0123 21:43:20.017289 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9657702445983887
I0123 21:43:20.965869 139974069698560 ddar.py:60] Depth 5/1000 time = 0.948244571685791
I0123 21:43:22.036273 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0620687007904053
I0123 21:43:22.813670 139974069698560 ddar.py:60] Depth 7/1000 time = 0.7772347927093506
I0123 21:43:23.838853 139974069698560 ddar.py:60] Depth 8/1000 time = 1.021247148513794
I0123 21:43:23.839721 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:43:23.839808 139974069698560 alphageometry.py:566] LM output (score=-2.874271): "k : D a d d k 14 ;"
I0123 21:43:23.839848 139974069698560 alphageometry.py:567] Translation: "k = on_circle k d a"

I0123 21:43:23.839886 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d a ? cong j f j e"
I0123 21:43:23.840011 139974069698560 graph.py:498] 
I0123 21:43:23.840058 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d a ? cong j f j e
I0123 21:43:24.696889 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8082714080810547
I0123 21:43:26.021671 139974069698560 ddar.py:60] Depth 2/1000 time = 1.324605941772461
I0123 21:43:27.244005 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2221624851226807
I0123 21:43:28.467538 139974069698560 ddar.py:60] Depth 4/1000 time = 1.223367691040039
I0123 21:43:29.686312 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2184312343597412
I0123 21:43:31.241072 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5460197925567627
I0123 21:43:32.247942 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0067071914672852
I0123 21:43:33.779869 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5278408527374268
I0123 21:43:33.780917 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:43:33.781031 139974069698560 alphageometry.py:566] LM output (score=-2.879678): "k : T c d c k 14 ;"
I0123 21:43:33.781071 139974069698560 alphageometry.py:567] Translation: "k = on_tline k c c d"

I0123 21:43:33.781125 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c c d ? cong j f j e"
I0123 21:43:33.781272 139974069698560 graph.py:498] 
I0123 21:43:33.781325 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c c d ? cong j f j e
I0123 21:43:34.251464 139974069698560 ddar.py:60] Depth 1/1000 time = 0.42893004417419434
I0123 21:43:35.377969 139974069698560 ddar.py:60] Depth 2/1000 time = 1.126354455947876
I0123 21:43:36.492527 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1143560409545898
I0123 21:43:37.600885 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1081793308258057
I0123 21:43:38.706897 139974069698560 ddar.py:60] Depth 5/1000 time = 1.105654001235962
I0123 21:43:39.885223 139974069698560 ddar.py:60] Depth 6/1000 time = 1.169081449508667
I0123 21:43:41.031080 139974069698560 ddar.py:60] Depth 7/1000 time = 1.145676612854004
I0123 21:43:42.187376 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1523628234863281
I0123 21:43:42.188277 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:43:42.188366 139974069698560 alphageometry.py:566] LM output (score=-2.886496): "k : T b h b k 14 ;"
I0123 21:43:42.188405 139974069698560 alphageometry.py:567] Translation: "k = on_tline k b b h"

I0123 21:43:42.188445 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b h ? cong j f j e"
I0123 21:43:42.188571 139974069698560 graph.py:498] 
I0123 21:43:42.188618 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b h ? cong j f j e
I0123 21:43:42.898248 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6671278476715088
I0123 21:43:43.874463 139974069698560 ddar.py:60] Depth 2/1000 time = 0.976036548614502
I0123 21:43:44.590106 139974069698560 ddar.py:60] Depth 3/1000 time = 0.715479850769043
I0123 21:43:45.562488 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9722323417663574
I0123 21:43:46.532692 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9698748588562012
I0123 21:43:47.559803 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0199658870697021
I0123 21:43:48.560085 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0001070499420166
I0123 21:43:49.578545 139974069698560 ddar.py:60] Depth 8/1000 time = 1.014690637588501
I0123 21:43:49.579435 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:43:49.579509 139974069698560 alphageometry.py:566] LM output (score=-2.908851): "k : T d g d k 14 ;"
I0123 21:43:49.579546 139974069698560 alphageometry.py:567] Translation: "k = on_tline k d d g"

I0123 21:43:49.579584 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d d g ? cong j f j e"
I0123 21:43:49.579713 139974069698560 graph.py:498] 
I0123 21:43:49.579762 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d d g ? cong j f j e
I0123 21:43:50.294425 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6726322174072266
I0123 21:43:51.273193 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9785971641540527
I0123 21:43:52.254771 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9814102649688721
I0123 21:43:52.969131 139974069698560 ddar.py:60] Depth 4/1000 time = 0.7141778469085693
I0123 21:43:53.941098 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9716076850891113
I0123 21:43:55.002863 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0532352924346924
I0123 21:43:56.056259 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0531413555145264
I0123 21:43:57.096527 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0365397930145264
I0123 21:43:57.097423 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:43:57.097507 139974069698560 alphageometry.py:566] LM output (score=-2.916248): "k : T f i f k 14 ;"
I0123 21:43:57.097543 139974069698560 alphageometry.py:567] Translation: "k = on_tline k f f i"

I0123 21:43:57.097596 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k f f i ? cong j f j e"
I0123 21:43:57.097751 139974069698560 graph.py:498] 
I0123 21:43:57.097804 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k f f i ? cong j f j e
I0123 21:43:57.811099 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6707439422607422
I0123 21:43:58.793951 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9826967716217041
I0123 21:43:59.812238 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0181291103363037
I0123 21:44:00.829572 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0171561241149902
I0123 21:44:01.844862 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0149352550506592
I0123 21:44:02.650830 139974069698560 ddar.py:60] Depth 6/1000 time = 0.7973074913024902
I0123 21:44:03.681416 139974069698560 ddar.py:60] Depth 7/1000 time = 1.030428171157837
I0123 21:44:04.725017 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0396573543548584
I0123 21:44:04.725899 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:44:04.725976 139974069698560 alphageometry.py:566] LM output (score=-2.921403): "k : T a b a k 14 ;"
I0123 21:44:04.726012 139974069698560 alphageometry.py:567] Translation: "k = on_tline k a a b"

I0123 21:44:04.726050 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k a a b ? cong j f j e"
I0123 21:44:04.726178 139974069698560 graph.py:498] 
I0123 21:44:04.726226 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k a a b ? cong j f j e
I0123 21:44:05.438303 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6707146167755127
I0123 21:44:06.414377 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9759054183959961
I0123 21:44:07.412425 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9978761672973633
I0123 21:44:08.419359 139974069698560 ddar.py:60] Depth 4/1000 time = 1.006765604019165
I0123 21:44:09.428486 139974069698560 ddar.py:60] Depth 5/1000 time = 1.008786916732788
I0123 21:44:10.220252 139974069698560 ddar.py:60] Depth 6/1000 time = 0.7831315994262695
I0123 21:44:11.245377 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0249626636505127
I0123 21:44:12.270448 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0214250087738037
I0123 21:44:12.271296 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:44:12.271366 139974069698560 alphageometry.py:566] LM output (score=-2.933029): "k : T h i h k 14 ;"
I0123 21:44:12.271401 139974069698560 alphageometry.py:567] Translation: "k = on_tline k h h i"

I0123 21:44:12.271440 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k h h i ? cong j f j e"
I0123 21:44:12.271564 139974069698560 graph.py:498] 
I0123 21:44:12.271612 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k h h i ? cong j f j e
I0123 21:44:12.982397 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6701235771179199
I0123 21:44:13.959325 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9767506122589111
I0123 21:44:14.954300 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9947993755340576
I0123 21:44:15.679081 139974069698560 ddar.py:60] Depth 4/1000 time = 0.724616527557373
I0123 21:44:16.659462 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9800081253051758
I0123 21:44:17.736666 139974069698560 ddar.py:60] Depth 6/1000 time = 1.068485975265503
I0123 21:44:18.788046 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0511527061462402
I0123 21:44:19.927352 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1351239681243896
I0123 21:44:19.928220 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:44:19.928301 139974069698560 alphageometry.py:566] LM output (score=-2.952024): "k : T d e d k 14 ;"
I0123 21:44:19.928338 139974069698560 alphageometry.py:567] Translation: "k = on_tline k d d e"

I0123 21:44:19.928388 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d d e ? cong j f j e"
I0123 21:44:19.928521 139974069698560 graph.py:498] 
I0123 21:44:19.928572 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d d e ? cong j f j e
I0123 21:44:20.650485 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6808598041534424
I0123 21:44:21.381235 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7305963039398193
I0123 21:44:22.355241 139974069698560 ddar.py:60] Depth 3/1000 time = 0.973848819732666
I0123 21:44:23.326395 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9709920883178711
I0123 21:44:24.318889 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9921526908874512
I0123 21:44:25.400635 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0733869075775146
I0123 21:44:26.448960 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0481622219085693
I0123 21:44:27.507959 139974069698560 ddar.py:60] Depth 8/1000 time = 1.055271863937378
I0123 21:44:27.508829 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:44:27.508918 139974069698560 alphageometry.py:540] Depth 1. There are 30 nodes to expand:
I0123 21:44:27.508955 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T b c c k 14 ; x00
I0123 21:44:27.508985 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T b c b k 14 ; x00
I0123 21:44:27.509011 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D a k b k 14 ; x00
I0123 21:44:27.509038 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T i j i k 14 ; x00
I0123 21:44:27.509063 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : C b c k 14 D b k c k 15 ; x00
I0123 21:44:27.509086 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T c e e k 14 ; x00
I0123 21:44:27.509110 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D b d d k 14 T b d d k 15 ; x00
I0123 21:44:27.509151 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T b c d k 14 ; x00
I0123 21:44:27.509178 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : C b h k 14 D b k h k 15 ; x00
I0123 21:44:27.509202 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D a b a k 14 D a b b k 15 ; x00
I0123 21:44:27.509227 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D b k d k 14 D c k d k 15 ; x00
I0123 21:44:27.509252 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D a c a k 14 D a c c k 15 ; x00
I0123 21:44:27.509276 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T d g g k 14 ; x00
I0123 21:44:27.509299 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D a b a k 14 T a b a k 15 ; x00
I0123 21:44:27.509323 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T b c h k 14 ; x00
I0123 21:44:27.509346 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : C b c k 14 T b c d k 15 ; x00
I0123 21:44:27.509369 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D a b a k 14 D b c c k 15 ; x00
I0123 21:44:27.509392 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D i j j k 14 ; x00
I0123 21:44:27.509420 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T b d d k 14 ; x00
I0123 21:44:27.509446 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T g h g k 14 ; x00
I0123 21:44:27.509470 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T a b b k 14 ; x00
I0123 21:44:27.509494 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T c g g k 14 ; x00
I0123 21:44:27.509517 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D a d d k 14 ; x00
I0123 21:44:27.509540 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T c d c k 14 ; x00
I0123 21:44:27.509563 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T b h b k 14 ; x00
I0123 21:44:27.509586 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T d g d k 14 ; x00
I0123 21:44:27.509610 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T f i f k 14 ; x00
I0123 21:44:27.509634 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T a b a k 14 ; x00
I0123 21:44:27.509664 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T h i h k 14 ; x00
I0123 21:44:27.509687 139974069698560 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T d e d k 14 ; x00
I0123 21:44:27.509714 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T b c c k 14 ; x00
I0123 21:44:32.050855 139974069698560 alphageometry.py:566] LM output (score=-0.608782): "l : P b l c k 15 ;"
I0123 21:44:32.050985 139974069698560 alphageometry.py:567] Translation: "l = on_pline l b c k"

I0123 21:44:32.051035 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_pline l b c k ? cong j f j e"
I0123 21:44:32.051167 139974069698560 graph.py:498] 
I0123 21:44:32.051220 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_pline l b c k ? cong j f j e
I0123 21:44:32.847267 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7526183128356934
I0123 21:44:33.638703 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7912807464599609
I0123 21:44:34.747428 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1085481643676758
I0123 21:44:36.153275 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4056556224822998
I0123 21:44:37.301754 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1480739116668701
I0123 21:44:38.226793 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9156789779663086
I0123 21:44:39.681771 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4548063278198242
I0123 21:44:40.885430 139974069698560 ddar.py:60] Depth 8/1000 time = 1.199958324432373
I0123 21:44:40.886310 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:44:40.886370 139974069698560 alphageometry.py:566] LM output (score=-1.744110): "l : C b c l 15 D b l c l 16 ;"
I0123 21:44:40.886407 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 21:44:40.886443 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_bline l c b ? cong j f j e"
I0123 21:44:40.886583 139974069698560 graph.py:498] 
I0123 21:44:40.886633 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_bline l c b ? cong j f j e
I0123 21:44:41.476464 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5358879566192627
I0123 21:44:43.160532 139974069698560 ddar.py:60] Depth 2/1000 time = 1.6839280128479004
I0123 21:44:44.581982 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4212703704833984
I0123 21:44:45.989661 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4074859619140625
I0123 21:44:47.693954 139974069698560 ddar.py:60] Depth 5/1000 time = 1.703883171081543
I0123 21:44:49.198194 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4922964572906494
I0123 21:44:50.635571 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4371905326843262
I0123 21:44:52.400725 139974069698560 ddar.py:60] Depth 8/1000 time = 1.760357141494751
I0123 21:44:52.401720 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:44:52.401770 139974069698560 alphageometry.py:566] LM output (score=-1.770574): "l : C b g l 15 D b l g l 16 ;"
I0123 21:44:52.401803 139974069698560 alphageometry.py:567] Translation: "l = on_line l b g, on_bline l g b"

I0123 21:44:52.401844 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b g, on_bline l g b ? cong j f j e"
I0123 21:44:52.402000 139974069698560 graph.py:498] 
I0123 21:44:52.402056 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b g, on_bline l g b ? cong j f j e
I0123 21:44:53.292518 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8380684852600098
I0123 21:44:54.598736 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3060517311096191
I0123 21:44:55.946102 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3472018241882324
I0123 21:44:57.319018 139974069698560 ddar.py:60] Depth 4/1000 time = 1.372732400894165
I0123 21:44:58.682400 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3629300594329834
I0123 21:45:00.427418 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7334661483764648
I0123 21:45:01.846031 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4184482097625732
I0123 21:45:03.268381 139974069698560 ddar.py:60] Depth 8/1000 time = 1.4155542850494385
I0123 21:45:03.269462 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:45:03.269524 139974069698560 alphageometry.py:566] LM output (score=-1.873119): "l : C b f l 15 D b l f l 16 ;"
I0123 21:45:03.269560 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_bline l f b"

I0123 21:45:03.269597 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b f, on_bline l f b ? cong j f j e"
I0123 21:45:03.269737 139974069698560 graph.py:498] 
I0123 21:45:03.269787 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b f, on_bline l f b ? cong j f j e
I0123 21:45:04.236041 139974069698560 ddar.py:60] Depth 1/1000 time = 0.9016880989074707
I0123 21:45:05.629609 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3934082984924316
I0123 21:45:07.375929 139974069698560 ddar.py:60] Depth 3/1000 time = 1.7461316585540771
I0123 21:45:09.121559 139974069698560 ddar.py:60] Depth 4/1000 time = 1.7454636096954346
I0123 21:45:10.883059 139974069698560 ddar.py:60] Depth 5/1000 time = 1.7613327503204346
I0123 21:45:12.657465 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7734177112579346
I0123 21:45:14.494183 139974069698560 ddar.py:60] Depth 7/1000 time = 1.826326608657837
I0123 21:45:16.029124 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5347650051116943
I0123 21:45:17.870667 139974069698560 ddar.py:60] Depth 9/1000 time = 1.8351266384124756
I0123 21:45:17.871815 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:45:17.871877 139974069698560 alphageometry.py:566] LM output (score=-1.887408): "l : C d f l 15 D d l f l 16 ;"
I0123 21:45:17.871913 139974069698560 alphageometry.py:567] Translation: "l = on_line l d f, on_bline l f d"

I0123 21:45:17.871951 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l d f, on_bline l f d ? cong j f j e"
I0123 21:45:17.872088 139974069698560 graph.py:498] 
I0123 21:45:17.872137 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l d f, on_bline l f d ? cong j f j e
I0123 21:45:18.779253 139974069698560 ddar.py:60] Depth 1/1000 time = 0.852752685546875
I0123 21:45:20.203626 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4242024421691895
I0123 21:45:21.992062 139974069698560 ddar.py:60] Depth 3/1000 time = 1.7882587909698486
I0123 21:45:23.500972 139974069698560 ddar.py:60] Depth 4/1000 time = 1.5087225437164307
I0123 21:45:25.016047 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5148899555206299
I0123 21:45:26.529294 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5128390789031982
I0123 21:45:28.449729 139974069698560 ddar.py:60] Depth 7/1000 time = 1.908259391784668
I0123 21:45:30.001467 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5515697002410889
I0123 21:45:31.567622 139974069698560 ddar.py:60] Depth 9/1000 time = 1.5588898658752441
I0123 21:45:31.568734 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:45:31.568785 139974069698560 alphageometry.py:566] LM output (score=-1.898134): "l : C b f l 15 P b e b l 16 ;"
I0123 21:45:31.568818 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b e b l"

I0123 21:45:31.568851 139974069698560 alphageometry.py:566] LM output (score=-2.004371): "l : D b c d l 15 D b d c l 16 ;"
I0123 21:45:31.568877 139974069698560 alphageometry.py:567] Translation: "l = eqdistance l d b c, eqdistance l c b d"

I0123 21:45:31.568907 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = eqdistance l d b c, eqdistance l c b d ? cong j f j e"
I0123 21:45:31.569042 139974069698560 graph.py:498] 
I0123 21:45:31.569091 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = eqdistance l d b c, eqdistance l c b d ? cong j f j e
I0123 21:45:32.231984 139974069698560 ddar.py:60] Depth 1/1000 time = 0.603283166885376
I0123 21:45:33.907283 139974069698560 ddar.py:60] Depth 2/1000 time = 1.675076961517334
I0123 21:45:35.354915 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4473938941955566
I0123 21:45:36.863842 139974069698560 ddar.py:60] Depth 4/1000 time = 1.5087199211120605
I0123 21:45:38.427439 139974069698560 ddar.py:60] Depth 5/1000 time = 1.563408374786377
I0123 21:45:39.989823 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5620224475860596
I0123 21:45:41.650203 139974069698560 ddar.py:60] Depth 7/1000 time = 1.6452748775482178
I0123 21:45:43.230185 139974069698560 ddar.py:60] Depth 8/1000 time = 1.579820156097412
I0123 21:45:44.825803 139974069698560 ddar.py:60] Depth 9/1000 time = 1.5907025337219238
I0123 21:45:44.826730 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:45:44.826782 139974069698560 alphageometry.py:566] LM output (score=-2.022336): "l : D b d d l 15 T b d d l 16 ;"
I0123 21:45:44.826816 139974069698560 alphageometry.py:567] Translation: "l = on_circle l d b, on_tline l d b d"

I0123 21:45:44.826854 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_circle l d b, on_tline l d b d ? cong j f j e"
I0123 21:45:44.827000 139974069698560 graph.py:498] 
I0123 21:45:44.827055 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_circle l d b, on_tline l d b d ? cong j f j e
I0123 21:45:45.768731 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8887135982513428
I0123 21:45:47.210592 139974069698560 ddar.py:60] Depth 2/1000 time = 1.441692590713501
I0123 21:45:48.730573 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5198028087615967
I0123 21:45:50.237811 139974069698560 ddar.py:60] Depth 4/1000 time = 1.5070672035217285
I0123 21:45:51.747334 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5091297626495361
I0123 21:45:53.591617 139974069698560 ddar.py:60] Depth 6/1000 time = 1.8433403968811035
I0123 21:45:55.226797 139974069698560 ddar.py:60] Depth 7/1000 time = 1.6195061206817627
I0123 21:45:56.820407 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5934269428253174
I0123 21:45:58.408920 139974069698560 ddar.py:60] Depth 9/1000 time = 1.5844058990478516
I0123 21:45:58.409835 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:45:58.409894 139974069698560 alphageometry.py:566] LM output (score=-2.027051): "l : P b c k l 15 ;"
I0123 21:45:58.409927 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k b c"

I0123 21:45:58.409968 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_pline l k b c ? cong j f j e"
I0123 21:45:58.410105 139974069698560 graph.py:498] 
I0123 21:45:58.410156 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_pline l k b c ? cong j f j e
I0123 21:45:58.913794 139974069698560 ddar.py:60] Depth 1/1000 time = 0.460080623626709
I0123 21:46:00.015715 139974069698560 ddar.py:60] Depth 2/1000 time = 1.1017768383026123
I0123 21:46:01.162348 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1464581489562988
I0123 21:46:02.310557 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1480276584625244
I0123 21:46:03.453262 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1422815322875977
I0123 21:46:04.667917 139974069698560 ddar.py:60] Depth 6/1000 time = 1.205599308013916
I0123 21:46:05.848999 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1809196472167969
I0123 21:46:07.058678 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2057242393493652
I0123 21:46:07.059570 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:46:07.059619 139974069698560 alphageometry.py:566] LM output (score=-2.062168): "l : C b c l 15 T b c g l 16 ;"
I0123 21:46:07.059653 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l g b c"

I0123 21:46:07.059691 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_tline l g b c ? cong j f j e"
I0123 21:46:07.059831 139974069698560 graph.py:498] 
I0123 21:46:07.059881 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_tline l g b c ? cong j f j e
I0123 21:46:07.933441 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8300869464874268
I0123 21:46:09.200298 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2666988372802734
I0123 21:46:10.557973 139974069698560 ddar.py:60] Depth 3/1000 time = 1.357499361038208
I0123 21:46:11.899313 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3411033153533936
I0123 21:46:13.581545 139974069698560 ddar.py:60] Depth 5/1000 time = 1.6816892623901367
I0123 21:46:15.012163 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4209883213043213
I0123 21:46:16.397450 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3851101398468018
I0123 21:46:18.112250 139974069698560 ddar.py:60] Depth 8/1000 time = 1.7110929489135742
I0123 21:46:18.113146 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:46:18.113225 139974069698560 alphageometry.py:566] LM output (score=-2.121752): "l : C b h l 15 D b l h l 16 ;"
I0123 21:46:18.113264 139974069698560 alphageometry.py:567] Translation: "l = on_line l b h, on_bline l h b"

I0123 21:46:18.113316 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b h, on_bline l h b ? cong j f j e"
I0123 21:46:18.113461 139974069698560 graph.py:498] 
I0123 21:46:18.113515 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b h, on_bline l h b ? cong j f j e
I0123 21:46:18.703601 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5360331535339355
I0123 21:46:19.977722 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2739782333374023
I0123 21:46:21.304423 139974069698560 ddar.py:60] Depth 3/1000 time = 1.326526165008545
I0123 21:46:22.971613 139974069698560 ddar.py:60] Depth 4/1000 time = 1.6670045852661133
I0123 21:46:24.331913 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3598682880401611
I0123 21:46:25.786737 139974069698560 ddar.py:60] Depth 6/1000 time = 1.443220853805542
I0123 21:46:27.200052 139974069698560 ddar.py:60] Depth 7/1000 time = 1.413139820098877
I0123 21:46:28.623733 139974069698560 ddar.py:60] Depth 8/1000 time = 1.4171500205993652
I0123 21:46:28.624792 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:46:28.624840 139974069698560 alphageometry.py:566] LM output (score=-2.161780): "l : C b c l 15 T b c d l 16 ;"
I0123 21:46:28.624872 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l d b c"

I0123 21:46:28.624909 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_tline l d b c ? cong j f j e"
I0123 21:46:28.625040 139974069698560 graph.py:498] 
I0123 21:46:28.625088 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_tline l d b c ? cong j f j e
I0123 21:46:29.191154 139974069698560 ddar.py:60] Depth 1/1000 time = 0.523357629776001
I0123 21:46:30.491558 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3002448081970215
I0123 21:46:32.237421 139974069698560 ddar.py:60] Depth 3/1000 time = 1.7456820011138916
I0123 21:46:33.678000 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4403796195983887
I0123 21:46:35.096030 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4178509712219238
I0123 21:46:36.844235 139974069698560 ddar.py:60] Depth 6/1000 time = 1.747757911682129
I0123 21:46:38.350583 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4965345859527588
I0123 21:46:39.813496 139974069698560 ddar.py:60] Depth 8/1000 time = 1.46274733543396
I0123 21:46:41.624136 139974069698560 ddar.py:60] Depth 9/1000 time = 1.805567979812622
I0123 21:46:41.626101 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:46:41.626155 139974069698560 alphageometry.py:566] LM output (score=-2.183458): "l : C b f l 15 P b e f l 16 ;"
I0123 21:46:41.626188 139974069698560 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2570, in add_clause
    raise DepCheckFailError(
graph.DepCheckFailError: ncoll f b e
"

I0123 21:46:41.626240 139974069698560 alphageometry.py:566] LM output (score=-2.194082): "l : P b c k l 15 P b l c k 16 ;"
I0123 21:46:41.626269 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k b c, on_pline l b c k"

I0123 21:46:41.626311 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_pline l k b c, on_pline l b c k ? cong j f j e"
I0123 21:46:41.626456 139974069698560 graph.py:498] 
I0123 21:46:41.626509 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_pline l k b c, on_pline l b c k ? cong j f j e
I0123 21:46:42.195691 139974069698560 ddar.py:60] Depth 1/1000 time = 0.521174430847168
I0123 21:46:43.562477 139974069698560 ddar.py:60] Depth 2/1000 time = 1.366640567779541
I0123 21:46:45.093378 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5307340621948242
I0123 21:46:47.068169 139974069698560 ddar.py:60] Depth 4/1000 time = 1.9746131896972656
I0123 21:46:48.769841 139974069698560 ddar.py:60] Depth 5/1000 time = 1.7014999389648438
I0123 21:46:50.455831 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6854689121246338
I0123 21:46:52.268559 139974069698560 ddar.py:60] Depth 7/1000 time = 1.799586534500122
I0123 21:46:54.009319 139974069698560 ddar.py:60] Depth 8/1000 time = 1.7405564785003662
I0123 21:46:55.749824 139974069698560 ddar.py:60] Depth 9/1000 time = 1.7319345474243164
I0123 21:46:57.488430 139974069698560 ddar.py:60] Depth 10/1000 time = 1.7335503101348877
I0123 21:46:57.489453 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:46:57.489505 139974069698560 alphageometry.py:566] LM output (score=-2.217255): "l : C b i l 15 D b l i l 16 ;"
I0123 21:46:57.489538 139974069698560 alphageometry.py:567] Translation: "l = on_line l b i, on_bline l i b"

I0123 21:46:57.489585 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b i, on_bline l i b ? cong j f j e"
I0123 21:46:57.489738 139974069698560 graph.py:498] 
I0123 21:46:57.489796 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b i, on_bline l i b ? cong j f j e
I0123 21:46:58.377157 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8331568241119385
I0123 21:46:59.576897 139974069698560 ddar.py:60] Depth 2/1000 time = 1.1995680332183838
I0123 21:47:00.817198 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2401278018951416
I0123 21:47:02.061022 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2436511516571045
I0123 21:47:03.302987 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2415430545806885
I0123 21:47:04.621542 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3085370063781738
I0123 21:47:05.898725 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2770066261291504
I0123 21:47:07.206564 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3026154041290283
I0123 21:47:07.207578 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:47:07.207639 139974069698560 alphageometry.py:566] LM output (score=-2.288536): "l : T c k k l 15 ;"
I0123 21:47:07.207673 139974069698560 alphageometry.py:567] Translation: "l = on_tline l k c k"

I0123 21:47:07.207711 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_tline l k c k ? cong j f j e"
I0123 21:47:07.207865 139974069698560 graph.py:498] 
I0123 21:47:07.207913 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_tline l k c k ? cong j f j e
I0123 21:47:08.050904 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8000242710113525
I0123 21:47:08.865784 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8146615028381348
I0123 21:47:10.040252 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1742193698883057
I0123 21:47:11.206363 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1659152507781982
I0123 21:47:12.374880 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1680984497070312
I0123 21:47:13.607879 139974069698560 ddar.py:60] Depth 6/1000 time = 1.2237637042999268
I0123 21:47:14.821442 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2133917808532715
I0123 21:47:16.058881 139974069698560 ddar.py:60] Depth 8/1000 time = 1.233790636062622
I0123 21:47:16.059745 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:47:16.059796 139974069698560 alphageometry.py:566] LM output (score=-2.355679): "l : C h i l 15 D h l i l 16 ;"
I0123 21:47:16.059829 139974069698560 alphageometry.py:567] Translation: "l = on_line l h i, on_bline l i h"

I0123 21:47:16.059865 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l h i, on_bline l i h ? cong j f j e"
I0123 21:47:16.060011 139974069698560 graph.py:498] 
I0123 21:47:16.060066 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l h i, on_bline l i h ? cong j f j e
I0123 21:47:17.093788 139974069698560 ddar.py:60] Depth 1/1000 time = 0.9799594879150391
I0123 21:47:18.980426 139974069698560 ddar.py:60] Depth 2/1000 time = 1.886479377746582
I0123 21:47:20.769235 139974069698560 ddar.py:60] Depth 3/1000 time = 1.7886412143707275
I0123 21:47:22.873613 139974069698560 ddar.py:60] Depth 4/1000 time = 2.1042044162750244
I0123 21:47:25.021752 139974069698560 ddar.py:60] Depth 5/1000 time = 2.147955894470215
I0123 21:47:26.809984 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7880418300628662
I0123 21:47:28.994217 139974069698560 ddar.py:60] Depth 7/1000 time = 2.183734893798828
I0123 21:47:31.166032 139974069698560 ddar.py:60] Depth 8/1000 time = 2.1573078632354736
I0123 21:47:31.173578 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:47:31.173659 139974069698560 alphageometry.py:566] LM output (score=-2.432911): "l : C b c l 15 T b c f l 16 ;"
I0123 21:47:31.173698 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l f b c"

I0123 21:47:31.173744 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_tline l f b c ? cong j f j e"
I0123 21:47:31.173894 139974069698560 graph.py:498] 
I0123 21:47:31.173946 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_tline l f b c ? cong j f j e
I0123 21:47:31.733124 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5139870643615723
I0123 21:47:33.025383 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2921123504638672
I0123 21:47:34.719788 139974069698560 ddar.py:60] Depth 3/1000 time = 1.6942152976989746
I0123 21:47:36.099570 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3795955181121826
I0123 21:47:37.472758 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3727922439575195
I0123 21:47:38.904744 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4224097728729248
I0123 21:47:40.661532 139974069698560 ddar.py:60] Depth 7/1000 time = 1.756608009338379
I0123 21:47:42.099887 139974069698560 ddar.py:60] Depth 8/1000 time = 1.4346632957458496
I0123 21:47:42.100764 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:47:42.100813 139974069698560 alphageometry.py:566] LM output (score=-2.503143): "l : D b h b l 15 D d h d l 16 ;"
I0123 21:47:42.100846 139974069698560 alphageometry.py:567] Translation: "l = on_circle l b h, on_circle l d h"

I0123 21:47:42.100883 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_circle l b h, on_circle l d h ? cong j f j e"
I0123 21:47:42.101017 139974069698560 graph.py:498] 
I0123 21:47:42.101067 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_circle l b h, on_circle l d h ? cong j f j e
I0123 21:47:42.753397 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5868043899536133
I0123 21:47:44.218826 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4652953147888184
I0123 21:47:45.953330 139974069698560 ddar.py:60] Depth 3/1000 time = 1.7343459129333496
I0123 21:47:47.851549 139974069698560 ddar.py:60] Depth 4/1000 time = 1.8980042934417725
I0123 21:47:49.769679 139974069698560 ddar.py:60] Depth 5/1000 time = 1.9176077842712402
I0123 21:47:52.127555 139974069698560 ddar.py:60] Depth 6/1000 time = 2.340214967727661
I0123 21:47:54.087753 139974069698560 ddar.py:60] Depth 7/1000 time = 1.960019588470459
I0123 21:47:56.108266 139974069698560 ddar.py:60] Depth 8/1000 time = 2.0068459510803223
I0123 21:47:56.109265 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:47:56.109316 139974069698560 alphageometry.py:566] LM output (score=-2.522113): "l : C b k l 15 D b l k l 16 ;"
I0123 21:47:56.109350 139974069698560 alphageometry.py:567] Translation: "l = on_line l b k, on_bline l k b"

I0123 21:47:56.109385 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b k, on_bline l k b ? cong j f j e"
I0123 21:47:56.109530 139974069698560 graph.py:498] 
I0123 21:47:56.109584 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b k, on_bline l k b ? cong j f j e
I0123 21:47:56.700990 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5368688106536865
I0123 21:47:58.095243 139974069698560 ddar.py:60] Depth 2/1000 time = 1.394117832183838
I0123 21:47:59.587602 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4921832084655762
I0123 21:48:01.105658 139974069698560 ddar.py:60] Depth 4/1000 time = 1.5178711414337158
I0123 21:48:02.601608 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4955439567565918
I0123 21:48:04.178671 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5659875869750977
I0123 21:48:06.103048 139974069698560 ddar.py:60] Depth 7/1000 time = 1.9241712093353271
I0123 21:48:07.732206 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6209924221038818
I0123 21:48:07.733266 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:48:07.733351 139974069698560 alphageometry.py:566] LM output (score=-2.527020): "l : C b c l 15 T b c h l 16 ;"
I0123 21:48:07.733384 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l h b c"

I0123 21:48:07.733428 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_tline l h b c ? cong j f j e"
I0123 21:48:07.733573 139974069698560 graph.py:498] 
I0123 21:48:07.733625 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_tline l h b c ? cong j f j e
I0123 21:48:08.293095 139974069698560 ddar.py:60] Depth 1/1000 time = 0.516049861907959
I0123 21:48:09.602767 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3095300197601318
I0123 21:48:11.297290 139974069698560 ddar.py:60] Depth 3/1000 time = 1.6943461894989014
I0123 21:48:12.666283 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3688092231750488
I0123 21:48:14.028056 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3613605499267578
I0123 21:48:15.472386 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4347712993621826
I0123 21:48:16.866898 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3943431377410889
I0123 21:48:18.280649 139974069698560 ddar.py:60] Depth 8/1000 time = 1.4101111888885498
I0123 21:48:18.281502 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:48:18.281550 139974069698560 alphageometry.py:566] LM output (score=-2.554621): "l : C b f l 15 ;"
I0123 21:48:18.281583 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f"

I0123 21:48:18.281618 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b f ? cong j f j e"
I0123 21:48:18.281751 139974069698560 graph.py:498] 
I0123 21:48:18.281799 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b f ? cong j f j e
I0123 21:48:19.243439 139974069698560 ddar.py:60] Depth 1/1000 time = 0.920952320098877
I0123 21:48:20.910488 139974069698560 ddar.py:60] Depth 2/1000 time = 1.6668877601623535
I0123 21:48:22.277518 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3668560981750488
I0123 21:48:24.034081 139974069698560 ddar.py:60] Depth 4/1000 time = 1.7563731670379639
I0123 21:48:25.424271 139974069698560 ddar.py:60] Depth 5/1000 time = 1.38979172706604
I0123 21:48:27.252248 139974069698560 ddar.py:60] Depth 6/1000 time = 1.819197654724121
I0123 21:48:28.686252 139974069698560 ddar.py:60] Depth 7/1000 time = 1.433802843093872
I0123 21:48:30.449975 139974069698560 ddar.py:60] Depth 8/1000 time = 1.7600083351135254
I0123 21:48:30.450857 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:48:30.450914 139974069698560 alphageometry.py:566] LM output (score=-2.620449): "l : C b f l 15 P b e e l 16 ;"
I0123 21:48:30.450947 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b e e l"

I0123 21:48:30.450982 139974069698560 alphageometry.py:566] LM output (score=-2.645220): "l : D a b a l 15 T a b a l 16 ;"
I0123 21:48:30.451008 139974069698560 alphageometry.py:567] Translation: "l = on_circle l a b, on_tline l a a b"

I0123 21:48:30.451046 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_circle l a b, on_tline l a a b ? cong j f j e"
I0123 21:48:30.451202 139974069698560 graph.py:498] 
I0123 21:48:30.451255 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_circle l a b, on_tline l a a b ? cong j f j e
I0123 21:48:31.011153 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5045077800750732
I0123 21:48:32.248785 139974069698560 ddar.py:60] Depth 2/1000 time = 1.237497091293335
I0123 21:48:33.556752 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3077960014343262
I0123 21:48:34.870001 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3130738735198975
I0123 21:48:36.187350 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3170089721679688
I0123 21:48:37.137932 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9500079154968262
I0123 21:48:38.540571 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3890604972839355
I0123 21:48:39.893926 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3531994819641113
I0123 21:48:41.268619 139974069698560 ddar.py:60] Depth 9/1000 time = 1.3700025081634521
I0123 21:48:41.269495 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:48:41.269542 139974069698560 alphageometry.py:566] LM output (score=-2.652034): "l : C b c l 15 D b c b l 16 ;"
I0123 21:48:41.269574 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_circle l b c"

I0123 21:48:41.269608 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_circle l b c ? cong j f j e"
I0123 21:48:41.269743 139974069698560 graph.py:498] 
I0123 21:48:41.269791 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_circle l b c ? cong j f j e
I0123 21:48:42.271128 139974069698560 ddar.py:60] Depth 1/1000 time = 0.9487502574920654
I0123 21:48:44.011280 139974069698560 ddar.py:60] Depth 2/1000 time = 1.7399115562438965
I0123 21:48:45.809945 139974069698560 ddar.py:60] Depth 3/1000 time = 1.798391580581665
I0123 21:48:47.955410 139974069698560 ddar.py:60] Depth 4/1000 time = 2.14526629447937
I0123 21:48:49.749034 139974069698560 ddar.py:60] Depth 5/1000 time = 1.7931766510009766
I0123 21:48:51.632148 139974069698560 ddar.py:60] Depth 6/1000 time = 1.870290756225586
I0123 21:48:53.460187 139974069698560 ddar.py:60] Depth 7/1000 time = 1.8278789520263672
I0123 21:48:55.701473 139974069698560 ddar.py:60] Depth 8/1000 time = 2.2354094982147217
I0123 21:48:57.659184 139974069698560 ddar.py:60] Depth 9/1000 time = 1.957549810409546
I0123 21:48:59.988188 139974069698560 ddar.py:60] Depth 10/1000 time = 2.328829765319824
I0123 21:48:59.991613 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:48:59.991679 139974069698560 alphageometry.py:566] LM output (score=-2.682508): "l : C g h l 15 D g l h l 16 ;"
I0123 21:48:59.991716 139974069698560 alphageometry.py:567] Translation: "l = on_line l g h, on_bline l h g"

I0123 21:48:59.991762 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l g h, on_bline l h g ? cong j f j e"
I0123 21:48:59.991900 139974069698560 graph.py:498] 
I0123 21:48:59.991953 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l g h, on_bline l h g ? cong j f j e
I0123 21:49:00.620138 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5747385025024414
I0123 21:49:02.191038 139974069698560 ddar.py:60] Depth 2/1000 time = 1.570749044418335
I0123 21:49:04.384658 139974069698560 ddar.py:60] Depth 3/1000 time = 2.1934335231781006
I0123 21:49:06.187845 139974069698560 ddar.py:60] Depth 4/1000 time = 1.8029913902282715
I0123 21:49:07.964317 139974069698560 ddar.py:60] Depth 5/1000 time = 1.7762856483459473
I0123 21:49:09.767845 139974069698560 ddar.py:60] Depth 6/1000 time = 1.8030881881713867
I0123 21:49:11.586563 139974069698560 ddar.py:60] Depth 7/1000 time = 1.8039793968200684
I0123 21:49:13.790189 139974069698560 ddar.py:60] Depth 8/1000 time = 2.1953063011169434
I0123 21:49:13.790721 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:49:13.790772 139974069698560 alphageometry.py:566] LM output (score=-2.733510): "l : T c e e l 15 ;"
I0123 21:49:13.790805 139974069698560 alphageometry.py:567] Translation: "l = on_tline l e c e"

I0123 21:49:13.790850 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_tline l e c e ? cong j f j e"
I0123 21:49:13.790992 139974069698560 graph.py:498] 
I0123 21:49:13.791043 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_tline l e c e ? cong j f j e
I0123 21:49:14.297859 139974069698560 ddar.py:60] Depth 1/1000 time = 0.46337223052978516
I0123 21:49:15.494214 139974069698560 ddar.py:60] Depth 2/1000 time = 1.1962158679962158
I0123 21:49:16.349235 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8548586368560791
I0123 21:49:17.574952 139974069698560 ddar.py:60] Depth 4/1000 time = 1.225548505783081
I0123 21:49:18.796040 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2207422256469727
I0123 21:49:20.116836 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3092963695526123
I0123 21:49:21.438038 139974069698560 ddar.py:60] Depth 7/1000 time = 1.321049451828003
I0123 21:49:22.779888 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3381283283233643
I0123 21:49:22.780836 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:49:22.780897 139974069698560 alphageometry.py:566] LM output (score=-2.771113): "l : C b c l 15 D b c c l 16 ;"
I0123 21:49:22.780930 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_circle l c b"

I0123 21:49:22.780972 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_circle l c b ? cong j f j e"
I0123 21:49:22.781116 139974069698560 graph.py:498] 
I0123 21:49:22.781167 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b c, on_circle l c b ? cong j f j e
I0123 21:49:23.441434 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6073520183563232
I0123 21:49:25.721276 139974069698560 ddar.py:60] Depth 2/1000 time = 2.2796857357025146
I0123 21:49:27.669402 139974069698560 ddar.py:60] Depth 3/1000 time = 1.947960615158081
I0123 21:49:29.617743 139974069698560 ddar.py:60] Depth 4/1000 time = 1.9481549263000488
I0123 21:49:31.931221 139974069698560 ddar.py:60] Depth 5/1000 time = 2.3130698204040527
I0123 21:49:33.999063 139974069698560 ddar.py:60] Depth 6/1000 time = 2.051163673400879
I0123 21:49:35.998532 139974069698560 ddar.py:60] Depth 7/1000 time = 1.9992802143096924
I0123 21:49:38.407756 139974069698560 ddar.py:60] Depth 8/1000 time = 2.4021496772766113
I0123 21:49:38.408787 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:49:38.408847 139974069698560 alphageometry.py:566] LM output (score=-2.778928): "l : C b c l 15 P b c c l 16 ;"
I0123 21:49:38.408879 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b c c l"

I0123 21:49:38.408913 139974069698560 alphageometry.py:566] LM output (score=-2.852020): "l : D b d d l 15 ;"
I0123 21:49:38.408940 139974069698560 alphageometry.py:567] Translation: "l = on_circle l d b"

I0123 21:49:38.408969 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_circle l d b ? cong j f j e"
I0123 21:49:38.409097 139974069698560 graph.py:498] 
I0123 21:49:38.409142 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_circle l d b ? cong j f j e
I0123 21:49:39.006847 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5494599342346191
I0123 21:49:40.482578 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4756054878234863
I0123 21:49:42.008629 139974069698560 ddar.py:60] Depth 3/1000 time = 1.525878667831421
I0123 21:49:43.134458 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1255974769592285
I0123 21:49:44.630367 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4955134391784668
I0123 21:49:46.203603 139974069698560 ddar.py:60] Depth 6/1000 time = 1.560450553894043
I0123 21:49:47.740715 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5369539260864258
I0123 21:49:49.311897 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5671591758728027
I0123 21:49:49.312793 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:49:49.312843 139974069698560 alphageometry.py:566] LM output (score=-2.872368): "l : C b c l 15 P b c b l 16 ;"
I0123 21:49:49.312876 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b c b l"

I0123 21:49:49.312910 139974069698560 alphageometry.py:566] LM output (score=-2.895644): "l : C b f l 15 P c k d l 16 ;"
I0123 21:49:49.312937 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_pline l d c k"

I0123 21:49:49.312976 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b f, on_pline l d c k ? cong j f j e"
I0123 21:49:49.313117 139974069698560 graph.py:498] 
I0123 21:49:49.313170 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k c b c; l = on_line l b f, on_pline l d c k ? cong j f j e
I0123 21:49:50.338803 139974069698560 ddar.py:60] Depth 1/1000 time = 0.9817187786102295
I0123 21:49:52.192730 139974069698560 ddar.py:60] Depth 2/1000 time = 1.853762149810791
I0123 21:49:53.871959 139974069698560 ddar.py:60] Depth 3/1000 time = 1.6790668964385986
I0123 21:49:56.377514 139974069698560 ddar.py:60] Depth 4/1000 time = 2.5053820610046387
I0123 21:49:58.525321 139974069698560 ddar.py:60] Depth 5/1000 time = 2.1476263999938965
I0123 21:50:01.056197 139974069698560 ddar.py:60] Depth 6/1000 time = 2.5304088592529297
I0123 21:50:03.704458 139974069698560 ddar.py:60] Depth 7/1000 time = 2.6373403072357178
I0123 21:50:06.276549 139974069698560 ddar.py:60] Depth 8/1000 time = 2.571918487548828
I0123 21:50:08.903899 139974069698560 ddar.py:60] Depth 9/1000 time = 2.622122287750244
I0123 21:50:11.128618 139974069698560 ddar.py:60] Depth 10/1000 time = 2.2181951999664307
I0123 21:50:11.129688 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:50:11.129750 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T b c b k 14 ; x00
I0123 21:50:17.990228 139974069698560 alphageometry.py:566] LM output (score=-0.397714): "l : P b k c l 15 ;"
I0123 21:50:17.990374 139974069698560 alphageometry.py:567] Translation: "l = on_pline l c b k"

I0123 21:50:17.990416 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l c b k ? cong j f j e"
I0123 21:50:17.990616 139974069698560 graph.py:498] 
I0123 21:50:17.990668 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l c b k ? cong j f j e
I0123 21:50:18.881579 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8486711978912354
I0123 21:50:19.670581 139974069698560 ddar.py:60] Depth 2/1000 time = 0.788841724395752
I0123 21:50:20.893802 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2230563163757324
I0123 21:50:22.135293 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2413280010223389
I0123 21:50:23.381492 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2458138465881348
I0123 21:50:24.709876 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3188457489013672
I0123 21:50:25.611778 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9017393589019775
I0123 21:50:26.892503 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2768118381500244
I0123 21:50:26.893347 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:50:26.893395 139974069698560 alphageometry.py:566] LM output (score=-0.706122): "l : P b c k l 15 ;"
I0123 21:50:26.893426 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k b c"

I0123 21:50:26.893460 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b c ? cong j f j e"
I0123 21:50:26.893589 139974069698560 graph.py:498] 
I0123 21:50:26.893635 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b c ? cong j f j e
I0123 21:50:27.790555 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8537418842315674
I0123 21:50:28.612919 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8222057819366455
I0123 21:50:29.858541 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2454192638397217
I0123 21:50:31.136338 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2775154113769531
I0123 21:50:32.398770 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2620067596435547
I0123 21:50:33.330114 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9220921993255615
I0123 21:50:34.604622 139974069698560 ddar.py:60] Depth 7/1000 time = 1.274341344833374
I0123 21:50:35.895608 139974069698560 ddar.py:60] Depth 8/1000 time = 1.287048578262329
I0123 21:50:35.896471 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:50:35.896532 139974069698560 alphageometry.py:566] LM output (score=-1.111445): "l : P b c k l 15 P b k c l 16 ;"
I0123 21:50:35.896581 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k b c, on_pline l c b k"

I0123 21:50:35.896628 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b c, on_pline l c b k ? cong j f j e"
I0123 21:50:35.896776 139974069698560 graph.py:498] 
I0123 21:50:35.896829 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b c, on_pline l c b k ? cong j f j e
I0123 21:50:36.878573 139974069698560 ddar.py:60] Depth 1/1000 time = 0.9337952136993408
I0123 21:50:38.355061 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4763154983520508
I0123 21:50:39.571293 139974069698560 ddar.py:60] Depth 3/1000 time = 1.216062068939209
I0123 21:50:41.690402 139974069698560 ddar.py:60] Depth 4/1000 time = 2.118941307067871
I0123 21:50:43.058131 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3675522804260254
I0123 21:50:45.214063 139974069698560 ddar.py:60] Depth 6/1000 time = 2.15547776222229
I0123 21:50:47.098021 139974069698560 ddar.py:60] Depth 7/1000 time = 1.8710370063781738
I0123 21:50:48.520235 139974069698560 ddar.py:60] Depth 8/1000 time = 1.4220407009124756
I0123 21:50:50.768766 139974069698560 ddar.py:60] Depth 9/1000 time = 2.239891767501831
I0123 21:50:52.224075 139974069698560 ddar.py:60] Depth 10/1000 time = 1.450247049331665
I0123 21:50:52.225093 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:50:52.225154 139974069698560 alphageometry.py:566] LM output (score=-2.885230): "l : P b f h l 15 ;"
I0123 21:50:52.225189 139974069698560 alphageometry.py:567] Translation: "l = on_pline l h b f"

I0123 21:50:52.225227 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l h b f ? cong j f j e"
I0123 21:50:52.225359 139974069698560 graph.py:498] 
I0123 21:50:52.225409 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l h b f ? cong j f j e
I0123 21:50:53.138626 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8692986965179443
I0123 21:50:54.365829 139974069698560 ddar.py:60] Depth 2/1000 time = 1.22702956199646
I0123 21:50:55.637283 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2712998390197754
I0123 21:50:56.498712 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8612561225891113
I0123 21:50:57.759814 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2607386112213135
I0123 21:50:59.093818 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3242385387420654
I0123 21:51:00.407676 139974069698560 ddar.py:60] Depth 7/1000 time = 1.313704490661621
I0123 21:51:01.333509 139974069698560 ddar.py:60] Depth 8/1000 time = 0.922173261642456
I0123 21:51:01.334362 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:51:01.334420 139974069698560 alphageometry.py:566] LM output (score=-3.147390): "l : P b g f l 15 P b l f g 16 ;"
I0123 21:51:01.334457 139974069698560 alphageometry.py:567] Translation: "l = on_pline l f b g, on_pline l b f g"

I0123 21:51:01.334495 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l f b g, on_pline l b f g ? cong j f j e"
I0123 21:51:01.334631 139974069698560 graph.py:498] 
I0123 21:51:01.334693 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l f b g, on_pline l b f g ? cong j f j e
I0123 21:51:02.341177 139974069698560 ddar.py:60] Depth 1/1000 time = 0.9586179256439209
I0123 21:51:03.759729 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4183955192565918
I0123 21:51:05.299760 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5398681163787842
I0123 21:51:06.844426 139974069698560 ddar.py:60] Depth 4/1000 time = 1.544499158859253
I0123 21:51:08.379390 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5346238613128662
I0123 21:51:09.999835 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6090669631958008
I0123 21:51:11.603315 139974069698560 ddar.py:60] Depth 7/1000 time = 1.603287935256958
I0123 21:51:13.221536 139974069698560 ddar.py:60] Depth 8/1000 time = 1.613621473312378
I0123 21:51:13.222496 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:51:13.222552 139974069698560 alphageometry.py:566] LM output (score=-3.236027): "l : P b k c l 15 T b l c k 16 ;"
I0123 21:51:13.222586 139974069698560 alphageometry.py:567] Translation: "l = on_pline l c b k, on_tline l b c k"

I0123 21:51:13.222624 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l c b k, on_tline l b c k ? cong j f j e"
I0123 21:51:13.222769 139974069698560 graph.py:498] 
I0123 21:51:13.222823 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l c b k, on_tline l b c k ? cong j f j e
I0123 21:51:13.766207 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4967944622039795
I0123 21:51:15.079215 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3128383159637451
I0123 21:51:16.468118 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3887360095977783
I0123 21:51:17.428507 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9602246284484863
I0123 21:51:18.778831 139974069698560 ddar.py:60] Depth 5/1000 time = 1.349931001663208
I0123 21:51:20.239518 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4488015174865723
I0123 21:51:21.666440 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4267518520355225
I0123 21:51:23.116411 139974069698560 ddar.py:60] Depth 8/1000 time = 1.4453482627868652
I0123 21:51:23.117349 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:51:23.117401 139974069698560 alphageometry.py:566] LM output (score=-3.376810): "l : P b d e l 15 ;"
I0123 21:51:23.117435 139974069698560 alphageometry.py:567] Translation: "l = on_pline l e b d"

I0123 21:51:23.117470 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l e b d ? cong j f j e"
I0123 21:51:23.117601 139974069698560 graph.py:498] 
I0123 21:51:23.117652 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l e b d ? cong j f j e
I0123 21:51:23.624994 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4634859561920166
I0123 21:51:24.841863 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2167384624481201
I0123 21:51:25.681047 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8390204906463623
I0123 21:51:26.911910 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2306816577911377
I0123 21:51:28.169152 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2568397521972656
I0123 21:51:29.504966 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3262958526611328
I0123 21:51:30.395977 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8908538818359375
I0123 21:51:31.729652 139974069698560 ddar.py:60] Depth 8/1000 time = 1.329709529876709
I0123 21:51:31.730561 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:51:31.730627 139974069698560 alphageometry.py:566] LM output (score=-3.456890): "l : P b f k l 15 ;"
I0123 21:51:31.730662 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k b f"

I0123 21:51:31.730705 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b f ? cong j f j e"
I0123 21:51:31.730847 139974069698560 graph.py:498] 
I0123 21:51:31.730898 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b f ? cong j f j e
I0123 21:51:32.672973 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8986694812774658
I0123 21:51:33.484520 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8113601207733154
I0123 21:51:34.728436 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2437567710876465
I0123 21:51:35.995029 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2664124965667725
I0123 21:51:37.271087 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2756733894348145
I0123 21:51:38.612169 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3311848640441895
I0123 21:51:39.499279 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8869607448577881
I0123 21:51:40.793956 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2907590866088867
I0123 21:51:40.794832 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:51:40.794883 139974069698560 alphageometry.py:566] LM output (score=-3.518723): "l : D b d d l 15 T b d d l 16 ;"
I0123 21:51:40.794916 139974069698560 alphageometry.py:567] Translation: "l = on_circle l d b, on_tline l d b d"

I0123 21:51:40.794952 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_circle l d b, on_tline l d b d ? cong j f j e"
I0123 21:51:40.795087 139974069698560 graph.py:498] 
I0123 21:51:40.795136 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_circle l d b, on_tline l d b d ? cong j f j e
I0123 21:51:41.874943 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0278759002685547
I0123 21:51:43.036080 139974069698560 ddar.py:60] Depth 2/1000 time = 1.16096830368042
I0123 21:51:44.638296 139974069698560 ddar.py:60] Depth 3/1000 time = 1.6020405292510986
I0123 21:51:46.241801 139974069698560 ddar.py:60] Depth 4/1000 time = 1.603332757949829
I0123 21:51:47.861496 139974069698560 ddar.py:60] Depth 5/1000 time = 1.619325876235962
I0123 21:51:49.494649 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6322121620178223
I0123 21:51:51.232512 139974069698560 ddar.py:60] Depth 7/1000 time = 1.721923828125
I0123 21:51:52.922102 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6894078254699707
I0123 21:51:54.607164 139974069698560 ddar.py:60] Depth 9/1000 time = 1.6809749603271484
I0123 21:51:54.608062 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:51:54.608120 139974069698560 alphageometry.py:566] LM output (score=-3.542691): "l : P b c b l 15 T b k b l 16 ;"
I0123 21:51:54.608167 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b c b l"

I0123 21:51:54.608201 139974069698560 alphageometry.py:566] LM output (score=-3.598111): "l : P b e d l 15 ;"
I0123 21:51:54.608228 139974069698560 alphageometry.py:567] Translation: "l = on_pline l d b e"

I0123 21:51:54.608264 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l d b e ? cong j f j e"
I0123 21:51:54.608402 139974069698560 graph.py:498] 
I0123 21:51:54.608452 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l d b e ? cong j f j e
I0123 21:51:55.541872 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8894588947296143
I0123 21:51:56.365634 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8236069679260254
I0123 21:51:57.617165 139974069698560 ddar.py:60] Depth 3/1000 time = 1.251371145248413
I0123 21:51:58.880327 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2629776000976562
I0123 21:52:00.170965 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2902390956878662
I0123 21:52:01.102472 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9216456413269043
I0123 21:52:02.392065 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2894337177276611
I0123 21:52:03.703547 139974069698560 ddar.py:60] Depth 8/1000 time = 1.307746410369873
I0123 21:52:03.704395 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:52:03.704444 139974069698560 alphageometry.py:566] LM output (score=-3.642978): "l : P b f h l 15 P b h f l 16 ;"
I0123 21:52:03.704478 139974069698560 alphageometry.py:567] Translation: "l = on_pline l h b f, on_pline l f b h"

I0123 21:52:03.704514 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l h b f, on_pline l f b h ? cong j f j e"
I0123 21:52:03.704649 139974069698560 graph.py:498] 
I0123 21:52:03.704699 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l h b f, on_pline l f b h ? cong j f j e
I0123 21:52:04.753542 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0009493827819824
I0123 21:52:06.414594 139974069698560 ddar.py:60] Depth 2/1000 time = 1.6608757972717285
I0123 21:52:08.206821 139974069698560 ddar.py:60] Depth 3/1000 time = 1.7920539379119873
I0123 21:52:09.556693 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3496367931365967
I0123 21:52:11.769513 139974069698560 ddar.py:60] Depth 5/1000 time = 2.2122552394866943
I0123 21:52:13.643970 139974069698560 ddar.py:60] Depth 6/1000 time = 1.8621177673339844
I0123 21:52:15.018553 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3744089603424072
I0123 21:52:17.264543 139974069698560 ddar.py:60] Depth 8/1000 time = 2.2394473552703857
I0123 21:52:17.265545 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:52:17.265595 139974069698560 alphageometry.py:566] LM output (score=-3.644917): "l : P b f d l 15 ;"
I0123 21:52:17.265628 139974069698560 alphageometry.py:567] Translation: "l = on_pline l d b f"

I0123 21:52:17.265680 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l d b f ? cong j f j e"
I0123 21:52:17.265823 139974069698560 graph.py:498] 
I0123 21:52:17.265885 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l d b f ? cong j f j e
I0123 21:52:17.791484 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4817624092102051
I0123 21:52:19.046446 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2548294067382812
I0123 21:52:19.901117 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8545176982879639
I0123 21:52:21.181566 139974069698560 ddar.py:60] Depth 4/1000 time = 1.280290126800537
I0123 21:52:22.478577 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2966318130493164
I0123 21:52:23.838805 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3504302501678467
I0123 21:52:24.732493 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8935158252716064
I0123 21:52:26.074972 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3385100364685059
I0123 21:52:26.075852 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:52:26.075910 139974069698560 alphageometry.py:566] LM output (score=-3.688323): "l : P b f k l 15 P b k f l 16 ;"
I0123 21:52:26.075943 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k b f, on_pline l f b k"

I0123 21:52:26.075980 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b f, on_pline l f b k ? cong j f j e"
I0123 21:52:26.076121 139974069698560 graph.py:498] 
I0123 21:52:26.076167 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b f, on_pline l f b k ? cong j f j e
I0123 21:52:26.633659 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5094859600067139
I0123 21:52:27.988030 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3541812896728516
I0123 21:52:29.583132 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5948150157928467
I0123 21:52:31.246061 139974069698560 ddar.py:60] Depth 4/1000 time = 1.6627488136291504
I0123 21:52:32.933203 139974069698560 ddar.py:60] Depth 5/1000 time = 1.6866967678070068
I0123 21:52:34.722643 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7784769535064697
I0123 21:52:36.459792 139974069698560 ddar.py:60] Depth 7/1000 time = 1.7369859218597412
I0123 21:52:38.212285 139974069698560 ddar.py:60] Depth 8/1000 time = 1.7458767890930176
I0123 21:52:38.215044 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:52:38.215098 139974069698560 alphageometry.py:566] LM output (score=-3.694043): "l : P b k k l 15 ;"
I0123 21:52:38.215132 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b k k l"

I0123 21:52:38.215165 139974069698560 alphageometry.py:566] LM output (score=-3.766649): "l : P b c k l 15 T b l c k 16 ;"
I0123 21:52:38.215192 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k b c, on_tline l b c k"

I0123 21:52:38.215222 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b c, on_tline l b c k ? cong j f j e"
I0123 21:52:38.215374 139974069698560 graph.py:498] 
I0123 21:52:38.215426 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b c, on_tline l b c k ? cong j f j e
I0123 21:52:38.752165 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4888794422149658
I0123 21:52:40.090805 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3384950160980225
I0123 21:52:41.486165 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3951947689056396
I0123 21:52:42.445586 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9592568874359131
I0123 21:52:43.819226 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3732614517211914
I0123 21:52:45.286173 139974069698560 ddar.py:60] Depth 6/1000 time = 1.455690860748291
I0123 21:52:46.727946 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4415929317474365
I0123 21:52:47.731204 139974069698560 ddar.py:60] Depth 8/1000 time = 0.9985883235931396
I0123 21:52:47.732254 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:52:47.732332 139974069698560 alphageometry.py:566] LM output (score=-3.795905): "l : P b f g l 15 ;"
I0123 21:52:47.732365 139974069698560 alphageometry.py:567] Translation: "l = on_pline l g b f"

I0123 21:52:47.732417 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l g b f ? cong j f j e"
I0123 21:52:47.732569 139974069698560 graph.py:498] 
I0123 21:52:47.732620 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l g b f ? cong j f j e
I0123 21:52:48.710362 139974069698560 ddar.py:60] Depth 1/1000 time = 0.9334516525268555
I0123 21:52:49.989870 139974069698560 ddar.py:60] Depth 2/1000 time = 1.279334306716919
I0123 21:52:50.839326 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8492832183837891
I0123 21:52:52.115631 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2761328220367432
I0123 21:52:53.404986 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2889642715454102
I0123 21:52:54.335863 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9209282398223877
I0123 21:52:55.642380 139974069698560 ddar.py:60] Depth 7/1000 time = 1.306349515914917
I0123 21:52:56.985160 139974069698560 ddar.py:60] Depth 8/1000 time = 1.339059829711914
I0123 21:52:56.986035 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:52:56.986089 139974069698560 alphageometry.py:566] LM output (score=-3.801837): "l : P b k k l 15 T b c b l 16 ;"
I0123 21:52:56.986123 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b k k l"

I0123 21:52:56.986156 139974069698560 alphageometry.py:566] LM output (score=-3.839909): "l : P b f f l 15 T d f f l 16 ;"
I0123 21:52:56.986184 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b f f l"

I0123 21:52:56.986211 139974069698560 alphageometry.py:566] LM output (score=-3.870464): "l : P b d k l 15 P b k d l 16 ;"
I0123 21:52:56.986237 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k b d, on_pline l d b k"

I0123 21:52:56.986266 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b d, on_pline l d b k ? cong j f j e"
I0123 21:52:56.986402 139974069698560 graph.py:498] 
I0123 21:52:56.986449 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b d, on_pline l d b k ? cong j f j e
I0123 21:52:57.522942 139974069698560 ddar.py:60] Depth 1/1000 time = 0.48975229263305664
I0123 21:52:58.845653 139974069698560 ddar.py:60] Depth 2/1000 time = 1.322561264038086
I0123 21:53:00.417813 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5719943046569824
I0123 21:53:02.063458 139974069698560 ddar.py:60] Depth 4/1000 time = 1.645477056503296
I0123 21:53:03.723484 139974069698560 ddar.py:60] Depth 5/1000 time = 1.659846544265747
I0123 21:53:05.432441 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7085399627685547
I0123 21:53:07.229336 139974069698560 ddar.py:60] Depth 7/1000 time = 1.78556489944458
I0123 21:53:08.521966 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2924315929412842
I0123 21:53:10.263799 139974069698560 ddar.py:60] Depth 9/1000 time = 1.7359280586242676
I0123 21:53:11.997841 139974069698560 ddar.py:60] Depth 10/1000 time = 1.7300679683685303
I0123 21:53:11.998841 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:53:11.998893 139974069698560 alphageometry.py:566] LM output (score=-3.883857): "l : P b d g l 15 ;"
I0123 21:53:11.998927 139974069698560 alphageometry.py:567] Translation: "l = on_pline l g b d"

I0123 21:53:11.998977 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l g b d ? cong j f j e"
I0123 21:53:11.999119 139974069698560 graph.py:498] 
I0123 21:53:11.999171 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l g b d ? cong j f j e
I0123 21:53:12.947908 139974069698560 ddar.py:60] Depth 1/1000 time = 0.9047200679779053
I0123 21:53:13.759790 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8117256164550781
I0123 21:53:15.028336 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2683789730072021
I0123 21:53:16.317645 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2891051769256592
I0123 21:53:17.156915 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8388607501983643
I0123 21:53:18.490320 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3237426280975342
I0123 21:53:19.818016 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3275132179260254
I0123 21:53:21.174026 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3523297309875488
I0123 21:53:21.174900 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:53:21.174956 139974069698560 alphageometry.py:566] LM output (score=-3.895297): "l : P b k f l 15 ;"
I0123 21:53:21.174991 139974069698560 alphageometry.py:567] Translation: "l = on_pline l f b k"

I0123 21:53:21.175029 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l f b k ? cong j f j e"
I0123 21:53:21.175162 139974069698560 graph.py:498] 
I0123 21:53:21.175214 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l f b k ? cong j f j e
I0123 21:53:21.681074 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4627699851989746
I0123 21:53:22.921441 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2402029037475586
I0123 21:53:23.775932 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8543226718902588
I0123 21:53:25.102886 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3267266750335693
I0123 21:53:26.429759 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3263664245605469
I0123 21:53:27.356829 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9176206588745117
I0123 21:53:28.701914 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3448905944824219
I0123 21:53:30.063587 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3576815128326416
I0123 21:53:30.064453 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:53:30.064536 139974069698560 alphageometry.py:566] LM output (score=-3.952759): "l : P b d k l 15 ;"
I0123 21:53:30.064573 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k b d"

I0123 21:53:30.064619 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b d ? cong j f j e"
I0123 21:53:30.064757 139974069698560 graph.py:498] 
I0123 21:53:30.064811 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b d ? cong j f j e
I0123 21:53:30.571415 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4629404544830322
I0123 21:53:31.826070 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2545082569122314
I0123 21:53:32.665904 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8396704196929932
I0123 21:53:33.943420 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2773427963256836
I0123 21:53:35.225048 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2812230587005615
I0123 21:53:36.136925 139974069698560 ddar.py:60] Depth 6/1000 time = 0.902172327041626
I0123 21:53:37.452271 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3151605129241943
I0123 21:53:38.791377 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3353915214538574
I0123 21:53:38.792248 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:53:38.792305 139974069698560 alphageometry.py:566] LM output (score=-4.049827): "l : P b c b l 15 T b k c l 16 ;"
I0123 21:53:38.792340 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b c b l"

I0123 21:53:38.792376 139974069698560 alphageometry.py:566] LM output (score=-4.080253): "l : P b c d l 15 ;"
I0123 21:53:38.792404 139974069698560 alphageometry.py:567] Translation: "l = on_pline l d b c"

I0123 21:53:38.792436 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l d b c ? cong j f j e"
I0123 21:53:38.792569 139974069698560 graph.py:498] 
I0123 21:53:38.792621 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l d b c ? cong j f j e
I0123 21:53:39.299614 139974069698560 ddar.py:60] Depth 1/1000 time = 0.46379685401916504
I0123 21:53:40.577292 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2775275707244873
I0123 21:53:41.889687 139974069698560 ddar.py:60] Depth 3/1000 time = 1.312215805053711
I0123 21:53:42.755563 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8656888008117676
I0123 21:53:44.090032 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3340272903442383
I0123 21:53:45.503592 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4042367935180664
I0123 21:53:46.398446 139974069698560 ddar.py:60] Depth 7/1000 time = 0.894650936126709
I0123 21:53:47.759716 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3575596809387207
I0123 21:53:47.760615 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:53:47.760674 139974069698560 alphageometry.py:566] LM output (score=-4.117018): "l : P b f f l 15 T d g f l 16 ;"
I0123 21:53:47.760710 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b f f l"

I0123 21:53:47.760746 139974069698560 alphageometry.py:566] LM output (score=-4.134188): "l : P b d e l 15 P b e d l 16 ;"
I0123 21:53:47.760774 139974069698560 alphageometry.py:567] Translation: "l = on_pline l e b d, on_pline l d b e"

I0123 21:53:47.760832 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l e b d, on_pline l d b e ? cong j f j e"
I0123 21:53:47.760983 139974069698560 graph.py:498] 
I0123 21:53:47.761038 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l e b d, on_pline l d b e ? cong j f j e
I0123 21:53:48.351333 139974069698560 ddar.py:60] Depth 1/1000 time = 0.54305100440979
I0123 21:53:50.006920 139974069698560 ddar.py:60] Depth 2/1000 time = 1.6554183959960938
I0123 21:53:51.776966 139974069698560 ddar.py:60] Depth 3/1000 time = 1.7698643207550049
I0123 21:53:53.579701 139974069698560 ddar.py:60] Depth 4/1000 time = 1.802553415298462
I0123 21:53:55.390521 139974069698560 ddar.py:60] Depth 5/1000 time = 1.810366153717041
I0123 21:53:57.309674 139974069698560 ddar.py:60] Depth 6/1000 time = 1.9072222709655762
I0123 21:53:59.202604 139974069698560 ddar.py:60] Depth 7/1000 time = 1.8927485942840576
I0123 21:54:01.128364 139974069698560 ddar.py:60] Depth 8/1000 time = 1.9202945232391357
I0123 21:54:01.129351 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:54:01.129418 139974069698560 alphageometry.py:566] LM output (score=-4.140168): "l : P b g f l 15 P b l c d 16 ;"
I0123 21:54:01.129454 139974069698560 alphageometry.py:567] Translation: "l = on_pline l f b g, on_pline l b c d"

I0123 21:54:01.129493 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l f b g, on_pline l b c d ? cong j f j e"
I0123 21:54:01.129636 139974069698560 graph.py:498] 
I0123 21:54:01.129700 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l f b g, on_pline l b c d ? cong j f j e
I0123 21:54:01.748484 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5713539123535156
I0123 21:54:03.231131 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4824373722076416
I0123 21:54:04.933304 139974069698560 ddar.py:60] Depth 3/1000 time = 1.7018842697143555
I0123 21:54:06.160221 139974069698560 ddar.py:60] Depth 4/1000 time = 1.226710557937622
I0123 21:54:07.835188 139974069698560 ddar.py:60] Depth 5/1000 time = 1.674574375152588
I0123 21:54:09.600627 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7541840076446533
I0123 21:54:11.321603 139974069698560 ddar.py:60] Depth 7/1000 time = 1.7208025455474854
I0123 21:54:13.079631 139974069698560 ddar.py:60] Depth 8/1000 time = 1.750795602798462
I0123 21:54:13.080621 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:54:13.080680 139974069698560 alphageometry.py:566] LM output (score=-4.143037): "l : P b f f l 15 T c d f l 16 ;"
I0123 21:54:13.080717 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b f f l"

I0123 21:54:13.080754 139974069698560 alphageometry.py:566] LM output (score=-4.148277): "l : P b e c l 15 ;"
I0123 21:54:13.080782 139974069698560 alphageometry.py:567] Translation: "l = on_pline l c b e"

I0123 21:54:13.080813 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l c b e ? cong j f j e"
I0123 21:54:13.080954 139974069698560 graph.py:498] 
I0123 21:54:13.081010 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l c b e ? cong j f j e
I0123 21:54:14.065671 139974069698560 ddar.py:60] Depth 1/1000 time = 0.9405226707458496
I0123 21:54:14.893941 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8280849456787109
I0123 21:54:16.207924 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3138093948364258
I0123 21:54:17.533031 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3249249458312988
I0123 21:54:18.396584 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8631525039672852
I0123 21:54:19.789241 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3827261924743652
I0123 21:54:21.191187 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4017586708068848
I0123 21:54:22.104247 139974069698560 ddar.py:60] Depth 8/1000 time = 0.9093079566955566
I0123 21:54:22.105228 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:54:22.105310 139974069698560 alphageometry.py:566] LM output (score=-4.198276): "l : P b g k l 15 P b k g l 16 ;"
I0123 21:54:22.105348 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k b g, on_pline l g b k"

I0123 21:54:22.105399 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b g, on_pline l g b k ? cong j f j e"
I0123 21:54:22.105550 139974069698560 graph.py:498] 
I0123 21:54:22.105604 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l k b g, on_pline l g b k ? cong j f j e
I0123 21:54:23.161871 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0090203285217285
I0123 21:54:24.146117 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9840426445007324
I0123 21:54:25.643866 139974069698560 ddar.py:60] Depth 3/1000 time = 1.497544288635254
I0123 21:54:27.143762 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4997227191925049
I0123 21:54:28.665747 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5215697288513184
I0123 21:54:29.802989 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1256787776947021
I0123 21:54:31.336645 139974069698560 ddar.py:60] Depth 7/1000 time = 1.533473014831543
I0123 21:54:32.899755 139974069698560 ddar.py:60] Depth 8/1000 time = 1.558898687362671
I0123 21:54:32.900718 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:54:32.900776 139974069698560 alphageometry.py:566] LM output (score=-4.232800): "l : P b f h l 15 T b k b l 16 ;"
I0123 21:54:32.900812 139974069698560 alphageometry.py:567] Translation: "l = on_pline l h b f, on_tline l b b k"

I0123 21:54:32.900848 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l h b f, on_tline l b b k ? cong j f j e"
I0123 21:54:32.900982 139974069698560 graph.py:498] 
I0123 21:54:32.901033 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k b b c; l = on_pline l h b f, on_tline l b b k ? cong j f j e
I0123 21:54:33.936365 139974069698560 ddar.py:60] Depth 1/1000 time = 0.990060567855835
I0123 21:54:35.387752 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4512195587158203
I0123 21:54:36.401681 139974069698560 ddar.py:60] Depth 3/1000 time = 1.013744831085205
I0123 21:54:37.860799 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4589192867279053
I0123 21:54:39.342897 139974069698560 ddar.py:60] Depth 5/1000 time = 1.481698751449585
I0123 21:54:40.914659 139974069698560 ddar.py:60] Depth 6/1000 time = 1.561326265335083
I0123 21:54:42.446790 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5318489074707031
I0123 21:54:44.432867 139974069698560 ddar.py:60] Depth 8/1000 time = 1.9823832511901855
I0123 21:54:44.433766 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:54:44.433833 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D a k b k 14 ; x00
I0123 21:54:49.944424 139974069698560 alphageometry.py:566] LM output (score=-1.407276): "l : T b c c l 15 ;"
I0123 21:54:49.944593 139974069698560 alphageometry.py:567] Translation: "l = on_tline l c b c"

I0123 21:54:49.944642 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l c b c ? cong j f j e"
I0123 21:54:49.944774 139974069698560 graph.py:498] 
I0123 21:54:49.944828 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l c b c ? cong j f j e
I0123 21:54:50.520798 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5215985774993896
I0123 21:54:51.405999 139974069698560 ddar.py:60] Depth 2/1000 time = 0.885042667388916
I0123 21:54:52.847801 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4416353702545166
I0123 21:54:54.305240 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4572536945343018
I0123 21:54:55.781895 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4762821197509766
I0123 21:54:56.878310 139974069698560 ddar.py:60] Depth 6/1000 time = 1.081693172454834
I0123 21:54:58.396417 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5179414749145508
I0123 21:54:59.940634 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5402393341064453
I0123 21:54:59.941545 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:54:59.941600 139974069698560 alphageometry.py:566] LM output (score=-1.459450): "l : T b c b l 15 ;"
I0123 21:54:59.941633 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b b c"

I0123 21:54:59.941677 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l b b c ? cong j f j e"
I0123 21:54:59.941804 139974069698560 graph.py:498] 
I0123 21:54:59.941854 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l b b c ? cong j f j e
I0123 21:55:00.509037 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5154263973236084
I0123 21:55:01.880641 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3714580535888672
I0123 21:55:02.881894 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0010852813720703
I0123 21:55:04.340669 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4585964679718018
I0123 21:55:05.808055 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4670374393463135
I0123 21:55:07.388136 139974069698560 ddar.py:60] Depth 6/1000 time = 1.565161943435669
I0123 21:55:08.449252 139974069698560 ddar.py:60] Depth 7/1000 time = 1.060926914215088
I0123 21:55:09.975468 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5220470428466797
I0123 21:55:09.976382 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:55:09.976458 139974069698560 alphageometry.py:566] LM output (score=-1.606617): "l : T b c d l 15 ;"
I0123 21:55:09.976495 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d b c"

I0123 21:55:09.976532 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l d b c ? cong j f j e"
I0123 21:55:09.976663 139974069698560 graph.py:498] 
I0123 21:55:09.976712 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l d b c ? cong j f j e
I0123 21:55:10.546828 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5173661708831787
I0123 21:55:11.899305 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3523190021514893
I0123 21:55:13.401939 139974069698560 ddar.py:60] Depth 3/1000 time = 1.502465009689331
I0123 21:55:14.527718 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1255970001220703
I0123 21:55:16.108726 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5808289051055908
I0123 21:55:17.743357 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6342787742614746
I0123 21:55:19.518390 139974069698560 ddar.py:60] Depth 7/1000 time = 1.7594473361968994
I0123 21:55:20.724056 139974069698560 ddar.py:60] Depth 8/1000 time = 1.205458402633667
I0123 21:55:22.398879 139974069698560 ddar.py:60] Depth 9/1000 time = 1.6707453727722168
I0123 21:55:24.104681 139974069698560 ddar.py:60] Depth 10/1000 time = 1.7024216651916504
I0123 21:55:24.105646 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:55:24.105705 139974069698560 alphageometry.py:566] LM output (score=-1.611009): "l : T b c h l 15 ;"
I0123 21:55:24.105740 139974069698560 alphageometry.py:567] Translation: "l = on_tline l h b c"

I0123 21:55:24.105789 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l h b c ? cong j f j e"
I0123 21:55:24.105936 139974069698560 graph.py:498] 
I0123 21:55:24.105991 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l h b c ? cong j f j e
I0123 21:55:24.676067 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5165412425994873
I0123 21:55:26.038967 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3627433776855469
I0123 21:55:27.522712 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4835574626922607
I0123 21:55:28.515126 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9922256469726562
I0123 21:55:29.943218 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4277315139770508
I0123 21:55:31.525321 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5673272609710693
I0123 21:55:32.596776 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0713000297546387
I0123 21:55:34.127859 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5270440578460693
I0123 21:55:34.128761 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:55:34.128810 139974069698560 alphageometry.py:566] LM output (score=-1.801630): "l : T c e e l 15 ;"
I0123 21:55:34.128843 139974069698560 alphageometry.py:567] Translation: "l = on_tline l e c e"

I0123 21:55:34.128879 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l e c e ? cong j f j e"
I0123 21:55:34.129027 139974069698560 graph.py:498] 
I0123 21:55:34.129075 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l e c e ? cong j f j e
I0123 21:55:35.182635 139974069698560 ddar.py:60] Depth 1/1000 time = 0.9947967529296875
I0123 21:55:36.073278 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8904843330383301
I0123 21:55:37.517488 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4440391063690186
I0123 21:55:38.965816 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4481446743011475
I0123 21:55:39.918489 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9523231983184814
I0123 21:55:41.487550 139974069698560 ddar.py:60] Depth 6/1000 time = 1.554009199142456
I0123 21:55:42.993146 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5054302215576172
I0123 21:55:44.051640 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0545330047607422
I0123 21:55:44.052530 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:55:44.052577 139974069698560 alphageometry.py:566] LM output (score=-2.042055): "l : C b c l 15 T b c d l 16 ;"
I0123 21:55:44.052610 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l d b c"

I0123 21:55:44.052645 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b c, on_tline l d b c ? cong j f j e"
I0123 21:55:44.052779 139974069698560 graph.py:498] 
I0123 21:55:44.052826 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b c, on_tline l d b c ? cong j f j e
I0123 21:55:45.153317 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0455458164215088
I0123 21:55:46.735173 139974069698560 ddar.py:60] Depth 2/1000 time = 1.5816967487335205
I0123 21:55:48.484947 139974069698560 ddar.py:60] Depth 3/1000 time = 1.74961256980896
I0123 21:55:49.745656 139974069698560 ddar.py:60] Depth 4/1000 time = 1.260530710220337
I0123 21:55:51.474192 139974069698560 ddar.py:60] Depth 5/1000 time = 1.7283661365509033
I0123 21:55:53.250393 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7758135795593262
I0123 21:55:55.600550 139974069698560 ddar.py:60] Depth 7/1000 time = 2.3348617553710938
I0123 21:55:56.937391 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3366584777832031
I0123 21:55:58.767069 139974069698560 ddar.py:60] Depth 9/1000 time = 1.8244075775146484
I0123 21:55:58.769074 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:55:58.769135 139974069698560 alphageometry.py:566] LM output (score=-2.071263): "l : C b c l 15 T b c k l 16 ;"
I0123 21:55:58.769168 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l k b c"

I0123 21:55:58.769206 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b c, on_tline l k b c ? cong j f j e"
I0123 21:55:58.769349 139974069698560 graph.py:498] 
I0123 21:55:58.769401 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b c, on_tline l k b c ? cong j f j e
I0123 21:55:59.864792 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0416157245635986
I0123 21:56:01.399710 139974069698560 ddar.py:60] Depth 2/1000 time = 1.534749984741211
I0123 21:56:03.065721 139974069698560 ddar.py:60] Depth 3/1000 time = 1.6658246517181396
I0123 21:56:04.737720 139974069698560 ddar.py:60] Depth 4/1000 time = 1.6718213558197021
I0123 21:56:05.902317 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1642470359802246
I0123 21:56:07.636180 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7184767723083496
I0123 21:56:09.339466 139974069698560 ddar.py:60] Depth 7/1000 time = 1.703101396560669
I0123 21:56:11.573898 139974069698560 ddar.py:60] Depth 8/1000 time = 2.230450391769409
I0123 21:56:11.574833 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:56:11.574895 139974069698560 alphageometry.py:566] LM output (score=-2.107986): "l : T d k d l 15 ;"
I0123 21:56:11.574929 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d d k"

I0123 21:56:11.574971 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l d d k ? cong j f j e"
I0123 21:56:11.575111 139974069698560 graph.py:498] 
I0123 21:56:11.575160 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l d d k ? cong j f j e
I0123 21:56:12.143515 139974069698560 ddar.py:60] Depth 1/1000 time = 0.515500545501709
I0123 21:56:13.058776 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9150729179382324
I0123 21:56:14.515144 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4560801982879639
I0123 21:56:15.978339 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4629895687103271
I0123 21:56:16.935890 139974069698560 ddar.py:60] Depth 5/1000 time = 0.957183837890625
I0123 21:56:18.446636 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4988434314727783
I0123 21:56:19.962693 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5158865451812744
I0123 21:56:20.968350 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0017387866973877
I0123 21:56:20.969229 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:56:20.969279 139974069698560 alphageometry.py:566] LM output (score=-2.120047): "l : T d g d l 15 ;"
I0123 21:56:20.969312 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d d g"

I0123 21:56:20.969347 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l d d g ? cong j f j e"
I0123 21:56:20.969487 139974069698560 graph.py:498] 
I0123 21:56:20.969537 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l d d g ? cong j f j e
I0123 21:56:22.032306 139974069698560 ddar.py:60] Depth 1/1000 time = 1.009045124053955
I0123 21:56:22.930157 139974069698560 ddar.py:60] Depth 2/1000 time = 0.897695779800415
I0123 21:56:24.390350 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4600281715393066
I0123 21:56:25.359443 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9689235687255859
I0123 21:56:26.800169 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4403831958770752
I0123 21:56:28.411938 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5969007015228271
I0123 21:56:29.473176 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0610761642456055
I0123 21:56:31.061432 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5843043327331543
I0123 21:56:31.062342 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:56:31.062392 139974069698560 alphageometry.py:566] LM output (score=-2.219777): "l : C b c l 15 D b l c l 16 ;"
I0123 21:56:31.062442 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 21:56:31.062480 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b c, on_bline l c b ? cong j f j e"
I0123 21:56:31.062614 139974069698560 graph.py:498] 
I0123 21:56:31.062660 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b c, on_bline l c b ? cong j f j e
I0123 21:56:32.268820 139974069698560 ddar.py:60] Depth 1/1000 time = 1.1402668952941895
I0123 21:56:33.425221 139974069698560 ddar.py:60] Depth 2/1000 time = 1.1562182903289795
I0123 21:56:35.185603 139974069698560 ddar.py:60] Depth 3/1000 time = 1.7601828575134277
I0123 21:56:36.924827 139974069698560 ddar.py:60] Depth 4/1000 time = 1.7390406131744385
I0123 21:56:39.183899 139974069698560 ddar.py:60] Depth 5/1000 time = 2.2586605548858643
I0123 21:56:40.571344 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3718183040618896
I0123 21:56:42.402897 139974069698560 ddar.py:60] Depth 7/1000 time = 1.8313822746276855
I0123 21:56:44.228195 139974069698560 ddar.py:60] Depth 8/1000 time = 1.8201959133148193
I0123 21:56:44.229234 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:56:44.229298 139974069698560 alphageometry.py:566] LM output (score=-2.226872): "l : T b c k l 15 ;"
I0123 21:56:44.229334 139974069698560 alphageometry.py:567] Translation: "l = on_tline l k b c"

I0123 21:56:44.229372 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l k b c ? cong j f j e"
I0123 21:56:44.229520 139974069698560 graph.py:498] 
I0123 21:56:44.229573 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l k b c ? cong j f j e
I0123 21:56:45.291115 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0078017711639404
I0123 21:56:46.181967 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8906807899475098
I0123 21:56:47.640786 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4586455821990967
I0123 21:56:49.140387 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4994349479675293
I0123 21:56:50.131414 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9906778335571289
I0123 21:56:51.732491 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5859792232513428
I0123 21:56:53.316814 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5841007232666016
I0123 21:56:54.910445 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5896341800689697
I0123 21:56:54.911343 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:56:54.911402 139974069698560 alphageometry.py:566] LM output (score=-2.227217): "l : T b c d l 15 T b l c d 16 ;"
I0123 21:56:54.911436 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d b c, on_tline l b c d"

I0123 21:56:54.911475 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l d b c, on_tline l b c d ? cong j f j e"
I0123 21:56:54.911625 139974069698560 graph.py:498] 
I0123 21:56:54.911675 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l d b c, on_tline l b c d ? cong j f j e
I0123 21:56:55.516034 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5482509136199951
I0123 21:56:56.524502 139974069698560 ddar.py:60] Depth 2/1000 time = 1.0083248615264893
I0123 21:56:58.224451 139974069698560 ddar.py:60] Depth 3/1000 time = 1.6997814178466797
I0123 21:57:00.144743 139974069698560 ddar.py:60] Depth 4/1000 time = 1.9201109409332275
I0123 21:57:02.071090 139974069698560 ddar.py:60] Depth 5/1000 time = 1.9259817600250244
I0123 21:57:04.135871 139974069698560 ddar.py:60] Depth 6/1000 time = 2.0436997413635254
I0123 21:57:06.175548 139974069698560 ddar.py:60] Depth 7/1000 time = 2.039508104324341
I0123 21:57:08.228175 139974069698560 ddar.py:60] Depth 8/1000 time = 2.0467429161071777
I0123 21:57:08.231374 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:57:08.231448 139974069698560 alphageometry.py:566] LM output (score=-2.231452): "l : C b f l 15 P b e b l 16 ;"
I0123 21:57:08.231485 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b e b l"

I0123 21:57:08.231523 139974069698560 alphageometry.py:566] LM output (score=-2.319504): "l : T c g g l 15 ;"
I0123 21:57:08.231551 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g c g"

I0123 21:57:08.231581 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l g c g ? cong j f j e"
I0123 21:57:08.231721 139974069698560 graph.py:498] 
I0123 21:57:08.231769 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l g c g ? cong j f j e
I0123 21:57:08.801258 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5160396099090576
I0123 21:57:10.261839 139974069698560 ddar.py:60] Depth 2/1000 time = 1.460425853729248
I0123 21:57:11.213717 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9516737461090088
I0123 21:57:12.712688 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4987766742706299
I0123 21:57:13.675752 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9626893997192383
I0123 21:57:15.285232 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5941441059112549
I0123 21:57:16.867100 139974069698560 ddar.py:60] Depth 7/1000 time = 1.581695795059204
I0123 21:57:17.930069 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0590476989746094
I0123 21:57:17.930983 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:57:17.931035 139974069698560 alphageometry.py:566] LM output (score=-2.328537): "l : T f i f l 15 ;"
I0123 21:57:17.931069 139974069698560 alphageometry.py:567] Translation: "l = on_tline l f f i"

I0123 21:57:17.931118 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l f f i ? cong j f j e"
I0123 21:57:17.931259 139974069698560 graph.py:498] 
I0123 21:57:17.931311 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l f f i ? cong j f j e
I0123 21:57:19.005303 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0203814506530762
I0123 21:57:19.904330 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8988616466522217
I0123 21:57:21.420036 139974069698560 ddar.py:60] Depth 3/1000 time = 1.515537977218628
I0123 21:57:22.417027 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9968061447143555
I0123 21:57:23.903680 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4862711429595947
I0123 21:57:25.525060 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6062064170837402
I0123 21:57:27.089345 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5641157627105713
I0123 21:57:28.161463 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0679352283477783
I0123 21:57:28.162379 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:57:28.162440 139974069698560 alphageometry.py:566] LM output (score=-2.357801): "l : T e i e l 15 ;"
I0123 21:57:28.162474 139974069698560 alphageometry.py:567] Translation: "l = on_tline l e e i"

I0123 21:57:28.162510 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l e e i ? cong j f j e"
I0123 21:57:28.162653 139974069698560 graph.py:498] 
I0123 21:57:28.162703 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l e e i ? cong j f j e
I0123 21:57:29.280688 139974069698560 ddar.py:60] Depth 1/1000 time = 1.06577730178833
I0123 21:57:30.183637 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9027764797210693
I0123 21:57:31.667953 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4841341972351074
I0123 21:57:32.612063 139974069698560 ddar.py:60] Depth 4/1000 time = 0.943925142288208
I0123 21:57:34.065917 139974069698560 ddar.py:60] Depth 5/1000 time = 1.453486442565918
I0123 21:57:35.642956 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5640370845794678
I0123 21:57:36.651369 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0082566738128662
I0123 21:57:38.187869 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5325140953063965
I0123 21:57:38.188769 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:57:38.188820 139974069698560 alphageometry.py:566] LM output (score=-2.478485): "l : C b f l 15 P b e f l 16 ;"
I0123 21:57:38.188853 139974069698560 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2570, in add_clause
    raise DepCheckFailError(
graph.DepCheckFailError: ncoll f b e
"

I0123 21:57:38.188887 139974069698560 alphageometry.py:566] LM output (score=-2.479635): "l : T b c c l 15 T d k d l 16 ;"
I0123 21:57:38.188915 139974069698560 alphageometry.py:567] Translation: "l = on_tline l c b c, on_tline l d d k"

I0123 21:57:38.188956 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l c b c, on_tline l d d k ? cong j f j e"
I0123 21:57:38.189100 139974069698560 graph.py:498] 
I0123 21:57:38.189152 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l c b c, on_tline l d d k ? cong j f j e
I0123 21:57:38.809024 139974069698560 ddar.py:60] Depth 1/1000 time = 0.562542200088501
I0123 21:57:40.370833 139974069698560 ddar.py:60] Depth 2/1000 time = 1.5616657733917236
I0123 21:57:41.453901 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0829079151153564
I0123 21:57:43.070958 139974069698560 ddar.py:60] Depth 4/1000 time = 1.6168813705444336
I0123 21:57:44.827043 139974069698560 ddar.py:60] Depth 5/1000 time = 1.755915641784668
I0123 21:57:46.625462 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7982327938079834
I0123 21:57:47.877625 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2517173290252686
I0123 21:57:49.814473 139974069698560 ddar.py:60] Depth 8/1000 time = 1.9186325073242188
I0123 21:57:51.680088 139974069698560 ddar.py:60] Depth 9/1000 time = 1.865424633026123
I0123 21:57:53.566648 139974069698560 ddar.py:60] Depth 10/1000 time = 1.8825666904449463
I0123 21:57:55.468422 139974069698560 ddar.py:60] Depth 11/1000 time = 1.8979010581970215
I0123 21:57:55.469325 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:57:55.469383 139974069698560 alphageometry.py:566] LM output (score=-2.595602): "l : C b h l 15 D b l h l 16 ;"
I0123 21:57:55.469416 139974069698560 alphageometry.py:567] Translation: "l = on_line l b h, on_bline l h b"

I0123 21:57:55.469456 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b h, on_bline l h b ? cong j f j e"
I0123 21:57:55.469593 139974069698560 graph.py:498] 
I0123 21:57:55.469649 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b h, on_bline l h b ? cong j f j e
I0123 21:57:56.139258 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6037516593933105
I0123 21:57:57.747538 139974069698560 ddar.py:60] Depth 2/1000 time = 1.6081273555755615
I0123 21:57:58.880391 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1326837539672852
I0123 21:58:00.542053 139974069698560 ddar.py:60] Depth 4/1000 time = 1.6614794731140137
I0123 21:58:02.224542 139974069698560 ddar.py:60] Depth 5/1000 time = 1.682063102722168
I0123 21:58:04.009724 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7709269523620605
I0123 21:58:05.233175 139974069698560 ddar.py:60] Depth 7/1000 time = 1.223268985748291
I0123 21:58:06.997810 139974069698560 ddar.py:60] Depth 8/1000 time = 1.757565975189209
I0123 21:58:06.999056 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:58:06.999130 139974069698560 alphageometry.py:566] LM output (score=-2.602098): "l : C b f l 15 P d k g l 16 ;"
I0123 21:58:06.999164 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_pline l g d k"

I0123 21:58:06.999212 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b f, on_pline l g d k ? cong j f j e"
I0123 21:58:06.999364 139974069698560 graph.py:498] 
I0123 21:58:06.999416 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b f, on_pline l g d k ? cong j f j e
I0123 21:58:08.288161 139974069698560 ddar.py:60] Depth 1/1000 time = 1.2331311702728271
I0123 21:58:09.927405 139974069698560 ddar.py:60] Depth 2/1000 time = 1.6390767097473145
I0123 21:58:11.629450 139974069698560 ddar.py:60] Depth 3/1000 time = 1.7018821239471436
I0123 21:58:13.364959 139974069698560 ddar.py:60] Depth 4/1000 time = 1.7353215217590332
I0123 21:58:15.091512 139974069698560 ddar.py:60] Depth 5/1000 time = 1.7261853218078613
I0123 21:58:16.920478 139974069698560 ddar.py:60] Depth 6/1000 time = 1.8168165683746338
I0123 21:58:18.703945 139974069698560 ddar.py:60] Depth 7/1000 time = 1.7833030223846436
I0123 21:58:20.484748 139974069698560 ddar.py:60] Depth 8/1000 time = 1.776834487915039
I0123 21:58:20.485678 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:58:20.485744 139974069698560 alphageometry.py:566] LM output (score=-2.616279): "l : C b c l 15 T b c g l 16 ;"
I0123 21:58:20.485799 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l g b c"

I0123 21:58:20.485839 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b c, on_tline l g b c ? cong j f j e"
I0123 21:58:20.485978 139974069698560 graph.py:498] 
I0123 21:58:20.486025 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b c, on_tline l g b c ? cong j f j e
I0123 21:58:21.623996 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0843048095703125
I0123 21:58:23.214002 139974069698560 ddar.py:60] Depth 2/1000 time = 1.5898420810699463
I0123 21:58:24.394252 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1800780296325684
I0123 21:58:26.140251 139974069698560 ddar.py:60] Depth 4/1000 time = 1.7457599639892578
I0123 21:58:27.870521 139974069698560 ddar.py:60] Depth 5/1000 time = 1.7297751903533936
I0123 21:58:29.723117 139974069698560 ddar.py:60] Depth 6/1000 time = 1.8375630378723145
I0123 21:58:31.507609 139974069698560 ddar.py:60] Depth 7/1000 time = 1.7843332290649414
I0123 21:58:33.322421 139974069698560 ddar.py:60] Depth 8/1000 time = 1.8105931282043457
I0123 21:58:33.323354 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:58:33.323406 139974069698560 alphageometry.py:566] LM output (score=-2.627672): "l : T b c b l 15 T d k d l 16 ;"
I0123 21:58:33.323439 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b b c, on_tline l d d k"

I0123 21:58:33.323489 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l b b c, on_tline l d d k ? cong j f j e"
I0123 21:58:33.323632 139974069698560 graph.py:498] 
I0123 21:58:33.323683 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l b b c, on_tline l d d k ? cong j f j e
I0123 21:58:33.940990 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5604376792907715
I0123 21:58:35.516196 139974069698560 ddar.py:60] Depth 2/1000 time = 1.5750658512115479
I0123 21:58:37.170852 139974069698560 ddar.py:60] Depth 3/1000 time = 1.6544990539550781
I0123 21:58:38.264324 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0933117866516113
I0123 21:58:39.897293 139974069698560 ddar.py:60] Depth 5/1000 time = 1.632629156112671
I0123 21:58:41.110381 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1958560943603516
I0123 21:58:42.780024 139974069698560 ddar.py:60] Depth 7/1000 time = 1.669475793838501
I0123 21:58:44.542648 139974069698560 ddar.py:60] Depth 8/1000 time = 1.75864839553833
I0123 21:58:44.543568 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:58:44.543618 139974069698560 alphageometry.py:566] LM output (score=-2.651621): "l : C b i l 15 D b l i l 16 ;"
I0123 21:58:44.543650 139974069698560 alphageometry.py:567] Translation: "l = on_line l b i, on_bline l i b"

I0123 21:58:44.543686 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b i, on_bline l i b ? cong j f j e"
I0123 21:58:44.543816 139974069698560 graph.py:498] 
I0123 21:58:44.543864 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_line l b i, on_bline l i b ? cong j f j e
I0123 21:58:45.207908 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5981667041778564
I0123 21:58:46.755450 139974069698560 ddar.py:60] Depth 2/1000 time = 1.5472700595855713
I0123 21:58:48.335721 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5800862312316895
I0123 21:58:49.370849 139974069698560 ddar.py:60] Depth 4/1000 time = 1.034956932067871
I0123 21:58:50.941940 139974069698560 ddar.py:60] Depth 5/1000 time = 1.570666790008545
I0123 21:58:52.622326 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6680271625518799
I0123 21:58:53.712044 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0895507335662842
I0123 21:58:55.369145 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6519062519073486
I0123 21:58:55.370195 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:58:55.370247 139974069698560 alphageometry.py:566] LM output (score=-2.694771): "l : T d g g l 15 ;"
I0123 21:58:55.370280 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g d g"

I0123 21:58:55.370328 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l g d g ? cong j f j e"
I0123 21:58:55.370464 139974069698560 graph.py:498] 
I0123 21:58:55.370516 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l g d g ? cong j f j e
I0123 21:58:55.938674 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5143718719482422
I0123 21:58:57.394566 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4557478427886963
I0123 21:58:58.353168 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9584248065948486
I0123 21:58:59.858790 139974069698560 ddar.py:60] Depth 4/1000 time = 1.505446434020996
I0123 21:59:00.823067 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9639546871185303
I0123 21:59:02.454971 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6168615818023682
I0123 21:59:04.105771 139974069698560 ddar.py:60] Depth 7/1000 time = 1.650576114654541
I0123 21:59:05.170262 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0603876113891602
I0123 21:59:05.171184 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:59:05.171271 139974069698560 alphageometry.py:566] LM output (score=-2.709529): "l : T i j i l 15 ;"
I0123 21:59:05.171304 139974069698560 alphageometry.py:567] Translation: "l = on_tline l i i j"

I0123 21:59:05.171363 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l i i j ? cong j f j e"
I0123 21:59:05.171516 139974069698560 graph.py:498] 
I0123 21:59:05.171568 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l i i j ? cong j f j e
I0123 21:59:06.308823 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0840766429901123
I0123 21:59:07.199323 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8903276920318604
I0123 21:59:08.719191 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5197017192840576
I0123 21:59:09.714800 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9954323768615723
I0123 21:59:11.241985 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5270252227783203
I0123 21:59:12.224366 139974069698560 ddar.py:60] Depth 6/1000 time = 0.982020378112793
I0123 21:59:13.800944 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5628929138183594
I0123 21:59:14.828511 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0235867500305176
I0123 21:59:14.829422 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:59:14.829480 139974069698560 alphageometry.py:566] LM output (score=-2.735824): "l : T f h g l 15 ;"
I0123 21:59:14.829515 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g f h"

I0123 21:59:14.829552 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l g f h ? cong j f j e"
I0123 21:59:14.829688 139974069698560 graph.py:498] 
I0123 21:59:14.829736 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l g f h ? cong j f j e
I0123 21:59:15.931097 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0471234321594238
I0123 21:59:16.819773 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8885149955749512
I0123 21:59:18.302121 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4821815490722656
I0123 21:59:19.235203 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9328961372375488
I0123 21:59:20.700276 139974069698560 ddar.py:60] Depth 5/1000 time = 1.464735507965088
I0123 21:59:22.324499 139974069698560 ddar.py:60] Depth 6/1000 time = 1.611377477645874
I0123 21:59:23.314006 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9892985820770264
I0123 21:59:24.901711 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5833640098571777
I0123 21:59:24.902675 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:59:24.902733 139974069698560 alphageometry.py:566] LM output (score=-2.792800): "l : T e g g l 15 ;"
I0123 21:59:24.902768 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g e g"

I0123 21:59:24.902816 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l g e g ? cong j f j e"
I0123 21:59:24.902964 139974069698560 graph.py:498] 
I0123 21:59:24.903019 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l g e g ? cong j f j e
I0123 21:59:25.475578 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5175037384033203
I0123 21:59:26.362237 139974069698560 ddar.py:60] Depth 2/1000 time = 0.886521577835083
I0123 21:59:27.848541 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4861390590667725
I0123 21:59:29.387415 139974069698560 ddar.py:60] Depth 4/1000 time = 1.538705587387085
I0123 21:59:30.355634 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9678468704223633
I0123 21:59:32.007098 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6363258361816406
I0123 21:59:33.061862 139974069698560 ddar.py:60] Depth 7/1000 time = 1.054591178894043
I0123 21:59:34.653338 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5874953269958496
I0123 21:59:34.654256 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:59:34.654323 139974069698560 alphageometry.py:566] LM output (score=-2.885620): "l : T b k b l 15 ;"
I0123 21:59:34.654358 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b b k"

I0123 21:59:34.654394 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l b b k ? cong j f j e"
I0123 21:59:34.654540 139974069698560 graph.py:498] 
I0123 21:59:34.654587 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l b b k ? cong j f j e
I0123 21:59:35.217914 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5095086097717285
I0123 21:59:36.637454 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4193954467773438
I0123 21:59:38.120357 139974069698560 ddar.py:60] Depth 3/1000 time = 1.482724905014038
I0123 21:59:39.052378 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9318397045135498
I0123 21:59:40.559960 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5072417259216309
I0123 21:59:41.587929 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0148186683654785
I0123 21:59:43.217270 139974069698560 ddar.py:60] Depth 7/1000 time = 1.6291773319244385
I0123 21:59:44.213594 139974069698560 ddar.py:60] Depth 8/1000 time = 0.9921157360076904
I0123 21:59:44.214540 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:59:44.214598 139974069698560 alphageometry.py:566] LM output (score=-2.903078): "l : T d e e l 15 ;"
I0123 21:59:44.214632 139974069698560 alphageometry.py:567] Translation: "l = on_tline l e d e"

I0123 21:59:44.214678 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l e d e ? cong j f j e"
I0123 21:59:44.214818 139974069698560 graph.py:498] 
I0123 21:59:44.214870 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l e d e ? cong j f j e
I0123 21:59:45.365798 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0968399047851562
I0123 21:59:46.256032 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8900694847106934
I0123 21:59:47.793317 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5371124744415283
I0123 21:59:48.750954 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9574577808380127
I0123 21:59:50.288273 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5369770526885986
I0123 21:59:51.382469 139974069698560 ddar.py:60] Depth 6/1000 time = 1.079026460647583
I0123 21:59:52.981128 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5984904766082764
I0123 21:59:54.626980 139974069698560 ddar.py:60] Depth 8/1000 time = 1.641937255859375
I0123 21:59:54.627904 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 21:59:54.627954 139974069698560 alphageometry.py:566] LM output (score=-2.934245): "l : T d k k l 15 ;"
I0123 21:59:54.627988 139974069698560 alphageometry.py:567] Translation: "l = on_tline l k d k"

I0123 21:59:54.628025 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l k d k ? cong j f j e"
I0123 21:59:54.628156 139974069698560 graph.py:498] 
I0123 21:59:54.628204 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l k d k ? cong j f j e
I0123 21:59:55.200771 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5188524723052979
I0123 21:59:56.112481 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9115753173828125
I0123 21:59:57.614253 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5015966892242432
I0123 21:59:58.556985 139974069698560 ddar.py:60] Depth 4/1000 time = 0.942533016204834
I0123 22:00:00.079011 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5215017795562744
I0123 22:00:01.712731 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6219170093536377
I0123 22:00:02.712704 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9997744560241699
I0123 22:00:04.325376 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6084818840026855
I0123 22:00:04.326293 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:00:04.326352 139974069698560 alphageometry.py:566] LM output (score=-2.956746): "l : T d e d l 15 ;"
I0123 22:00:04.326386 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d d e"

I0123 22:00:04.326427 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l d d e ? cong j f j e"
I0123 22:00:04.326568 139974069698560 graph.py:498] 
I0123 22:00:04.326618 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l d d e ? cong j f j e
I0123 22:00:04.895241 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5145184993743896
I0123 22:00:05.785783 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8904116153717041
I0123 22:00:07.291137 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5051915645599365
I0123 22:00:08.821665 139974069698560 ddar.py:60] Depth 4/1000 time = 1.530348777770996
I0123 22:00:09.785755 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9637227058410645
I0123 22:00:11.460293 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6595208644866943
I0123 22:00:12.515188 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0547337532043457
I0123 22:00:14.141273 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6220793724060059
I0123 22:00:14.142181 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:00:14.142230 139974069698560 alphageometry.py:566] LM output (score=-2.976921): "l : T f g g l 15 ;"
I0123 22:00:14.142264 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g f g"

I0123 22:00:14.142301 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l g f g ? cong j f j e"
I0123 22:00:14.142430 139974069698560 graph.py:498] 
I0123 22:00:14.142477 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k b a; l = on_tline l g f g ? cong j f j e
I0123 22:00:14.705955 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5090548992156982
I0123 22:00:16.166472 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4603679180145264
I0123 22:00:17.154943 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9883077144622803
I0123 22:00:18.750273 139974069698560 ddar.py:60] Depth 4/1000 time = 1.5951616764068604
I0123 22:00:19.756135 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0054795742034912
I0123 22:00:21.430169 139974069698560 ddar.py:60] Depth 6/1000 time = 1.659076452255249
I0123 22:00:23.080475 139974069698560 ddar.py:60] Depth 7/1000 time = 1.6501271724700928
I0123 22:00:24.157117 139974069698560 ddar.py:60] Depth 8/1000 time = 1.072754144668579
I0123 22:00:24.158046 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:00:24.158102 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T i j i k 14 ; x00
I0123 22:00:29.511779 139974069698560 alphageometry.py:566] LM output (score=-1.507550): "l : T b c b l 15 ;"
I0123 22:00:29.511929 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b b c"

I0123 22:00:29.511971 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l b b c ? cong j f j e"
I0123 22:00:29.512175 139974069698560 graph.py:498] 
I0123 22:00:29.512229 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l b b c ? cong j f j e
I0123 22:00:30.588896 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0335233211517334
I0123 22:00:31.392701 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8036336898803711
I0123 22:00:32.851651 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4587900638580322
I0123 22:00:33.720415 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8685922622680664
I0123 22:00:35.181088 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4603159427642822
I0123 22:00:36.100083 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9080600738525391
I0123 22:00:37.582120 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4783194065093994
I0123 22:00:37.582999 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:00:37.583048 139974069698560 alphageometry.py:566] LM output (score=-1.613816): "l : T c e e l 15 ;"
I0123 22:00:37.583081 139974069698560 alphageometry.py:567] Translation: "l = on_tline l e c e"

I0123 22:00:37.583118 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l e c e ? cong j f j e"
I0123 22:00:37.583251 139974069698560 graph.py:498] 
I0123 22:00:37.583298 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l e c e ? cong j f j e
I0123 22:00:38.086885 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4537074565887451
I0123 22:00:38.874730 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7877123355865479
I0123 22:00:40.255167 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3802790641784668
I0123 22:00:41.052945 139974069698560 ddar.py:60] Depth 4/1000 time = 0.7975988388061523
I0123 22:00:42.433197 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3799302577972412
I0123 22:00:43.358172 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9148092269897461
I0123 22:00:44.807881 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4495432376861572
I0123 22:00:45.715494 139974069698560 ddar.py:60] Depth 8/1000 time = 0.9038515090942383
I0123 22:00:45.716364 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:00:45.716411 139974069698560 alphageometry.py:566] LM output (score=-1.660639): "l : T c g g l 15 ;"
I0123 22:00:45.716444 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g c g"

I0123 22:00:45.716480 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g c g ? cong j f j e"
I0123 22:00:45.716612 139974069698560 graph.py:498] 
I0123 22:00:45.716660 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g c g ? cong j f j e
I0123 22:00:46.763408 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0038433074951172
I0123 22:00:47.568622 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8050582408905029
I0123 22:00:48.941908 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3731286525726318
I0123 22:00:49.761749 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8196756839752197
I0123 22:00:51.160129 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3980350494384766
I0123 22:00:52.089657 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9190394878387451
I0123 22:00:53.573753 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4839353561401367
I0123 22:00:54.473494 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8960742950439453
I0123 22:00:54.474369 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:00:54.474418 139974069698560 alphageometry.py:566] LM output (score=-1.790075): "l : P i k j l 15 ;"
I0123 22:00:54.474451 139974069698560 alphageometry.py:567] Translation: "l = on_pline l j i k"

I0123 22:00:54.474487 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_pline l j i k ? cong j f j e"
I0123 22:00:54.474616 139974069698560 graph.py:498] 
I0123 22:00:54.474663 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_pline l j i k ? cong j f j e
I0123 22:00:55.544340 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0267891883850098
I0123 22:00:56.314055 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7695465087890625
I0123 22:00:57.089594 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7753901481628418
I0123 22:00:58.415152 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3254032135009766
I0123 22:00:59.196988 139974069698560 ddar.py:60] Depth 5/1000 time = 0.7814621925354004
I0123 22:01:00.605570 139974069698560 ddar.py:60] Depth 6/1000 time = 1.40028977394104
I0123 22:01:02.032663 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4269170761108398
I0123 22:01:02.876429 139974069698560 ddar.py:60] Depth 8/1000 time = 0.839838981628418
I0123 22:01:02.877297 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:01:02.877346 139974069698560 alphageometry.py:566] LM output (score=-2.057305): "l : C d f l 15 D d l f l 16 ;"
I0123 22:01:02.877379 139974069698560 alphageometry.py:567] Translation: "l = on_line l d f, on_bline l f d"

I0123 22:01:02.877415 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_line l d f, on_bline l f d ? cong j f j e"
I0123 22:01:02.877551 139974069698560 graph.py:498] 
I0123 22:01:02.877598 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_line l d f, on_bline l f d ? cong j f j e
I0123 22:01:03.486520 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5563757419586182
I0123 22:01:05.184267 139974069698560 ddar.py:60] Depth 2/1000 time = 1.6976103782653809
I0123 22:01:06.939988 139974069698560 ddar.py:60] Depth 3/1000 time = 1.7555532455444336
I0123 22:01:08.123005 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1828453540802002
I0123 22:01:09.895430 139974069698560 ddar.py:60] Depth 5/1000 time = 1.7722508907318115
I0123 22:01:11.711612 139974069698560 ddar.py:60] Depth 6/1000 time = 1.8157470226287842
I0123 22:01:12.999126 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2757742404937744
I0123 22:01:14.799657 139974069698560 ddar.py:60] Depth 8/1000 time = 1.8002867698669434
I0123 22:01:16.622601 139974069698560 ddar.py:60] Depth 9/1000 time = 1.8160438537597656
I0123 22:01:16.623738 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:01:16.623790 139974069698560 alphageometry.py:566] LM output (score=-2.127196): "l : T f i f l 15 ;"
I0123 22:01:16.623824 139974069698560 alphageometry.py:567] Translation: "l = on_tline l f f i"

I0123 22:01:16.623874 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l f f i ? cong j f j e"
I0123 22:01:16.624015 139974069698560 graph.py:498] 
I0123 22:01:16.624067 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l f f i ? cong j f j e
I0123 22:01:17.119971 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4518451690673828
I0123 22:01:18.530405 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4103069305419922
I0123 22:01:19.396145 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8655738830566406
I0123 22:01:20.854189 139974069698560 ddar.py:60] Depth 4/1000 time = 1.457887887954712
I0123 22:01:21.725610 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8710689544677734
I0123 22:01:23.231631 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4951550960540771
I0123 22:01:24.139286 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9036641120910645
I0123 22:01:24.140160 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:01:24.140210 139974069698560 alphageometry.py:566] LM output (score=-2.142037): "l : T g i g l 15 ;"
I0123 22:01:24.140244 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g g i"

I0123 22:01:24.140281 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g g i ? cong j f j e"
I0123 22:01:24.140415 139974069698560 graph.py:498] 
I0123 22:01:24.140462 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g g i ? cong j f j e
I0123 22:01:24.635130 139974069698560 ddar.py:60] Depth 1/1000 time = 0.45148754119873047
I0123 22:01:26.023795 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3885314464569092
I0123 22:01:26.892609 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8686473369598389
I0123 22:01:28.318816 139974069698560 ddar.py:60] Depth 4/1000 time = 1.426051378250122
I0123 22:01:29.193339 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8741672039031982
I0123 22:01:30.676003 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4720137119293213
I0123 22:01:31.581422 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9015357494354248
I0123 22:01:31.582278 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:01:31.582327 139974069698560 alphageometry.py:566] LM output (score=-2.183793): "l : T f g g l 15 ;"
I0123 22:01:31.582359 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g f g"

I0123 22:01:31.582395 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g f g ? cong j f j e"
I0123 22:01:31.582542 139974069698560 graph.py:498] 
I0123 22:01:31.582589 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g f g ? cong j f j e
I0123 22:01:32.644352 139974069698560 ddar.py:60] Depth 1/1000 time = 1.019557237625122
I0123 22:01:33.442789 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7982792854309082
I0123 22:01:34.907767 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4647982120513916
I0123 22:01:35.766951 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8589863777160645
I0123 22:01:37.277387 139974069698560 ddar.py:60] Depth 5/1000 time = 1.510063886642456
I0123 22:01:38.187251 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8991320133209229
I0123 22:01:39.690006 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4990241527557373
I0123 22:01:39.690874 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:01:39.690929 139974069698560 alphageometry.py:566] LM output (score=-2.201206): "l : T a b b l 15 ;"
I0123 22:01:39.690963 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b a b"

I0123 22:01:39.691008 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l b a b ? cong j f j e"
I0123 22:01:39.691155 139974069698560 graph.py:498] 
I0123 22:01:39.691205 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l b a b ? cong j f j e
I0123 22:01:40.183697 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4491739273071289
I0123 22:01:41.590549 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4067211151123047
I0123 22:01:42.440082 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8493616580963135
I0123 22:01:43.297062 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8568322658538818
I0123 22:01:44.728016 139974069698560 ddar.py:60] Depth 5/1000 time = 1.430631160736084
I0123 22:01:45.623949 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8851816654205322
I0123 22:01:47.076521 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4489095211029053
I0123 22:01:47.077391 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:01:47.077440 139974069698560 alphageometry.py:566] LM output (score=-2.208498): "l : T g h g l 15 ;"
I0123 22:01:47.077472 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g g h"

I0123 22:01:47.077509 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g g h ? cong j f j e"
I0123 22:01:47.077643 139974069698560 graph.py:498] 
I0123 22:01:47.077692 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g g h ? cong j f j e
I0123 22:01:47.574002 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4537656307220459
I0123 22:01:48.952499 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3783702850341797
I0123 22:01:49.735306 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7826359272003174
I0123 22:01:51.145745 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4102814197540283
I0123 22:01:51.940620 139974069698560 ddar.py:60] Depth 5/1000 time = 0.7945342063903809
I0123 22:01:52.847700 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8958587646484375
I0123 22:01:54.326692 139974069698560 ddar.py:60] Depth 7/1000 time = 1.478825569152832
I0123 22:01:55.221845 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8913393020629883
I0123 22:01:55.222836 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:01:55.222924 139974069698560 alphageometry.py:566] LM output (score=-2.230463): "l : P i j k l 15 ;"
I0123 22:01:55.222960 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k i j"

I0123 22:01:55.223010 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_pline l k i j ? cong j f j e"
I0123 22:01:55.223177 139974069698560 graph.py:498] 
I0123 22:01:55.223234 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_pline l k i j ? cong j f j e
I0123 22:01:56.345306 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0788726806640625
I0123 22:01:57.117007 139974069698560 ddar.py:60] Depth 2/1000 time = 0.771517276763916
I0123 22:01:58.507908 139974069698560 ddar.py:60] Depth 3/1000 time = 1.390711784362793
I0123 22:01:59.291090 139974069698560 ddar.py:60] Depth 4/1000 time = 0.7829985618591309
I0123 22:02:00.683140 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3916642665863037
I0123 22:02:01.547466 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8558700084686279
I0123 22:02:02.978389 139974069698560 ddar.py:60] Depth 7/1000 time = 1.430769681930542
I0123 22:02:03.819454 139974069698560 ddar.py:60] Depth 8/1000 time = 0.837411642074585
I0123 22:02:03.820291 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:02:03.820351 139974069698560 alphageometry.py:566] LM output (score=-2.346222): "l : T b c c l 15 ;"
I0123 22:02:03.820385 139974069698560 alphageometry.py:567] Translation: "l = on_tline l c b c"

I0123 22:02:03.820421 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l c b c ? cong j f j e"
I0123 22:02:03.820550 139974069698560 graph.py:498] 
I0123 22:02:03.820596 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l c b c ? cong j f j e
I0123 22:02:04.319216 139974069698560 ddar.py:60] Depth 1/1000 time = 0.45484495162963867
I0123 22:02:05.739102 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4197635650634766
I0123 22:02:06.597231 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8579611778259277
I0123 22:02:08.075859 139974069698560 ddar.py:60] Depth 4/1000 time = 1.478463888168335
I0123 22:02:08.937213 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8610079288482666
I0123 22:02:10.460641 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5126638412475586
I0123 22:02:11.366429 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9018549919128418
I0123 22:02:11.367311 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:02:11.367358 139974069698560 alphageometry.py:566] LM output (score=-2.468068): "l : T f i i l 15 ;"
I0123 22:02:11.367391 139974069698560 alphageometry.py:567] Translation: "l = on_tline l i f i"

I0123 22:02:11.367427 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l i f i ? cong j f j e"
I0123 22:02:11.367577 139974069698560 graph.py:498] 
I0123 22:02:11.367625 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l i f i ? cong j f j e
I0123 22:02:11.856201 139974069698560 ddar.py:60] Depth 1/1000 time = 0.44591760635375977
I0123 22:02:13.263942 139974069698560 ddar.py:60] Depth 2/1000 time = 1.407620906829834
I0123 22:02:14.130104 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8659408092498779
I0123 22:02:15.626487 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4960999488830566
I0123 22:02:16.493958 139974069698560 ddar.py:60] Depth 5/1000 time = 0.867074728012085
I0123 22:02:18.012484 139974069698560 ddar.py:60] Depth 6/1000 time = 1.507683277130127
I0123 22:02:18.909649 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8934316635131836
I0123 22:02:18.910484 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:02:18.910542 139974069698560 alphageometry.py:566] LM output (score=-2.506897): "l : T d g g l 15 ;"
I0123 22:02:18.910577 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g d g"

I0123 22:02:18.910627 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g d g ? cong j f j e"
I0123 22:02:18.910769 139974069698560 graph.py:498] 
I0123 22:02:18.910820 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g d g ? cong j f j e
I0123 22:02:19.999075 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0446727275848389
I0123 22:02:20.792812 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7935643196105957
I0123 22:02:22.209331 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4163568019866943
I0123 22:02:23.012453 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8029575347900391
I0123 22:02:24.431021 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4182331562042236
I0123 22:02:25.356210 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9147851467132568
I0123 22:02:26.858916 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5025572776794434
I0123 22:02:27.769979 139974069698560 ddar.py:60] Depth 8/1000 time = 0.9072022438049316
I0123 22:02:27.770852 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:02:27.770901 139974069698560 alphageometry.py:566] LM output (score=-2.554071): "l : T c d h l 15 ;"
I0123 22:02:27.770935 139974069698560 alphageometry.py:567] Translation: "l = on_tline l h c d"

I0123 22:02:27.770973 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l h c d ? cong j f j e"
I0123 22:02:27.771108 139974069698560 graph.py:498] 
I0123 22:02:27.771155 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l h c d ? cong j f j e
I0123 22:02:28.268100 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4535858631134033
I0123 22:02:29.644397 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3761568069458008
I0123 22:02:30.445470 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8009111881256104
I0123 22:02:31.843259 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3976335525512695
I0123 22:02:32.643489 139974069698560 ddar.py:60] Depth 5/1000 time = 0.7998747825622559
I0123 22:02:34.212378 139974069698560 ddar.py:60] Depth 6/1000 time = 1.558464527130127
I0123 22:02:35.092154 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8795573711395264
I0123 22:02:36.611567 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5156526565551758
I0123 22:02:36.612432 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:02:36.612485 139974069698560 alphageometry.py:566] LM output (score=-2.611852): "l : C b c l 15 D b l c l 16 ;"
I0123 22:02:36.612519 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 22:02:36.612566 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_line l b c, on_bline l c b ? cong j f j e"
I0123 22:02:36.612710 139974069698560 graph.py:498] 
I0123 22:02:36.612762 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_line l b c, on_bline l c b ? cong j f j e
I0123 22:02:37.199809 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5335228443145752
I0123 22:02:38.866741 139974069698560 ddar.py:60] Depth 2/1000 time = 1.666785717010498
I0123 22:02:39.951235 139974069698560 ddar.py:60] Depth 3/1000 time = 1.084317922592163
I0123 22:02:41.680181 139974069698560 ddar.py:60] Depth 4/1000 time = 1.728757381439209
I0123 22:02:43.390755 139974069698560 ddar.py:60] Depth 5/1000 time = 1.7104003429412842
I0123 22:02:45.140808 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7496414184570312
I0123 22:02:46.295281 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1426939964294434
I0123 22:02:48.065613 139974069698560 ddar.py:60] Depth 8/1000 time = 1.7655375003814697
I0123 22:02:48.066584 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:02:48.066633 139974069698560 alphageometry.py:566] LM output (score=-2.629525): "l : T f h f l 15 ;"
I0123 22:02:48.066666 139974069698560 alphageometry.py:567] Translation: "l = on_tline l f f h"

I0123 22:02:48.066703 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l f f h ? cong j f j e"
I0123 22:02:48.066835 139974069698560 graph.py:498] 
I0123 22:02:48.066882 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l f f h ? cong j f j e
I0123 22:02:48.557589 139974069698560 ddar.py:60] Depth 1/1000 time = 0.44551873207092285
I0123 22:02:49.970842 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4131228923797607
I0123 22:02:50.762798 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7917861938476562
I0123 22:02:52.213751 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4507741928100586
I0123 22:02:53.011572 139974069698560 ddar.py:60] Depth 5/1000 time = 0.797417163848877
I0123 22:02:53.878704 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8574988842010498
I0123 22:02:55.369316 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4904601573944092
I0123 22:02:56.225257 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8520774841308594
I0123 22:02:56.226152 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:02:56.226205 139974069698560 alphageometry.py:566] LM output (score=-2.694882): "l : T c d g l 15 ;"
I0123 22:02:56.226239 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g c d"

I0123 22:02:56.226286 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g c d ? cong j f j e"
I0123 22:02:56.226452 139974069698560 graph.py:498] 
I0123 22:02:56.226504 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g c d ? cong j f j e
I0123 22:02:57.372785 139974069698560 ddar.py:60] Depth 1/1000 time = 1.1024143695831299
I0123 22:02:58.167343 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7944033145904541
I0123 22:02:58.966877 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7993819713592529
I0123 22:03:00.381655 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4146127700805664
I0123 22:03:01.190651 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8086259365081787
I0123 22:03:02.720410 139974069698560 ddar.py:60] Depth 6/1000 time = 1.519486427307129
I0123 22:03:03.600337 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8797709941864014
I0123 22:03:05.120516 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5165209770202637
I0123 22:03:05.121379 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:03:05.121428 139974069698560 alphageometry.py:566] LM output (score=-2.701055): "l : T h i h l 15 ;"
I0123 22:03:05.121461 139974069698560 alphageometry.py:567] Translation: "l = on_tline l h h i"

I0123 22:03:05.121498 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l h h i ? cong j f j e"
I0123 22:03:05.121630 139974069698560 graph.py:498] 
I0123 22:03:05.121684 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l h h i ? cong j f j e
I0123 22:03:05.608539 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4430685043334961
I0123 22:03:06.399812 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7911431789398193
I0123 22:03:07.871867 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4718914031982422
I0123 22:03:08.716918 139974069698560 ddar.py:60] Depth 4/1000 time = 0.844881534576416
I0123 22:03:10.189989 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4727299213409424
I0123 22:03:11.085772 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8849921226501465
I0123 22:03:12.630984 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5414938926696777
I0123 22:03:12.631950 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:03:12.632018 139974069698560 alphageometry.py:566] LM output (score=-2.715859): "l : T c l e i 15 ;"
I0123 22:03:12.632053 139974069698560 alphageometry.py:567] Translation: "l = on_tline l c e i"

I0123 22:03:12.632102 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l c e i ? cong j f j e"
I0123 22:03:12.632250 139974069698560 graph.py:498] 
I0123 22:03:12.632301 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l c e i ? cong j f j e
I0123 22:03:13.119228 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4440774917602539
I0123 22:03:13.920571 139974069698560 ddar.py:60] Depth 2/1000 time = 0.801224946975708
I0123 22:03:15.409175 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4884490966796875
I0123 22:03:16.255593 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8462543487548828
I0123 22:03:17.717560 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4616060256958008
I0123 22:03:18.611837 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8833358287811279
I0123 22:03:20.128659 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5131051540374756
I0123 22:03:20.129525 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:03:20.129575 139974069698560 alphageometry.py:566] LM output (score=-2.725618): "l : T d g d l 15 ;"
I0123 22:03:20.129608 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d d g"

I0123 22:03:20.129649 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l d d g ? cong j f j e"
I0123 22:03:20.129780 139974069698560 graph.py:498] 
I0123 22:03:20.129826 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l d d g ? cong j f j e
I0123 22:03:20.630490 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4573838710784912
I0123 22:03:21.428972 139974069698560 ddar.py:60] Depth 2/1000 time = 0.798346996307373
I0123 22:03:22.838683 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4095580577850342
I0123 22:03:23.647283 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8084368705749512
I0123 22:03:25.065326 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4177305698394775
I0123 22:03:25.995522 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9197225570678711
I0123 22:03:27.504994 139974069698560 ddar.py:60] Depth 7/1000 time = 1.509291410446167
I0123 22:03:28.403046 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8943700790405273
I0123 22:03:28.403909 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:03:28.403959 139974069698560 alphageometry.py:566] LM output (score=-2.738062): "l : T c l g i 15 ;"
I0123 22:03:28.403992 139974069698560 alphageometry.py:567] Translation: "l = on_tline l c g i"

I0123 22:03:28.404029 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l c g i ? cong j f j e"
I0123 22:03:28.404164 139974069698560 graph.py:498] 
I0123 22:03:28.404211 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l c g i ? cong j f j e
I0123 22:03:29.532676 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0857551097869873
I0123 22:03:30.333378 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8005368709564209
I0123 22:03:31.923196 139974069698560 ddar.py:60] Depth 3/1000 time = 1.589646577835083
I0123 22:03:32.782605 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8592231273651123
I0123 22:03:33.649181 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8662164211273193
I0123 22:03:35.170985 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5110623836517334
I0123 22:03:36.075677 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9009428024291992
I0123 22:03:36.076520 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:03:36.076582 139974069698560 alphageometry.py:566] LM output (score=-2.752124): "l : T c k k l 15 ;"
I0123 22:03:36.076616 139974069698560 alphageometry.py:567] Translation: "l = on_tline l k c k"

I0123 22:03:36.076654 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l k c k ? cong j f j e"
I0123 22:03:36.076816 139974069698560 graph.py:498] 
I0123 22:03:36.076867 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l k c k ? cong j f j e
I0123 22:03:37.205895 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0856411457061768
I0123 22:03:37.997455 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7913906574249268
I0123 22:03:39.451456 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4538426399230957
I0123 22:03:40.254680 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8030431270599365
I0123 22:03:41.065389 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8103864192962646
I0123 22:03:42.590853 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5158131122589111
I0123 22:03:43.445026 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8540060520172119
I0123 22:03:44.944647 139974069698560 ddar.py:60] Depth 8/1000 time = 1.4959080219268799
I0123 22:03:44.945515 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:03:44.945563 139974069698560 alphageometry.py:566] LM output (score=-2.757851): "l : T c l g h 15 ;"
I0123 22:03:44.945595 139974069698560 alphageometry.py:567] Translation: "l = on_tline l c g h"

I0123 22:03:44.945630 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l c g h ? cong j f j e"
I0123 22:03:44.945766 139974069698560 graph.py:498] 
I0123 22:03:44.945814 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l c g h ? cong j f j e
I0123 22:03:45.438869 139974069698560 ddar.py:60] Depth 1/1000 time = 0.45021510124206543
I0123 22:03:46.219914 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7809314727783203
I0123 22:03:47.644191 139974069698560 ddar.py:60] Depth 3/1000 time = 1.424109697341919
I0123 22:03:48.444778 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8004088401794434
I0123 22:03:49.925195 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4800341129302979
I0123 22:03:50.839619 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9030489921569824
I0123 22:03:51.720942 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8811476230621338
I0123 22:03:53.289396 139974069698560 ddar.py:60] Depth 8/1000 time = 1.56473708152771
I0123 22:03:53.290290 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:03:53.290359 139974069698560 alphageometry.py:566] LM output (score=-2.762764): "l : C b f l 15 D b l f l 16 ;"
I0123 22:03:53.290392 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_bline l f b"

I0123 22:03:53.290430 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_line l b f, on_bline l f b ? cong j f j e"
I0123 22:03:53.290577 139974069698560 graph.py:498] 
I0123 22:03:53.290630 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_line l b f, on_bline l f b ? cong j f j e
I0123 22:03:53.958907 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6114983558654785
I0123 22:03:55.681116 139974069698560 ddar.py:60] Depth 2/1000 time = 1.7220542430877686
I0123 22:03:57.456215 139974069698560 ddar.py:60] Depth 3/1000 time = 1.7749431133270264
I0123 22:03:59.223082 139974069698560 ddar.py:60] Depth 4/1000 time = 1.7666804790496826
I0123 22:04:01.007754 139974069698560 ddar.py:60] Depth 5/1000 time = 1.7845003604888916
I0123 22:04:02.802811 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7940669059753418
I0123 22:04:04.700862 139974069698560 ddar.py:60] Depth 7/1000 time = 1.8880417346954346
I0123 22:04:06.569812 139974069698560 ddar.py:60] Depth 8/1000 time = 1.8687927722930908
I0123 22:04:07.795318 139974069698560 ddar.py:60] Depth 9/1000 time = 1.2187280654907227
I0123 22:04:07.796480 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:04:07.796562 139974069698560 alphageometry.py:566] LM output (score=-2.768332): "l : T f i g l 15 ;"
I0123 22:04:07.796599 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g f i"

I0123 22:04:07.796640 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g f i ? cong j f j e"
I0123 22:04:07.796798 139974069698560 graph.py:498] 
I0123 22:04:07.796851 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l g f i ? cong j f j e
I0123 22:04:08.985621 139974069698560 ddar.py:60] Depth 1/1000 time = 1.14516282081604
I0123 22:04:09.792184 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8063735961914062
I0123 22:04:10.659091 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8667442798614502
I0123 22:04:12.173284 139974069698560 ddar.py:60] Depth 4/1000 time = 1.514009952545166
I0123 22:04:13.036399 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8627502918243408
I0123 22:04:14.578412 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5312163829803467
I0123 22:04:15.476024 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8939166069030762
I0123 22:04:15.476876 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:04:15.476927 139974069698560 alphageometry.py:566] LM output (score=-2.791278): "l : T c f f l 15 ;"
I0123 22:04:15.476961 139974069698560 alphageometry.py:567] Translation: "l = on_tline l f c f"

I0123 22:04:15.477011 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l f c f ? cong j f j e"
I0123 22:04:15.477152 139974069698560 graph.py:498] 
I0123 22:04:15.477202 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l f c f ? cong j f j e
I0123 22:04:16.617085 139974069698560 ddar.py:60] Depth 1/1000 time = 1.0961472988128662
I0123 22:04:17.428340 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8110864162445068
I0123 22:04:18.909767 139974069698560 ddar.py:60] Depth 3/1000 time = 1.481278657913208
I0123 22:04:19.735895 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8259685039520264
I0123 22:04:20.570578 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8343634605407715
I0123 22:04:22.141278 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5610549449920654
I0123 22:04:23.022413 139974069698560 ddar.py:60] Depth 7/1000 time = 0.880955696105957
I0123 22:04:24.580729 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5543813705444336
I0123 22:04:24.581611 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:04:24.581676 139974069698560 alphageometry.py:566] LM output (score=-2.827913): "l : T c i i l 15 ;"
I0123 22:04:24.581727 139974069698560 alphageometry.py:567] Translation: "l = on_tline l i c i"

I0123 22:04:24.581765 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l i c i ? cong j f j e"
I0123 22:04:24.581902 139974069698560 graph.py:498] 
I0123 22:04:24.581949 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l i c i ? cong j f j e
I0123 22:04:25.072616 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4477531909942627
I0123 22:04:25.874883 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8021483421325684
I0123 22:04:27.384926 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5098483562469482
I0123 22:04:28.200090 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8148927688598633
I0123 22:04:29.713839 139974069698560 ddar.py:60] Depth 5/1000 time = 1.513401746749878
I0123 22:04:30.604295 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8807101249694824
I0123 22:04:31.460282 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8558228015899658
I0123 22:04:32.965609 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5015864372253418
I0123 22:04:32.966503 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:04:32.966565 139974069698560 alphageometry.py:566] LM output (score=-2.842193): "l : T b c h l 15 ;"
I0123 22:04:32.966599 139974069698560 alphageometry.py:567] Translation: "l = on_tline l h b c"

I0123 22:04:32.966644 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l h b c ? cong j f j e"
I0123 22:04:32.966785 139974069698560 graph.py:498] 
I0123 22:04:32.966836 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l h b c ? cong j f j e
I0123 22:04:33.460959 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4508788585662842
I0123 22:04:34.909202 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4481213092803955
I0123 22:04:35.771211 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8618340492248535
I0123 22:04:36.633017 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8616387844085693
I0123 22:04:38.136126 139974069698560 ddar.py:60] Depth 5/1000 time = 1.50278902053833
I0123 22:04:39.041706 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8948523998260498
I0123 22:04:40.599171 139974069698560 ddar.py:60] Depth 7/1000 time = 1.553703784942627
I0123 22:04:40.600037 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:04:40.600085 139974069698560 alphageometry.py:566] LM output (score=-2.996879): "l : T i k k l 15 ;"
I0123 22:04:40.600117 139974069698560 alphageometry.py:567] Translation: "l = on_tline l k i k"

I0123 22:04:40.600155 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l k i k ? cong j f j e"
I0123 22:04:40.600287 139974069698560 graph.py:498] 
I0123 22:04:40.600334 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l k i k ? cong j f j e
I0123 22:04:41.104113 139974069698560 ddar.py:60] Depth 1/1000 time = 0.46048831939697266
I0123 22:04:42.566067 139974069698560 ddar.py:60] Depth 2/1000 time = 1.461808681488037
I0123 22:04:43.345674 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7794382572174072
I0123 22:04:44.133995 139974069698560 ddar.py:60] Depth 4/1000 time = 0.7881674766540527
I0123 22:04:45.602297 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4678776264190674
I0123 22:04:46.466574 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8557028770446777
I0123 22:04:47.999377 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5326330661773682
I0123 22:04:48.842098 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8390841484069824
I0123 22:04:48.842949 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:04:48.842998 139974069698560 alphageometry.py:566] LM output (score=-3.040616): "l : D g l i l 15 ;"
I0123 22:04:48.843032 139974069698560 alphageometry.py:567] Translation: "l = on_bline l i g"

I0123 22:04:48.843078 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_bline l i g ? cong j f j e"
I0123 22:04:48.843216 139974069698560 graph.py:498] 
I0123 22:04:48.843266 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_bline l i g ? cong j f j e
I0123 22:04:49.400820 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5034158229827881
I0123 22:04:50.945222 139974069698560 ddar.py:60] Depth 2/1000 time = 1.5442821979522705
I0123 22:04:51.915148 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9697673320770264
I0123 22:04:53.586112 139974069698560 ddar.py:60] Depth 4/1000 time = 1.6708033084869385
I0123 22:04:54.569735 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9834432601928711
I0123 22:04:56.232484 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6623845100402832
I0123 22:04:57.275187 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0290753841400146
I0123 22:04:58.977111 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6980044841766357
I0123 22:04:58.978014 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:04:58.978064 139974069698560 alphageometry.py:566] LM output (score=-3.185509): "l : T b l g h 15 ;"
I0123 22:04:58.978096 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b g h"

I0123 22:04:58.978131 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l b g h ? cong j f j e"
I0123 22:04:58.978262 139974069698560 graph.py:498] 
I0123 22:04:58.978309 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k i i j; l = on_tline l b g h ? cong j f j e
I0123 22:04:59.473778 139974069698560 ddar.py:60] Depth 1/1000 time = 0.45198988914489746
I0123 22:05:00.251872 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7779741287231445
I0123 22:05:01.712933 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4609041213989258
I0123 22:05:02.513059 139974069698560 ddar.py:60] Depth 4/1000 time = 0.7999417781829834
I0123 22:05:04.030661 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5172119140625
I0123 22:05:04.942946 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9008946418762207
I0123 22:05:05.820531 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8774173259735107
I0123 22:05:07.408698 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5844199657440186
I0123 22:05:07.409573 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:05:07.409655 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : C b c k 14 D b k c k 15 ; x00
I0123 22:05:13.129016 139974069698560 alphageometry.py:566] LM output (score=-0.965535): "l : C b f l 16 D b l f l 17 ;"
I0123 22:05:13.129155 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_bline l f b"

I0123 22:05:13.129203 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b f, on_bline l f b ? cong j f j e"
I0123 22:05:13.129338 139974069698560 graph.py:498] 
I0123 22:05:13.129393 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b f, on_bline l f b ? cong j f j e
I0123 22:05:13.939869 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7421445846557617
I0123 22:05:16.827809 139974069698560 ddar.py:60] Depth 2/1000 time = 2.887772560119629
I0123 22:05:19.170567 139974069698560 ddar.py:60] Depth 3/1000 time = 2.342578649520874
I0123 22:05:21.510673 139974069698560 ddar.py:60] Depth 4/1000 time = 2.339916706085205
I0123 22:05:23.851222 139974069698560 ddar.py:60] Depth 5/1000 time = 2.3403732776641846
I0123 22:05:26.864689 139974069698560 ddar.py:60] Depth 6/1000 time = 3.0122363567352295
I0123 22:05:29.324386 139974069698560 ddar.py:60] Depth 7/1000 time = 2.4463951587677
I0123 22:05:31.735802 139974069698560 ddar.py:60] Depth 8/1000 time = 2.411250591278076
I0123 22:05:34.175017 139974069698560 ddar.py:60] Depth 9/1000 time = 2.4269514083862305
I0123 22:05:34.176468 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:05:34.176529 139974069698560 alphageometry.py:566] LM output (score=-1.278862): "l : C b f l 16 ;"
I0123 22:05:34.176565 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f"

I0123 22:05:34.176603 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b f ? cong j f j e"
I0123 22:05:34.176739 139974069698560 graph.py:498] 
I0123 22:05:34.176787 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b f ? cong j f j e
I0123 22:05:35.550393 139974069698560 ddar.py:60] Depth 1/1000 time = 1.3222253322601318
I0123 22:05:37.490481 139974069698560 ddar.py:60] Depth 2/1000 time = 1.9399330615997314
I0123 22:05:39.469819 139974069698560 ddar.py:60] Depth 3/1000 time = 1.9791691303253174
I0123 22:05:41.463626 139974069698560 ddar.py:60] Depth 4/1000 time = 1.9936304092407227
I0123 22:05:43.446329 139974069698560 ddar.py:60] Depth 5/1000 time = 1.982283353805542
I0123 22:05:45.481386 139974069698560 ddar.py:60] Depth 6/1000 time = 2.0253379344940186
I0123 22:05:48.180756 139974069698560 ddar.py:60] Depth 7/1000 time = 2.699195146560669
I0123 22:05:50.213225 139974069698560 ddar.py:60] Depth 8/1000 time = 2.0275216102600098
I0123 22:05:50.214212 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:05:50.214269 139974069698560 alphageometry.py:566] LM output (score=-1.291148): "l : C d f l 16 D d l f l 17 ;"
I0123 22:05:50.214303 139974069698560 alphageometry.py:567] Translation: "l = on_line l d f, on_bline l f d"

I0123 22:05:50.214352 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l d f, on_bline l f d ? cong j f j e"
I0123 22:05:50.214490 139974069698560 graph.py:498] 
I0123 22:05:50.214538 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l d f, on_bline l f d ? cong j f j e
I0123 22:05:50.943080 139974069698560 ddar.py:60] Depth 1/1000 time = 0.663562536239624
I0123 22:05:53.125699 139974069698560 ddar.py:60] Depth 2/1000 time = 2.1824588775634766
I0123 22:05:55.340083 139974069698560 ddar.py:60] Depth 3/1000 time = 2.2142186164855957
I0123 22:05:56.851039 139974069698560 ddar.py:60] Depth 4/1000 time = 1.5107548236846924
I0123 22:05:59.064024 139974069698560 ddar.py:60] Depth 5/1000 time = 2.2127275466918945
I0123 22:06:01.301455 139974069698560 ddar.py:60] Depth 6/1000 time = 2.236783981323242
I0123 22:06:03.621712 139974069698560 ddar.py:60] Depth 7/1000 time = 2.3065688610076904
I0123 22:06:05.873443 139974069698560 ddar.py:60] Depth 8/1000 time = 2.251565933227539
I0123 22:06:08.156195 139974069698560 ddar.py:60] Depth 9/1000 time = 2.273585796356201
I0123 22:06:08.157425 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:06:08.157491 139974069698560 alphageometry.py:566] LM output (score=-1.488236): "l : C b i l 16 D b l i l 17 ;"
I0123 22:06:08.157523 139974069698560 alphageometry.py:567] Translation: "l = on_line l b i, on_bline l i b"

I0123 22:06:08.157560 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b i, on_bline l i b ? cong j f j e"
I0123 22:06:08.157705 139974069698560 graph.py:498] 
I0123 22:06:08.157758 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b i, on_bline l i b ? cong j f j e
I0123 22:06:08.866815 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6409051418304443
I0123 22:06:10.807232 139974069698560 ddar.py:60] Depth 2/1000 time = 1.9402575492858887
I0123 22:06:12.089100 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2817049026489258
I0123 22:06:14.058066 139974069698560 ddar.py:60] Depth 4/1000 time = 1.9687550067901611
I0123 22:06:16.091050 139974069698560 ddar.py:60] Depth 5/1000 time = 2.032794713973999
I0123 22:06:18.133655 139974069698560 ddar.py:60] Depth 6/1000 time = 2.042095899581909
I0123 22:06:19.530775 139974069698560 ddar.py:60] Depth 7/1000 time = 1.384723424911499
I0123 22:06:21.552083 139974069698560 ddar.py:60] Depth 8/1000 time = 2.0211191177368164
I0123 22:06:23.603318 139974069698560 ddar.py:60] Depth 9/1000 time = 2.0422511100769043
I0123 22:06:23.604568 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:06:23.604626 139974069698560 alphageometry.py:566] LM output (score=-1.622536): "l : C h i l 16 D h l i l 17 ;"
I0123 22:06:23.604660 139974069698560 alphageometry.py:567] Translation: "l = on_line l h i, on_bline l i h"

I0123 22:06:23.604701 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l h i, on_bline l i h ? cong j f j e"
I0123 22:06:23.604848 139974069698560 graph.py:498] 
I0123 22:06:23.604917 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l h i, on_bline l i h ? cong j f j e
I0123 22:06:25.126750 139974069698560 ddar.py:60] Depth 1/1000 time = 1.4554824829101562
I0123 22:06:27.442672 139974069698560 ddar.py:60] Depth 2/1000 time = 2.3157601356506348
I0123 22:06:30.036646 139974069698560 ddar.py:60] Depth 3/1000 time = 2.593815565109253
I0123 22:06:32.624225 139974069698560 ddar.py:60] Depth 4/1000 time = 2.5874083042144775
I0123 22:06:35.271248 139974069698560 ddar.py:60] Depth 5/1000 time = 2.6467769145965576
I0123 22:06:38.630769 139974069698560 ddar.py:60] Depth 6/1000 time = 3.359206438064575
I0123 22:06:41.249212 139974069698560 ddar.py:60] Depth 7/1000 time = 2.6179234981536865
I0123 22:06:43.944081 139974069698560 ddar.py:60] Depth 8/1000 time = 2.6783392429351807
I0123 22:06:43.953500 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:06:43.953570 139974069698560 alphageometry.py:566] LM output (score=-1.886351): "l : C g h l 16 D g l h l 17 ;"
I0123 22:06:43.953607 139974069698560 alphageometry.py:567] Translation: "l = on_line l g h, on_bline l h g"

I0123 22:06:43.953657 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l g h, on_bline l h g ? cong j f j e"
I0123 22:06:43.953810 139974069698560 graph.py:498] 
I0123 22:06:43.953864 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l g h, on_bline l h g ? cong j f j e
I0123 22:06:44.696690 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6762235164642334
I0123 22:06:47.008412 139974069698560 ddar.py:60] Depth 2/1000 time = 2.31156849861145
I0123 22:06:49.580011 139974069698560 ddar.py:60] Depth 3/1000 time = 2.57143497467041
I0123 22:06:52.098881 139974069698560 ddar.py:60] Depth 4/1000 time = 2.5186915397644043
I0123 22:06:54.655159 139974069698560 ddar.py:60] Depth 5/1000 time = 2.5560216903686523
I0123 22:06:57.235184 139974069698560 ddar.py:60] Depth 6/1000 time = 2.5793135166168213
I0123 22:06:59.795670 139974069698560 ddar.py:60] Depth 7/1000 time = 2.5433428287506104
I0123 22:07:02.348157 139974069698560 ddar.py:60] Depth 8/1000 time = 2.543421983718872
I0123 22:07:02.348727 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:07:02.348794 139974069698560 alphageometry.py:566] LM output (score=-1.910569): "l : C c f l 16 D c l f l 17 ;"
I0123 22:07:02.348829 139974069698560 alphageometry.py:567] Translation: "l = on_line l c f, on_bline l f c"

I0123 22:07:02.348874 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l c f, on_bline l f c ? cong j f j e"
I0123 22:07:02.349021 139974069698560 graph.py:498] 
I0123 22:07:02.349072 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l c f, on_bline l f c ? cong j f j e
I0123 22:07:03.070798 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6546072959899902
I0123 22:07:05.302521 139974069698560 ddar.py:60] Depth 2/1000 time = 2.231571674346924
I0123 22:07:07.713886 139974069698560 ddar.py:60] Depth 3/1000 time = 2.411194324493408
I0123 22:07:10.123736 139974069698560 ddar.py:60] Depth 4/1000 time = 2.4096338748931885
I0123 22:07:11.804488 139974069698560 ddar.py:60] Depth 5/1000 time = 1.6801791191101074
I0123 22:07:14.332538 139974069698560 ddar.py:60] Depth 6/1000 time = 2.513035774230957
I0123 22:07:16.785212 139974069698560 ddar.py:60] Depth 7/1000 time = 2.45245361328125
I0123 22:07:19.231155 139974069698560 ddar.py:60] Depth 8/1000 time = 2.4304370880126953
I0123 22:07:19.232683 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:07:19.232748 139974069698560 alphageometry.py:566] LM output (score=-1.912655): "l : C b h l 16 D b l h l 17 ;"
I0123 22:07:19.232784 139974069698560 alphageometry.py:567] Translation: "l = on_line l b h, on_bline l h b"

I0123 22:07:19.232833 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b h, on_bline l h b ? cong j f j e"
I0123 22:07:19.232981 139974069698560 graph.py:498] 
I0123 22:07:19.233033 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b h, on_bline l h b ? cong j f j e
I0123 22:07:20.622767 139974069698560 ddar.py:60] Depth 1/1000 time = 1.3227670192718506
I0123 22:07:22.671031 139974069698560 ddar.py:60] Depth 2/1000 time = 2.0480945110321045
I0123 22:07:24.091143 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4199461936950684
I0123 22:07:26.200876 139974069698560 ddar.py:60] Depth 4/1000 time = 2.109546661376953
I0123 22:07:28.336193 139974069698560 ddar.py:60] Depth 5/1000 time = 2.1351161003112793
I0123 22:07:30.503664 139974069698560 ddar.py:60] Depth 6/1000 time = 2.1668946743011475
I0123 22:07:32.788158 139974069698560 ddar.py:60] Depth 7/1000 time = 2.2704105377197266
I0123 22:07:35.002950 139974069698560 ddar.py:60] Depth 8/1000 time = 2.214601755142212
I0123 22:07:36.521888 139974069698560 ddar.py:60] Depth 9/1000 time = 1.506601095199585
I0123 22:07:36.523252 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:07:36.523311 139974069698560 alphageometry.py:566] LM output (score=-1.922952): "l : C b j l 16 D b l j l 17 ;"
I0123 22:07:36.523346 139974069698560 alphageometry.py:567] Translation: "l = on_line l b j, on_bline l j b"

I0123 22:07:36.523394 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b j, on_bline l j b ? cong j f j e"
I0123 22:07:36.523543 139974069698560 graph.py:498] 
I0123 22:07:36.523597 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b j, on_bline l j b ? cong j f j e
I0123 22:07:37.915960 139974069698560 ddar.py:60] Depth 1/1000 time = 1.3247759342193604
I0123 22:07:39.130025 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2139031887054443
I0123 22:07:41.055357 139974069698560 ddar.py:60] Depth 3/1000 time = 1.9251623153686523
I0123 22:07:43.030933 139974069698560 ddar.py:60] Depth 4/1000 time = 1.9753856658935547
I0123 22:07:45.015562 139974069698560 ddar.py:60] Depth 5/1000 time = 1.9844386577606201
I0123 22:07:46.304863 139974069698560 ddar.py:60] Depth 6/1000 time = 1.288804531097412
I0123 22:07:48.345273 139974069698560 ddar.py:60] Depth 7/1000 time = 2.0279994010925293
I0123 22:07:50.374412 139974069698560 ddar.py:60] Depth 8/1000 time = 2.028904676437378
I0123 22:07:52.450148 139974069698560 ddar.py:60] Depth 9/1000 time = 2.066410541534424
I0123 22:07:52.451404 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:07:52.451469 139974069698560 alphageometry.py:566] LM output (score=-1.954536): "l : C b f l 16 P b e b l 17 ;"
I0123 22:07:52.451502 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b e b l"

I0123 22:07:52.451536 139974069698560 alphageometry.py:566] LM output (score=-1.974762): "l : C g i l 16 D g l i l 17 ;"
I0123 22:07:52.451562 139974069698560 alphageometry.py:567] Translation: "l = on_line l g i, on_bline l i g"

I0123 22:07:52.451596 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l g i, on_bline l i g ? cong j f j e"
I0123 22:07:52.451744 139974069698560 graph.py:498] 
I0123 22:07:52.451795 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l g i, on_bline l i g ? cong j f j e
I0123 22:07:53.264286 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7457284927368164
I0123 22:07:56.308276 139974069698560 ddar.py:60] Depth 2/1000 time = 3.0438311100006104
I0123 22:07:58.779729 139974069698560 ddar.py:60] Depth 3/1000 time = 2.4712870121002197
I0123 22:08:01.232005 139974069698560 ddar.py:60] Depth 4/1000 time = 2.4520883560180664
I0123 22:08:04.410411 139974069698560 ddar.py:60] Depth 5/1000 time = 3.178211212158203
I0123 22:08:06.920419 139974069698560 ddar.py:60] Depth 6/1000 time = 2.5094709396362305
I0123 22:08:09.481383 139974069698560 ddar.py:60] Depth 7/1000 time = 2.545872449874878
I0123 22:08:09.491019 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:08:09.491098 139974069698560 alphageometry.py:566] LM output (score=-2.013842): "l : C b f l 16 P b e f l 17 ;"
I0123 22:08:09.491137 139974069698560 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2570, in add_clause
    raise DepCheckFailError(
graph.DepCheckFailError: ncoll f b e
"

I0123 22:08:09.491180 139974069698560 alphageometry.py:566] LM output (score=-2.039151): "l : C b g l 16 D b l g l 17 ;"
I0123 22:08:09.491208 139974069698560 alphageometry.py:567] Translation: "l = on_line l b g, on_bline l g b"

I0123 22:08:09.491243 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b g, on_bline l g b ? cong j f j e"
I0123 22:08:09.491393 139974069698560 graph.py:498] 
I0123 22:08:09.491445 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b g, on_bline l g b ? cong j f j e
I0123 22:08:10.212181 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6550438404083252
I0123 22:08:12.371811 139974069698560 ddar.py:60] Depth 2/1000 time = 2.1594433784484863
I0123 22:08:14.623790 139974069698560 ddar.py:60] Depth 3/1000 time = 2.251802682876587
I0123 22:08:16.906951 139974069698560 ddar.py:60] Depth 4/1000 time = 2.2829740047454834
I0123 22:08:18.456999 139974069698560 ddar.py:60] Depth 5/1000 time = 1.549870491027832
I0123 22:08:20.703292 139974069698560 ddar.py:60] Depth 6/1000 time = 2.245716094970703
I0123 22:08:23.060620 139974069698560 ddar.py:60] Depth 7/1000 time = 2.342409133911133
I0123 22:08:25.382291 139974069698560 ddar.py:60] Depth 8/1000 time = 2.3214898109436035
I0123 22:08:27.754688 139974069698560 ddar.py:60] Depth 9/1000 time = 2.361487627029419
I0123 22:08:27.756201 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:08:27.756295 139974069698560 alphageometry.py:566] LM output (score=-2.135175): "l : C c i l 16 D c l i l 17 ;"
I0123 22:08:27.756332 139974069698560 alphageometry.py:567] Translation: "l = on_line l c i, on_bline l i c"

I0123 22:08:27.756385 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l c i, on_bline l i c ? cong j f j e"
I0123 22:08:27.756549 139974069698560 graph.py:498] 
I0123 22:08:27.756602 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l c i, on_bline l i c ? cong j f j e
I0123 22:08:28.468676 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6461672782897949
I0123 22:08:30.438359 139974069698560 ddar.py:60] Depth 2/1000 time = 1.9694945812225342
I0123 22:08:32.458420 139974069698560 ddar.py:60] Depth 3/1000 time = 2.019885778427124
I0123 22:08:34.503577 139974069698560 ddar.py:60] Depth 4/1000 time = 2.0449771881103516
I0123 22:08:35.804970 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3012149333953857
I0123 22:08:37.825350 139974069698560 ddar.py:60] Depth 6/1000 time = 2.0198686122894287
I0123 22:08:39.964317 139974069698560 ddar.py:60] Depth 7/1000 time = 2.1252613067626953
I0123 22:08:41.310928 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3464300632476807
I0123 22:08:43.380020 139974069698560 ddar.py:60] Depth 9/1000 time = 2.0613391399383545
I0123 22:08:43.381280 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:08:43.381337 139974069698560 alphageometry.py:566] LM output (score=-2.306142): "l : C b d l 16 T b d k l 17 ;"
I0123 22:08:43.381371 139974069698560 alphageometry.py:567] Translation: "l = on_line l b d, on_tline l k b d"

I0123 22:08:43.381408 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b d, on_tline l k b d ? cong j f j e"
I0123 22:08:43.381546 139974069698560 graph.py:498] 
I0123 22:08:43.381594 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b d, on_tline l k b d ? cong j f j e
I0123 22:08:44.100996 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6657440662384033
I0123 22:08:46.267316 139974069698560 ddar.py:60] Depth 2/1000 time = 2.16611385345459
I0123 22:08:48.493916 139974069698560 ddar.py:60] Depth 3/1000 time = 2.2263050079345703
I0123 22:08:50.755635 139974069698560 ddar.py:60] Depth 4/1000 time = 2.2614951133728027
I0123 22:08:52.997359 139974069698560 ddar.py:60] Depth 5/1000 time = 2.241212844848633
I0123 22:08:55.343147 139974069698560 ddar.py:60] Depth 6/1000 time = 2.332205057144165
I0123 22:08:57.672880 139974069698560 ddar.py:60] Depth 7/1000 time = 2.329554557800293
I0123 22:09:00.012945 139974069698560 ddar.py:60] Depth 8/1000 time = 2.3332326412200928
I0123 22:09:00.014043 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:09:00.014119 139974069698560 alphageometry.py:566] LM output (score=-2.312410): "l : C b f l 16 P d g k l 17 ;"
I0123 22:09:00.014170 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_pline l k d g"

I0123 22:09:00.014209 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b f, on_pline l k d g ? cong j f j e"
I0123 22:09:00.014357 139974069698560 graph.py:498] 
I0123 22:09:00.014409 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b f, on_pline l k d g ? cong j f j e
I0123 22:09:00.869615 139974069698560 ddar.py:60] Depth 1/1000 time = 0.801485538482666
I0123 22:09:03.118078 139974069698560 ddar.py:60] Depth 2/1000 time = 2.2482972145080566
I0123 22:09:06.343486 139974069698560 ddar.py:60] Depth 3/1000 time = 3.2252089977264404
I0123 22:09:08.869529 139974069698560 ddar.py:60] Depth 4/1000 time = 2.525826930999756
I0123 22:09:11.347995 139974069698560 ddar.py:60] Depth 5/1000 time = 2.4782631397247314
I0123 22:09:13.823945 139974069698560 ddar.py:60] Depth 6/1000 time = 2.4754230976104736
I0123 22:09:16.287921 139974069698560 ddar.py:60] Depth 7/1000 time = 2.4629366397857666
I0123 22:09:19.589177 139974069698560 ddar.py:60] Depth 8/1000 time = 3.288104772567749
I0123 22:09:22.154781 139974069698560 ddar.py:60] Depth 9/1000 time = 2.5654146671295166
I0123 22:09:24.782520 139974069698560 ddar.py:60] Depth 10/1000 time = 2.615490674972534
I0123 22:09:24.783979 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:09:24.784052 139974069698560 alphageometry.py:566] LM output (score=-2.323861): "l : T b k b l 16 ;"
I0123 22:09:24.784088 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b b k"

I0123 22:09:24.784133 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_tline l b b k ? cong j f j e"
I0123 22:09:24.784278 139974069698560 graph.py:498] 
I0123 22:09:24.784331 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_tline l b b k ? cong j f j e
I0123 22:09:25.377458 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5387263298034668
I0123 22:09:27.232188 139974069698560 ddar.py:60] Depth 2/1000 time = 1.8545808792114258
I0123 22:09:29.094085 139974069698560 ddar.py:60] Depth 3/1000 time = 1.8617258071899414
I0123 22:09:30.221894 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1276397705078125
I0123 22:09:32.071667 139974069698560 ddar.py:60] Depth 5/1000 time = 1.8493709564208984
I0123 22:09:33.288769 139974069698560 ddar.py:60] Depth 6/1000 time = 1.205552577972412
I0123 22:09:35.150224 139974069698560 ddar.py:60] Depth 7/1000 time = 1.8612918853759766
I0123 22:09:37.058065 139974069698560 ddar.py:60] Depth 8/1000 time = 1.9030897617340088
I0123 22:09:37.059068 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:09:37.059130 139974069698560 alphageometry.py:566] LM output (score=-2.344724): "l : C c d l 16 D c l d l 17 ;"
I0123 22:09:37.059166 139974069698560 alphageometry.py:567] Translation: "l = on_line l c d, on_bline l d c"

I0123 22:09:37.059203 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l c d, on_bline l d c ? cong j f j e"
I0123 22:09:37.059359 139974069698560 graph.py:498] 
I0123 22:09:37.059407 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l c d, on_bline l d c ? cong j f j e
I0123 22:09:38.700581 139974069698560 ddar.py:60] Depth 1/1000 time = 1.5741746425628662
I0123 22:09:41.062108 139974069698560 ddar.py:60] Depth 2/1000 time = 2.3613638877868652
I0123 22:09:44.252997 139974069698560 ddar.py:60] Depth 3/1000 time = 3.190669536590576
I0123 22:09:46.728237 139974069698560 ddar.py:60] Depth 4/1000 time = 2.475003957748413
I0123 22:09:49.959271 139974069698560 ddar.py:60] Depth 5/1000 time = 3.2305409908294678
I0123 22:09:52.531396 139974069698560 ddar.py:60] Depth 6/1000 time = 2.557965040206909
I0123 22:09:55.074459 139974069698560 ddar.py:60] Depth 7/1000 time = 2.5428946018218994
I0123 22:09:58.377606 139974069698560 ddar.py:60] Depth 8/1000 time = 3.296358823776245
I0123 22:09:58.378792 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:09:58.378862 139974069698560 alphageometry.py:566] LM output (score=-2.367409): "l : C c j l 16 D c l j l 17 ;"
I0123 22:09:58.378897 139974069698560 alphageometry.py:567] Translation: "l = on_line l c j, on_bline l j c"

I0123 22:09:58.378944 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l c j, on_bline l j c ? cong j f j e"
I0123 22:09:58.379098 139974069698560 graph.py:498] 
I0123 22:09:58.379152 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l c j, on_bline l j c ? cong j f j e
I0123 22:09:59.086487 139974069698560 ddar.py:60] Depth 1/1000 time = 0.641261100769043
I0123 22:10:01.113265 139974069698560 ddar.py:60] Depth 2/1000 time = 2.0266001224517822
I0123 22:10:02.374714 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2612099647521973
I0123 22:10:04.386312 139974069698560 ddar.py:60] Depth 4/1000 time = 2.0113747119903564
I0123 22:10:06.395351 139974069698560 ddar.py:60] Depth 5/1000 time = 2.0088517665863037
I0123 22:10:08.427530 139974069698560 ddar.py:60] Depth 6/1000 time = 2.03165602684021
I0123 22:10:09.796974 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3554701805114746
I0123 22:10:11.833803 139974069698560 ddar.py:60] Depth 8/1000 time = 2.0366618633270264
I0123 22:10:13.910110 139974069698560 ddar.py:60] Depth 9/1000 time = 2.0683491230010986
I0123 22:10:13.911356 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:10:13.911407 139974069698560 alphageometry.py:566] LM output (score=-2.379421): "l : C b f l 16 T b f k l 17 ;"
I0123 22:10:13.911441 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_tline l k b f"

I0123 22:10:13.911483 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b f, on_tline l k b f ? cong j f j e"
I0123 22:10:13.911628 139974069698560 graph.py:498] 
I0123 22:10:13.911678 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b f, on_tline l k b f ? cong j f j e
I0123 22:10:14.686906 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7210407257080078
I0123 22:10:16.823794 139974069698560 ddar.py:60] Depth 2/1000 time = 2.13671875
I0123 22:10:19.800742 139974069698560 ddar.py:60] Depth 3/1000 time = 2.976738691329956
I0123 22:10:22.028108 139974069698560 ddar.py:60] Depth 4/1000 time = 2.227116346359253
I0123 22:10:24.233285 139974069698560 ddar.py:60] Depth 5/1000 time = 2.2047183513641357
I0123 22:10:26.528756 139974069698560 ddar.py:60] Depth 6/1000 time = 2.284691572189331
I0123 22:10:28.772948 139974069698560 ddar.py:60] Depth 7/1000 time = 2.244032621383667
I0123 22:10:31.058440 139974069698560 ddar.py:60] Depth 8/1000 time = 2.2797164916992188
I0123 22:10:31.059499 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:10:31.059564 139974069698560 alphageometry.py:566] LM output (score=-2.477003): "l : C c h l 16 D c l h l 17 ;"
I0123 22:10:31.059600 139974069698560 alphageometry.py:567] Translation: "l = on_line l c h, on_bline l h c"

I0123 22:10:31.059648 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l c h, on_bline l h c ? cong j f j e"
I0123 22:10:31.059794 139974069698560 graph.py:498] 
I0123 22:10:31.059846 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l c h, on_bline l h c ? cong j f j e
I0123 22:10:31.783035 139974069698560 ddar.py:60] Depth 1/1000 time = 0.65679931640625
I0123 22:10:33.859756 139974069698560 ddar.py:60] Depth 2/1000 time = 2.076568603515625
I0123 22:10:36.130468 139974069698560 ddar.py:60] Depth 3/1000 time = 2.270521640777588
I0123 22:10:37.553471 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4227471351623535
I0123 22:10:39.780492 139974069698560 ddar.py:60] Depth 5/1000 time = 2.22668719291687
I0123 22:10:41.970300 139974069698560 ddar.py:60] Depth 6/1000 time = 2.189236640930176
I0123 22:10:43.501107 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5177183151245117
I0123 22:10:45.717278 139974069698560 ddar.py:60] Depth 8/1000 time = 2.21600341796875
I0123 22:10:47.965938 139974069698560 ddar.py:60] Depth 9/1000 time = 2.2361483573913574
I0123 22:10:47.967348 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:10:47.967428 139974069698560 alphageometry.py:566] LM output (score=-2.490649): "l : C b f l 16 P b e e l 17 ;"
I0123 22:10:47.967465 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b e e l"

I0123 22:10:47.967502 139974069698560 alphageometry.py:566] LM output (score=-2.554736): "l : C b f l 16 T b f d l 17 ;"
I0123 22:10:47.967529 139974069698560 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2635, in add_clause
    raise PointTooCloseError()
graph.PointTooCloseError
"

I0123 22:10:47.967561 139974069698560 alphageometry.py:566] LM output (score=-2.576074): "l : C d e l 16 D d l e l 17 ;"
I0123 22:10:47.967588 139974069698560 alphageometry.py:567] Translation: "l = on_line l d e, on_bline l e d"

I0123 22:10:47.967619 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l d e, on_bline l e d ? cong j f j e"
I0123 22:10:47.967765 139974069698560 graph.py:498] 
I0123 22:10:47.967817 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l d e, on_bline l e d ? cong j f j e
I0123 22:10:49.611039 139974069698560 ddar.py:60] Depth 1/1000 time = 1.5736191272735596
I0123 22:10:52.024790 139974069698560 ddar.py:60] Depth 2/1000 time = 2.4135959148406982
I0123 22:10:55.314801 139974069698560 ddar.py:60] Depth 3/1000 time = 3.2898387908935547
I0123 22:10:57.810045 139974069698560 ddar.py:60] Depth 4/1000 time = 2.4950480461120605
I0123 22:11:00.275860 139974069698560 ddar.py:60] Depth 5/1000 time = 2.4656074047088623
I0123 22:11:03.483947 139974069698560 ddar.py:60] Depth 6/1000 time = 3.2074875831604004
I0123 22:11:06.058741 139974069698560 ddar.py:60] Depth 7/1000 time = 2.561777114868164
I0123 22:11:08.521448 139974069698560 ddar.py:60] Depth 8/1000 time = 2.462519884109497
I0123 22:11:11.765897 139974069698560 ddar.py:60] Depth 9/1000 time = 3.2353527545928955
I0123 22:11:11.767158 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:11:11.767231 139974069698560 alphageometry.py:566] LM output (score=-2.628841): "l : C b f l 16 T b f g l 17 ;"
I0123 22:11:11.767266 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_tline l g b f"

I0123 22:11:11.767302 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b f, on_tline l g b f ? cong j f j e"
I0123 22:11:11.767445 139974069698560 graph.py:498] 
I0123 22:11:11.767496 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b f, on_tline l g b f ? cong j f j e
I0123 22:11:12.583200 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7621026039123535
I0123 22:11:15.716123 139974069698560 ddar.py:60] Depth 2/1000 time = 3.1327390670776367
I0123 22:11:18.197021 139974069698560 ddar.py:60] Depth 3/1000 time = 2.4806835651397705
I0123 22:11:20.730042 139974069698560 ddar.py:60] Depth 4/1000 time = 2.5328400135040283
I0123 22:11:23.242248 139974069698560 ddar.py:60] Depth 5/1000 time = 2.5120127201080322
I0123 22:11:25.771592 139974069698560 ddar.py:60] Depth 6/1000 time = 2.5287535190582275
I0123 22:11:28.388094 139974069698560 ddar.py:60] Depth 7/1000 time = 2.602386713027954
I0123 22:11:31.723369 139974069698560 ddar.py:60] Depth 8/1000 time = 3.3350937366485596
I0123 22:11:34.354498 139974069698560 ddar.py:60] Depth 9/1000 time = 2.619767189025879
I0123 22:11:34.355859 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:11:34.355936 139974069698560 alphageometry.py:566] LM output (score=-2.630015): "l : T b c d l 16 ;"
I0123 22:11:34.355973 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d b c"

I0123 22:11:34.356011 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_tline l d b c ? cong j f j e"
I0123 22:11:34.356156 139974069698560 graph.py:498] 
I0123 22:11:34.356210 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_tline l d b c ? cong j f j e
I0123 22:11:34.946538 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5378718376159668
I0123 22:11:36.958241 139974069698560 ddar.py:60] Depth 2/1000 time = 2.011543035507202
I0123 22:11:38.317788 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3593502044677734
I0123 22:11:40.437383 139974069698560 ddar.py:60] Depth 4/1000 time = 2.119398355484009
I0123 22:11:42.570153 139974069698560 ddar.py:60] Depth 5/1000 time = 2.1323401927948
I0123 22:11:44.827456 139974069698560 ddar.py:60] Depth 6/1000 time = 2.245051145553589
I0123 22:11:47.050242 139974069698560 ddar.py:60] Depth 7/1000 time = 2.2226171493530273
I0123 22:11:48.503095 139974069698560 ddar.py:60] Depth 8/1000 time = 1.4451453685760498
I0123 22:11:48.504095 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:11:48.504154 139974069698560 alphageometry.py:566] LM output (score=-2.695156): "l : T b c b l 16 ;"
I0123 22:11:48.504191 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b b c"

I0123 22:11:48.504229 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_tline l b b c ? cong j f j e"
I0123 22:11:48.504362 139974069698560 graph.py:498] 
I0123 22:11:48.504409 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_tline l b b c ? cong j f j e
I0123 22:11:49.100528 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5418024063110352
I0123 22:11:50.957996 139974069698560 ddar.py:60] Depth 2/1000 time = 1.857323169708252
I0123 22:11:52.899099 139974069698560 ddar.py:60] Depth 3/1000 time = 1.9409306049346924
I0123 22:11:54.047649 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1483252048492432
I0123 22:11:55.956043 139974069698560 ddar.py:60] Depth 5/1000 time = 1.9078388214111328
I0123 22:11:57.980787 139974069698560 ddar.py:60] Depth 6/1000 time = 2.0131301879882812
I0123 22:11:59.158914 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1779499053955078
I0123 22:12:01.111889 139974069698560 ddar.py:60] Depth 8/1000 time = 1.948188066482544
I0123 22:12:01.112866 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:12:01.112917 139974069698560 alphageometry.py:566] LM output (score=-2.769524): "l : C a b l 16 D a l b l 17 ;"
I0123 22:12:01.112951 139974069698560 alphageometry.py:567] Translation: "l = on_line l a b, on_bline l b a"

I0123 22:12:01.112998 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l a b, on_bline l b a ? cong j f j e"
I0123 22:12:01.113145 139974069698560 graph.py:498] 
I0123 22:12:01.113197 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l a b, on_bline l b a ? cong j f j e
I0123 22:12:01.830945 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6505985260009766
I0123 22:12:03.980645 139974069698560 ddar.py:60] Depth 2/1000 time = 2.149552822113037
I0123 22:12:06.331849 139974069698560 ddar.py:60] Depth 3/1000 time = 2.3510396480560303
I0123 22:12:08.742207 139974069698560 ddar.py:60] Depth 4/1000 time = 2.4101812839508057
I0123 22:12:11.193495 139974069698560 ddar.py:60] Depth 5/1000 time = 2.4510977268218994
I0123 22:12:12.810374 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6162738800048828
I0123 22:12:15.337780 139974069698560 ddar.py:60] Depth 7/1000 time = 2.511580228805542
I0123 22:12:17.769024 139974069698560 ddar.py:60] Depth 8/1000 time = 2.4310617446899414
I0123 22:12:17.778592 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:12:17.778664 139974069698560 alphageometry.py:566] LM output (score=-2.835996): "l : C d f l 16 T b l d f 17 ;"
I0123 22:12:17.778700 139974069698560 alphageometry.py:567] Translation: "l = on_line l d f, on_tline l b d f"

I0123 22:12:17.778759 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l d f, on_tline l b d f ? cong j f j e"
I0123 22:12:17.778904 139974069698560 graph.py:498] 
I0123 22:12:17.778955 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l d f, on_tline l b d f ? cong j f j e
I0123 22:12:19.232125 139974069698560 ddar.py:60] Depth 1/1000 time = 1.3999998569488525
I0123 22:12:20.388539 139974069698560 ddar.py:60] Depth 2/1000 time = 1.1562371253967285
I0123 22:12:22.457593 139974069698560 ddar.py:60] Depth 3/1000 time = 2.0688798427581787
I0123 22:12:24.838049 139974069698560 ddar.py:60] Depth 4/1000 time = 2.3802671432495117
I0123 22:12:26.474385 139974069698560 ddar.py:60] Depth 5/1000 time = 1.636143684387207
I0123 22:12:28.906171 139974069698560 ddar.py:60] Depth 6/1000 time = 2.4312970638275146
I0123 22:12:31.471223 139974069698560 ddar.py:60] Depth 7/1000 time = 2.550785779953003
I0123 22:12:34.028734 139974069698560 ddar.py:60] Depth 8/1000 time = 2.5572078227996826
I0123 22:12:35.750830 139974069698560 ddar.py:60] Depth 9/1000 time = 1.7159008979797363
I0123 22:12:38.254034 139974069698560 ddar.py:60] Depth 10/1000 time = 2.495222330093384
I0123 22:12:38.255230 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:12:38.255292 139974069698560 alphageometry.py:566] LM output (score=-2.836856): "l : T b c h l 16 ;"
I0123 22:12:38.255327 139974069698560 alphageometry.py:567] Translation: "l = on_tline l h b c"

I0123 22:12:38.255366 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_tline l h b c ? cong j f j e"
I0123 22:12:38.255525 139974069698560 graph.py:498] 
I0123 22:12:38.255576 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_tline l h b c ? cong j f j e
I0123 22:12:38.847524 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5380854606628418
I0123 22:12:40.701750 139974069698560 ddar.py:60] Depth 2/1000 time = 1.8540832996368408
I0123 22:12:42.618755 139974069698560 ddar.py:60] Depth 3/1000 time = 1.9168422222137451
I0123 22:12:43.752384 139974069698560 ddar.py:60] Depth 4/1000 time = 1.13344407081604
I0123 22:12:45.661668 139974069698560 ddar.py:60] Depth 5/1000 time = 1.9088451862335205
I0123 22:12:47.702969 139974069698560 ddar.py:60] Depth 6/1000 time = 2.0295212268829346
I0123 22:12:48.878983 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1757869720458984
I0123 22:12:50.930833 139974069698560 ddar.py:60] Depth 8/1000 time = 2.0465943813323975
I0123 22:12:50.931836 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:12:50.931902 139974069698560 alphageometry.py:566] LM output (score=-2.904104): "l : C b d l 16 P b d b l 17 ;"
I0123 22:12:50.931937 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b d b l"

I0123 22:12:50.931976 139974069698560 alphageometry.py:566] LM output (score=-2.934058): "l : C b f l 16 P c d k l 17 ;"
I0123 22:12:50.932003 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_pline l k c d"

I0123 22:12:50.932038 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b f, on_pline l k c d ? cong j f j e"
I0123 22:12:50.932204 139974069698560 graph.py:498] 
I0123 22:12:50.932256 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b c, on_bline k c b; l = on_line l b f, on_pline l k c d ? cong j f j e
I0123 22:12:51.793080 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8067111968994141
I0123 22:12:54.099668 139974069698560 ddar.py:60] Depth 2/1000 time = 2.306415557861328
I0123 22:12:57.482223 139974069698560 ddar.py:60] Depth 3/1000 time = 3.3823745250701904
I0123 22:13:00.062125 139974069698560 ddar.py:60] Depth 4/1000 time = 2.579697608947754
I0123 22:13:02.642516 139974069698560 ddar.py:60] Depth 5/1000 time = 2.580190658569336
I0123 22:13:05.268110 139974069698560 ddar.py:60] Depth 6/1000 time = 2.6250181198120117
I0123 22:13:07.927995 139974069698560 ddar.py:60] Depth 7/1000 time = 2.658836603164673
I0123 22:13:10.671895 139974069698560 ddar.py:60] Depth 8/1000 time = 2.729940414428711
I0123 22:13:13.287465 139974069698560 ddar.py:60] Depth 9/1000 time = 2.615363359451294
I0123 22:13:16.714196 139974069698560 ddar.py:60] Depth 10/1000 time = 3.4144787788391113
I0123 22:13:16.715611 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:13:16.715683 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T c e e k 14 ; x00
I0123 22:13:22.422470 139974069698560 alphageometry.py:566] LM output (score=-0.357368): "l : P c l e k 15 ;"
I0123 22:13:22.422611 139974069698560 alphageometry.py:567] Translation: "l = on_pline l c e k"

I0123 22:13:22.422660 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l c e k ? cong j f j e"
I0123 22:13:22.422792 139974069698560 graph.py:498] 
I0123 22:13:22.422849 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l c e k ? cong j f j e
I0123 22:13:22.967421 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5014524459838867
I0123 22:13:23.915265 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9477009773254395
I0123 22:13:25.668999 139974069698560 ddar.py:60] Depth 3/1000 time = 1.7535760402679443
I0123 22:13:26.643486 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9742889404296875
I0123 22:13:28.424202 139974069698560 ddar.py:60] Depth 5/1000 time = 1.7802960872650146
I0123 22:13:29.457060 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0226781368255615
I0123 22:13:30.466255 139974069698560 ddar.py:60] Depth 7/1000 time = 1.009037733078003
I0123 22:13:32.242708 139974069698560 ddar.py:60] Depth 8/1000 time = 1.7725105285644531
I0123 22:13:32.243618 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:13:32.243668 139974069698560 alphageometry.py:566] LM output (score=-1.134088): "l : P c e k l 15 P c l e k 16 ;"
I0123 22:13:32.243700 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k c e, on_pline l c e k"

I0123 22:13:32.243736 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l k c e, on_pline l c e k ? cong j f j e"
I0123 22:13:32.243885 139974069698560 graph.py:498] 
I0123 22:13:32.243934 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l k c e, on_pline l c e k ? cong j f j e
I0123 22:13:32.879885 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5892202854156494
I0123 22:13:35.007929 139974069698560 ddar.py:60] Depth 2/1000 time = 2.1279022693634033
I0123 22:13:36.408392 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4003002643585205
I0123 22:13:38.660449 139974069698560 ddar.py:60] Depth 4/1000 time = 2.251879930496216
I0123 22:13:40.099677 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4387485980987549
I0123 22:13:42.420845 139974069698560 ddar.py:60] Depth 6/1000 time = 2.308269500732422
I0123 22:13:43.901313 139974069698560 ddar.py:60] Depth 7/1000 time = 1.480287790298462
I0123 22:13:46.170913 139974069698560 ddar.py:60] Depth 8/1000 time = 2.2633466720581055
I0123 22:13:46.171918 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:13:46.171967 139974069698560 alphageometry.py:566] LM output (score=-1.162513): "l : P c e k l 15 ;"
I0123 22:13:46.172001 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k c e"

I0123 22:13:46.172037 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l k c e ? cong j f j e"
I0123 22:13:46.172172 139974069698560 graph.py:498] 
I0123 22:13:46.172220 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l k c e ? cong j f j e
I0123 22:13:46.694997 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4801790714263916
I0123 22:13:48.304398 139974069698560 ddar.py:60] Depth 2/1000 time = 1.609264612197876
I0123 22:13:49.105593 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8010258674621582
I0123 22:13:49.918460 139974069698560 ddar.py:60] Depth 4/1000 time = 0.812690019607544
I0123 22:13:51.535250 139974069698560 ddar.py:60] Depth 5/1000 time = 1.616417646408081
I0123 22:13:52.446895 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9026451110839844
I0123 22:13:53.322496 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8754363059997559
I0123 22:13:54.981897 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6556730270385742
I0123 22:13:54.982784 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:13:54.982834 139974069698560 alphageometry.py:566] LM output (score=-2.056301): "l : P g i k l 15 ;"
I0123 22:13:54.982866 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k g i"

I0123 22:13:54.982902 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l k g i ? cong j f j e"
I0123 22:13:54.983035 139974069698560 graph.py:498] 
I0123 22:13:54.983083 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l k g i ? cong j f j e
I0123 22:13:55.494874 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4693586826324463
I0123 22:13:57.116180 139974069698560 ddar.py:60] Depth 2/1000 time = 1.621166706085205
I0123 22:13:57.924069 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8077151775360107
I0123 22:13:58.734302 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8100495338439941
I0123 22:14:00.417843 139974069698560 ddar.py:60] Depth 5/1000 time = 1.683178424835205
I0123 22:14:01.342571 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9151723384857178
I0123 22:14:02.234352 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8915491104125977
I0123 22:14:03.922846 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6845436096191406
I0123 22:14:03.923720 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:14:03.923779 139974069698560 alphageometry.py:566] LM output (score=-2.364759): "l : P c g k l 15 ;"
I0123 22:14:03.923813 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k c g"

I0123 22:14:03.923854 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l k c g ? cong j f j e"
I0123 22:14:03.923993 139974069698560 graph.py:498] 
I0123 22:14:03.924044 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l k c g ? cong j f j e
I0123 22:14:04.449369 139974069698560 ddar.py:60] Depth 1/1000 time = 0.48224830627441406
I0123 22:14:05.241983 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7924773693084717
I0123 22:14:06.827425 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5852789878845215
I0123 22:14:07.631433 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8038234710693359
I0123 22:14:09.249800 139974069698560 ddar.py:60] Depth 5/1000 time = 1.6179718971252441
I0123 22:14:10.172464 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9136855602264404
I0123 22:14:11.051640 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8790102005004883
I0123 22:14:12.722501 139974069698560 ddar.py:60] Depth 8/1000 time = 1.667212724685669
I0123 22:14:12.723385 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:14:12.723435 139974069698560 alphageometry.py:566] LM output (score=-2.454798): "l : P c g h l 15 ;"
I0123 22:14:12.723467 139974069698560 alphageometry.py:567] Translation: "l = on_pline l h c g"

I0123 22:14:12.723502 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l h c g ? cong j f j e"
I0123 22:14:12.723632 139974069698560 graph.py:498] 
I0123 22:14:12.723680 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l h c g ? cong j f j e
I0123 22:14:13.249848 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4835498332977295
I0123 22:14:14.876631 139974069698560 ddar.py:60] Depth 2/1000 time = 1.6266441345214844
I0123 22:14:15.680727 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8039391040802002
I0123 22:14:16.489335 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8084526062011719
I0123 22:14:18.102034 139974069698560 ddar.py:60] Depth 5/1000 time = 1.6123316287994385
I0123 22:14:19.011219 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9002163410186768
I0123 22:14:19.889802 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8784158229827881
I0123 22:14:21.554697 139974069698560 ddar.py:60] Depth 8/1000 time = 1.660959243774414
I0123 22:14:21.555565 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:14:21.555619 139974069698560 alphageometry.py:566] LM output (score=-2.471331): "l : P g i j l 15 ;"
I0123 22:14:21.555653 139974069698560 alphageometry.py:567] Translation: "l = on_pline l j g i"

I0123 22:14:21.555703 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l j g i ? cong j f j e"
I0123 22:14:21.555838 139974069698560 graph.py:498] 
I0123 22:14:21.555886 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l j g i ? cong j f j e
I0123 22:14:22.069702 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4715113639831543
I0123 22:14:22.871263 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8014390468597412
I0123 22:14:24.490668 139974069698560 ddar.py:60] Depth 3/1000 time = 1.619234323501587
I0123 22:14:25.310576 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8197073936462402
I0123 22:14:26.133726 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8227429389953613
I0123 22:14:27.905594 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7624390125274658
I0123 22:14:28.805529 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8997418880462646
I0123 22:14:30.537771 139974069698560 ddar.py:60] Depth 8/1000 time = 1.728421926498413
I0123 22:14:30.538656 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:14:30.538708 139974069698560 alphageometry.py:566] LM output (score=-2.568620): "l : P g l e k 15 ;"
I0123 22:14:30.538742 139974069698560 alphageometry.py:567] Translation: "l = on_pline l g e k"

I0123 22:14:30.538792 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l g e k ? cong j f j e"
I0123 22:14:30.538934 139974069698560 graph.py:498] 
I0123 22:14:30.538987 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l g e k ? cong j f j e
I0123 22:14:31.058213 139974069698560 ddar.py:60] Depth 1/1000 time = 0.47611427307128906
I0123 22:14:31.841210 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7828679084777832
I0123 22:14:33.423174 139974069698560 ddar.py:60] Depth 3/1000 time = 1.581799030303955
I0123 22:14:34.212260 139974069698560 ddar.py:60] Depth 4/1000 time = 0.7889065742492676
I0123 22:14:35.004646 139974069698560 ddar.py:60] Depth 5/1000 time = 0.7920188903808594
I0123 22:14:36.692775 139974069698560 ddar.py:60] Depth 6/1000 time = 1.679413080215454
I0123 22:14:37.571325 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8783738613128662
I0123 22:14:39.255655 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6806271076202393
I0123 22:14:39.256517 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:14:39.256577 139974069698560 alphageometry.py:566] LM output (score=-2.891128): "l : P g i i l 15 ;"
I0123 22:14:39.256612 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P g i i l"

I0123 22:14:39.256645 139974069698560 alphageometry.py:566] LM output (score=-2.963561): "l : P c g j l 15 ;"
I0123 22:14:39.256672 139974069698560 alphageometry.py:567] Translation: "l = on_pline l j c g"

I0123 22:14:39.256702 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l j c g ? cong j f j e"
I0123 22:14:39.256833 139974069698560 graph.py:498] 
I0123 22:14:39.256881 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l j c g ? cong j f j e
I0123 22:14:39.781145 139974069698560 ddar.py:60] Depth 1/1000 time = 0.48171520233154297
I0123 22:14:40.579583 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7983019351959229
I0123 22:14:42.191296 139974069698560 ddar.py:60] Depth 3/1000 time = 1.6115405559539795
I0123 22:14:42.995872 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8043978214263916
I0123 22:14:43.815738 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8194971084594727
I0123 22:14:45.569367 139974069698560 ddar.py:60] Depth 6/1000 time = 1.74465012550354
I0123 22:14:46.440679 139974069698560 ddar.py:60] Depth 7/1000 time = 0.871037483215332
I0123 22:14:48.197262 139974069698560 ddar.py:60] Depth 8/1000 time = 1.7529075145721436
I0123 22:14:48.198167 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:14:48.198220 139974069698560 alphageometry.py:566] LM output (score=-2.996534): "l : P g i h l 15 ;"
I0123 22:14:48.198254 139974069698560 alphageometry.py:567] Translation: "l = on_pline l h g i"

I0123 22:14:48.198296 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l h g i ? cong j f j e"
I0123 22:14:48.198438 139974069698560 graph.py:498] 
I0123 22:14:48.198491 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l h g i ? cong j f j e
I0123 22:14:48.716024 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4740946292877197
I0123 22:14:49.517876 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8017218112945557
I0123 22:14:51.155961 139974069698560 ddar.py:60] Depth 3/1000 time = 1.6379342079162598
I0123 22:14:51.969748 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8136031627655029
I0123 22:14:52.789872 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8197891712188721
I0123 22:14:54.534745 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7355351448059082
I0123 22:14:55.432078 139974069698560 ddar.py:60] Depth 7/1000 time = 0.897160530090332
I0123 22:14:57.174555 139974069698560 ddar.py:60] Depth 8/1000 time = 1.7387430667877197
I0123 22:14:57.175453 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:14:57.175504 139974069698560 alphageometry.py:566] LM output (score=-3.276107): "l : P b l c g 15 ;"
I0123 22:14:57.175537 139974069698560 alphageometry.py:567] Translation: "l = on_pline l b c g"

I0123 22:14:57.175574 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l b c g ? cong j f j e"
I0123 22:14:57.175706 139974069698560 graph.py:498] 
I0123 22:14:57.175752 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l b c g ? cong j f j e
I0123 22:14:57.697858 139974069698560 ddar.py:60] Depth 1/1000 time = 0.47927308082580566
I0123 22:14:58.501439 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8034529685974121
I0123 22:15:00.135796 139974069698560 ddar.py:60] Depth 3/1000 time = 1.6342031955718994
I0123 22:15:00.954927 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8189544677734375
I0123 22:15:01.771630 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8163192272186279
I0123 22:15:03.568713 139974069698560 ddar.py:60] Depth 6/1000 time = 1.788121223449707
I0123 22:15:04.455014 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8860888481140137
I0123 22:15:05.346299 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8874771595001221
I0123 22:15:05.347225 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:15:05.347308 139974069698560 alphageometry.py:566] LM output (score=-3.288662): "l : P b l e k 15 ;"
I0123 22:15:05.347343 139974069698560 alphageometry.py:567] Translation: "l = on_pline l b e k"

I0123 22:15:05.347403 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l b e k ? cong j f j e"
I0123 22:15:05.347564 139974069698560 graph.py:498] 
I0123 22:15:05.347616 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l b e k ? cong j f j e
I0123 22:15:06.685687 139974069698560 ddar.py:60] Depth 1/1000 time = 1.2943267822265625
I0123 22:15:07.464572 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7787296772003174
I0123 22:15:08.245498 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7807738780975342
I0123 22:15:09.830664 139974069698560 ddar.py:60] Depth 4/1000 time = 1.585010051727295
I0123 22:15:10.621537 139974069698560 ddar.py:60] Depth 5/1000 time = 0.7904858589172363
I0123 22:15:12.357707 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7273950576782227
I0123 22:15:13.235333 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8774642944335938
I0123 22:15:14.117602 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8785703182220459
I0123 22:15:14.118446 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:15:14.118495 139974069698560 alphageometry.py:566] LM output (score=-3.299485): "l : P c g f l 15 ;"
I0123 22:15:14.118530 139974069698560 alphageometry.py:567] Translation: "l = on_pline l f c g"

I0123 22:15:14.118566 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l f c g ? cong j f j e"
I0123 22:15:14.118696 139974069698560 graph.py:498] 
I0123 22:15:14.118743 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l f c g ? cong j f j e
I0123 22:15:15.448908 139974069698560 ddar.py:60] Depth 1/1000 time = 1.2873601913452148
I0123 22:15:16.252249 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8031740188598633
I0123 22:15:17.061418 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8090040683746338
I0123 22:15:18.702464 139974069698560 ddar.py:60] Depth 4/1000 time = 1.640869140625
I0123 22:15:19.524411 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8215479850769043
I0123 22:15:20.441185 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9077532291412354
I0123 22:15:22.181782 139974069698560 ddar.py:60] Depth 7/1000 time = 1.7404258251190186
I0123 22:15:23.082031 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8964836597442627
I0123 22:15:23.083042 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:15:23.083130 139974069698560 alphageometry.py:566] LM output (score=-3.330140): "l : P g h g l 15 T f g g l 16 ;"
I0123 22:15:23.083167 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P g h g l"

I0123 22:15:23.083213 139974069698560 alphageometry.py:566] LM output (score=-3.339191): "l : P b l d e 15 ;"
I0123 22:15:23.083240 139974069698560 alphageometry.py:567] Translation: "l = on_pline l b d e"

I0123 22:15:23.083276 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l b d e ? cong j f j e"
I0123 22:15:23.083442 139974069698560 graph.py:498] 
I0123 22:15:23.083495 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l b d e ? cong j f j e
I0123 22:15:23.607842 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4811549186706543
I0123 22:15:25.283850 139974069698560 ddar.py:60] Depth 2/1000 time = 1.6758625507354736
I0123 22:15:26.097250 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8132266998291016
I0123 22:15:27.747197 139974069698560 ddar.py:60] Depth 4/1000 time = 1.6497745513916016
I0123 22:15:28.570124 139974069698560 ddar.py:60] Depth 5/1000 time = 0.822509765625
I0123 22:15:29.488390 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9093422889709473
I0123 22:15:31.199262 139974069698560 ddar.py:60] Depth 7/1000 time = 1.7107057571411133
I0123 22:15:32.091968 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8890604972839355
I0123 22:15:32.092841 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:15:32.092894 139974069698560 alphageometry.py:566] LM output (score=-3.377905): "l : P g i i l 15 T c i i l 16 ;"
I0123 22:15:32.092929 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P g i i l"

I0123 22:15:32.092964 139974069698560 alphageometry.py:566] LM output (score=-3.585792): "l : P b f g l 15 ;"
I0123 22:15:32.092991 139974069698560 alphageometry.py:567] Translation: "l = on_pline l g b f"

I0123 22:15:32.093022 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l g b f ? cong j f j e"
I0123 22:15:32.093153 139974069698560 graph.py:498] 
I0123 22:15:32.093200 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l g b f ? cong j f j e
I0123 22:15:32.606450 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4692561626434326
I0123 22:15:34.256997 139974069698560 ddar.py:60] Depth 2/1000 time = 1.6504082679748535
I0123 22:15:35.073213 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8160464763641357
I0123 22:15:35.894145 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8207602500915527
I0123 22:15:37.533560 139974069698560 ddar.py:60] Depth 5/1000 time = 1.6390385627746582
I0123 22:15:38.453126 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9101073741912842
I0123 22:15:40.243058 139974069698560 ddar.py:60] Depth 7/1000 time = 1.7897553443908691
I0123 22:15:41.154818 139974069698560 ddar.py:60] Depth 8/1000 time = 0.9079976081848145
I0123 22:15:41.155814 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:15:41.155895 139974069698560 alphageometry.py:566] LM output (score=-3.642538): "l : P c g g l 15 ;"
I0123 22:15:41.155931 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P c g g l"

I0123 22:15:41.155975 139974069698560 alphageometry.py:566] LM output (score=-3.670667): "l : P c d g l 15 ;"
I0123 22:15:41.156004 139974069698560 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2570, in add_clause
    raise DepCheckFailError(
graph.DepCheckFailError: ncoll g c d
"

I0123 22:15:41.156052 139974069698560 alphageometry.py:566] LM output (score=-3.672297): "l : P b l c e 15 ;"
I0123 22:15:41.156080 139974069698560 alphageometry.py:567] Translation: "l = on_pline l b c e"

I0123 22:15:41.156115 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l b c e ? cong j f j e"
I0123 22:15:41.156264 139974069698560 graph.py:498] 
I0123 22:15:41.156316 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l b c e ? cong j f j e
I0123 22:15:41.677286 139974069698560 ddar.py:60] Depth 1/1000 time = 0.47775912284851074
I0123 22:15:43.332098 139974069698560 ddar.py:60] Depth 2/1000 time = 1.654662847518921
I0123 22:15:44.137027 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8047382831573486
I0123 22:15:44.952253 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8150651454925537
I0123 22:15:46.613175 139974069698560 ddar.py:60] Depth 5/1000 time = 1.6605429649353027
I0123 22:15:47.527093 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9050149917602539
I0123 22:15:49.263983 139974069698560 ddar.py:60] Depth 7/1000 time = 1.7367222309112549
I0123 22:15:50.158344 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8904130458831787
I0123 22:15:50.159206 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:15:50.159259 139974069698560 alphageometry.py:566] LM output (score=-3.677914): "l : P b l e g 15 ;"
I0123 22:15:50.159292 139974069698560 alphageometry.py:567] Translation: "l = on_pline l b e g"

I0123 22:15:50.159330 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l b e g ? cong j f j e"
I0123 22:15:50.159461 139974069698560 graph.py:498] 
I0123 22:15:50.159508 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l b e g ? cong j f j e
I0123 22:15:50.677209 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4744892120361328
I0123 22:15:51.477295 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7999496459960938
I0123 22:15:53.095403 139974069698560 ddar.py:60] Depth 3/1000 time = 1.6179413795471191
I0123 22:15:53.906233 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8106575012207031
I0123 22:15:55.541774 139974069698560 ddar.py:60] Depth 5/1000 time = 1.6351816654205322
I0123 22:15:56.459692 139974069698560 ddar.py:60] Depth 6/1000 time = 0.909121036529541
I0123 22:15:57.338708 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8788571357727051
I0123 22:15:59.117733 139974069698560 ddar.py:60] Depth 8/1000 time = 1.7751424312591553
I0123 22:15:59.118598 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:15:59.118648 139974069698560 alphageometry.py:566] LM output (score=-3.681894): "l : P g h g l 15 T e h g l 16 ;"
I0123 22:15:59.118682 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P g h g l"

I0123 22:15:59.118715 139974069698560 alphageometry.py:566] LM output (score=-3.718088): "l : P g h g l 15 T c l g h 16 ;"
I0123 22:15:59.118742 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P g h g l"

I0123 22:15:59.118770 139974069698560 alphageometry.py:566] LM output (score=-3.810590): "l : P b c h l 15 ;"
I0123 22:15:59.118797 139974069698560 alphageometry.py:567] Translation: "l = on_pline l h b c"

I0123 22:15:59.118825 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l h b c ? cong j f j e"
I0123 22:15:59.118969 139974069698560 graph.py:498] 
I0123 22:15:59.119016 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l h b c ? cong j f j e
I0123 22:15:59.636453 139974069698560 ddar.py:60] Depth 1/1000 time = 0.47480344772338867
I0123 22:16:00.435691 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7990119457244873
I0123 22:16:02.104563 139974069698560 ddar.py:60] Depth 3/1000 time = 1.6687018871307373
I0123 22:16:02.920054 139974069698560 ddar.py:60] Depth 4/1000 time = 0.815305233001709
I0123 22:16:03.735771 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8153901100158691
I0123 22:16:05.468890 139974069698560 ddar.py:60] Depth 6/1000 time = 1.7237012386322021
I0123 22:16:06.369259 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9001994132995605
I0123 22:16:08.118457 139974069698560 ddar.py:60] Depth 8/1000 time = 1.7454652786254883
I0123 22:16:08.119353 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:16:08.119405 139974069698560 alphageometry.py:566] LM output (score=-3.811496): "l : P g h h l 15 T f h h l 16 ;"
I0123 22:16:08.119439 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P g h h l"

I0123 22:16:08.119472 139974069698560 alphageometry.py:566] LM output (score=-3.817262): "l : P b c f l 15 P b f c l 16 ;"
I0123 22:16:08.119499 139974069698560 alphageometry.py:567] Translation: "l = on_pline l f b c, on_pline l c b f"

I0123 22:16:08.119539 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l f b c, on_pline l c b f ? cong j f j e"
I0123 22:16:08.119679 139974069698560 graph.py:498] 
I0123 22:16:08.119731 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l f b c, on_pline l c b f ? cong j f j e
I0123 22:16:08.695670 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5285210609436035
I0123 22:16:09.793790 139974069698560 ddar.py:60] Depth 2/1000 time = 1.097977638244629
I0123 22:16:12.296762 139974069698560 ddar.py:60] Depth 3/1000 time = 2.502804756164551
I0123 22:16:14.884224 139974069698560 ddar.py:60] Depth 4/1000 time = 2.587287425994873
I0123 22:16:17.520559 139974069698560 ddar.py:60] Depth 5/1000 time = 2.636159896850586
I0123 22:16:20.213064 139974069698560 ddar.py:60] Depth 6/1000 time = 2.692288637161255
I0123 22:16:22.848986 139974069698560 ddar.py:60] Depth 7/1000 time = 2.6354258060455322
I0123 22:16:25.657787 139974069698560 ddar.py:60] Depth 8/1000 time = 2.796154737472534
I0123 22:16:28.408869 139974069698560 ddar.py:60] Depth 9/1000 time = 2.750898838043213
I0123 22:16:31.200601 139974069698560 ddar.py:60] Depth 10/1000 time = 2.7831010818481445
I0123 22:16:31.203933 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:16:31.203994 139974069698560 alphageometry.py:566] LM output (score=-3.830686): "l : P b d g l 15 ;"
I0123 22:16:31.204028 139974069698560 alphageometry.py:567] Translation: "l = on_pline l g b d"

I0123 22:16:31.204066 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l g b d ? cong j f j e"
I0123 22:16:31.204209 139974069698560 graph.py:498] 
I0123 22:16:31.204260 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l g b d ? cong j f j e
I0123 22:16:31.710927 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4618844985961914
I0123 22:16:32.513457 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8024032115936279
I0123 22:16:33.332796 139974069698560 ddar.py:60] Depth 3/1000 time = 0.819185733795166
I0123 22:16:35.002865 139974069698560 ddar.py:60] Depth 4/1000 time = 1.6698963642120361
I0123 22:16:35.817872 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8146190643310547
I0123 22:16:36.740222 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9130170345306396
I0123 22:16:38.508059 139974069698560 ddar.py:60] Depth 7/1000 time = 1.7675492763519287
I0123 22:16:39.397347 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8855595588684082
I0123 22:16:39.398205 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:16:39.398280 139974069698560 alphageometry.py:566] LM output (score=-3.855283): "l : P g h g l 15 T b l g h 16 ;"
I0123 22:16:39.398316 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P g h g l"

I0123 22:16:39.398355 139974069698560 alphageometry.py:566] LM output (score=-3.865853): "l : P g i g l 15 ;"
I0123 22:16:39.398382 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P g i g l"

I0123 22:16:39.398410 139974069698560 alphageometry.py:566] LM output (score=-3.876926): "l : P c g f l 15 P c l f g 16 ;"
I0123 22:16:39.398435 139974069698560 alphageometry.py:567] Translation: "l = on_pline l f c g, on_pline l c f g"

I0123 22:16:39.398467 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l f c g, on_pline l c f g ? cong j f j e"
I0123 22:16:39.398619 139974069698560 graph.py:498] 
I0123 22:16:39.398671 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l f c g, on_pline l c f g ? cong j f j e
I0123 22:16:40.866529 139974069698560 ddar.py:60] Depth 1/1000 time = 1.4194648265838623
I0123 22:16:41.998427 139974069698560 ddar.py:60] Depth 2/1000 time = 1.131739854812622
I0123 22:16:44.224889 139974069698560 ddar.py:60] Depth 3/1000 time = 2.2262916564941406
I0123 22:16:45.604945 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3798894882202148
I0123 22:16:47.832848 139974069698560 ddar.py:60] Depth 5/1000 time = 2.2275032997131348
I0123 22:16:49.355397 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5110054016113281
I0123 22:16:51.650931 139974069698560 ddar.py:60] Depth 7/1000 time = 2.2953684329986572
I0123 22:16:54.073709 139974069698560 ddar.py:60] Depth 8/1000 time = 2.415053129196167
I0123 22:16:55.684387 139974069698560 ddar.py:60] Depth 9/1000 time = 1.6104648113250732
I0123 22:16:58.197671 139974069698560 ddar.py:60] Depth 10/1000 time = 2.512969970703125
I0123 22:16:58.201722 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:16:58.201798 139974069698560 alphageometry.py:566] LM output (score=-3.908685): "l : P b d e l 15 ;"
I0123 22:16:58.201834 139974069698560 alphageometry.py:567] Translation: "l = on_pline l e b d"

I0123 22:16:58.201879 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l e b d ? cong j f j e"
I0123 22:16:58.202026 139974069698560 graph.py:498] 
I0123 22:16:58.202091 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k e c e; l = on_pline l e b d ? cong j f j e
I0123 22:16:58.711598 139974069698560 ddar.py:60] Depth 1/1000 time = 0.46602439880371094
I0123 22:17:00.399498 139974069698560 ddar.py:60] Depth 2/1000 time = 1.68776273727417
I0123 22:17:01.220510 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8208389282226562
I0123 22:17:02.045090 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8244154453277588
I0123 22:17:03.720850 139974069698560 ddar.py:60] Depth 5/1000 time = 1.6753828525543213
I0123 22:17:04.636105 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9059667587280273
I0123 22:17:05.523102 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8868279457092285
I0123 22:17:07.274615 139974069698560 ddar.py:60] Depth 8/1000 time = 1.7476379871368408
I0123 22:17:07.275473 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:17:07.275548 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D b d d k 14 T b d d k 15 ; x00
I0123 22:17:13.094692 139974069698560 alphageometry.py:566] LM output (score=-0.462900): "l : P b l d k 16 ;"
I0123 22:17:13.094843 139974069698560 alphageometry.py:567] Translation: "l = on_pline l b d k"

I0123 22:17:13.094893 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_pline l b d k ? cong j f j e"
I0123 22:17:13.095031 139974069698560 graph.py:498] 
I0123 22:17:13.095083 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_pline l b d k ? cong j f j e
I0123 22:17:13.799087 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6542179584503174
I0123 22:17:16.080350 139974069698560 ddar.py:60] Depth 2/1000 time = 2.2811148166656494
I0123 22:17:18.377071 139974069698560 ddar.py:60] Depth 3/1000 time = 2.2965426445007324
I0123 22:17:19.794049 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4167890548706055
I0123 22:17:22.098275 139974069698560 ddar.py:60] Depth 5/1000 time = 2.3037545680999756
I0123 22:17:24.404221 139974069698560 ddar.py:60] Depth 6/1000 time = 2.3050897121429443
I0123 22:17:26.805614 139974069698560 ddar.py:60] Depth 7/1000 time = 2.389888048171997
I0123 22:17:28.266525 139974069698560 ddar.py:60] Depth 8/1000 time = 1.460740089416504
I0123 22:17:30.584997 139974069698560 ddar.py:60] Depth 9/1000 time = 2.314251184463501
I0123 22:17:30.585932 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:17:30.586006 139974069698560 alphageometry.py:566] LM output (score=-1.264982): "l : P b l d k 16 T b k d l 17 ;"
I0123 22:17:30.586043 139974069698560 alphageometry.py:567] Translation: "l = on_pline l b d k, on_tline l d b k"

I0123 22:17:30.586087 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_pline l b d k, on_tline l d b k ? cong j f j e"
I0123 22:17:30.586238 139974069698560 graph.py:498] 
I0123 22:17:30.586293 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_pline l b d k, on_tline l d b k ? cong j f j e
I0123 22:17:32.189605 139974069698560 ddar.py:60] Depth 1/1000 time = 1.5493872165679932
I0123 22:17:33.777616 139974069698560 ddar.py:60] Depth 2/1000 time = 1.5878326892852783
I0123 22:17:37.187588 139974069698560 ddar.py:60] Depth 3/1000 time = 3.4098010063171387
I0123 22:17:40.221525 139974069698560 ddar.py:60] Depth 4/1000 time = 3.033768653869629
I0123 22:17:43.271414 139974069698560 ddar.py:60] Depth 5/1000 time = 3.049443006515503
I0123 22:17:46.360373 139974069698560 ddar.py:60] Depth 6/1000 time = 3.087735176086426
I0123 22:17:49.577709 139974069698560 ddar.py:60] Depth 7/1000 time = 3.201686382293701
I0123 22:17:52.776683 139974069698560 ddar.py:60] Depth 8/1000 time = 3.1987953186035156
I0123 22:17:55.987120 139974069698560 ddar.py:60] Depth 9/1000 time = 3.202763557434082
I0123 22:17:55.988173 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:17:55.988234 139974069698560 alphageometry.py:566] LM output (score=-1.728129): "l : C b c l 16 D b l c l 17 ;"
I0123 22:17:55.988268 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 22:17:55.988304 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b c, on_bline l c b ? cong j f j e"
I0123 22:17:55.988442 139974069698560 graph.py:498] 
I0123 22:17:55.988490 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b c, on_bline l c b ? cong j f j e
I0123 22:17:56.741630 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6924607753753662
I0123 22:17:59.111834 139974069698560 ddar.py:60] Depth 2/1000 time = 2.370044231414795
I0123 22:18:00.644932 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5329196453094482
I0123 22:18:03.082073 139974069698560 ddar.py:60] Depth 4/1000 time = 2.4369540214538574
I0123 22:18:04.634713 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5521929264068604
I0123 22:18:07.046628 139974069698560 ddar.py:60] Depth 6/1000 time = 2.410940647125244
I0123 22:18:09.599720 139974069698560 ddar.py:60] Depth 7/1000 time = 2.5360472202301025
I0123 22:18:11.197242 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5973279476165771
I0123 22:18:13.644431 139974069698560 ddar.py:60] Depth 9/1000 time = 2.442080020904541
I0123 22:18:13.645470 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:18:13.645534 139974069698560 alphageometry.py:566] LM output (score=-1.777039): "l : C b i l 16 D b l i l 17 ;"
I0123 22:18:13.645570 139974069698560 alphageometry.py:567] Translation: "l = on_line l b i, on_bline l i b"

I0123 22:18:13.645622 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b i, on_bline l i b ? cong j f j e"
I0123 22:18:13.645806 139974069698560 graph.py:498] 
I0123 22:18:13.645862 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b i, on_bline l i b ? cong j f j e
I0123 22:18:14.385657 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6787056922912598
I0123 22:18:16.464539 139974069698560 ddar.py:60] Depth 2/1000 time = 2.0787241458892822
I0123 22:18:17.739032 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2743163108825684
I0123 22:18:19.862005 139974069698560 ddar.py:60] Depth 4/1000 time = 2.122764825820923
I0123 22:18:21.151235 139974069698560 ddar.py:60] Depth 5/1000 time = 1.288755178451538
I0123 22:18:23.278894 139974069698560 ddar.py:60] Depth 6/1000 time = 2.1269333362579346
I0123 22:18:25.607953 139974069698560 ddar.py:60] Depth 7/1000 time = 2.3164939880371094
I0123 22:18:26.938810 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3306281566619873
I0123 22:18:28.277120 139974069698560 ddar.py:60] Depth 9/1000 time = 1.332885503768921
I0123 22:18:28.278219 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:18:28.278309 139974069698560 alphageometry.py:566] LM output (score=-1.850239): "l : P b d k l 16 ;"
I0123 22:18:28.278343 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k b d"

I0123 22:18:28.278402 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_pline l k b d ? cong j f j e"
I0123 22:18:28.278578 139974069698560 graph.py:498] 
I0123 22:18:28.278632 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_pline l k b d ? cong j f j e
I0123 22:18:29.834080 139974069698560 ddar.py:60] Depth 1/1000 time = 1.5049781799316406
I0123 22:18:30.985985 139974069698560 ddar.py:60] Depth 2/1000 time = 1.1517326831817627
I0123 22:18:33.065458 139974069698560 ddar.py:60] Depth 3/1000 time = 2.0792946815490723
I0123 22:18:34.239830 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1741819381713867
I0123 22:18:35.413608 139974069698560 ddar.py:60] Depth 5/1000 time = 1.173325538635254
I0123 22:18:37.447939 139974069698560 ddar.py:60] Depth 6/1000 time = 2.0335583686828613
I0123 22:18:38.705164 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2451667785644531
I0123 22:18:40.800765 139974069698560 ddar.py:60] Depth 8/1000 time = 2.0954270362854004
I0123 22:18:42.043573 139974069698560 ddar.py:60] Depth 9/1000 time = 1.238802194595337
I0123 22:18:42.044517 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:18:42.044588 139974069698560 alphageometry.py:566] LM output (score=-1.879785): "l : P b d k l 16 P b l d k 17 ;"
I0123 22:18:42.044624 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k b d, on_pline l b d k"

I0123 22:18:42.044661 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_pline l k b d, on_pline l b d k ? cong j f j e"
I0123 22:18:42.044806 139974069698560 graph.py:498] 
I0123 22:18:42.044857 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_pline l k b d, on_pline l b d k ? cong j f j e
I0123 22:18:42.815117 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7169444561004639
I0123 22:18:46.112928 139974069698560 ddar.py:60] Depth 2/1000 time = 3.2975986003875732
I0123 22:18:49.218439 139974069698560 ddar.py:60] Depth 3/1000 time = 3.1052145957946777
I0123 22:18:52.305876 139974069698560 ddar.py:60] Depth 4/1000 time = 3.087238311767578
I0123 22:18:55.389193 139974069698560 ddar.py:60] Depth 5/1000 time = 3.0827391147613525
I0123 22:18:58.513608 139974069698560 ddar.py:60] Depth 6/1000 time = 3.1234283447265625
I0123 22:19:01.737110 139974069698560 ddar.py:60] Depth 7/1000 time = 3.2090139389038086
I0123 22:19:04.987696 139974069698560 ddar.py:60] Depth 8/1000 time = 3.2503483295440674
I0123 22:19:08.265461 139974069698560 ddar.py:60] Depth 9/1000 time = 3.26996111869812
I0123 22:19:08.266525 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:19:08.266599 139974069698560 alphageometry.py:566] LM output (score=-1.968748): "l : C b k l 16 D b l k l 17 ;"
I0123 22:19:08.266637 139974069698560 alphageometry.py:567] Translation: "l = on_line l b k, on_bline l k b"

I0123 22:19:08.266684 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b k, on_bline l k b ? cong j f j e"
I0123 22:19:08.266835 139974069698560 graph.py:498] 
I0123 22:19:08.266889 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b k, on_bline l k b ? cong j f j e
I0123 22:19:09.036580 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7074887752532959
I0123 22:19:11.443273 139974069698560 ddar.py:60] Depth 2/1000 time = 2.4065306186676025
I0123 22:19:12.970157 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5267081260681152
I0123 22:19:15.382294 139974069698560 ddar.py:60] Depth 4/1000 time = 2.411936044692993
I0123 22:19:16.915745 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5329618453979492
I0123 22:19:19.322106 139974069698560 ddar.py:60] Depth 6/1000 time = 2.4053564071655273
I0123 22:19:21.950140 139974069698560 ddar.py:60] Depth 7/1000 time = 2.612185001373291
I0123 22:19:23.574913 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6244988441467285
I0123 22:19:26.171516 139974069698560 ddar.py:60] Depth 9/1000 time = 2.590967893600464
I0123 22:19:26.172616 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:19:26.172668 139974069698560 alphageometry.py:566] LM output (score=-1.972852): "l : D b l k l 16 P b l d k 17 ;"
I0123 22:19:26.172702 139974069698560 alphageometry.py:567] Translation: "l = on_bline l k b, on_pline l b d k"

I0123 22:19:26.172746 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_bline l k b, on_pline l b d k ? cong j f j e"
I0123 22:19:26.172896 139974069698560 graph.py:498] 
I0123 22:19:26.172948 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_bline l k b, on_pline l b d k ? cong j f j e
I0123 22:19:26.988524 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7507715225219727
I0123 22:19:29.571786 139974069698560 ddar.py:60] Depth 2/1000 time = 2.5831027030944824
I0123 22:19:32.665313 139974069698560 ddar.py:60] Depth 3/1000 time = 3.0933542251586914
I0123 22:19:34.894674 139974069698560 ddar.py:60] Depth 4/1000 time = 2.229185104370117
I0123 22:19:38.007785 139974069698560 ddar.py:60] Depth 5/1000 time = 3.1126558780670166
I0123 22:19:41.198327 139974069698560 ddar.py:60] Depth 6/1000 time = 3.1889407634735107
I0123 22:19:44.497272 139974069698560 ddar.py:60] Depth 7/1000 time = 3.281188488006592
I0123 22:19:47.680271 139974069698560 ddar.py:60] Depth 8/1000 time = 3.182823657989502
I0123 22:19:50.911088 139974069698560 ddar.py:60] Depth 9/1000 time = 3.2262227535247803
I0123 22:19:50.913326 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:19:50.913390 139974069698560 alphageometry.py:566] LM output (score=-1.992180): "l : C b c l 16 T b c g l 17 ;"
I0123 22:19:50.913441 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l g b c"

I0123 22:19:50.913493 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b c, on_tline l g b c ? cong j f j e"
I0123 22:19:50.913650 139974069698560 graph.py:498] 
I0123 22:19:50.913706 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b c, on_tline l g b c ? cong j f j e
I0123 22:19:51.621459 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6576216220855713
I0123 22:19:53.856659 139974069698560 ddar.py:60] Depth 2/1000 time = 2.235050678253174
I0123 22:19:56.199320 139974069698560 ddar.py:60] Depth 3/1000 time = 2.342475175857544
I0123 22:19:57.639008 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4395058155059814
I0123 22:20:00.068480 139974069698560 ddar.py:60] Depth 5/1000 time = 2.4289896488189697
I0123 22:20:01.520226 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4507076740264893
I0123 22:20:03.990735 139974069698560 ddar.py:60] Depth 7/1000 time = 2.4550867080688477
I0123 22:20:06.418763 139974069698560 ddar.py:60] Depth 8/1000 time = 2.427851915359497
I0123 22:20:07.929509 139974069698560 ddar.py:60] Depth 9/1000 time = 1.5066876411437988
I0123 22:20:07.930454 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:20:07.930524 139974069698560 alphageometry.py:566] LM output (score=-2.107306): "l : C h i l 16 D h l i l 17 ;"
I0123 22:20:07.930566 139974069698560 alphageometry.py:567] Translation: "l = on_line l h i, on_bline l i h"

I0123 22:20:07.930617 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l h i, on_bline l i h ? cong j f j e"
I0123 22:20:07.930764 139974069698560 graph.py:498] 
I0123 22:20:07.930817 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l h i, on_bline l i h ? cong j f j e
I0123 22:20:09.703928 139974069698560 ddar.py:60] Depth 1/1000 time = 1.7110257148742676
I0123 22:20:11.392266 139974069698560 ddar.py:60] Depth 2/1000 time = 1.6881577968597412
I0123 22:20:14.039495 139974069698560 ddar.py:60] Depth 3/1000 time = 2.64705228805542
I0123 22:20:16.805053 139974069698560 ddar.py:60] Depth 4/1000 time = 2.765368938446045
I0123 22:20:19.593340 139974069698560 ddar.py:60] Depth 5/1000 time = 2.788078784942627
I0123 22:20:22.360076 139974069698560 ddar.py:60] Depth 6/1000 time = 2.7664849758148193
I0123 22:20:24.184666 139974069698560 ddar.py:60] Depth 7/1000 time = 1.8240618705749512
I0123 22:20:26.871822 139974069698560 ddar.py:60] Depth 8/1000 time = 2.686077356338501
I0123 22:20:29.569710 139974069698560 ddar.py:60] Depth 9/1000 time = 2.6800172328948975
I0123 22:20:29.577536 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:20:29.577631 139974069698560 alphageometry.py:566] LM output (score=-2.172188): "l : C b f l 16 D b l f l 17 ;"
I0123 22:20:29.577677 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_bline l f b"

I0123 22:20:29.577726 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b f, on_bline l f b ? cong j f j e"
I0123 22:20:29.577903 139974069698560 graph.py:498] 
I0123 22:20:29.577960 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b f, on_bline l f b ? cong j f j e
I0123 22:20:31.333259 139974069698560 ddar.py:60] Depth 1/1000 time = 1.690631628036499
I0123 22:20:32.874560 139974069698560 ddar.py:60] Depth 2/1000 time = 1.5411272048950195
I0123 22:20:35.339529 139974069698560 ddar.py:60] Depth 3/1000 time = 2.464779853820801
I0123 22:20:37.830770 139974069698560 ddar.py:60] Depth 4/1000 time = 2.490992784500122
I0123 22:20:40.384299 139974069698560 ddar.py:60] Depth 5/1000 time = 2.553192377090454
I0123 22:20:42.916690 139974069698560 ddar.py:60] Depth 6/1000 time = 2.5313518047332764
I0123 22:20:44.534466 139974069698560 ddar.py:60] Depth 7/1000 time = 1.6171283721923828
I0123 22:20:47.123823 139974069698560 ddar.py:60] Depth 8/1000 time = 2.576300621032715
I0123 22:20:49.671971 139974069698560 ddar.py:60] Depth 9/1000 time = 2.5479605197906494
I0123 22:20:52.252028 139974069698560 ddar.py:60] Depth 10/1000 time = 2.5732076168060303
I0123 22:20:52.253251 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:20:52.253317 139974069698560 alphageometry.py:566] LM output (score=-2.235766): "l : C b f l 16 P b e f l 17 ;"
I0123 22:20:52.253353 139974069698560 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2570, in add_clause
    raise DepCheckFailError(
graph.DepCheckFailError: ncoll f b e
"

I0123 22:20:52.253397 139974069698560 alphageometry.py:566] LM output (score=-2.367366): "l : C b c l 16 D b c b l 17 ;"
I0123 22:20:52.253425 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_circle l b c"

I0123 22:20:52.253460 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b c, on_circle l b c ? cong j f j e"
I0123 22:20:52.253605 139974069698560 graph.py:498] 
I0123 22:20:52.253661 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b c, on_circle l b c ? cong j f j e
I0123 22:20:53.058361 139974069698560 ddar.py:60] Depth 1/1000 time = 0.743506669998169
I0123 22:20:55.843117 139974069698560 ddar.py:60] Depth 2/1000 time = 2.7845449447631836
I0123 22:20:57.778125 139974069698560 ddar.py:60] Depth 3/1000 time = 1.9346959590911865
I0123 22:21:00.570950 139974069698560 ddar.py:60] Depth 4/1000 time = 2.7926082611083984
I0123 22:21:03.360946 139974069698560 ddar.py:60] Depth 5/1000 time = 2.789501428604126
I0123 22:21:06.170812 139974069698560 ddar.py:60] Depth 6/1000 time = 2.80918288230896
I0123 22:21:08.154947 139974069698560 ddar.py:60] Depth 7/1000 time = 1.9679107666015625
I0123 22:21:10.981804 139974069698560 ddar.py:60] Depth 8/1000 time = 2.826676368713379
I0123 22:21:13.942432 139974069698560 ddar.py:60] Depth 9/1000 time = 2.9546494483947754
I0123 22:21:16.010168 139974069698560 ddar.py:60] Depth 10/1000 time = 2.0674428939819336
I0123 22:21:19.011499 139974069698560 ddar.py:60] Depth 11/1000 time = 3.0011162757873535
I0123 22:21:19.015947 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:21:19.016019 139974069698560 alphageometry.py:566] LM output (score=-2.507290): "l : C b c l 16 D b c c l 17 ;"
I0123 22:21:19.016068 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_circle l c b"

I0123 22:21:19.016111 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b c, on_circle l c b ? cong j f j e"
I0123 22:21:19.016263 139974069698560 graph.py:498] 
I0123 22:21:19.016318 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b c, on_circle l c b ? cong j f j e
I0123 22:21:19.823270 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7443575859069824
I0123 22:21:22.556536 139974069698560 ddar.py:60] Depth 2/1000 time = 2.733106851577759
I0123 22:21:25.330592 139974069698560 ddar.py:60] Depth 3/1000 time = 2.7738823890686035
I0123 22:21:27.197382 139974069698560 ddar.py:60] Depth 4/1000 time = 1.8666152954101562
I0123 22:21:29.967476 139974069698560 ddar.py:60] Depth 5/1000 time = 2.769623041152954
I0123 22:21:32.813300 139974069698560 ddar.py:60] Depth 6/1000 time = 2.844926357269287
I0123 22:21:34.803910 139974069698560 ddar.py:60] Depth 7/1000 time = 1.9741573333740234
I0123 22:21:37.628664 139974069698560 ddar.py:60] Depth 8/1000 time = 2.824561595916748
I0123 22:21:40.498059 139974069698560 ddar.py:60] Depth 9/1000 time = 2.8622004985809326
I0123 22:21:40.499115 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:21:40.499180 139974069698560 alphageometry.py:566] LM output (score=-2.513234): "l : D b l k l 16 D d k k l 17 ;"
I0123 22:21:40.499216 139974069698560 alphageometry.py:567] Translation: "l = on_bline l k b, on_circle l k d"

I0123 22:21:40.499264 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_bline l k b, on_circle l k d ? cong j f j e"
I0123 22:21:40.499413 139974069698560 graph.py:498] 
I0123 22:21:40.499469 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_bline l k b, on_circle l k d ? cong j f j e
I0123 22:21:41.711367 139974069698560 ddar.py:60] Depth 1/1000 time = 1.1463508605957031
I0123 22:21:44.680277 139974069698560 ddar.py:60] Depth 2/1000 time = 2.9687461853027344
I0123 22:21:47.296183 139974069698560 ddar.py:60] Depth 3/1000 time = 2.615732431411743
I0123 22:21:50.819069 139974069698560 ddar.py:60] Depth 4/1000 time = 3.5226893424987793
I0123 22:21:54.374032 139974069698560 ddar.py:60] Depth 5/1000 time = 3.55452036857605
I0123 22:21:58.007802 139974069698560 ddar.py:60] Depth 6/1000 time = 3.632145643234253
I0123 22:22:02.641666 139974069698560 ddar.py:60] Depth 7/1000 time = 4.614819049835205
I0123 22:22:06.366230 139974069698560 ddar.py:60] Depth 8/1000 time = 3.724386215209961
I0123 22:22:10.155110 139974069698560 ddar.py:60] Depth 9/1000 time = 3.7830047607421875
I0123 22:22:10.156251 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:22:10.156324 139974069698560 alphageometry.py:566] LM output (score=-2.517352): "l : C b f l 16 P b e b l 17 ;"
I0123 22:22:10.156358 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b e b l"

I0123 22:22:10.156400 139974069698560 alphageometry.py:566] LM output (score=-2.519469): "l : P b e d l 16 ;"
I0123 22:22:10.156427 139974069698560 alphageometry.py:567] Translation: "l = on_pline l d b e"

I0123 22:22:10.156459 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_pline l d b e ? cong j f j e"
I0123 22:22:10.156620 139974069698560 graph.py:498] 
I0123 22:22:10.156674 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_pline l d b e ? cong j f j e
I0123 22:22:10.840181 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6335015296936035
I0123 22:22:12.100001 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2596559524536133
I0123 22:22:14.296763 139974069698560 ddar.py:60] Depth 3/1000 time = 2.1965668201446533
I0123 22:22:16.551800 139974069698560 ddar.py:60] Depth 4/1000 time = 2.254863739013672
I0123 22:22:17.838581 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2863385677337646
I0123 22:22:20.052558 139974069698560 ddar.py:60] Depth 6/1000 time = 2.2131969928741455
I0123 22:22:21.406852 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3426189422607422
I0123 22:22:23.675585 139974069698560 ddar.py:60] Depth 8/1000 time = 2.26855731010437
I0123 22:22:25.027352 139974069698560 ddar.py:60] Depth 9/1000 time = 1.3475513458251953
I0123 22:22:25.028275 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:22:25.028347 139974069698560 alphageometry.py:566] LM output (score=-2.561053): "l : C b h l 16 D b l h l 17 ;"
I0123 22:22:25.028383 139974069698560 alphageometry.py:567] Translation: "l = on_line l b h, on_bline l h b"

I0123 22:22:25.028421 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b h, on_bline l h b ? cong j f j e"
I0123 22:22:25.028564 139974069698560 graph.py:498] 
I0123 22:22:25.028613 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b h, on_bline l h b ? cong j f j e
I0123 22:22:25.778916 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6891381740570068
I0123 22:22:28.127604 139974069698560 ddar.py:60] Depth 2/1000 time = 2.34852933883667
I0123 22:22:29.550861 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4230213165283203
I0123 22:22:31.912152 139974069698560 ddar.py:60] Depth 4/1000 time = 2.3609869480133057
I0123 22:22:33.339129 139974069698560 ddar.py:60] Depth 5/1000 time = 1.426464557647705
I0123 22:22:35.671855 139974069698560 ddar.py:60] Depth 6/1000 time = 2.331904411315918
I0123 22:22:38.133078 139974069698560 ddar.py:60] Depth 7/1000 time = 2.4474472999572754
I0123 22:22:39.623967 139974069698560 ddar.py:60] Depth 8/1000 time = 1.490708827972412
I0123 22:22:42.063522 139974069698560 ddar.py:60] Depth 9/1000 time = 2.432551145553589
I0123 22:22:42.064641 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:22:42.064693 139974069698560 alphageometry.py:566] LM output (score=-2.639260): "l : C g i l 16 D g l i l 17 ;"
I0123 22:22:42.064727 139974069698560 alphageometry.py:567] Translation: "l = on_line l g i, on_bline l i g"

I0123 22:22:42.064770 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l g i, on_bline l i g ? cong j f j e"
I0123 22:22:42.064913 139974069698560 graph.py:498] 
I0123 22:22:42.064965 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l g i, on_bline l i g ? cong j f j e
I0123 22:22:42.930151 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8038420677185059
I0123 22:22:45.602589 139974069698560 ddar.py:60] Depth 2/1000 time = 2.6722843647003174
I0123 22:22:48.441733 139974069698560 ddar.py:60] Depth 3/1000 time = 2.8389577865600586
I0123 22:22:50.342299 139974069698560 ddar.py:60] Depth 4/1000 time = 1.9003167152404785
I0123 22:22:53.121839 139974069698560 ddar.py:60] Depth 5/1000 time = 2.7793407440185547
I0123 22:22:55.863344 139974069698560 ddar.py:60] Depth 6/1000 time = 2.741328716278076
I0123 22:22:58.657190 139974069698560 ddar.py:60] Depth 7/1000 time = 2.7933218479156494
I0123 22:23:01.466681 139974069698560 ddar.py:60] Depth 8/1000 time = 2.8084800243377686
I0123 22:23:04.338177 139974069698560 ddar.py:60] Depth 9/1000 time = 2.8534607887268066
I0123 22:23:04.345994 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:23:04.346064 139974069698560 alphageometry.py:566] LM output (score=-2.662097): "l : P b d k l 16 T b k d l 17 ;"
I0123 22:23:04.346099 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k b d, on_tline l d b k"

I0123 22:23:04.346149 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_pline l k b d, on_tline l d b k ? cong j f j e"
I0123 22:23:04.346305 139974069698560 graph.py:498] 
I0123 22:23:04.346360 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_pline l k b d, on_tline l d b k ? cong j f j e
I0123 22:23:05.051609 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6515469551086426
I0123 22:23:06.364738 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3129315376281738
I0123 22:23:09.321181 139974069698560 ddar.py:60] Depth 3/1000 time = 2.9561479091644287
I0123 22:23:12.510877 139974069698560 ddar.py:60] Depth 4/1000 time = 3.1894984245300293
I0123 22:23:15.711589 139974069698560 ddar.py:60] Depth 5/1000 time = 3.200206995010376
I0123 22:23:17.948851 139974069698560 ddar.py:60] Depth 6/1000 time = 2.236027240753174
I0123 22:23:21.195672 139974069698560 ddar.py:60] Depth 7/1000 time = 3.231128454208374
I0123 22:23:24.431071 139974069698560 ddar.py:60] Depth 8/1000 time = 3.2351551055908203
I0123 22:23:27.706450 139974069698560 ddar.py:60] Depth 9/1000 time = 3.2677667140960693
I0123 22:23:27.707526 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:23:27.707603 139974069698560 alphageometry.py:566] LM output (score=-2.679145): "l : C g h l 16 D g l h l 17 ;"
I0123 22:23:27.707640 139974069698560 alphageometry.py:567] Translation: "l = on_line l g h, on_bline l h g"

I0123 22:23:27.707685 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l g h, on_bline l h g ? cong j f j e"
I0123 22:23:27.707841 139974069698560 graph.py:498] 
I0123 22:23:27.707894 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l g h, on_bline l h g ? cong j f j e
I0123 22:23:29.448394 139974069698560 ddar.py:60] Depth 1/1000 time = 1.679062843322754
I0123 22:23:31.099761 139974069698560 ddar.py:60] Depth 2/1000 time = 1.651179313659668
I0123 22:23:33.845272 139974069698560 ddar.py:60] Depth 3/1000 time = 2.745337724685669
I0123 22:23:35.617606 139974069698560 ddar.py:60] Depth 4/1000 time = 1.772160530090332
I0123 22:23:38.332766 139974069698560 ddar.py:60] Depth 5/1000 time = 2.7130279541015625
I0123 22:23:40.108275 139974069698560 ddar.py:60] Depth 6/1000 time = 1.774667739868164
I0123 22:23:42.980131 139974069698560 ddar.py:60] Depth 7/1000 time = 2.8534698486328125
I0123 22:23:45.785169 139974069698560 ddar.py:60] Depth 8/1000 time = 2.8047399520874023
I0123 22:23:47.619747 139974069698560 ddar.py:60] Depth 9/1000 time = 1.8263494968414307
I0123 22:23:47.620303 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:23:47.620367 139974069698560 alphageometry.py:566] LM output (score=-2.788885): "l : C b f l 16 T b f k l 17 ;"
I0123 22:23:47.620403 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_tline l k b f"

I0123 22:23:47.620453 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b f, on_tline l k b f ? cong j f j e"
I0123 22:23:47.620613 139974069698560 graph.py:498] 
I0123 22:23:47.620666 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b f, on_tline l k b f ? cong j f j e
I0123 22:23:49.447238 139974069698560 ddar.py:60] Depth 1/1000 time = 1.7754313945770264
I0123 22:23:52.803765 139974069698560 ddar.py:60] Depth 2/1000 time = 3.3563482761383057
I0123 22:23:54.985471 139974069698560 ddar.py:60] Depth 3/1000 time = 2.1815273761749268
I0123 22:23:58.143381 139974069698560 ddar.py:60] Depth 4/1000 time = 3.1577236652374268
I0123 22:24:01.358668 139974069698560 ddar.py:60] Depth 5/1000 time = 3.214763879776001
I0123 22:24:04.581888 139974069698560 ddar.py:60] Depth 6/1000 time = 3.2221267223358154
I0123 22:24:07.899852 139974069698560 ddar.py:60] Depth 7/1000 time = 3.3040785789489746
I0123 22:24:11.173829 139974069698560 ddar.py:60] Depth 8/1000 time = 3.2737929821014404
I0123 22:24:13.482150 139974069698560 ddar.py:60] Depth 9/1000 time = 2.300645351409912
I0123 22:24:13.483197 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:24:13.483261 139974069698560 alphageometry.py:566] LM output (score=-2.795378): "l : C c f l 16 D c l f l 17 ;"
I0123 22:24:13.483298 139974069698560 alphageometry.py:567] Translation: "l = on_line l c f, on_bline l f c"

I0123 22:24:13.483350 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l c f, on_bline l f c ? cong j f j e"
I0123 22:24:13.483498 139974069698560 graph.py:498] 
I0123 22:24:13.483552 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l c f, on_bline l f c ? cong j f j e
I0123 22:24:15.170366 139974069698560 ddar.py:60] Depth 1/1000 time = 1.6253786087036133
I0123 22:24:16.652351 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4818081855773926
I0123 22:24:19.215207 139974069698560 ddar.py:60] Depth 3/1000 time = 2.562678813934326
I0123 22:24:20.769927 139974069698560 ddar.py:60] Depth 4/1000 time = 1.5544695854187012
I0123 22:24:23.330891 139974069698560 ddar.py:60] Depth 5/1000 time = 2.560253143310547
I0123 22:24:24.889019 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5574018955230713
I0123 22:24:27.467018 139974069698560 ddar.py:60] Depth 7/1000 time = 2.5633645057678223
I0123 22:24:29.092238 139974069698560 ddar.py:60] Depth 8/1000 time = 1.625042200088501
I0123 22:24:31.634647 139974069698560 ddar.py:60] Depth 9/1000 time = 2.532835006713867
I0123 22:24:31.635895 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:24:31.635957 139974069698560 alphageometry.py:566] LM output (score=-2.860095): "l : C i k l 16 D i l k l 17 ;"
I0123 22:24:31.635994 139974069698560 alphageometry.py:567] Translation: "l = on_line l i k, on_bline l k i"

I0123 22:24:31.636045 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l i k, on_bline l k i ? cong j f j e"
I0123 22:24:31.636188 139974069698560 graph.py:498] 
I0123 22:24:31.636241 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l i k, on_bline l k i ? cong j f j e
I0123 22:24:32.378806 139974069698560 ddar.py:60] Depth 1/1000 time = 0.681302547454834
I0123 22:24:34.600808 139974069698560 ddar.py:60] Depth 2/1000 time = 2.2218565940856934
I0123 22:24:35.871367 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2703821659088135
I0123 22:24:38.171062 139974069698560 ddar.py:60] Depth 4/1000 time = 2.2994496822357178
I0123 22:24:39.431276 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2596216201782227
I0123 22:24:41.670161 139974069698560 ddar.py:60] Depth 6/1000 time = 2.2382302284240723
I0123 22:24:43.019794 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3366310596466064
I0123 22:24:44.325251 139974069698560 ddar.py:60] Depth 8/1000 time = 1.305283546447754
I0123 22:24:46.562577 139974069698560 ddar.py:60] Depth 9/1000 time = 2.2328386306762695
I0123 22:24:46.563621 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:24:46.563674 139974069698560 alphageometry.py:566] LM output (score=-2.884637): "l : C b k l 16 D b k k l 17 ;"
I0123 22:24:46.563708 139974069698560 alphageometry.py:567] Translation: "l = on_line l b k, on_circle l k b"

I0123 22:24:46.563759 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b k, on_circle l k b ? cong j f j e"
I0123 22:24:46.563907 139974069698560 graph.py:498] 
I0123 22:24:46.563960 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b k, on_circle l k b ? cong j f j e
I0123 22:24:47.306216 139974069698560 ddar.py:60] Depth 1/1000 time = 0.681239128112793
I0123 22:24:49.542899 139974069698560 ddar.py:60] Depth 2/1000 time = 2.236525774002075
I0123 22:24:50.827226 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2841529846191406
I0123 22:24:53.091203 139974069698560 ddar.py:60] Depth 4/1000 time = 2.2637877464294434
I0123 22:24:54.379812 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2881710529327393
I0123 22:24:55.684332 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3038201332092285
I0123 22:24:58.074346 139974069698560 ddar.py:60] Depth 7/1000 time = 2.377223491668701
I0123 22:24:59.398743 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3241627216339111
I0123 22:25:01.679049 139974069698560 ddar.py:60] Depth 9/1000 time = 2.2750661373138428
I0123 22:25:01.680090 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:25:01.680158 139974069698560 alphageometry.py:566] LM output (score=-2.889984): "l : C b g l 16 D b l g l 17 ;"
I0123 22:25:01.680193 139974069698560 alphageometry.py:567] Translation: "l = on_line l b g, on_bline l g b"

I0123 22:25:01.680243 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b g, on_bline l g b ? cong j f j e"
I0123 22:25:01.680389 139974069698560 graph.py:498] 
I0123 22:25:01.680443 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b g, on_bline l g b ? cong j f j e
I0123 22:25:02.438817 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6966216564178467
I0123 22:25:04.826189 139974069698560 ddar.py:60] Depth 2/1000 time = 2.387223958969116
I0123 22:25:06.272560 139974069698560 ddar.py:60] Depth 3/1000 time = 1.446190357208252
I0123 22:25:08.702880 139974069698560 ddar.py:60] Depth 4/1000 time = 2.430128812789917
I0123 22:25:10.169554 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4661829471588135
I0123 22:25:12.614936 139974069698560 ddar.py:60] Depth 6/1000 time = 2.444624423980713
I0123 22:25:14.172178 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5425124168395996
I0123 22:25:16.731325 139974069698560 ddar.py:60] Depth 8/1000 time = 2.558943271636963
I0123 22:25:18.253470 139974069698560 ddar.py:60] Depth 9/1000 time = 1.5149891376495361
I0123 22:25:18.254668 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:25:18.254749 139974069698560 alphageometry.py:566] LM output (score=-2.895175): "l : C d f l 16 D d l f l 17 ;"
I0123 22:25:18.254785 139974069698560 alphageometry.py:567] Translation: "l = on_line l d f, on_bline l f d"

I0123 22:25:18.254841 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l d f, on_bline l f d ? cong j f j e"
I0123 22:25:18.255010 139974069698560 graph.py:498] 
I0123 22:25:18.255064 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l d f, on_bline l f d ? cong j f j e
I0123 22:25:19.050399 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7333219051361084
I0123 22:25:21.619620 139974069698560 ddar.py:60] Depth 2/1000 time = 2.5690629482269287
I0123 22:25:23.236000 139974069698560 ddar.py:60] Depth 3/1000 time = 1.616213321685791
I0123 22:25:25.796086 139974069698560 ddar.py:60] Depth 4/1000 time = 2.5599117279052734
I0123 22:25:28.408427 139974069698560 ddar.py:60] Depth 5/1000 time = 2.612151622772217
I0123 22:25:30.049857 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6409471035003662
I0123 22:25:32.714170 139974069698560 ddar.py:60] Depth 7/1000 time = 2.663538694381714
I0123 22:25:34.457911 139974069698560 ddar.py:60] Depth 8/1000 time = 1.7290465831756592
I0123 22:25:37.167296 139974069698560 ddar.py:60] Depth 9/1000 time = 2.709092855453491
I0123 22:25:38.851249 139974069698560 ddar.py:60] Depth 10/1000 time = 1.6767075061798096
I0123 22:25:38.852437 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:25:38.852493 139974069698560 alphageometry.py:566] LM output (score=-2.898897): "l : C b f l 16 P c g k l 17 ;"
I0123 22:25:38.852527 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_pline l k c g"

I0123 22:25:38.852575 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b f, on_pline l k c g ? cong j f j e"
I0123 22:25:38.852743 139974069698560 graph.py:498] 
I0123 22:25:38.852797 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b f, on_pline l k c g ? cong j f j e
I0123 22:25:40.741580 139974069698560 ddar.py:60] Depth 1/1000 time = 1.8372294902801514
I0123 22:25:43.859180 139974069698560 ddar.py:60] Depth 2/1000 time = 3.1174113750457764
I0123 22:25:46.172818 139974069698560 ddar.py:60] Depth 3/1000 time = 2.3134570121765137
I0123 22:25:49.442737 139974069698560 ddar.py:60] Depth 4/1000 time = 3.2697269916534424
I0123 22:25:52.766810 139974069698560 ddar.py:60] Depth 5/1000 time = 3.3236000537872314
I0123 22:25:56.091278 139974069698560 ddar.py:60] Depth 6/1000 time = 3.323629379272461
I0123 22:25:59.522996 139974069698560 ddar.py:60] Depth 7/1000 time = 3.418973207473755
I0123 22:26:02.953512 139974069698560 ddar.py:60] Depth 8/1000 time = 3.4303336143493652
I0123 22:26:05.404257 139974069698560 ddar.py:60] Depth 9/1000 time = 2.443145275115967
I0123 22:26:05.405315 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:26:05.405378 139974069698560 alphageometry.py:566] LM output (score=-2.928548): "l : C b k l 16 D b e e l 17 ;"
I0123 22:26:05.405414 139974069698560 alphageometry.py:567] Translation: "l = on_line l b k, on_circle l e b"

I0123 22:26:05.405466 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b k, on_circle l e b ? cong j f j e"
I0123 22:26:05.405617 139974069698560 graph.py:498] 
I0123 22:26:05.405675 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b k, on_circle l e b ? cong j f j e
I0123 22:26:07.172510 139974069698560 ddar.py:60] Depth 1/1000 time = 1.7117383480072021
I0123 22:26:08.589249 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4165654182434082
I0123 22:26:11.118547 139974069698560 ddar.py:60] Depth 3/1000 time = 2.529083728790283
I0123 22:26:12.592979 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4741098880767822
I0123 22:26:14.074718 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4812769889831543
I0123 22:26:16.523978 139974069698560 ddar.py:60] Depth 6/1000 time = 2.4484286308288574
I0123 22:26:18.012228 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4741466045379639
I0123 22:26:20.399550 139974069698560 ddar.py:60] Depth 8/1000 time = 2.387144088745117
I0123 22:26:21.875102 139974069698560 ddar.py:60] Depth 9/1000 time = 1.4700915813446045
I0123 22:26:21.876096 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:26:21.876161 139974069698560 alphageometry.py:566] LM output (score=-2.992232): "l : C d k l 16 D d l k l 17 ;"
I0123 22:26:21.876198 139974069698560 alphageometry.py:567] Translation: "l = on_line l d k, on_bline l k d"

I0123 22:26:21.876250 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l d k, on_bline l k d ? cong j f j e"
I0123 22:26:21.876400 139974069698560 graph.py:498] 
I0123 22:26:21.876466 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l d k, on_bline l k d ? cong j f j e
I0123 22:26:23.607148 139974069698560 ddar.py:60] Depth 1/1000 time = 1.6683580875396729
I0123 22:26:24.957508 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3501882553100586
I0123 22:26:27.304928 139974069698560 ddar.py:60] Depth 3/1000 time = 2.3472464084625244
I0123 22:26:28.695394 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3902747631072998
I0123 22:26:31.075568 139974069698560 ddar.py:60] Depth 5/1000 time = 2.3796846866607666
I0123 22:26:33.499263 139974069698560 ddar.py:60] Depth 6/1000 time = 2.422950029373169
I0123 22:26:34.965482 139974069698560 ddar.py:60] Depth 7/1000 time = 1.453277826309204
I0123 22:26:37.390569 139974069698560 ddar.py:60] Depth 8/1000 time = 2.424905776977539
I0123 22:26:38.836991 139974069698560 ddar.py:60] Depth 9/1000 time = 1.4419445991516113
I0123 22:26:38.838032 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:26:38.838087 139974069698560 alphageometry.py:566] LM output (score=-2.993591): "l : C b f l 16 P d g k l 17 ;"
I0123 22:26:38.838121 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_pline l k d g"

I0123 22:26:38.838179 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b f, on_pline l k d g ? cong j f j e"
I0123 22:26:38.838326 139974069698560 graph.py:498] 
I0123 22:26:38.838379 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b f, on_pline l k d g ? cong j f j e
I0123 22:26:40.716231 139974069698560 ddar.py:60] Depth 1/1000 time = 1.8248305320739746
I0123 22:26:42.821212 139974069698560 ddar.py:60] Depth 2/1000 time = 2.104808807373047
I0123 22:26:46.089270 139974069698560 ddar.py:60] Depth 3/1000 time = 3.267890453338623
I0123 22:26:49.412209 139974069698560 ddar.py:60] Depth 4/1000 time = 3.3226935863494873
I0123 22:26:52.746221 139974069698560 ddar.py:60] Depth 5/1000 time = 3.333439588546753
I0123 22:26:56.052055 139974069698560 ddar.py:60] Depth 6/1000 time = 3.305121898651123
I0123 22:26:59.478468 139974069698560 ddar.py:60] Depth 7/1000 time = 3.4139647483825684
I0123 22:27:01.914046 139974069698560 ddar.py:60] Depth 8/1000 time = 2.435404062271118
I0123 22:27:05.327767 139974069698560 ddar.py:60] Depth 9/1000 time = 3.4061226844787598
I0123 22:27:05.328816 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:27:05.328893 139974069698560 alphageometry.py:566] LM output (score=-2.994138): "l : C b j l 16 D b l j l 17 ;"
I0123 22:27:05.328931 139974069698560 alphageometry.py:567] Translation: "l = on_line l b j, on_bline l j b"

I0123 22:27:05.328975 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b j, on_bline l j b ? cong j f j e"
I0123 22:27:05.329129 139974069698560 graph.py:498] 
I0123 22:27:05.329185 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k d b, on_tline k d b d; l = on_line l b j, on_bline l j b ? cong j f j e
I0123 22:27:07.097094 139974069698560 ddar.py:60] Depth 1/1000 time = 1.7063264846801758
I0123 22:27:08.354281 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2568631172180176
I0123 22:27:09.620012 139974069698560 ddar.py:60] Depth 3/1000 time = 1.265531301498413
I0123 22:27:11.902122 139974069698560 ddar.py:60] Depth 4/1000 time = 2.281926155090332
I0123 22:27:13.187571 139974069698560 ddar.py:60] Depth 5/1000 time = 1.284958839416504
I0123 22:27:15.433003 139974069698560 ddar.py:60] Depth 6/1000 time = 2.244736671447754
I0123 22:27:16.805606 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3595573902130127
I0123 22:27:19.101852 139974069698560 ddar.py:60] Depth 8/1000 time = 2.2960519790649414
I0123 22:27:20.430567 139974069698560 ddar.py:60] Depth 9/1000 time = 1.3231596946716309
I0123 22:27:20.431630 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:27:20.431700 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T b c d k 14 ; x00
I0123 22:27:25.303989 139974069698560 alphageometry.py:566] LM output (score=-1.032061): "l : T c e e l 15 ;"
I0123 22:27:25.304136 139974069698560 alphageometry.py:567] Translation: "l = on_tline l e c e"

I0123 22:27:25.304185 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l e c e ? cong j f j e"
I0123 22:27:25.304320 139974069698560 graph.py:498] 
I0123 22:27:25.304376 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l e c e ? cong j f j e
I0123 22:27:25.812855 139974069698560 ddar.py:60] Depth 1/1000 time = 0.465238094329834
I0123 22:27:27.642644 139974069698560 ddar.py:60] Depth 2/1000 time = 1.8296613693237305
I0123 22:27:28.530071 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8872506618499756
I0123 22:27:29.521544 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9913036823272705
I0123 22:27:31.560899 139974069698560 ddar.py:60] Depth 5/1000 time = 2.039186477661133
I0123 22:27:32.579493 139974069698560 ddar.py:60] Depth 6/1000 time = 1.018218994140625
I0123 22:27:33.681234 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0894114971160889
I0123 22:27:35.747859 139974069698560 ddar.py:60] Depth 8/1000 time = 2.066373348236084
I0123 22:27:36.834546 139974069698560 ddar.py:60] Depth 9/1000 time = 1.0828912258148193
I0123 22:27:37.926176 139974069698560 ddar.py:60] Depth 10/1000 time = 1.0878167152404785
I0123 22:27:37.927121 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:27:37.927178 139974069698560 alphageometry.py:566] LM output (score=-1.292832): "l : T c g g l 15 ;"
I0123 22:27:37.927212 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g c g"

I0123 22:27:37.927265 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g c g ? cong j f j e"
I0123 22:27:37.927428 139974069698560 graph.py:498] 
I0123 22:27:37.927491 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g c g ? cong j f j e
I0123 22:27:39.417245 139974069698560 ddar.py:60] Depth 1/1000 time = 1.4462475776672363
I0123 22:27:40.232119 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8147070407867432
I0123 22:27:41.127716 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8954203128814697
I0123 22:27:43.114701 139974069698560 ddar.py:60] Depth 4/1000 time = 1.9868147373199463
I0123 22:27:44.129537 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0146543979644775
I0123 22:27:45.146989 139974069698560 ddar.py:60] Depth 6/1000 time = 1.017090082168579
I0123 22:27:47.247637 139974069698560 ddar.py:60] Depth 7/1000 time = 2.0881431102752686
I0123 22:27:48.310461 139974069698560 ddar.py:60] Depth 8/1000 time = 1.062650442123413
I0123 22:27:49.396426 139974069698560 ddar.py:60] Depth 9/1000 time = 1.0821292400360107
I0123 22:27:51.475687 139974069698560 ddar.py:60] Depth 10/1000 time = 2.0753931999206543
I0123 22:27:51.476597 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:27:51.476646 139974069698560 alphageometry.py:566] LM output (score=-1.597215): "l : T i j i l 15 ;"
I0123 22:27:51.476680 139974069698560 alphageometry.py:567] Translation: "l = on_tline l i i j"

I0123 22:27:51.476717 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l i i j ? cong j f j e"
I0123 22:27:51.476851 139974069698560 graph.py:498] 
I0123 22:27:51.476900 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l i i j ? cong j f j e
I0123 22:27:51.972056 139974069698560 ddar.py:60] Depth 1/1000 time = 0.45278382301330566
I0123 22:27:52.799824 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8276469707489014
I0123 22:27:53.694161 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8941740989685059
I0123 22:27:55.654174 139974069698560 ddar.py:60] Depth 4/1000 time = 1.9598376750946045
I0123 22:27:56.651821 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9974563121795654
I0123 22:27:58.664628 139974069698560 ddar.py:60] Depth 6/1000 time = 2.0124351978302
I0123 22:27:59.697977 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0220069885253906
I0123 22:28:00.741780 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0400505065917969
I0123 22:28:01.796112 139974069698560 ddar.py:60] Depth 9/1000 time = 1.0504729747772217
I0123 22:28:01.796290 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:28:01.796348 139974069698560 alphageometry.py:566] LM output (score=-2.013884): "l : C d k l 15 T b l d k 16 ;"
I0123 22:28:01.796385 139974069698560 alphageometry.py:567] Translation: "l = on_line l d k, on_tline l b d k"

I0123 22:28:01.796423 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l d k, on_tline l b d k ? cong j f j e"
I0123 22:28:01.796565 139974069698560 graph.py:498] 
I0123 22:28:01.796615 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l d k, on_tline l b d k ? cong j f j e
I0123 22:28:03.344372 139974069698560 ddar.py:60] Depth 1/1000 time = 1.5074708461761475
I0123 22:28:04.416967 139974069698560 ddar.py:60] Depth 2/1000 time = 1.0724260807037354
I0123 22:28:06.604158 139974069698560 ddar.py:60] Depth 3/1000 time = 2.1870200634002686
I0123 22:28:08.992610 139974069698560 ddar.py:60] Depth 4/1000 time = 2.3882813453674316
I0123 22:28:10.361598 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3688023090362549
I0123 22:28:12.766347 139974069698560 ddar.py:60] Depth 6/1000 time = 2.4043660163879395
I0123 22:28:14.238374 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4625840187072754
I0123 22:28:16.645015 139974069698560 ddar.py:60] Depth 8/1000 time = 2.4064507484436035
I0123 22:28:19.154194 139974069698560 ddar.py:60] Depth 9/1000 time = 2.5041582584381104
I0123 22:28:20.598860 139974069698560 ddar.py:60] Depth 10/1000 time = 1.4409375190734863
I0123 22:28:20.599919 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:28:20.599989 139974069698560 alphageometry.py:566] LM output (score=-2.140768): "l : C b c l 15 T b c k l 16 ;"
I0123 22:28:20.600024 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l k b c"

I0123 22:28:20.600072 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b c, on_tline l k b c ? cong j f j e"
I0123 22:28:20.600227 139974069698560 graph.py:498] 
I0123 22:28:20.600280 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b c, on_tline l k b c ? cong j f j e
I0123 22:28:21.188303 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5473072528839111
I0123 22:28:23.228716 139974069698560 ddar.py:60] Depth 2/1000 time = 2.0402650833129883
I0123 22:28:25.469048 139974069698560 ddar.py:60] Depth 3/1000 time = 2.2401607036590576
I0123 22:28:26.838147 139974069698560 ddar.py:60] Depth 4/1000 time = 1.368926763534546
I0123 22:28:29.178188 139974069698560 ddar.py:60] Depth 5/1000 time = 2.3398468494415283
I0123 22:28:30.543994 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3654289245605469
I0123 22:28:32.971050 139974069698560 ddar.py:60] Depth 7/1000 time = 2.417635440826416
I0123 22:28:35.423868 139974069698560 ddar.py:60] Depth 8/1000 time = 2.4526424407958984
I0123 22:28:36.861731 139974069698560 ddar.py:60] Depth 9/1000 time = 1.4329359531402588
I0123 22:28:39.346130 139974069698560 ddar.py:60] Depth 10/1000 time = 2.4805502891540527
I0123 22:28:39.347170 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:28:39.347244 139974069698560 alphageometry.py:566] LM output (score=-2.156330): "l : T h i h l 15 ;"
I0123 22:28:39.347279 139974069698560 alphageometry.py:567] Translation: "l = on_tline l h h i"

I0123 22:28:39.347325 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l h h i ? cong j f j e"
I0123 22:28:39.347472 139974069698560 graph.py:498] 
I0123 22:28:39.347524 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l h h i ? cong j f j e
I0123 22:28:39.846231 139974069698560 ddar.py:60] Depth 1/1000 time = 0.45601558685302734
I0123 22:28:40.683832 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8374710083007812
I0123 22:28:42.565825 139974069698560 ddar.py:60] Depth 3/1000 time = 1.8818085193634033
I0123 22:28:43.570966 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0049629211425781
I0123 22:28:45.560200 139974069698560 ddar.py:60] Depth 5/1000 time = 1.9890565872192383
I0123 22:28:46.561380 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0008068084716797
I0123 22:28:47.648950 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0746548175811768
I0123 22:28:49.690417 139974069698560 ddar.py:60] Depth 8/1000 time = 2.0412843227386475
I0123 22:28:50.757950 139974069698560 ddar.py:60] Depth 9/1000 time = 1.063626766204834
I0123 22:28:51.835443 139974069698560 ddar.py:60] Depth 10/1000 time = 1.0745351314544678
I0123 22:28:51.836388 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:28:51.836453 139974069698560 alphageometry.py:566] LM output (score=-2.235513): "l : C b f l 15 P b e b l 16 ;"
I0123 22:28:51.836489 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b e b l"

I0123 22:28:51.836528 139974069698560 alphageometry.py:566] LM output (score=-2.312642): "l : T f i f l 15 ;"
I0123 22:28:51.836558 139974069698560 alphageometry.py:567] Translation: "l = on_tline l f f i"

I0123 22:28:51.836589 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l f f i ? cong j f j e"
I0123 22:28:51.836732 139974069698560 graph.py:498] 
I0123 22:28:51.836782 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l f f i ? cong j f j e
I0123 22:28:52.334511 139974069698560 ddar.py:60] Depth 1/1000 time = 0.45540738105773926
I0123 22:28:54.169453 139974069698560 ddar.py:60] Depth 2/1000 time = 1.8348102569580078
I0123 22:28:55.079220 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9095556735992432
I0123 22:28:56.069422 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9899256229400635
I0123 22:28:58.084624 139974069698560 ddar.py:60] Depth 5/1000 time = 2.0150084495544434
I0123 22:28:59.089823 139974069698560 ddar.py:60] Depth 6/1000 time = 1.004807949066162
I0123 22:29:01.177626 139974069698560 ddar.py:60] Depth 7/1000 time = 2.077045440673828
I0123 22:29:02.231587 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0537738800048828
I0123 22:29:03.307389 139974069698560 ddar.py:60] Depth 9/1000 time = 1.0720446109771729
I0123 22:29:05.361783 139974069698560 ddar.py:60] Depth 10/1000 time = 2.051069498062134
I0123 22:29:05.362696 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:29:05.362754 139974069698560 alphageometry.py:566] LM output (score=-2.333426): "l : T c d h l 15 ;"
I0123 22:29:05.362789 139974069698560 alphageometry.py:567] Translation: "l = on_tline l h c d"

I0123 22:29:05.362837 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l h c d ? cong j f j e"
I0123 22:29:05.362979 139974069698560 graph.py:498] 
I0123 22:29:05.363034 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l h c d ? cong j f j e
I0123 22:29:05.866082 139974069698560 ddar.py:60] Depth 1/1000 time = 0.46010923385620117
I0123 22:29:06.677285 139974069698560 ddar.py:60] Depth 2/1000 time = 0.811072587966919
I0123 22:29:07.559711 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8822672367095947
I0123 22:29:09.552159 139974069698560 ddar.py:60] Depth 4/1000 time = 1.9922735691070557
I0123 22:29:10.548891 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9965400695800781
I0123 22:29:11.546847 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9975881576538086
I0123 22:29:13.669701 139974069698560 ddar.py:60] Depth 7/1000 time = 2.110583782196045
I0123 22:29:14.713674 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0436978340148926
I0123 22:29:16.839567 139974069698560 ddar.py:60] Depth 9/1000 time = 2.1220855712890625
I0123 22:29:17.909081 139974069698560 ddar.py:60] Depth 10/1000 time = 1.065798282623291
I0123 22:29:17.909990 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:29:17.910055 139974069698560 alphageometry.py:566] LM output (score=-2.342332): "l : T d g d l 15 ;"
I0123 22:29:17.910117 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d d g"

I0123 22:29:17.910160 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l d d g ? cong j f j e"
I0123 22:29:17.910307 139974069698560 graph.py:498] 
I0123 22:29:17.910364 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l d d g ? cong j f j e
I0123 22:29:18.416535 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4636256694793701
I0123 22:29:19.224504 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8078322410583496
I0123 22:29:21.113406 139974069698560 ddar.py:60] Depth 3/1000 time = 1.888735055923462
I0123 22:29:22.114892 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0013022422790527
I0123 22:29:23.123414 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0083413124084473
I0123 22:29:25.129663 139974069698560 ddar.py:60] Depth 6/1000 time = 2.0058698654174805
I0123 22:29:26.229990 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0881271362304688
I0123 22:29:27.294736 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0645649433135986
I0123 22:29:29.339022 139974069698560 ddar.py:60] Depth 9/1000 time = 2.0405213832855225
I0123 22:29:30.434880 139974069698560 ddar.py:60] Depth 10/1000 time = 1.0920937061309814
I0123 22:29:30.435837 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:29:30.435913 139974069698560 alphageometry.py:566] LM output (score=-2.361156): "l : C h i l 15 D h l i l 16 ;"
I0123 22:29:30.435955 139974069698560 alphageometry.py:567] Translation: "l = on_line l h i, on_bline l i h"

I0123 22:29:30.435997 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l h i, on_bline l i h ? cong j f j e"
I0123 22:29:30.436161 139974069698560 graph.py:498] 
I0123 22:29:30.436222 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l h i, on_bline l i h ? cong j f j e
I0123 22:29:32.223733 139974069698560 ddar.py:60] Depth 1/1000 time = 1.7323129177093506
I0123 22:29:33.447856 139974069698560 ddar.py:60] Depth 2/1000 time = 1.223832130432129
I0123 22:29:36.005225 139974069698560 ddar.py:60] Depth 3/1000 time = 2.557180881500244
I0123 22:29:38.637085 139974069698560 ddar.py:60] Depth 4/1000 time = 2.631680965423584
I0123 22:29:40.240412 139974069698560 ddar.py:60] Depth 5/1000 time = 1.603125810623169
I0123 22:29:42.869156 139974069698560 ddar.py:60] Depth 6/1000 time = 2.628547430038452
I0123 22:29:45.524244 139974069698560 ddar.py:60] Depth 7/1000 time = 2.654604196548462
I0123 22:29:47.172264 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6334495544433594
I0123 22:29:49.871132 139974069698560 ddar.py:60] Depth 9/1000 time = 2.687389612197876
I0123 22:29:49.871333 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:29:49.871397 139974069698560 alphageometry.py:566] LM output (score=-2.426625): "l : C b g l 15 D b l g l 16 ;"
I0123 22:29:49.871436 139974069698560 alphageometry.py:567] Translation: "l = on_line l b g, on_bline l g b"

I0123 22:29:49.871482 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b g, on_bline l g b ? cong j f j e"
I0123 22:29:49.871652 139974069698560 graph.py:498] 
I0123 22:29:49.871712 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b g, on_bline l g b ? cong j f j e
I0123 22:29:50.471064 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5463576316833496
I0123 22:29:51.483648 139974069698560 ddar.py:60] Depth 2/1000 time = 1.0123889446258545
I0123 22:29:53.647174 139974069698560 ddar.py:60] Depth 3/1000 time = 2.163228988647461
I0123 22:29:54.844138 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1967647075653076
I0123 22:29:57.109357 139974069698560 ddar.py:60] Depth 5/1000 time = 2.265028953552246
I0123 22:29:58.330147 139974069698560 ddar.py:60] Depth 6/1000 time = 1.2203075885772705
I0123 22:30:00.666861 139974069698560 ddar.py:60] Depth 7/1000 time = 2.3248085975646973
I0123 22:30:01.925494 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2584466934204102
I0123 22:30:03.205263 139974069698560 ddar.py:60] Depth 9/1000 time = 1.2726106643676758
I0123 22:30:05.517352 139974069698560 ddar.py:60] Depth 10/1000 time = 2.308953046798706
I0123 22:30:05.518549 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:30:05.518620 139974069698560 alphageometry.py:566] LM output (score=-2.460880): "l : T d g g l 15 ;"
I0123 22:30:05.518658 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g d g"

I0123 22:30:05.518707 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g d g ? cong j f j e"
I0123 22:30:05.518857 139974069698560 graph.py:498] 
I0123 22:30:05.518916 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g d g ? cong j f j e
I0123 22:30:06.028184 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4647698402404785
I0123 22:30:06.849553 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8212413787841797
I0123 22:30:08.842416 139974069698560 ddar.py:60] Depth 3/1000 time = 1.9926939010620117
I0123 22:30:09.853766 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0111339092254639
I0123 22:30:10.871568 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0175228118896484
I0123 22:30:12.963562 139974069698560 ddar.py:60] Depth 6/1000 time = 2.091578245162964
I0123 22:30:14.068402 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0927202701568604
I0123 22:30:15.194286 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1257193088531494
I0123 22:30:17.335153 139974069698560 ddar.py:60] Depth 9/1000 time = 2.136789560317993
I0123 22:30:18.428852 139974069698560 ddar.py:60] Depth 10/1000 time = 1.089857578277588
I0123 22:30:18.429805 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:30:18.429864 139974069698560 alphageometry.py:566] LM output (score=-2.500355): "l : C b c l 15 T b c f l 16 ;"
I0123 22:30:18.429900 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l f b c"

I0123 22:30:18.429945 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b c, on_tline l f b c ? cong j f j e"
I0123 22:30:18.430104 139974069698560 graph.py:498] 
I0123 22:30:18.430171 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b c, on_tline l f b c ? cong j f j e
I0123 22:30:19.024927 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5499181747436523
I0123 22:30:21.038849 139974069698560 ddar.py:60] Depth 2/1000 time = 2.013753652572632
I0123 22:30:22.107883 139974069698560 ddar.py:60] Depth 3/1000 time = 1.068856954574585
I0123 22:30:23.265916 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1578490734100342
I0123 22:30:25.443663 139974069698560 ddar.py:60] Depth 5/1000 time = 2.177561044692993
I0123 22:30:27.676823 139974069698560 ddar.py:60] Depth 6/1000 time = 2.232757091522217
I0123 22:30:28.949920 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2631111145019531
I0123 22:30:31.262815 139974069698560 ddar.py:60] Depth 8/1000 time = 2.3125853538513184
I0123 22:30:32.510006 139974069698560 ddar.py:60] Depth 9/1000 time = 1.2434685230255127
I0123 22:30:34.810263 139974069698560 ddar.py:60] Depth 10/1000 time = 2.2969627380371094
I0123 22:30:34.811152 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:30:34.811203 139974069698560 alphageometry.py:566] LM output (score=-2.514131): "l : C b f l 15 D b l f l 16 ;"
I0123 22:30:34.811237 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_bline l f b"

I0123 22:30:34.811287 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b f, on_bline l f b ? cong j f j e"
I0123 22:30:34.811444 139974069698560 graph.py:498] 
I0123 22:30:34.811496 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b f, on_bline l f b ? cong j f j e
I0123 22:30:35.494854 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6280415058135986
I0123 22:30:36.616654 139974069698560 ddar.py:60] Depth 2/1000 time = 1.1216442584991455
I0123 22:30:38.829168 139974069698560 ddar.py:60] Depth 3/1000 time = 2.212352991104126
I0123 22:30:41.174526 139974069698560 ddar.py:60] Depth 4/1000 time = 2.3451919555664062
I0123 22:30:42.499898 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3251829147338867
I0123 22:30:44.903777 139974069698560 ddar.py:60] Depth 6/1000 time = 2.4029037952423096
I0123 22:30:47.425609 139974069698560 ddar.py:60] Depth 7/1000 time = 2.5105361938476562
I0123 22:30:48.808475 139974069698560 ddar.py:60] Depth 8/1000 time = 1.382577896118164
I0123 22:30:51.284198 139974069698560 ddar.py:60] Depth 9/1000 time = 2.469033718109131
I0123 22:30:52.692182 139974069698560 ddar.py:60] Depth 10/1000 time = 1.4047753810882568
I0123 22:30:52.693368 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:30:52.693430 139974069698560 alphageometry.py:566] LM output (score=-2.531570): "l : C b f l 15 P b e f l 16 ;"
I0123 22:30:52.693466 139974069698560 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2570, in add_clause
    raise DepCheckFailError(
graph.DepCheckFailError: ncoll f b e
"

I0123 22:30:52.693506 139974069698560 alphageometry.py:566] LM output (score=-2.573086): "l : C b c l 15 T b c g l 16 ;"
I0123 22:30:52.693534 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l g b c"

I0123 22:30:52.693567 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b c, on_tline l g b c ? cong j f j e"
I0123 22:30:52.693748 139974069698560 graph.py:498] 
I0123 22:30:52.693808 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b c, on_tline l g b c ? cong j f j e
I0123 22:30:54.260243 139974069698560 ddar.py:60] Depth 1/1000 time = 1.5232043266296387
I0123 22:30:55.221287 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9608747959136963
I0123 22:30:57.392961 139974069698560 ddar.py:60] Depth 3/1000 time = 2.1715025901794434
I0123 22:30:58.567687 139974069698560 ddar.py:60] Depth 4/1000 time = 1.174546480178833
I0123 22:30:59.752819 139974069698560 ddar.py:60] Depth 5/1000 time = 1.184950828552246
I0123 22:31:01.948481 139974069698560 ddar.py:60] Depth 6/1000 time = 2.1952550411224365
I0123 22:31:04.333083 139974069698560 ddar.py:60] Depth 7/1000 time = 2.3744893074035645
I0123 22:31:05.595134 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2618415355682373
I0123 22:31:06.852708 139974069698560 ddar.py:60] Depth 9/1000 time = 1.253450870513916
I0123 22:31:09.108856 139974069698560 ddar.py:60] Depth 10/1000 time = 2.252797842025757
I0123 22:31:09.109817 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:31:09.109888 139974069698560 alphageometry.py:566] LM output (score=-2.608197): "l : T c e g l 15 ;"
I0123 22:31:09.109924 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g c e"

I0123 22:31:09.109964 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g c e ? cong j f j e"
I0123 22:31:09.110114 139974069698560 graph.py:498] 
I0123 22:31:09.110169 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g c e ? cong j f j e
I0123 22:31:09.617108 139974069698560 ddar.py:60] Depth 1/1000 time = 0.46346306800842285
I0123 22:31:10.426736 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8095083236694336
I0123 22:31:12.303786 139974069698560 ddar.py:60] Depth 3/1000 time = 1.8768868446350098
I0123 22:31:13.304018 139974069698560 ddar.py:60] Depth 4/1000 time = 1.000075340270996
I0123 22:31:15.352474 139974069698560 ddar.py:60] Depth 5/1000 time = 2.048287868499756
I0123 22:31:16.363642 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0108058452606201
I0123 22:31:17.492761 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1171417236328125
I0123 22:31:19.592102 139974069698560 ddar.py:60] Depth 8/1000 time = 2.0991697311401367
I0123 22:31:20.662378 139974069698560 ddar.py:60] Depth 9/1000 time = 1.0664916038513184
I0123 22:31:21.743240 139974069698560 ddar.py:60] Depth 10/1000 time = 1.0768406391143799
I0123 22:31:21.744156 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:31:21.744235 139974069698560 alphageometry.py:566] LM output (score=-2.608554): "l : T a b b l 15 ;"
I0123 22:31:21.744270 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b a b"

I0123 22:31:21.744307 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l b a b ? cong j f j e"
I0123 22:31:21.744450 139974069698560 graph.py:498] 
I0123 22:31:21.744499 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l b a b ? cong j f j e
I0123 22:31:22.255697 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4690558910369873
I0123 22:31:24.143976 139974069698560 ddar.py:60] Depth 2/1000 time = 1.8881070613861084
I0123 22:31:25.048369 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9041345119476318
I0123 22:31:26.044718 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9961769580841064
I0123 22:31:28.096689 139974069698560 ddar.py:60] Depth 5/1000 time = 2.0517642498016357
I0123 22:31:29.100814 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0037577152252197
I0123 22:31:30.206779 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0932433605194092
I0123 22:31:32.289341 139974069698560 ddar.py:60] Depth 8/1000 time = 2.0823893547058105
I0123 22:31:33.416976 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1237390041351318
I0123 22:31:34.517701 139974069698560 ddar.py:60] Depth 10/1000 time = 1.097461223602295
I0123 22:31:34.518623 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:31:34.518682 139974069698560 alphageometry.py:566] LM output (score=-2.646744): "l : T g h g l 15 ;"
I0123 22:31:34.518717 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g g h"

I0123 22:31:34.518764 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g g h ? cong j f j e"
I0123 22:31:34.518905 139974069698560 graph.py:498] 
I0123 22:31:34.518958 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g g h ? cong j f j e
I0123 22:31:36.024357 139974069698560 ddar.py:60] Depth 1/1000 time = 1.4628748893737793
I0123 22:31:36.811228 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7867090702056885
I0123 22:31:37.661748 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8503527641296387
I0123 22:31:38.597998 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9360668659210205
I0123 22:31:40.595895 139974069698560 ddar.py:60] Depth 5/1000 time = 1.9977169036865234
I0123 22:31:41.558199 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9619278907775879
I0123 22:31:42.660626 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0899560451507568
I0123 22:31:44.773472 139974069698560 ddar.py:60] Depth 8/1000 time = 2.112534761428833
I0123 22:31:45.825630 139974069698560 ddar.py:60] Depth 9/1000 time = 1.0483524799346924
I0123 22:31:46.883283 139974069698560 ddar.py:60] Depth 10/1000 time = 1.0546610355377197
I0123 22:31:46.884198 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:31:46.884262 139974069698560 alphageometry.py:566] LM output (score=-2.679776): "l : C b c l 15 D b l c l 16 ;"
I0123 22:31:46.884299 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 22:31:46.884351 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b c, on_bline l c b ? cong j f j e"
I0123 22:31:46.884515 139974069698560 graph.py:498] 
I0123 22:31:46.884570 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b c, on_bline l c b ? cong j f j e
I0123 22:31:48.495275 139974069698560 ddar.py:60] Depth 1/1000 time = 1.5572986602783203
I0123 22:31:49.717590 139974069698560 ddar.py:60] Depth 2/1000 time = 1.222135305404663
I0123 22:31:52.138734 139974069698560 ddar.py:60] Depth 3/1000 time = 2.4209542274475098
I0123 22:31:53.509253 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3703327178955078
I0123 22:31:55.906658 139974069698560 ddar.py:60] Depth 5/1000 time = 2.396956205368042
I0123 22:31:57.374359 139974069698560 ddar.py:60] Depth 6/1000 time = 1.455716848373413
I0123 22:31:59.838862 139974069698560 ddar.py:60] Depth 7/1000 time = 2.464325428009033
I0123 22:32:02.399543 139974069698560 ddar.py:60] Depth 8/1000 time = 2.5529820919036865
I0123 22:32:02.400618 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:32:02.400684 139974069698560 alphageometry.py:566] LM output (score=-2.687135): "l : T c d g l 15 ;"
I0123 22:32:02.400719 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g c d"

I0123 22:32:02.400761 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g c d ? cong j f j e"
I0123 22:32:02.400904 139974069698560 graph.py:498] 
I0123 22:32:02.400957 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g c d ? cong j f j e
I0123 22:32:02.907266 139974069698560 ddar.py:60] Depth 1/1000 time = 0.46415042877197266
I0123 22:32:03.716740 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8093338012695312
I0123 22:32:04.612504 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8956162929534912
I0123 22:32:06.644862 139974069698560 ddar.py:60] Depth 4/1000 time = 2.032193422317505
I0123 22:32:07.651798 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0067505836486816
I0123 22:32:08.662721 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0105688571929932
I0123 22:32:10.758237 139974069698560 ddar.py:60] Depth 7/1000 time = 2.0831210613250732
I0123 22:32:11.815439 139974069698560 ddar.py:60] Depth 8/1000 time = 1.057023525238037
I0123 22:32:12.887241 139974069698560 ddar.py:60] Depth 9/1000 time = 1.067758321762085
I0123 22:32:14.990292 139974069698560 ddar.py:60] Depth 10/1000 time = 2.099266529083252
I0123 22:32:14.991210 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:32:14.991276 139974069698560 alphageometry.py:566] LM output (score=-2.717131): "l : T c e h l 15 ;"
I0123 22:32:14.991311 139974069698560 alphageometry.py:567] Translation: "l = on_tline l h c e"

I0123 22:32:14.991349 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l h c e ? cong j f j e"
I0123 22:32:14.991485 139974069698560 graph.py:498] 
I0123 22:32:14.991536 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l h c e ? cong j f j e
I0123 22:32:15.493834 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4604156017303467
I0123 22:32:16.307446 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8134896755218506
I0123 22:32:17.196666 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8890631198883057
I0123 22:32:19.250725 139974069698560 ddar.py:60] Depth 4/1000 time = 2.053872585296631
I0123 22:32:20.247573 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9965970516204834
I0123 22:32:22.328087 139974069698560 ddar.py:60] Depth 6/1000 time = 2.079984188079834
I0123 22:32:23.401550 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0612952709197998
I0123 22:32:24.438903 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0371620655059814
I0123 22:32:25.499023 139974069698560 ddar.py:60] Depth 9/1000 time = 1.0563397407531738
I0123 22:32:27.554851 139974069698560 ddar.py:60] Depth 10/1000 time = 2.0519216060638428
I0123 22:32:27.555795 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:32:27.555864 139974069698560 alphageometry.py:566] LM output (score=-2.726378): "l : T c d c l 15 ;"
I0123 22:32:27.555902 139974069698560 alphageometry.py:567] Translation: "l = on_tline l c c d"

I0123 22:32:27.555954 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l c c d ? cong j f j e"
I0123 22:32:27.556098 139974069698560 graph.py:498] 
I0123 22:32:27.556155 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l c c d ? cong j f j e
I0123 22:32:28.077772 139974069698560 ddar.py:60] Depth 1/1000 time = 0.47927260398864746
I0123 22:32:29.098768 139974069698560 ddar.py:60] Depth 2/1000 time = 1.0208539962768555
I0123 22:32:31.247499 139974069698560 ddar.py:60] Depth 3/1000 time = 2.1485652923583984
I0123 22:32:32.395426 139974069698560 ddar.py:60] Depth 4/1000 time = 1.147752285003662
I0123 22:32:33.549614 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1538395881652832
I0123 22:32:35.834230 139974069698560 ddar.py:60] Depth 6/1000 time = 2.271361827850342
I0123 22:32:37.050940 139974069698560 ddar.py:60] Depth 7/1000 time = 1.216522216796875
I0123 22:32:39.414714 139974069698560 ddar.py:60] Depth 8/1000 time = 2.3559410572052
I0123 22:32:39.415683 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:32:39.415745 139974069698560 alphageometry.py:566] LM output (score=-2.744864): "l : T g j g l 15 ;"
I0123 22:32:39.415780 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g g j"

I0123 22:32:39.415820 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g g j ? cong j f j e"
I0123 22:32:39.415956 139974069698560 graph.py:498] 
I0123 22:32:39.416012 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g g j ? cong j f j e
I0123 22:32:39.906625 139974069698560 ddar.py:60] Depth 1/1000 time = 0.44837450981140137
I0123 22:32:40.725061 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8182764053344727
I0123 22:32:41.629458 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9042377471923828
I0123 22:32:43.705825 139974069698560 ddar.py:60] Depth 4/1000 time = 2.0761940479278564
I0123 22:32:44.726707 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0206937789916992
I0123 22:32:45.749114 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0220561027526855
I0123 22:32:46.804005 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0432777404785156
I0123 22:32:48.866851 139974069698560 ddar.py:60] Depth 8/1000 time = 2.058901071548462
I0123 22:32:49.916857 139974069698560 ddar.py:60] Depth 9/1000 time = 1.0461719036102295
I0123 22:32:49.917026 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:32:49.917075 139974069698560 alphageometry.py:566] LM output (score=-2.773097): "l : T g i g l 15 ;"
I0123 22:32:49.917110 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g g i"

I0123 22:32:49.917147 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g g i ? cong j f j e"
I0123 22:32:49.917299 139974069698560 graph.py:498] 
I0123 22:32:49.917350 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g g i ? cong j f j e
I0123 22:32:50.416916 139974069698560 ddar.py:60] Depth 1/1000 time = 0.45749378204345703
I0123 22:32:52.300464 139974069698560 ddar.py:60] Depth 2/1000 time = 1.8834202289581299
I0123 22:32:53.213106 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9124548435211182
I0123 22:32:54.211645 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9983561038970947
I0123 22:32:56.296226 139974069698560 ddar.py:60] Depth 5/1000 time = 2.08439564704895
I0123 22:32:57.312750 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0160958766937256
I0123 22:32:58.420470 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0965700149536133
I0123 22:33:00.573059 139974069698560 ddar.py:60] Depth 8/1000 time = 2.152395725250244
I0123 22:33:01.642238 139974069698560 ddar.py:60] Depth 9/1000 time = 1.065225601196289
I0123 22:33:02.723693 139974069698560 ddar.py:60] Depth 10/1000 time = 1.078089952468872
I0123 22:33:02.724608 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:33:02.724678 139974069698560 alphageometry.py:566] LM output (score=-2.785920): "l : C b f l 15 P d k g l 16 ;"
I0123 22:33:02.724715 139974069698560 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2637, in add_clause
    raise PointTooFarError()
graph.PointTooFarError
"

I0123 22:33:02.724755 139974069698560 alphageometry.py:566] LM output (score=-2.810341): "l : T c f f l 15 ;"
I0123 22:33:02.724783 139974069698560 alphageometry.py:567] Translation: "l = on_tline l f c f"

I0123 22:33:02.724814 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l f c f ? cong j f j e"
I0123 22:33:02.724956 139974069698560 graph.py:498] 
I0123 22:33:02.725012 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l f c f ? cong j f j e
I0123 22:33:03.227258 139974069698560 ddar.py:60] Depth 1/1000 time = 0.45992493629455566
I0123 22:33:05.057167 139974069698560 ddar.py:60] Depth 2/1000 time = 1.8297851085662842
I0123 22:33:05.939587 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8822405338287354
I0123 22:33:06.916067 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9763052463531494
I0123 22:33:08.946694 139974069698560 ddar.py:60] Depth 5/1000 time = 2.0304489135742188
I0123 22:33:09.942025 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9949712753295898
I0123 22:33:11.020923 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0677549839019775
I0123 22:33:13.122035 139974069698560 ddar.py:60] Depth 8/1000 time = 2.1009392738342285
I0123 22:33:14.187145 139974069698560 ddar.py:60] Depth 9/1000 time = 1.0613336563110352
I0123 22:33:15.260173 139974069698560 ddar.py:60] Depth 10/1000 time = 1.0700080394744873
I0123 22:33:15.261201 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:33:15.261285 139974069698560 alphageometry.py:566] LM output (score=-2.824459): "l : T c i i l 15 ;"
I0123 22:33:15.261323 139974069698560 alphageometry.py:567] Translation: "l = on_tline l i c i"

I0123 22:33:15.261374 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l i c i ? cong j f j e"
I0123 22:33:15.261558 139974069698560 graph.py:498] 
I0123 22:33:15.261621 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l i c i ? cong j f j e
I0123 22:33:15.763415 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4595177173614502
I0123 22:33:17.651313 139974069698560 ddar.py:60] Depth 2/1000 time = 1.887749433517456
I0123 22:33:18.525515 139974069698560 ddar.py:60] Depth 3/1000 time = 0.874014139175415
I0123 22:33:19.482065 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9563806056976318
I0123 22:33:21.525150 139974069698560 ddar.py:60] Depth 5/1000 time = 2.0429186820983887
I0123 22:33:22.501466 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9759645462036133
I0123 22:33:23.558513 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0461697578430176
I0123 22:33:24.586384 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0276973247528076
I0123 22:33:26.642923 139974069698560 ddar.py:60] Depth 9/1000 time = 2.0525388717651367
I0123 22:33:27.681485 139974069698560 ddar.py:60] Depth 10/1000 time = 1.0355839729309082
I0123 22:33:27.682394 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:33:27.682454 139974069698560 alphageometry.py:566] LM output (score=-2.876856): "l : C b c l 15 T b c h l 16 ;"
I0123 22:33:27.682491 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l h b c"

I0123 22:33:27.682529 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b c, on_tline l h b c ? cong j f j e"
I0123 22:33:27.682666 139974069698560 graph.py:498] 
I0123 22:33:27.682715 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_line l b c, on_tline l h b c ? cong j f j e
I0123 22:33:28.238312 139974069698560 ddar.py:60] Depth 1/1000 time = 0.513540506362915
I0123 22:33:30.238030 139974069698560 ddar.py:60] Depth 2/1000 time = 1.9995696544647217
I0123 22:33:31.283953 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0457391738891602
I0123 22:33:33.560893 139974069698560 ddar.py:60] Depth 4/1000 time = 2.276707887649536
I0123 22:33:34.716716 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1555235385894775
I0123 22:33:35.881536 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1643462181091309
I0123 22:33:38.188358 139974069698560 ddar.py:60] Depth 7/1000 time = 2.296725273132324
I0123 22:33:39.392818 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2042686939239502
I0123 22:33:41.621341 139974069698560 ddar.py:60] Depth 9/1000 time = 2.2247705459594727
I0123 22:33:42.841282 139974069698560 ddar.py:60] Depth 10/1000 time = 1.2166411876678467
I0123 22:33:42.842195 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:33:42.842261 139974069698560 alphageometry.py:566] LM output (score=-2.906539): "l : T c l g i 15 ;"
I0123 22:33:42.842299 139974069698560 alphageometry.py:567] Translation: "l = on_tline l c g i"

I0123 22:33:42.842349 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l c g i ? cong j f j e"
I0123 22:33:42.842489 139974069698560 graph.py:498] 
I0123 22:33:42.842545 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l c g i ? cong j f j e
I0123 22:33:44.336905 139974069698560 ddar.py:60] Depth 1/1000 time = 1.4521305561065674
I0123 22:33:45.154309 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8172140121459961
I0123 22:33:46.059639 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9051573276519775
I0123 22:33:48.088315 139974069698560 ddar.py:60] Depth 4/1000 time = 2.0284950733184814
I0123 22:33:49.092874 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0043671131134033
I0123 22:33:50.095361 139974069698560 ddar.py:60] Depth 6/1000 time = 1.002124309539795
I0123 22:33:52.298276 139974069698560 ddar.py:60] Depth 7/1000 time = 2.192070722579956
I0123 22:33:53.354787 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0562264919281006
I0123 22:33:54.425880 139974069698560 ddar.py:60] Depth 9/1000 time = 1.0672755241394043
I0123 22:33:56.595246 139974069698560 ddar.py:60] Depth 10/1000 time = 2.16584849357605
I0123 22:33:56.596148 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:33:56.596202 139974069698560 alphageometry.py:566] LM output (score=-2.919692): "l : T e g g l 15 ;"
I0123 22:33:56.596236 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g e g"

I0123 22:33:56.596277 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g e g ? cong j f j e"
I0123 22:33:56.596423 139974069698560 graph.py:498] 
I0123 22:33:56.596479 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k d b c; l = on_tline l g e g ? cong j f j e
I0123 22:33:57.105599 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4666256904602051
I0123 22:33:57.923092 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8173611164093018
I0123 22:33:58.814110 139974069698560 ddar.py:60] Depth 3/1000 time = 0.890862226486206
I0123 22:34:00.857457 139974069698560 ddar.py:60] Depth 4/1000 time = 2.0431740283966064
I0123 22:34:01.864772 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0071301460266113
I0123 22:34:02.875526 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0103909969329834
I0123 22:34:05.008955 139974069698560 ddar.py:60] Depth 7/1000 time = 2.121295928955078
I0123 22:34:06.070115 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0609924793243408
I0123 22:34:07.142785 139974069698560 ddar.py:60] Depth 9/1000 time = 1.0688745975494385
I0123 22:34:09.314604 139974069698560 ddar.py:60] Depth 10/1000 time = 2.168004035949707
I0123 22:34:09.315525 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:34:09.315585 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : C b h k 14 D b k h k 15 ; x00
I0123 22:34:16.030329 139974069698560 alphageometry.py:566] LM output (score=-0.558598): "l : C d h l 16 D d l h l 17 ;"
I0123 22:34:16.030596 139974069698560 alphageometry.py:567] Translation: "l = on_line l d h, on_bline l h d"

I0123 22:34:16.030655 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l d h, on_bline l h d ? cong j f j e"
I0123 22:34:16.030812 139974069698560 graph.py:498] 
I0123 22:34:16.030875 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l d h, on_bline l h d ? cong j f j e
I0123 22:34:16.756146 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6601123809814453
I0123 22:34:17.994772 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2384357452392578
I0123 22:34:20.461261 139974069698560 ddar.py:60] Depth 3/1000 time = 2.466275691986084
I0123 22:34:21.819676 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3582110404968262
I0123 22:34:24.234886 139974069698560 ddar.py:60] Depth 5/1000 time = 2.415001630783081
I0123 22:34:25.596187 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3606846332550049
I0123 22:34:28.136218 139974069698560 ddar.py:60] Depth 7/1000 time = 2.525014877319336
I0123 22:34:29.536800 139974069698560 ddar.py:60] Depth 8/1000 time = 1.4004080295562744
I0123 22:34:30.967537 139974069698560 ddar.py:60] Depth 9/1000 time = 1.4168157577514648
I0123 22:34:30.969050 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:34:30.969111 139974069698560 alphageometry.py:566] LM output (score=-1.192374): "l : C b g l 16 D b l g l 17 ;"
I0123 22:34:30.969147 139974069698560 alphageometry.py:567] Translation: "l = on_line l b g, on_bline l g b"

I0123 22:34:30.969185 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l b g, on_bline l g b ? cong j f j e"
I0123 22:34:30.969322 139974069698560 graph.py:498] 
I0123 22:34:30.969375 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l b g, on_bline l g b ? cong j f j e
I0123 22:34:32.710460 139974069698560 ddar.py:60] Depth 1/1000 time = 1.6769208908081055
I0123 22:34:33.994614 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2839906215667725
I0123 22:34:36.397869 139974069698560 ddar.py:60] Depth 3/1000 time = 2.4030635356903076
I0123 22:34:37.833149 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4350717067718506
I0123 22:34:40.423634 139974069698560 ddar.py:60] Depth 5/1000 time = 2.5902950763702393
I0123 22:34:41.944054 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5198156833648682
I0123 22:34:44.611546 139974069698560 ddar.py:60] Depth 7/1000 time = 2.654578685760498
I0123 22:34:46.168482 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5567407608032227
I0123 22:34:48.853239 139974069698560 ddar.py:60] Depth 9/1000 time = 2.6707754135131836
I0123 22:34:48.856376 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:34:48.856440 139974069698560 alphageometry.py:566] LM output (score=-1.207980): "l : C b j l 16 D b l j l 17 ;"
I0123 22:34:48.856476 139974069698560 alphageometry.py:567] Translation: "l = on_line l b j, on_bline l j b"

I0123 22:34:48.856514 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l b j, on_bline l j b ? cong j f j e"
I0123 22:34:48.856651 139974069698560 graph.py:498] 
I0123 22:34:48.856700 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l b j, on_bline l j b ? cong j f j e
I0123 22:34:49.550016 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6261141300201416
I0123 22:34:50.668435 139974069698560 ddar.py:60] Depth 2/1000 time = 1.1182525157928467
I0123 22:34:52.904323 139974069698560 ddar.py:60] Depth 3/1000 time = 2.2356932163238525
I0123 22:34:54.119699 139974069698560 ddar.py:60] Depth 4/1000 time = 1.215195894241333
I0123 22:34:56.422004 139974069698560 ddar.py:60] Depth 5/1000 time = 2.302088499069214
I0123 22:34:57.632516 139974069698560 ddar.py:60] Depth 6/1000 time = 1.209951639175415
I0123 22:34:58.923471 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2796165943145752
I0123 22:35:01.260259 139974069698560 ddar.py:60] Depth 8/1000 time = 2.336601495742798
I0123 22:35:02.538525 139974069698560 ddar.py:60] Depth 9/1000 time = 1.2667572498321533
I0123 22:35:02.539929 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:35:02.539993 139974069698560 alphageometry.py:566] LM output (score=-1.332096): "l : C h j l 16 D h l j l 17 ;"
I0123 22:35:02.540028 139974069698560 alphageometry.py:567] Translation: "l = on_line l h j, on_bline l j h"

I0123 22:35:02.540066 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l h j, on_bline l j h ? cong j f j e"
I0123 22:35:02.540203 139974069698560 graph.py:498] 
I0123 22:35:02.540253 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l h j, on_bline l j h ? cong j f j e
I0123 22:35:04.350586 139974069698560 ddar.py:60] Depth 1/1000 time = 1.74619460105896
I0123 22:35:05.589685 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2389166355133057
I0123 22:35:06.930093 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3402080535888672
I0123 22:35:09.424292 139974069698560 ddar.py:60] Depth 4/1000 time = 2.4939687252044678
I0123 22:35:10.784533 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3600151538848877
I0123 22:35:13.251852 139974069698560 ddar.py:60] Depth 6/1000 time = 2.466702938079834
I0123 22:35:14.699890 139974069698560 ddar.py:60] Depth 7/1000 time = 1.434309720993042
I0123 22:35:17.218398 139974069698560 ddar.py:60] Depth 8/1000 time = 2.518327236175537
I0123 22:35:18.662656 139974069698560 ddar.py:60] Depth 9/1000 time = 1.4297513961791992
I0123 22:35:18.664199 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:35:18.664258 139974069698560 alphageometry.py:566] LM output (score=-1.433120): "l : C g h l 16 D g l h l 17 ;"
I0123 22:35:18.664294 139974069698560 alphageometry.py:567] Translation: "l = on_line l g h, on_bline l h g"

I0123 22:35:18.664347 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l g h, on_bline l h g ? cong j f j e"
I0123 22:35:18.664495 139974069698560 graph.py:498] 
I0123 22:35:18.664552 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l g h, on_bline l h g ? cong j f j e
I0123 22:35:19.407311 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6776094436645508
I0123 22:35:22.001682 139974069698560 ddar.py:60] Depth 2/1000 time = 2.594200611114502
I0123 22:35:24.903911 139974069698560 ddar.py:60] Depth 3/1000 time = 2.902036428451538
I0123 22:35:26.647532 139974069698560 ddar.py:60] Depth 4/1000 time = 1.7433581352233887
I0123 22:35:29.607487 139974069698560 ddar.py:60] Depth 5/1000 time = 2.959207057952881
I0123 22:35:31.475268 139974069698560 ddar.py:60] Depth 6/1000 time = 1.8515758514404297
I0123 22:35:34.390258 139974069698560 ddar.py:60] Depth 7/1000 time = 2.9148104190826416
I0123 22:35:36.213645 139974069698560 ddar.py:60] Depth 8/1000 time = 1.8080358505249023
I0123 22:35:36.214355 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:35:36.214421 139974069698560 alphageometry.py:566] LM output (score=-1.480331): "l : C c h l 16 D c l h l 17 ;"
I0123 22:35:36.214458 139974069698560 alphageometry.py:567] Translation: "l = on_line l c h, on_bline l h c"

I0123 22:35:36.214508 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l c h, on_bline l h c ? cong j f j e"
I0123 22:35:36.214652 139974069698560 graph.py:498] 
I0123 22:35:36.214706 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l c h, on_bline l h c ? cong j f j e
I0123 22:35:36.932875 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6529061794281006
I0123 22:35:39.332567 139974069698560 ddar.py:60] Depth 2/1000 time = 2.399517059326172
I0123 22:35:40.750861 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4181079864501953
I0123 22:35:43.333590 139974069698560 ddar.py:60] Depth 4/1000 time = 2.582523822784424
I0123 22:35:44.788625 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4543640613555908
I0123 22:35:47.442748 139974069698560 ddar.py:60] Depth 6/1000 time = 2.6412272453308105
I0123 22:35:48.928521 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4855906963348389
I0123 22:35:51.536504 139974069698560 ddar.py:60] Depth 8/1000 time = 2.5919883251190186
I0123 22:35:51.538038 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:35:51.538097 139974069698560 alphageometry.py:566] LM output (score=-1.670248): "l : C b c l 16 D b l c l 17 ;"
I0123 22:35:51.538134 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 22:35:51.538183 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l b c, on_bline l c b ? cong j f j e"
I0123 22:35:51.538329 139974069698560 graph.py:498] 
I0123 22:35:51.538384 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l b c, on_bline l c b ? cong j f j e
I0123 22:35:52.247121 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6437878608703613
I0123 22:35:54.703035 139974069698560 ddar.py:60] Depth 2/1000 time = 2.4557480812072754
I0123 22:35:56.124599 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4213850498199463
I0123 22:35:58.719408 139974069698560 ddar.py:60] Depth 4/1000 time = 2.5946226119995117
I0123 22:36:00.164006 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4443998336791992
I0123 22:36:02.794305 139974069698560 ddar.py:60] Depth 6/1000 time = 2.6296703815460205
I0123 22:36:04.341638 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5332176685333252
I0123 22:36:06.968607 139974069698560 ddar.py:60] Depth 8/1000 time = 2.626742124557495
I0123 22:36:08.485118 139974069698560 ddar.py:60] Depth 9/1000 time = 1.5042381286621094
I0123 22:36:08.486525 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:36:08.486596 139974069698560 alphageometry.py:566] LM output (score=-1.836275): "l : C b i l 16 D b l i l 17 ;"
I0123 22:36:08.486635 139974069698560 alphageometry.py:567] Translation: "l = on_line l b i, on_bline l i b"

I0123 22:36:08.486706 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l b i, on_bline l i b ? cong j f j e"
I0123 22:36:08.486858 139974069698560 graph.py:498] 
I0123 22:36:08.486917 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l b i, on_bline l i b ? cong j f j e
I0123 22:36:10.263262 139974069698560 ddar.py:60] Depth 1/1000 time = 1.7111656665802002
I0123 22:36:11.443392 139974069698560 ddar.py:60] Depth 2/1000 time = 1.179948091506958
I0123 22:36:13.793717 139974069698560 ddar.py:60] Depth 3/1000 time = 2.350135087966919
I0123 22:36:15.054459 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2605435848236084
I0123 22:36:16.321667 139974069698560 ddar.py:60] Depth 5/1000 time = 1.267005443572998
I0123 22:36:18.714471 139974069698560 ddar.py:60] Depth 6/1000 time = 2.392258405685425
I0123 22:36:20.056861 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3307135105133057
I0123 22:36:22.570650 139974069698560 ddar.py:60] Depth 8/1000 time = 2.5134825706481934
I0123 22:36:23.888899 139974069698560 ddar.py:60] Depth 9/1000 time = 1.3061275482177734
I0123 22:36:23.890271 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:36:23.890341 139974069698560 alphageometry.py:566] LM output (score=-2.206892): "l : C e h l 16 D e l h l 17 ;"
I0123 22:36:23.890379 139974069698560 alphageometry.py:567] Translation: "l = on_line l e h, on_bline l h e"

I0123 22:36:23.890429 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l e h, on_bline l h e ? cong j f j e"
I0123 22:36:23.890594 139974069698560 graph.py:498] 
I0123 22:36:23.890652 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l e h, on_bline l h e ? cong j f j e
I0123 22:36:25.838849 139974069698560 ddar.py:60] Depth 1/1000 time = 1.8823845386505127
I0123 22:36:27.600844 139974069698560 ddar.py:60] Depth 2/1000 time = 1.7618083953857422
I0123 22:36:30.960855 139974069698560 ddar.py:60] Depth 3/1000 time = 3.359811305999756
I0123 22:36:34.375644 139974069698560 ddar.py:60] Depth 4/1000 time = 3.414599657058716
I0123 22:36:37.834837 139974069698560 ddar.py:60] Depth 5/1000 time = 3.4585306644439697
I0123 22:36:41.299268 139974069698560 ddar.py:60] Depth 6/1000 time = 3.463658094406128
I0123 22:36:44.849662 139974069698560 ddar.py:60] Depth 7/1000 time = 3.5378782749176025
I0123 22:36:48.302260 139974069698560 ddar.py:60] Depth 8/1000 time = 3.452399492263794
I0123 22:36:51.779201 139974069698560 ddar.py:60] Depth 9/1000 time = 3.4589009284973145
I0123 22:36:51.779933 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:36:51.780016 139974069698560 alphageometry.py:566] LM output (score=-2.316031): "l : T b c d l 16 ;"
I0123 22:36:51.780057 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d b c"

I0123 22:36:51.780109 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l d b c ? cong j f j e"
I0123 22:36:51.780257 139974069698560 graph.py:498] 
I0123 22:36:51.780312 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l d b c ? cong j f j e
I0123 22:36:52.378545 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5453767776489258
I0123 22:36:53.360419 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9817109107971191
I0123 22:36:55.650975 139974069698560 ddar.py:60] Depth 3/1000 time = 2.2903339862823486
I0123 22:36:56.833653 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1824007034301758
I0123 22:36:58.020884 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1870272159576416
I0123 22:37:00.362839 139974069698560 ddar.py:60] Depth 6/1000 time = 2.341435194015503
I0123 22:37:01.635787 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2606666088104248
I0123 22:37:03.992077 139974069698560 ddar.py:60] Depth 8/1000 time = 2.3561108112335205
I0123 22:37:05.234585 139974069698560 ddar.py:60] Depth 9/1000 time = 1.2358930110931396
I0123 22:37:06.490205 139974069698560 ddar.py:60] Depth 10/1000 time = 1.2525057792663574
I0123 22:37:06.491370 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:37:06.491444 139974069698560 alphageometry.py:566] LM output (score=-2.376065): "l : T b c b l 16 ;"
I0123 22:37:06.491484 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b b c"

I0123 22:37:06.491534 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l b b c ? cong j f j e"
I0123 22:37:06.491686 139974069698560 graph.py:498] 
I0123 22:37:06.491747 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l b b c ? cong j f j e
I0123 22:37:08.212825 139974069698560 ddar.py:60] Depth 1/1000 time = 1.6680362224578857
I0123 22:37:09.203719 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9907033443450928
I0123 22:37:10.258043 139974069698560 ddar.py:60] Depth 3/1000 time = 1.054150104522705
I0123 22:37:12.487642 139974069698560 ddar.py:60] Depth 4/1000 time = 2.229417562484741
I0123 22:37:13.548975 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0608842372894287
I0123 22:37:14.703800 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1428401470184326
I0123 22:37:16.999977 139974069698560 ddar.py:60] Depth 7/1000 time = 2.2958624362945557
I0123 22:37:18.169118 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1625761985778809
I0123 22:37:18.170213 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:37:18.170298 139974069698560 alphageometry.py:566] LM output (score=-2.458776): "l : C b f l 16 D b l f l 17 ;"
I0123 22:37:18.170336 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_bline l f b"

I0123 22:37:18.170386 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l b f, on_bline l f b ? cong j f j e"
I0123 22:37:18.170538 139974069698560 graph.py:498] 
I0123 22:37:18.170597 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l b f, on_bline l f b ? cong j f j e
I0123 22:37:18.981725 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7416777610778809
I0123 22:37:21.621035 139974069698560 ddar.py:60] Depth 2/1000 time = 2.639125108718872
I0123 22:37:24.676341 139974069698560 ddar.py:60] Depth 3/1000 time = 3.055102586746216
I0123 22:37:27.762901 139974069698560 ddar.py:60] Depth 4/1000 time = 3.086364507675171
I0123 22:37:30.903937 139974069698560 ddar.py:60] Depth 5/1000 time = 3.1398677825927734
I0123 22:37:32.922303 139974069698560 ddar.py:60] Depth 6/1000 time = 2.0063154697418213
I0123 22:37:36.070570 139974069698560 ddar.py:60] Depth 7/1000 time = 3.147970199584961
I0123 22:37:39.199815 139974069698560 ddar.py:60] Depth 8/1000 time = 3.1188228130340576
I0123 22:37:39.201186 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:37:39.201258 139974069698560 alphageometry.py:566] LM output (score=-2.571745): "l : C i k l 16 D i l k l 17 ;"
I0123 22:37:39.201296 139974069698560 alphageometry.py:567] Translation: "l = on_line l i k, on_bline l k i"

I0123 22:37:39.201347 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l i k, on_bline l k i ? cong j f j e"
I0123 22:37:39.201504 139974069698560 graph.py:498] 
I0123 22:37:39.201564 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l i k, on_bline l k i ? cong j f j e
I0123 22:37:39.901123 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6337299346923828
I0123 22:37:40.987737 139974069698560 ddar.py:60] Depth 2/1000 time = 1.0864529609680176
I0123 22:37:43.195386 139974069698560 ddar.py:60] Depth 3/1000 time = 2.207472801208496
I0123 22:37:44.325949 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1303865909576416
I0123 22:37:46.603543 139974069698560 ddar.py:60] Depth 5/1000 time = 2.2770962715148926
I0123 22:37:47.805628 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1899065971374512
I0123 22:37:48.970683 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1648674011230469
I0123 22:37:51.331276 139974069698560 ddar.py:60] Depth 8/1000 time = 2.353264331817627
I0123 22:37:51.332571 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:37:51.332642 139974069698560 alphageometry.py:566] LM output (score=-2.628415): "l : C i j l 16 D i l j l 17 ;"
I0123 22:37:51.332677 139974069698560 alphageometry.py:567] Translation: "l = on_line l i j, on_bline l j i"

I0123 22:37:51.332718 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l i j, on_bline l j i ? cong j f j e"
I0123 22:37:51.332868 139974069698560 graph.py:498] 
I0123 22:37:51.332930 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l i j, on_bline l j i ? cong j f j e
I0123 22:37:52.024121 139974069698560 ddar.py:60] Depth 1/1000 time = 0.626488208770752
I0123 22:37:53.106163 139974069698560 ddar.py:60] Depth 2/1000 time = 1.0818653106689453
I0123 22:37:55.360950 139974069698560 ddar.py:60] Depth 3/1000 time = 2.254591226577759
I0123 22:37:56.570928 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2097783088684082
I0123 22:37:58.875921 139974069698560 ddar.py:60] Depth 5/1000 time = 2.304478406906128
I0123 22:38:00.114348 139974069698560 ddar.py:60] Depth 6/1000 time = 1.2265329360961914
I0123 22:38:01.317523 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2029988765716553
I0123 22:38:03.641384 139974069698560 ddar.py:60] Depth 8/1000 time = 2.3162596225738525
I0123 22:38:03.642674 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:38:03.642778 139974069698560 alphageometry.py:566] LM output (score=-2.669442): "l : C d f l 16 D d l f l 17 ;"
I0123 22:38:03.642820 139974069698560 alphageometry.py:567] Translation: "l = on_line l d f, on_bline l f d"

I0123 22:38:03.642863 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l d f, on_bline l f d ? cong j f j e"
I0123 22:38:03.643006 139974069698560 graph.py:498] 
I0123 22:38:03.643062 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l d f, on_bline l f d ? cong j f j e
I0123 22:38:04.381637 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6733076572418213
I0123 22:38:07.057238 139974069698560 ddar.py:60] Depth 2/1000 time = 2.6754350662231445
I0123 22:38:08.535367 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4778969287872314
I0123 22:38:11.263713 139974069698560 ddar.py:60] Depth 4/1000 time = 2.7280309200286865
I0123 22:38:12.747956 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4840161800384521
I0123 22:38:14.251600 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5030579566955566
I0123 22:38:16.928427 139974069698560 ddar.py:60] Depth 7/1000 time = 2.663635492324829
I0123 22:38:18.445646 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5170319080352783
I0123 22:38:21.079960 139974069698560 ddar.py:60] Depth 9/1000 time = 2.622732639312744
I0123 22:38:21.081516 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:38:21.081596 139974069698560 alphageometry.py:566] LM output (score=-2.745779): "l : T b c d l 16 T b l c d 17 ;"
I0123 22:38:21.081638 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d b c, on_tline l b c d"

I0123 22:38:21.081697 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l d b c, on_tline l b c d ? cong j f j e"
I0123 22:38:21.081858 139974069698560 graph.py:498] 
I0123 22:38:21.081920 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l d b c, on_tline l b c d ? cong j f j e
I0123 22:38:21.722557 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5825591087341309
I0123 22:38:24.017443 139974069698560 ddar.py:60] Depth 2/1000 time = 2.2947351932525635
I0123 22:38:25.255201 139974069698560 ddar.py:60] Depth 3/1000 time = 1.237583875656128
I0123 22:38:26.722326 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4668748378753662
I0123 22:38:29.382040 139974069698560 ddar.py:60] Depth 5/1000 time = 2.65905499458313
I0123 22:38:30.957637 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5594112873077393
I0123 22:38:33.648596 139974069698560 ddar.py:60] Depth 7/1000 time = 2.690767288208008
I0123 22:38:35.260917 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6035833358764648
I0123 22:38:35.264400 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:38:35.264476 139974069698560 alphageometry.py:566] LM output (score=-2.788816): "l : T b c h l 16 ;"
I0123 22:38:35.264519 139974069698560 alphageometry.py:567] Translation: "l = on_tline l h b c"

I0123 22:38:35.264575 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l h b c ? cong j f j e"
I0123 22:38:35.264746 139974069698560 graph.py:498] 
I0123 22:38:35.264810 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l h b c ? cong j f j e
I0123 22:38:35.860827 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5425393581390381
I0123 22:38:37.988884 139974069698560 ddar.py:60] Depth 2/1000 time = 2.127910852432251
I0123 22:38:39.035960 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0468978881835938
I0123 22:38:40.100288 139974069698560 ddar.py:60] Depth 4/1000 time = 1.064119577407837
I0123 22:38:42.306636 139974069698560 ddar.py:60] Depth 5/1000 time = 2.205876350402832
I0123 22:38:43.480165 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1615326404571533
I0123 22:38:45.843809 139974069698560 ddar.py:60] Depth 7/1000 time = 2.363457679748535
I0123 22:38:46.965982 139974069698560 ddar.py:60] Depth 8/1000 time = 1.11568021774292
I0123 22:38:46.967112 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:38:46.967186 139974069698560 alphageometry.py:566] LM output (score=-2.789892): "l : C i h l 16 D i l h l 17 ;"
I0123 22:38:46.967226 139974069698560 alphageometry.py:567] Translation: "l = on_line l i h, on_bline l h i"

I0123 22:38:46.967277 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l i h, on_bline l h i ? cong j f j e"
I0123 22:38:46.967434 139974069698560 graph.py:498] 
I0123 22:38:46.967493 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l i h, on_bline l h i ? cong j f j e
I0123 22:38:47.809828 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7749919891357422
I0123 22:38:50.541929 139974069698560 ddar.py:60] Depth 2/1000 time = 2.7319233417510986
I0123 22:38:53.389849 139974069698560 ddar.py:60] Depth 3/1000 time = 2.8477513790130615
I0123 22:38:55.135082 139974069698560 ddar.py:60] Depth 4/1000 time = 1.7450361251831055
I0123 22:38:58.030363 139974069698560 ddar.py:60] Depth 5/1000 time = 2.8951051235198975
I0123 22:39:01.003344 139974069698560 ddar.py:60] Depth 6/1000 time = 2.9727673530578613
I0123 22:39:02.745008 139974069698560 ddar.py:60] Depth 7/1000 time = 1.7409749031066895
I0123 22:39:05.786785 139974069698560 ddar.py:60] Depth 8/1000 time = 3.0244452953338623
I0123 22:39:05.803716 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:39:05.803787 139974069698560 alphageometry.py:566] LM output (score=-2.826664): "l : C b d l 16 D b l d l 17 ;"
I0123 22:39:05.803824 139974069698560 alphageometry.py:567] Translation: "l = on_line l b d, on_bline l d b"

I0123 22:39:05.803870 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l b d, on_bline l d b ? cong j f j e"
I0123 22:39:05.804023 139974069698560 graph.py:498] 
I0123 22:39:05.804081 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l b d, on_bline l d b ? cong j f j e
I0123 22:39:06.521493 139974069698560 ddar.py:60] Depth 1/1000 time = 0.651324987411499
I0123 22:39:09.030464 139974069698560 ddar.py:60] Depth 2/1000 time = 2.5088071823120117
I0123 22:39:10.449385 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4187266826629639
I0123 22:39:11.904303 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4547290802001953
I0123 22:39:14.463513 139974069698560 ddar.py:60] Depth 5/1000 time = 2.5590062141418457
I0123 22:39:15.947280 139974069698560 ddar.py:60] Depth 6/1000 time = 1.483163595199585
I0123 22:39:18.649300 139974069698560 ddar.py:60] Depth 7/1000 time = 2.687795877456665
I0123 22:39:20.167487 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5179946422576904
I0123 22:39:22.916054 139974069698560 ddar.py:60] Depth 9/1000 time = 2.735858678817749
I0123 22:39:22.917529 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:39:22.917608 139974069698560 alphageometry.py:566] LM output (score=-2.853452): "l : T c e e l 16 ;"
I0123 22:39:22.917657 139974069698560 alphageometry.py:567] Translation: "l = on_tline l e c e"

I0123 22:39:22.917707 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l e c e ? cong j f j e"
I0123 22:39:22.917857 139974069698560 graph.py:498] 
I0123 22:39:22.917918 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l e c e ? cong j f j e
I0123 22:39:23.517740 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5429818630218506
I0123 22:39:24.496940 139974069698560 ddar.py:60] Depth 2/1000 time = 0.979055643081665
I0123 22:39:26.648397 139974069698560 ddar.py:60] Depth 3/1000 time = 2.151287078857422
I0123 22:39:27.677151 139974069698560 ddar.py:60] Depth 4/1000 time = 1.028552770614624
I0123 22:39:28.719996 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0424096584320068
I0123 22:39:30.978024 139974069698560 ddar.py:60] Depth 6/1000 time = 2.2464139461517334
I0123 22:39:32.078651 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1004488468170166
I0123 22:39:33.201486 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1159229278564453
I0123 22:39:33.202622 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:39:33.202682 139974069698560 alphageometry.py:566] LM output (score=-2.879489): "l : C i j l 16 D i j j l 17 ;"
I0123 22:39:33.202719 139974069698560 alphageometry.py:567] Translation: "l = on_line l i j, on_circle l j i"

I0123 22:39:33.202759 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l i j, on_circle l j i ? cong j f j e"
I0123 22:39:33.202903 139974069698560 graph.py:498] 
I0123 22:39:33.202957 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l i j, on_circle l j i ? cong j f j e
I0123 22:39:35.332702 139974069698560 ddar.py:60] Depth 1/1000 time = 2.0691864490509033
I0123 22:39:36.857585 139974069698560 ddar.py:60] Depth 2/1000 time = 1.524721622467041
I0123 22:39:39.689869 139974069698560 ddar.py:60] Depth 3/1000 time = 2.8320462703704834
I0123 22:39:41.295449 139974069698560 ddar.py:60] Depth 4/1000 time = 1.6052517890930176
I0123 22:39:44.165391 139974069698560 ddar.py:60] Depth 5/1000 time = 2.869743585586548
I0123 22:39:45.775663 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6097135543823242
I0123 22:39:47.435320 139974069698560 ddar.py:60] Depth 7/1000 time = 1.6412897109985352
I0123 22:39:50.211843 139974069698560 ddar.py:60] Depth 8/1000 time = 2.7690179347991943
I0123 22:39:50.213179 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:39:50.213266 139974069698560 alphageometry.py:566] LM output (score=-2.989374): "l : C i k l 16 D i k k l 17 ;"
I0123 22:39:50.213307 139974069698560 alphageometry.py:567] Translation: "l = on_line l i k, on_circle l k i"

I0123 22:39:50.213356 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l i k, on_circle l k i ? cong j f j e"
I0123 22:39:50.213505 139974069698560 graph.py:498] 
I0123 22:39:50.213562 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l i k, on_circle l k i ? cong j f j e
I0123 22:39:50.984068 139974069698560 ddar.py:60] Depth 1/1000 time = 0.704007625579834
I0123 22:39:53.521749 139974069698560 ddar.py:60] Depth 2/1000 time = 2.5375213623046875
I0123 22:39:55.029814 139974069698560 ddar.py:60] Depth 3/1000 time = 1.5078816413879395
I0123 22:39:57.773049 139974069698560 ddar.py:60] Depth 4/1000 time = 2.7429773807525635
I0123 22:39:59.298417 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5246825218200684
I0123 22:40:02.132194 139974069698560 ddar.py:60] Depth 6/1000 time = 2.819017171859741
I0123 22:40:03.688734 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5563573837280273
I0123 22:40:06.475068 139974069698560 ddar.py:60] Depth 8/1000 time = 2.7782394886016846
I0123 22:40:06.476397 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:40:06.476458 139974069698560 alphageometry.py:566] LM output (score=-3.077368): "l : T d g g l 16 ;"
I0123 22:40:06.476494 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g d g"

I0123 22:40:06.476542 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l g d g ? cong j f j e"
I0123 22:40:06.476687 139974069698560 graph.py:498] 
I0123 22:40:06.476743 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l g d g ? cong j f j e
I0123 22:40:07.073577 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5436334609985352
I0123 22:40:08.050617 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9768788814544678
I0123 22:40:09.054889 139974069698560 ddar.py:60] Depth 3/1000 time = 1.004096269607544
I0123 22:40:11.216148 139974069698560 ddar.py:60] Depth 4/1000 time = 2.1610560417175293
I0123 22:40:12.241002 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0244171619415283
I0123 22:40:13.386730 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1339974403381348
I0123 22:40:15.653149 139974069698560 ddar.py:60] Depth 7/1000 time = 2.266185998916626
I0123 22:40:16.770875 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1109862327575684
I0123 22:40:16.772048 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:40:16.772165 139974069698560 alphageometry.py:566] LM output (score=-3.101723): "l : C a b l 16 D a l b l 17 ;"
I0123 22:40:16.772205 139974069698560 alphageometry.py:567] Translation: "l = on_line l a b, on_bline l b a"

I0123 22:40:16.772271 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l a b, on_bline l b a ? cong j f j e"
I0123 22:40:16.772466 139974069698560 graph.py:498] 
I0123 22:40:16.772524 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l a b, on_bline l b a ? cong j f j e
I0123 22:40:17.486406 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6473953723907471
I0123 22:40:20.008308 139974069698560 ddar.py:60] Depth 2/1000 time = 2.5217409133911133
I0123 22:40:21.404007 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3955097198486328
I0123 22:40:23.982294 139974069698560 ddar.py:60] Depth 4/1000 time = 2.57810378074646
I0123 22:40:25.405494 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4230046272277832
I0123 22:40:28.016828 139974069698560 ddar.py:60] Depth 6/1000 time = 2.6107513904571533
I0123 22:40:29.551889 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5210380554199219
I0123 22:40:32.263414 139974069698560 ddar.py:60] Depth 8/1000 time = 2.711333990097046
I0123 22:40:33.766557 139974069698560 ddar.py:60] Depth 9/1000 time = 1.4919729232788086
I0123 22:40:33.768051 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:40:33.768152 139974069698560 alphageometry.py:566] LM output (score=-3.114028): "l : C i j l 16 T g l i j 17 ;"
I0123 22:40:33.768192 139974069698560 alphageometry.py:567] Translation: "l = on_line l i j, on_tline l g i j"

I0123 22:40:33.768247 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l i j, on_tline l g i j ? cong j f j e"
I0123 22:40:33.768430 139974069698560 graph.py:498] 
I0123 22:40:33.768499 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_line l i j, on_tline l g i j ? cong j f j e
I0123 22:40:34.413549 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5922956466674805
I0123 22:40:36.716191 139974069698560 ddar.py:60] Depth 2/1000 time = 2.302459478378296
I0123 22:40:37.807071 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0907049179077148
I0123 22:40:38.911765 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1044814586639404
I0123 22:40:41.163904 139974069698560 ddar.py:60] Depth 5/1000 time = 2.251660108566284
I0123 22:40:42.380429 139974069698560 ddar.py:60] Depth 6/1000 time = 1.204901933670044
I0123 22:40:44.719767 139974069698560 ddar.py:60] Depth 7/1000 time = 2.339153289794922
I0123 22:40:45.905224 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1787152290344238
I0123 22:40:45.906346 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:40:45.906418 139974069698560 alphageometry.py:566] LM output (score=-3.152051): "l : T b c c l 16 ;"
I0123 22:40:45.906458 139974069698560 alphageometry.py:567] Translation: "l = on_tline l c b c"

I0123 22:40:45.906497 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l c b c ? cong j f j e"
I0123 22:40:45.906634 139974069698560 graph.py:498] 
I0123 22:40:45.906686 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l c b c ? cong j f j e
I0123 22:40:46.508822 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5496735572814941
I0123 22:40:48.722514 139974069698560 ddar.py:60] Depth 2/1000 time = 2.213535785675049
I0123 22:40:49.782019 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0593211650848389
I0123 22:40:50.850305 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0680856704711914
I0123 22:40:53.170894 139974069698560 ddar.py:60] Depth 5/1000 time = 2.320129156112671
I0123 22:40:54.319356 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1368894577026367
I0123 22:40:55.421230 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1016857624053955
I0123 22:40:57.746678 139974069698560 ddar.py:60] Depth 8/1000 time = 2.3186848163604736
I0123 22:40:57.747775 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:40:57.747839 139974069698560 alphageometry.py:566] LM output (score=-3.164999): "l : T i j i l 16 ;"
I0123 22:40:57.747876 139974069698560 alphageometry.py:567] Translation: "l = on_tline l i i j"

I0123 22:40:57.747921 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l i i j ? cong j f j e"
I0123 22:40:57.748065 139974069698560 graph.py:498] 
I0123 22:40:57.748122 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l i i j ? cong j f j e
I0123 22:40:58.331862 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5310707092285156
I0123 22:40:59.306705 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9747090339660645
I0123 22:41:00.319769 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0128974914550781
I0123 22:41:02.509416 139974069698560 ddar.py:60] Depth 4/1000 time = 2.189453601837158
I0123 22:41:03.545490 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0354351997375488
I0123 22:41:04.659984 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1031773090362549
I0123 22:41:06.913440 139974069698560 ddar.py:60] Depth 7/1000 time = 2.253262996673584
I0123 22:41:08.009992 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0900287628173828
I0123 22:41:08.011103 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:41:08.011175 139974069698560 alphageometry.py:566] LM output (score=-3.300300): "l : T f i f l 16 ;"
I0123 22:41:08.011212 139974069698560 alphageometry.py:567] Translation: "l = on_tline l f f i"

I0123 22:41:08.011252 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l f f i ? cong j f j e"
I0123 22:41:08.011403 139974069698560 graph.py:498] 
I0123 22:41:08.011460 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l f f i ? cong j f j e
I0123 22:41:08.600550 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5365996360778809
I0123 22:41:10.866297 139974069698560 ddar.py:60] Depth 2/1000 time = 2.265596866607666
I0123 22:41:11.925554 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0590620040893555
I0123 22:41:12.987955 139974069698560 ddar.py:60] Depth 4/1000 time = 1.062183141708374
I0123 22:41:15.258728 139974069698560 ddar.py:60] Depth 5/1000 time = 2.2703144550323486
I0123 22:41:16.408566 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1383931636810303
I0123 22:41:17.521560 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1128194332122803
I0123 22:41:19.834814 139974069698560 ddar.py:60] Depth 8/1000 time = 2.3060693740844727
I0123 22:41:19.835927 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:41:19.836004 139974069698560 alphageometry.py:566] LM output (score=-3.411862): "l : C b d l 16 P b d b l 17 ;"
I0123 22:41:19.836040 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b d b l"

I0123 22:41:19.836076 139974069698560 alphageometry.py:566] LM output (score=-3.412043): "l : T b k b l 16 ;"
I0123 22:41:19.836107 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b b k"

I0123 22:41:19.836149 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l b b k ? cong j f j e"
I0123 22:41:19.836294 139974069698560 graph.py:498] 
I0123 22:41:19.836351 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l b b k ? cong j f j e
I0123 22:41:20.429252 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5396599769592285
I0123 22:41:21.399040 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9696469306945801
I0123 22:41:22.404267 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0050556659698486
I0123 22:41:24.636638 139974069698560 ddar.py:60] Depth 4/1000 time = 2.2321953773498535
I0123 22:41:25.649247 139974069698560 ddar.py:60] Depth 5/1000 time = 1.012148141860962
I0123 22:41:26.739965 139974069698560 ddar.py:60] Depth 6/1000 time = 1.080923318862915
I0123 22:41:29.060001 139974069698560 ddar.py:60] Depth 7/1000 time = 2.319833517074585
I0123 22:41:30.121170 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0547378063201904
I0123 22:41:30.122273 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:41:30.122338 139974069698560 alphageometry.py:566] LM output (score=-3.426887): "l : T c g g l 16 ;"
I0123 22:41:30.122375 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g c g"

I0123 22:41:30.122430 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l g c g ? cong j f j e"
I0123 22:41:30.122582 139974069698560 graph.py:498] 
I0123 22:41:30.122640 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l g c g ? cong j f j e
I0123 22:41:30.721117 139974069698560 ddar.py:60] Depth 1/1000 time = 0.545295000076294
I0123 22:41:31.714606 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9933257102966309
I0123 22:41:33.908812 139974069698560 ddar.py:60] Depth 3/1000 time = 2.19403338432312
I0123 22:41:34.927919 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0189166069030762
I0123 22:41:35.951446 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0230767726898193
I0123 22:41:38.240083 139974069698560 ddar.py:60] Depth 6/1000 time = 2.276984453201294
I0123 22:41:39.338986 139974069698560 ddar.py:60] Depth 7/1000 time = 1.0987303256988525
I0123 22:41:40.453876 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1079018115997314
I0123 22:41:40.454969 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:41:40.455032 139974069698560 alphageometry.py:566] LM output (score=-3.434309): "l : T d g d l 16 ;"
I0123 22:41:40.455070 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d d g"

I0123 22:41:40.455110 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l d d g ? cong j f j e"
I0123 22:41:40.455270 139974069698560 graph.py:498] 
I0123 22:41:40.455325 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_line k b h, on_bline k h b; l = on_tline l d d g ? cong j f j e
I0123 22:41:42.230451 139974069698560 ddar.py:60] Depth 1/1000 time = 1.7181143760681152
I0123 22:41:43.207445 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9768095016479492
I0123 22:41:44.230554 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0229294300079346
I0123 22:41:46.492937 139974069698560 ddar.py:60] Depth 4/1000 time = 2.262155771255493
I0123 22:41:47.517209 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0237317085266113
I0123 22:41:48.662232 139974069698560 ddar.py:60] Depth 6/1000 time = 1.133490800857544
I0123 22:41:50.973599 139974069698560 ddar.py:60] Depth 7/1000 time = 2.3111958503723145
I0123 22:41:52.089508 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1093230247497559
I0123 22:41:52.090632 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:41:52.090698 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D a b a k 14 D a b b k 15 ; x00
I0123 22:41:57.423301 139974069698560 alphageometry.py:566] LM output (score=-1.576133): "l : T b c b l 16 ;"
I0123 22:41:57.423452 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b b c"

I0123 22:41:57.423504 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l b b c ? cong j f j e"
I0123 22:41:57.423639 139974069698560 graph.py:498] 
I0123 22:41:57.423693 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l b b c ? cong j f j e
I0123 22:41:58.088931 139974069698560 ddar.py:60] Depth 1/1000 time = 0.606041669845581
I0123 22:41:59.095049 139974069698560 ddar.py:60] Depth 2/1000 time = 1.005983829498291
I0123 22:42:01.360487 139974069698560 ddar.py:60] Depth 3/1000 time = 2.265275716781616
I0123 22:42:02.482096 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1214256286621094
I0123 22:42:03.615917 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1334733963012695
I0123 22:42:05.947945 139974069698560 ddar.py:60] Depth 6/1000 time = 2.331087589263916
I0123 22:42:07.190443 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2280075550079346
I0123 22:42:08.383799 139974069698560 ddar.py:60] Depth 8/1000 time = 1.193178653717041
I0123 22:42:10.787760 139974069698560 ddar.py:60] Depth 9/1000 time = 2.3992178440093994
I0123 22:42:10.788688 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:42:10.788741 139974069698560 alphageometry.py:566] LM output (score=-1.692504): "l : T c e e l 16 ;"
I0123 22:42:10.788776 139974069698560 alphageometry.py:567] Translation: "l = on_tline l e c e"

I0123 22:42:10.788815 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l e c e ? cong j f j e"
I0123 22:42:10.788952 139974069698560 graph.py:498] 
I0123 22:42:10.789004 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l e c e ? cong j f j e
I0123 22:42:11.444375 139974069698560 ddar.py:60] Depth 1/1000 time = 0.595334529876709
I0123 22:42:12.441917 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9974064826965332
I0123 22:42:13.514661 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0725750923156738
I0123 22:42:15.833150 139974069698560 ddar.py:60] Depth 4/1000 time = 2.318312406539917
I0123 22:42:16.927348 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0938136577606201
I0123 22:42:18.021367 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0931150913238525
I0123 22:42:19.254940 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2185988426208496
I0123 22:42:21.629981 139974069698560 ddar.py:60] Depth 8/1000 time = 2.374863624572754
I0123 22:42:22.832748 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1979596614837646
I0123 22:42:22.833713 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:42:22.833780 139974069698560 alphageometry.py:566] LM output (score=-1.772100): "l : C d k l 16 P d k d l 17 ;"
I0123 22:42:22.833820 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P d k d l"

I0123 22:42:22.833858 139974069698560 alphageometry.py:566] LM output (score=-1.932531): "l : T b c d l 16 ;"
I0123 22:42:22.833887 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d b c"

I0123 22:42:22.833919 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l d b c ? cong j f j e"
I0123 22:42:22.834056 139974069698560 graph.py:498] 
I0123 22:42:22.834109 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l d b c ? cong j f j e
I0123 22:42:23.493765 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5992484092712402
I0123 22:42:25.696757 139974069698560 ddar.py:60] Depth 2/1000 time = 2.20285701751709
I0123 22:42:26.830332 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1334002017974854
I0123 22:42:28.087218 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2567121982574463
I0123 22:42:29.356475 139974069698560 ddar.py:60] Depth 5/1000 time = 1.269057035446167
I0123 22:42:31.810391 139974069698560 ddar.py:60] Depth 6/1000 time = 2.4535422325134277
I0123 22:42:33.091068 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2797472476959229
I0123 22:42:34.497421 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3916175365447998
I0123 22:42:37.032419 139974069698560 ddar.py:60] Depth 9/1000 time = 2.5348167419433594
I0123 22:42:38.388782 139974069698560 ddar.py:60] Depth 10/1000 time = 1.351973056793213
I0123 22:42:39.755571 139974069698560 ddar.py:60] Depth 11/1000 time = 1.3633267879486084
I0123 22:42:39.756553 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:42:39.756620 139974069698560 alphageometry.py:566] LM output (score=-1.937629): "l : T b c c l 16 ;"
I0123 22:42:39.756658 139974069698560 alphageometry.py:567] Translation: "l = on_tline l c b c"

I0123 22:42:39.756696 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l c b c ? cong j f j e"
I0123 22:42:39.756838 139974069698560 graph.py:498] 
I0123 22:42:39.756890 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l c b c ? cong j f j e
I0123 22:42:41.591046 139974069698560 ddar.py:60] Depth 1/1000 time = 1.7745697498321533
I0123 22:42:42.584331 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9931180477142334
I0123 22:42:43.696369 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1118700504302979
I0123 22:42:46.105733 139974069698560 ddar.py:60] Depth 4/1000 time = 2.409113645553589
I0123 22:42:47.227019 139974069698560 ddar.py:60] Depth 5/1000 time = 1.120776653289795
I0123 22:42:48.347878 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1198861598968506
I0123 22:42:49.586931 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2245280742645264
I0123 22:42:52.005673 139974069698560 ddar.py:60] Depth 8/1000 time = 2.418567657470703
I0123 22:42:53.206024 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1956889629364014
I0123 22:42:53.206986 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:42:53.207047 139974069698560 alphageometry.py:566] LM output (score=-1.962601): "l : C b c l 16 T b c d l 17 ;"
I0123 22:42:53.207083 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l d b c"

I0123 22:42:53.207134 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l b c, on_tline l d b c ? cong j f j e"
I0123 22:42:53.207286 139974069698560 graph.py:498] 
I0123 22:42:53.207342 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l b c, on_tline l d b c ? cong j f j e
I0123 22:42:53.913883 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6463308334350586
I0123 22:42:56.305084 139974069698560 ddar.py:60] Depth 2/1000 time = 2.3910484313964844
I0123 22:42:57.690030 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3847696781158447
I0123 22:42:59.093815 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4035978317260742
I0123 22:43:01.679203 139974069698560 ddar.py:60] Depth 5/1000 time = 2.585181474685669
I0123 22:43:03.098950 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4193346500396729
I0123 22:43:05.806240 139974069698560 ddar.py:60] Depth 7/1000 time = 2.706299304962158
I0123 22:43:07.329924 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5091371536254883
I0123 22:43:09.999885 139974069698560 ddar.py:60] Depth 9/1000 time = 2.669736623764038
I0123 22:43:11.480737 139974069698560 ddar.py:60] Depth 10/1000 time = 1.4747669696807861
I0123 22:43:11.482784 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:43:11.482862 139974069698560 alphageometry.py:566] LM output (score=-2.011821): "l : T b c h l 16 ;"
I0123 22:43:11.482900 139974069698560 alphageometry.py:567] Translation: "l = on_tline l h b c"

I0123 22:43:11.482948 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l h b c ? cong j f j e"
I0123 22:43:11.483094 139974069698560 graph.py:498] 
I0123 22:43:11.483150 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l h b c ? cong j f j e
I0123 22:43:12.135915 139974069698560 ddar.py:60] Depth 1/1000 time = 0.591742753982544
I0123 22:43:14.324355 139974069698560 ddar.py:60] Depth 2/1000 time = 2.188290596008301
I0123 22:43:15.420066 139974069698560 ddar.py:60] Depth 3/1000 time = 1.095522403717041
I0123 22:43:16.526381 139974069698560 ddar.py:60] Depth 4/1000 time = 1.106126070022583
I0123 22:43:18.888167 139974069698560 ddar.py:60] Depth 5/1000 time = 2.3614144325256348
I0123 22:43:20.003064 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1139698028564453
I0123 22:43:21.247874 139974069698560 ddar.py:60] Depth 7/1000 time = 1.230360746383667
I0123 22:43:22.434424 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1863563060760498
I0123 22:43:24.957257 139974069698560 ddar.py:60] Depth 9/1000 time = 2.518420696258545
I0123 22:43:24.958230 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:43:24.958288 139974069698560 alphageometry.py:566] LM output (score=-2.012166): "l : T d g g l 16 ;"
I0123 22:43:24.958325 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g d g"

I0123 22:43:24.958367 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g d g ? cong j f j e"
I0123 22:43:24.958512 139974069698560 graph.py:498] 
I0123 22:43:24.958567 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g d g ? cong j f j e
I0123 22:43:25.611515 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5929300785064697
I0123 22:43:26.601951 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9902379512786865
I0123 22:43:27.666641 139974069698560 ddar.py:60] Depth 3/1000 time = 1.064500331878662
I0123 22:43:30.002679 139974069698560 ddar.py:60] Depth 4/1000 time = 2.3358120918273926
I0123 22:43:31.086734 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0836710929870605
I0123 22:43:32.174830 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0871737003326416
I0123 22:43:34.631051 139974069698560 ddar.py:60] Depth 7/1000 time = 2.441690683364868
I0123 22:43:35.799918 139974069698560 ddar.py:60] Depth 8/1000 time = 1.168705940246582
I0123 22:43:36.995989 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1914386749267578
I0123 22:43:36.996958 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:43:36.997025 139974069698560 alphageometry.py:566] LM output (score=-2.036796): "l : T c g g l 16 ;"
I0123 22:43:36.997063 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g c g"

I0123 22:43:36.997104 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g c g ? cong j f j e"
I0123 22:43:36.997243 139974069698560 graph.py:498] 
I0123 22:43:36.997296 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g c g ? cong j f j e
I0123 22:43:37.657724 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5973618030548096
I0123 22:43:39.901574 139974069698560 ddar.py:60] Depth 2/1000 time = 2.243673324584961
I0123 22:43:40.963526 139974069698560 ddar.py:60] Depth 3/1000 time = 1.06174898147583
I0123 22:43:42.051275 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0875751972198486
I0123 22:43:43.138398 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0867514610290527
I0123 22:43:45.456417 139974069698560 ddar.py:60] Depth 6/1000 time = 2.317025661468506
I0123 22:43:46.676799 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2056314945220947
I0123 22:43:47.840315 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1633059978485107
I0123 22:43:50.212793 139974069698560 ddar.py:60] Depth 9/1000 time = 2.367819309234619
I0123 22:43:50.213748 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:43:50.213806 139974069698560 alphageometry.py:566] LM output (score=-2.101742): "l : C d f l 16 D d l f l 17 ;"
I0123 22:43:50.213842 139974069698560 alphageometry.py:567] Translation: "l = on_line l d f, on_bline l f d"

I0123 22:43:50.213891 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l d f, on_bline l f d ? cong j f j e"
I0123 22:43:50.214038 139974069698560 graph.py:498] 
I0123 22:43:50.214093 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l d f, on_bline l f d ? cong j f j e
I0123 22:43:51.027221 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7401204109191895
I0123 22:43:52.452014 139974069698560 ddar.py:60] Depth 2/1000 time = 1.424609899520874
I0123 22:43:55.128646 139974069698560 ddar.py:60] Depth 3/1000 time = 2.676461696624756
I0123 22:43:56.622899 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4940567016601562
I0123 22:43:58.124184 139974069698560 ddar.py:60] Depth 5/1000 time = 1.501107931137085
I0123 22:44:00.847309 139974069698560 ddar.py:60] Depth 6/1000 time = 2.7226874828338623
I0123 22:44:02.356639 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5084192752838135
I0123 22:44:03.986110 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6138052940368652
I0123 22:44:06.764651 139974069698560 ddar.py:60] Depth 9/1000 time = 2.7782983779907227
I0123 22:44:08.323799 139974069698560 ddar.py:60] Depth 10/1000 time = 1.5508944988250732
I0123 22:44:08.324985 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:44:08.325058 139974069698560 alphageometry.py:566] LM output (score=-2.207218): "l : T e g g l 16 ;"
I0123 22:44:08.325097 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g e g"

I0123 22:44:08.325151 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g e g ? cong j f j e"
I0123 22:44:08.325309 139974069698560 graph.py:498] 
I0123 22:44:08.325366 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g e g ? cong j f j e
I0123 22:44:08.978906 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5923309326171875
I0123 22:44:11.155898 139974069698560 ddar.py:60] Depth 2/1000 time = 2.176859140396118
I0123 22:44:12.218978 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0629150867462158
I0123 22:44:13.303468 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0843174457550049
I0123 22:44:15.536597 139974069698560 ddar.py:60] Depth 5/1000 time = 2.2327725887298584
I0123 22:44:16.622191 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0846977233886719
I0123 22:44:17.851196 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2145020961761475
I0123 22:44:19.024328 139974069698560 ddar.py:60] Depth 8/1000 time = 1.172956943511963
I0123 22:44:21.428825 139974069698560 ddar.py:60] Depth 9/1000 time = 2.399869918823242
I0123 22:44:21.429794 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:44:21.429859 139974069698560 alphageometry.py:566] LM output (score=-2.280428): "l : C d k l 16 T b l d k 17 ;"
I0123 22:44:21.429914 139974069698560 alphageometry.py:567] Translation: "l = on_line l d k, on_tline l b d k"

I0123 22:44:21.429957 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l d k, on_tline l b d k ? cong j f j e"
I0123 22:44:21.430106 139974069698560 graph.py:498] 
I0123 22:44:21.430165 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l d k, on_tline l b d k ? cong j f j e
I0123 22:44:22.142929 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6535336971282959
I0123 22:44:23.406762 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2636592388153076
I0123 22:44:26.103049 139974069698560 ddar.py:60] Depth 3/1000 time = 2.6960391998291016
I0123 22:44:27.498274 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3950212001800537
I0123 22:44:30.154128 139974069698560 ddar.py:60] Depth 5/1000 time = 2.6556637287139893
I0123 22:44:31.573645 139974069698560 ddar.py:60] Depth 6/1000 time = 1.419130563735962
I0123 22:44:32.997545 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4228541851043701
I0123 22:44:35.708179 139974069698560 ddar.py:60] Depth 8/1000 time = 2.6983392238616943
I0123 22:44:37.185225 139974069698560 ddar.py:60] Depth 9/1000 time = 1.476879358291626
I0123 22:44:39.940682 139974069698560 ddar.py:60] Depth 10/1000 time = 2.7494986057281494
I0123 22:44:39.942822 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:44:39.942896 139974069698560 alphageometry.py:566] LM output (score=-2.355075): "l : T d k d l 16 ;"
I0123 22:44:39.942933 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d d k"

I0123 22:44:39.942977 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l d d k ? cong j f j e"
I0123 22:44:39.943126 139974069698560 graph.py:498] 
I0123 22:44:39.943182 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l d d k ? cong j f j e
I0123 22:44:40.604282 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6015002727508545
I0123 22:44:41.638620 139974069698560 ddar.py:60] Depth 2/1000 time = 1.034184455871582
I0123 22:44:42.724381 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0855653285980225
I0123 22:44:45.100436 139974069698560 ddar.py:60] Depth 4/1000 time = 2.375824451446533
I0123 22:44:46.195815 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0949726104736328
I0123 22:44:47.290842 139974069698560 ddar.py:60] Depth 6/1000 time = 1.093925952911377
I0123 22:44:48.457295 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1545405387878418
I0123 22:44:50.771621 139974069698560 ddar.py:60] Depth 8/1000 time = 2.3141677379608154
I0123 22:44:51.888696 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1125953197479248
I0123 22:44:51.889604 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:44:51.889663 139974069698560 alphageometry.py:566] LM output (score=-2.414055): "l : T b l g h 16 ;"
I0123 22:44:51.889699 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b g h"

I0123 22:44:51.889744 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l b g h ? cong j f j e"
I0123 22:44:51.890187 139974069698560 graph.py:498] 
I0123 22:44:51.890467 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l b g h ? cong j f j e
I0123 22:44:52.556101 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6035230159759521
I0123 22:44:53.526642 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9701814651489258
I0123 22:44:55.786575 139974069698560 ddar.py:60] Depth 3/1000 time = 2.2597432136535645
I0123 22:44:56.829661 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0428729057312012
I0123 22:44:57.878223 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0482072830200195
I0123 22:44:58.933009 139974069698560 ddar.py:60] Depth 6/1000 time = 1.053849697113037
I0123 22:45:01.386089 139974069698560 ddar.py:60] Depth 7/1000 time = 2.439237594604492
I0123 22:45:02.531442 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1451451778411865
I0123 22:45:03.680841 139974069698560 ddar.py:60] Depth 9/1000 time = 1.144913673400879
I0123 22:45:03.681795 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:45:03.681879 139974069698560 alphageometry.py:566] LM output (score=-2.434978): "l : C b c l 16 D b l c l 17 ;"
I0123 22:45:03.681918 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 22:45:03.681967 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l b c, on_bline l c b ? cong j f j e"
I0123 22:45:03.682139 139974069698560 graph.py:498] 
I0123 22:45:03.682201 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l b c, on_bline l c b ? cong j f j e
I0123 22:45:04.442704 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6852269172668457
I0123 22:45:06.966024 139974069698560 ddar.py:60] Depth 2/1000 time = 2.5230765342712402
I0123 22:45:08.349248 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3830389976501465
I0123 22:45:11.015007 139974069698560 ddar.py:60] Depth 4/1000 time = 2.6655828952789307
I0123 22:45:12.430866 139974069698560 ddar.py:60] Depth 5/1000 time = 1.415419340133667
I0123 22:45:15.113773 139974069698560 ddar.py:60] Depth 6/1000 time = 2.6819519996643066
I0123 22:45:16.635480 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5063321590423584
I0123 22:45:18.119416 139974069698560 ddar.py:60] Depth 8/1000 time = 1.4837689399719238
I0123 22:45:20.880644 139974069698560 ddar.py:60] Depth 9/1000 time = 2.755889654159546
I0123 22:45:20.881693 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:45:20.881762 139974069698560 alphageometry.py:566] LM output (score=-2.456136): "l : T f h g l 16 ;"
I0123 22:45:20.881803 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g f h"

I0123 22:45:20.881840 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g f h ? cong j f j e"
I0123 22:45:20.881983 139974069698560 graph.py:498] 
I0123 22:45:20.882046 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g f h ? cong j f j e
I0123 22:45:21.530189 139974069698560 ddar.py:60] Depth 1/1000 time = 0.588223934173584
I0123 22:45:22.528183 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9978299140930176
I0123 22:45:24.865861 139974069698560 ddar.py:60] Depth 3/1000 time = 2.337470769882202
I0123 22:45:25.927801 139974069698560 ddar.py:60] Depth 4/1000 time = 1.061744213104248
I0123 22:45:27.019037 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0908560752868652
I0123 22:45:28.096359 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0763633251190186
I0123 22:45:30.479014 139974069698560 ddar.py:60] Depth 7/1000 time = 2.369830369949341
I0123 22:45:31.582673 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1034774780273438
I0123 22:45:32.702594 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1155078411102295
I0123 22:45:32.703532 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:45:32.703590 139974069698560 alphageometry.py:566] LM output (score=-2.576668): "l : C b c l 16 T b c k l 17 ;"
I0123 22:45:32.703626 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l k b c"

I0123 22:45:32.703856 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l b c, on_tline l k b c ? cong j f j e"
I0123 22:45:32.704002 139974069698560 graph.py:498] 
I0123 22:45:32.704057 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l b c, on_tline l k b c ? cong j f j e
I0123 22:45:33.411749 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6484477519989014
I0123 22:45:35.786911 139974069698560 ddar.py:60] Depth 2/1000 time = 2.3749871253967285
I0123 22:45:37.071523 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2844479084014893
I0123 22:45:38.374589 139974069698560 ddar.py:60] Depth 4/1000 time = 1.302893877029419
I0123 22:45:40.916465 139974069698560 ddar.py:60] Depth 5/1000 time = 2.54152774810791
I0123 22:45:42.220366 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3029356002807617
I0123 22:45:44.937107 139974069698560 ddar.py:60] Depth 7/1000 time = 2.702486753463745
I0123 22:45:46.296603 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3592913150787354
I0123 22:45:48.939057 139974069698560 ddar.py:60] Depth 9/1000 time = 2.6378490924835205
I0123 22:45:48.939984 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:45:48.940063 139974069698560 alphageometry.py:566] LM output (score=-2.614452): "l : T c d g l 16 ;"
I0123 22:45:48.940100 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g c d"

I0123 22:45:48.940145 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g c d ? cong j f j e"
I0123 22:45:48.940288 139974069698560 graph.py:498] 
I0123 22:45:48.940343 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g c d ? cong j f j e
I0123 22:45:49.595267 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5947306156158447
I0123 22:45:50.587781 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9923508167266846
I0123 22:45:51.656117 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0681483745574951
I0123 22:45:52.732671 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0763623714447021
I0123 22:45:55.016804 139974069698560 ddar.py:60] Depth 5/1000 time = 2.283759355545044
I0123 22:45:56.105835 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0881052017211914
I0123 22:45:57.330448 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2100164890289307
I0123 22:45:59.769658 139974069698560 ddar.py:60] Depth 8/1000 time = 2.4390146732330322
I0123 22:46:00.955062 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1810352802276611
I0123 22:46:00.956029 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:46:00.956084 139974069698560 alphageometry.py:566] LM output (score=-2.630904): "l : C b d l 16 T b d k l 17 ;"
I0123 22:46:00.956119 139974069698560 alphageometry.py:567] Translation: "l = on_line l b d, on_tline l k b d"

I0123 22:46:00.956156 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l b d, on_tline l k b d ? cong j f j e"
I0123 22:46:00.956317 139974069698560 graph.py:498] 
I0123 22:46:00.956377 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l b d, on_tline l k b d ? cong j f j e
I0123 22:46:01.726557 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7097878456115723
I0123 22:46:04.371422 139974069698560 ddar.py:60] Depth 2/1000 time = 2.6446430683135986
I0123 22:46:05.749372 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3777422904968262
I0123 22:46:07.157004 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4074151515960693
I0123 22:46:09.817622 139974069698560 ddar.py:60] Depth 5/1000 time = 2.660162925720215
I0123 22:46:11.224169 139974069698560 ddar.py:60] Depth 6/1000 time = 1.405695915222168
I0123 22:46:12.740341 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5014312267303467
I0123 22:46:15.421169 139974069698560 ddar.py:60] Depth 8/1000 time = 2.680642604827881
I0123 22:46:16.906250 139974069698560 ddar.py:60] Depth 9/1000 time = 1.4805219173431396
I0123 22:46:16.907224 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:46:16.907300 139974069698560 alphageometry.py:566] LM output (score=-2.647742): "l : T b l d e 16 ;"
I0123 22:46:16.907338 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b d e"

I0123 22:46:16.907384 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l b d e ? cong j f j e"
I0123 22:46:16.907525 139974069698560 graph.py:498] 
I0123 22:46:16.907582 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l b d e ? cong j f j e
I0123 22:46:17.563808 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5964417457580566
I0123 22:46:19.820707 139974069698560 ddar.py:60] Depth 2/1000 time = 2.2567291259765625
I0123 22:46:20.894420 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0735161304473877
I0123 22:46:21.973391 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0787544250488281
I0123 22:46:23.054201 139974069698560 ddar.py:60] Depth 5/1000 time = 1.080371618270874
I0123 22:46:25.412399 139974069698560 ddar.py:60] Depth 6/1000 time = 2.3571932315826416
I0123 22:46:26.646285 139974069698560 ddar.py:60] Depth 7/1000 time = 1.219118595123291
I0123 22:46:27.825313 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1788406372070312
I0123 22:46:30.264813 139974069698560 ddar.py:60] Depth 9/1000 time = 2.435150623321533
I0123 22:46:30.265756 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:46:30.265831 139974069698560 alphageometry.py:566] LM output (score=-2.650113): "l : T f i f l 16 ;"
I0123 22:46:30.265869 139974069698560 alphageometry.py:567] Translation: "l = on_tline l f f i"

I0123 22:46:30.265921 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l f f i ? cong j f j e"
I0123 22:46:30.266067 139974069698560 graph.py:498] 
I0123 22:46:30.266124 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l f f i ? cong j f j e
I0123 22:46:30.913607 139974069698560 ddar.py:60] Depth 1/1000 time = 0.588087797164917
I0123 22:46:31.905511 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9917473793029785
I0123 22:46:33.011239 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1055305004119873
I0123 22:46:35.370956 139974069698560 ddar.py:60] Depth 4/1000 time = 2.359529972076416
I0123 22:46:36.494033 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1227097511291504
I0123 22:46:37.625227 139974069698560 ddar.py:60] Depth 6/1000 time = 1.130267858505249
I0123 22:46:40.164624 139974069698560 ddar.py:60] Depth 7/1000 time = 2.5251235961914062
I0123 22:46:41.354103 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1892762184143066
I0123 22:46:42.547027 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1884891986846924
I0123 22:46:42.548077 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:46:42.548174 139974069698560 alphageometry.py:566] LM output (score=-2.650657): "l : T d g d l 16 ;"
I0123 22:46:42.548212 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d d g"

I0123 22:46:42.548267 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l d d g ? cong j f j e"
I0123 22:46:42.548448 139974069698560 graph.py:498] 
I0123 22:46:42.548511 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l d d g ? cong j f j e
I0123 22:46:43.205996 139974069698560 ddar.py:60] Depth 1/1000 time = 0.597792387008667
I0123 22:46:45.509313 139974069698560 ddar.py:60] Depth 2/1000 time = 2.3031513690948486
I0123 22:46:46.577203 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0677087306976318
I0123 22:46:47.672096 139974069698560 ddar.py:60] Depth 4/1000 time = 1.094712495803833
I0123 22:46:48.761014 139974069698560 ddar.py:60] Depth 5/1000 time = 1.088569164276123
I0123 22:46:51.088036 139974069698560 ddar.py:60] Depth 6/1000 time = 2.326122283935547
I0123 22:46:52.303763 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2013046741485596
I0123 22:46:53.472724 139974069698560 ddar.py:60] Depth 8/1000 time = 1.168776035308838
I0123 22:46:55.898458 139974069698560 ddar.py:60] Depth 9/1000 time = 2.4213883876800537
I0123 22:46:55.899415 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:46:55.899479 139974069698560 alphageometry.py:566] LM output (score=-2.666321): "l : T b c k l 16 ;"
I0123 22:46:55.899514 139974069698560 alphageometry.py:567] Translation: "l = on_tline l k b c"

I0123 22:46:55.899552 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l k b c ? cong j f j e"
I0123 22:46:55.899705 139974069698560 graph.py:498] 
I0123 22:46:55.899759 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l k b c ? cong j f j e
I0123 22:46:56.554080 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5945661067962646
I0123 22:46:57.553601 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9993729591369629
I0123 22:46:58.657265 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1034739017486572
I0123 22:47:01.129959 139974069698560 ddar.py:60] Depth 4/1000 time = 2.472487688064575
I0123 22:47:02.250980 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1205775737762451
I0123 22:47:03.373928 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1219470500946045
I0123 22:47:04.608238 139974069698560 ddar.py:60] Depth 7/1000 time = 1.220224380493164
I0123 22:47:07.088222 139974069698560 ddar.py:60] Depth 8/1000 time = 2.4797868728637695
I0123 22:47:08.271814 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1791656017303467
I0123 22:47:08.272776 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:47:08.272846 139974069698560 alphageometry.py:566] LM output (score=-2.708100): "l : T e i e l 16 ;"
I0123 22:47:08.272885 139974069698560 alphageometry.py:567] Translation: "l = on_tline l e e i"

I0123 22:47:08.272937 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l e e i ? cong j f j e"
I0123 22:47:08.273085 139974069698560 graph.py:498] 
I0123 22:47:08.273143 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l e e i ? cong j f j e
I0123 22:47:08.926385 139974069698560 ddar.py:60] Depth 1/1000 time = 0.592876672744751
I0123 22:47:09.923372 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9968311786651611
I0123 22:47:12.223010 139974069698560 ddar.py:60] Depth 3/1000 time = 2.2994565963745117
I0123 22:47:13.272939 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0497419834136963
I0123 22:47:14.332775 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0594866275787354
I0123 22:47:15.399174 139974069698560 ddar.py:60] Depth 6/1000 time = 1.065335988998413
I0123 22:47:17.806698 139974069698560 ddar.py:60] Depth 7/1000 time = 2.3945674896240234
I0123 22:47:18.926585 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1197154521942139
I0123 22:47:20.064170 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1330068111419678
I0123 22:47:20.065244 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:47:20.065332 139974069698560 alphageometry.py:566] LM output (score=-2.750049): "l : T d k k l 16 ;"
I0123 22:47:20.065371 139974069698560 alphageometry.py:567] Translation: "l = on_tline l k d k"

I0123 22:47:20.065417 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l k d k ? cong j f j e"
I0123 22:47:20.065583 139974069698560 graph.py:498] 
I0123 22:47:20.065658 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l k d k ? cong j f j e
I0123 22:47:20.729339 139974069698560 ddar.py:60] Depth 1/1000 time = 0.603797435760498
I0123 22:47:23.071519 139974069698560 ddar.py:60] Depth 2/1000 time = 2.3420121669769287
I0123 22:47:24.159007 139974069698560 ddar.py:60] Depth 3/1000 time = 1.087275743484497
I0123 22:47:25.257190 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0979650020599365
I0123 22:47:26.359557 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1019859313964844
I0123 22:47:28.687647 139974069698560 ddar.py:60] Depth 6/1000 time = 2.3270301818847656
I0123 22:47:29.846113 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1464958190917969
I0123 22:47:30.964908 139974069698560 ddar.py:60] Depth 8/1000 time = 1.118619441986084
I0123 22:47:33.352402 139974069698560 ddar.py:60] Depth 9/1000 time = 2.382943868637085
I0123 22:47:33.353355 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:47:33.353412 139974069698560 alphageometry.py:566] LM output (score=-2.752268): "l : T i j i l 16 ;"
I0123 22:47:33.353447 139974069698560 alphageometry.py:567] Translation: "l = on_tline l i i j"

I0123 22:47:33.353485 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l i i j ? cong j f j e"
I0123 22:47:33.353621 139974069698560 graph.py:498] 
I0123 22:47:33.353681 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l i i j ? cong j f j e
I0123 22:47:33.998677 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5849249362945557
I0123 22:47:35.000524 139974069698560 ddar.py:60] Depth 2/1000 time = 1.0017006397247314
I0123 22:47:36.073202 139974069698560 ddar.py:60] Depth 3/1000 time = 1.072493314743042
I0123 22:47:37.195278 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1218984127044678
I0123 22:47:39.567358 139974069698560 ddar.py:60] Depth 5/1000 time = 2.3719065189361572
I0123 22:47:40.670849 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1030995845794678
I0123 22:47:41.780096 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1082146167755127
I0123 22:47:44.234028 139974069698560 ddar.py:60] Depth 8/1000 time = 2.440183401107788
I0123 22:47:45.387376 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1487276554107666
I0123 22:47:45.388331 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:47:45.388395 139974069698560 alphageometry.py:566] LM output (score=-2.796336): "l : C b c l 16 T b c g l 17 ;"
I0123 22:47:45.388432 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l g b c"

I0123 22:47:45.388477 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l b c, on_tline l g b c ? cong j f j e"
I0123 22:47:45.388634 139974069698560 graph.py:498] 
I0123 22:47:45.388691 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l b c, on_tline l g b c ? cong j f j e
I0123 22:47:46.100505 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6500201225280762
I0123 22:47:47.262512 139974069698560 ddar.py:60] Depth 2/1000 time = 1.1618540287017822
I0123 22:47:49.826370 139974069698560 ddar.py:60] Depth 3/1000 time = 2.5636775493621826
I0123 22:47:51.134169 139974069698560 ddar.py:60] Depth 4/1000 time = 1.307619333267212
I0123 22:47:52.458248 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3237011432647705
I0123 22:47:55.015930 139974069698560 ddar.py:60] Depth 6/1000 time = 2.5567550659179688
I0123 22:47:56.453718 139974069698560 ddar.py:60] Depth 7/1000 time = 1.4236080646514893
I0123 22:47:59.191436 139974069698560 ddar.py:60] Depth 8/1000 time = 2.737534999847412
I0123 22:48:00.593334 139974069698560 ddar.py:60] Depth 9/1000 time = 1.3974533081054688
I0123 22:48:00.594359 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:48:00.594441 139974069698560 alphageometry.py:566] LM output (score=-2.828935): "l : T b c d l 16 T b l c d 17 ;"
I0123 22:48:00.594480 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d b c, on_tline l b c d"

I0123 22:48:00.594527 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l d b c, on_tline l b c d ? cong j f j e"
I0123 22:48:00.594691 139974069698560 graph.py:498] 
I0123 22:48:00.594754 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l d b c, on_tline l b c d ? cong j f j e
I0123 22:48:01.291920 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6322627067565918
I0123 22:48:03.761020 139974069698560 ddar.py:60] Depth 2/1000 time = 2.4689197540283203
I0123 22:48:05.079614 139974069698560 ddar.py:60] Depth 3/1000 time = 1.318389892578125
I0123 22:48:06.614896 139974069698560 ddar.py:60] Depth 4/1000 time = 1.535094976425171
I0123 22:48:09.466649 139974069698560 ddar.py:60] Depth 5/1000 time = 2.8513283729553223
I0123 22:48:11.014807 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5471055507659912
I0123 22:48:12.714147 139974069698560 ddar.py:60] Depth 7/1000 time = 1.6793322563171387
I0123 22:48:15.678422 139974069698560 ddar.py:60] Depth 8/1000 time = 2.964090347290039
I0123 22:48:17.347507 139974069698560 ddar.py:60] Depth 9/1000 time = 1.6626956462860107
I0123 22:48:17.350776 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:48:17.350867 139974069698560 alphageometry.py:566] LM output (score=-2.841154): "l : C d g l 16 T d g f l 17 ;"
I0123 22:48:17.350907 139974069698560 alphageometry.py:567] Translation: "l = on_line l d g, on_tline l f d g"

I0123 22:48:17.350950 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l d g, on_tline l f d g ? cong j f j e"
I0123 22:48:17.351093 139974069698560 graph.py:498] 
I0123 22:48:17.351146 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_line l d g, on_tline l f d g ? cong j f j e
I0123 22:48:19.622915 139974069698560 ddar.py:60] Depth 1/1000 time = 2.211646795272827
I0123 22:48:21.103570 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4804096221923828
I0123 22:48:24.181620 139974069698560 ddar.py:60] Depth 3/1000 time = 3.0778026580810547
I0123 22:48:25.934764 139974069698560 ddar.py:60] Depth 4/1000 time = 1.752913475036621
I0123 22:48:28.910882 139974069698560 ddar.py:60] Depth 5/1000 time = 2.9757027626037598
I0123 22:48:31.938019 139974069698560 ddar.py:60] Depth 6/1000 time = 3.0261998176574707
I0123 22:48:35.211848 139974069698560 ddar.py:60] Depth 7/1000 time = 3.256699562072754
I0123 22:48:37.083228 139974069698560 ddar.py:60] Depth 8/1000 time = 1.8711903095245361
I0123 22:48:40.297085 139974069698560 ddar.py:60] Depth 9/1000 time = 3.213649034500122
I0123 22:48:43.557022 139974069698560 ddar.py:60] Depth 10/1000 time = 3.2539877891540527
I0123 22:48:43.559228 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:48:43.559309 139974069698560 alphageometry.py:566] LM output (score=-2.844328): "l : T c e g l 16 ;"
I0123 22:48:43.559347 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g c e"

I0123 22:48:43.559400 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g c e ? cong j f j e"
I0123 22:48:43.559556 139974069698560 graph.py:498] 
I0123 22:48:43.559612 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g c e ? cong j f j e
I0123 22:48:44.214486 139974069698560 ddar.py:60] Depth 1/1000 time = 0.592923641204834
I0123 22:48:45.199553 139974069698560 ddar.py:60] Depth 2/1000 time = 0.984915018081665
I0123 22:48:46.259034 139974069698560 ddar.py:60] Depth 3/1000 time = 1.05930757522583
I0123 22:48:48.642805 139974069698560 ddar.py:60] Depth 4/1000 time = 2.3835883140563965
I0123 22:48:49.725170 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0819895267486572
I0123 22:48:50.814498 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0884270668029785
I0123 22:48:52.039676 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2105019092559814
I0123 22:48:54.511367 139974069698560 ddar.py:60] Depth 8/1000 time = 2.47152042388916
I0123 22:48:55.696962 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1810221672058105
I0123 22:48:55.697914 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:48:55.697994 139974069698560 alphageometry.py:566] LM output (score=-2.860890): "l : T d e e l 16 ;"
I0123 22:48:55.698032 139974069698560 alphageometry.py:567] Translation: "l = on_tline l e d e"

I0123 22:48:55.698073 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l e d e ? cong j f j e"
I0123 22:48:55.698214 139974069698560 graph.py:498] 
I0123 22:48:55.698267 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l e d e ? cong j f j e
I0123 22:48:56.349723 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5910959243774414
I0123 22:48:57.361892 139974069698560 ddar.py:60] Depth 2/1000 time = 1.012007474899292
I0123 22:48:58.429239 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0671653747558594
I0123 22:49:00.860495 139974069698560 ddar.py:60] Depth 4/1000 time = 2.431039333343506
I0123 22:49:01.957206 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0962469577789307
I0123 22:49:03.060420 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1005680561065674
I0123 22:49:05.606498 139974069698560 ddar.py:60] Depth 7/1000 time = 2.531292200088501
I0123 22:49:06.807993 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2013037204742432
I0123 22:49:08.006143 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1935245990753174
I0123 22:49:08.007097 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:49:08.007164 139974069698560 alphageometry.py:566] LM output (score=-2.892829): "l : T g h g l 16 ;"
I0123 22:49:08.007204 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g g h"

I0123 22:49:08.007254 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g g h ? cong j f j e"
I0123 22:49:08.007413 139974069698560 graph.py:498] 
I0123 22:49:08.007472 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a b, on_circle k b a; l = on_tline l g g h ? cong j f j e
I0123 22:49:08.663383 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5959756374359131
I0123 22:49:10.922584 139974069698560 ddar.py:60] Depth 2/1000 time = 2.2590413093566895
I0123 22:49:11.971102 139974069698560 ddar.py:60] Depth 3/1000 time = 1.048344373703003
I0123 22:49:13.017348 139974069698560 ddar.py:60] Depth 4/1000 time = 1.046076774597168
I0123 22:49:14.071979 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0542576313018799
I0123 22:49:16.469622 139974069698560 ddar.py:60] Depth 6/1000 time = 2.3967173099517822
I0123 22:49:17.672398 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1888458728790283
I0123 22:49:18.829912 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1573309898376465
I0123 22:49:19.995361 139974069698560 ddar.py:60] Depth 9/1000 time = 1.161020278930664
I0123 22:49:19.996319 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:49:19.996430 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D b k d k 14 D c k d k 15 ; x00
I0123 22:49:24.399632 139974069698560 alphageometry.py:566] LM output (score=-1.114917): "l : C b c l 16 D b l c l 17 ;"
I0123 22:49:24.399791 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 22:49:24.399843 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b c, on_bline l c b ? cong j f j e"
I0123 22:49:24.399990 139974069698560 graph.py:498] 
I0123 22:49:24.400054 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b c, on_bline l c b ? cong j f j e
I0123 22:49:26.597625 139974069698560 ddar.py:60] Depth 1/1000 time = 2.122443675994873
I0123 22:49:28.114328 139974069698560 ddar.py:60] Depth 2/1000 time = 1.5165202617645264
I0123 22:49:31.257860 139974069698560 ddar.py:60] Depth 3/1000 time = 3.1433374881744385
I0123 22:49:33.218760 139974069698560 ddar.py:60] Depth 4/1000 time = 1.9607079029083252
I0123 22:49:36.524015 139974069698560 ddar.py:60] Depth 5/1000 time = 3.3047616481781006
I0123 22:49:38.632731 139974069698560 ddar.py:60] Depth 6/1000 time = 2.0865843296051025
I0123 22:49:41.954288 139974069698560 ddar.py:60] Depth 7/1000 time = 3.3213703632354736
I0123 22:49:44.027907 139974069698560 ddar.py:60] Depth 8/1000 time = 2.065920352935791
I0123 22:49:44.032224 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:49:44.032309 139974069698560 alphageometry.py:566] LM output (score=-1.119462): "l : C b c l 16 T b c k l 17 ;"
I0123 22:49:44.032350 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l k b c"

I0123 22:49:44.032400 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b c, on_tline l k b c ? cong j f j e"
I0123 22:49:44.032566 139974069698560 graph.py:498] 
I0123 22:49:44.032624 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b c, on_tline l k b c ? cong j f j e
I0123 22:49:46.106726 139974069698560 ddar.py:60] Depth 1/1000 time = 2.0125844478607178
I0123 22:49:47.495949 139974069698560 ddar.py:60] Depth 2/1000 time = 1.389042615890503
I0123 22:49:50.548772 139974069698560 ddar.py:60] Depth 3/1000 time = 3.0526351928710938
I0123 22:49:52.466250 139974069698560 ddar.py:60] Depth 4/1000 time = 1.917301893234253
I0123 22:49:55.702486 139974069698560 ddar.py:60] Depth 5/1000 time = 3.2360498905181885
I0123 22:49:57.638693 139974069698560 ddar.py:60] Depth 6/1000 time = 1.9357895851135254
I0123 22:50:00.926208 139974069698560 ddar.py:60] Depth 7/1000 time = 3.2690188884735107
I0123 22:50:04.271556 139974069698560 ddar.py:60] Depth 8/1000 time = 3.3451483249664307
I0123 22:50:06.283398 139974069698560 ddar.py:60] Depth 9/1000 time = 2.0041205883026123
I0123 22:50:06.288660 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:50:06.288728 139974069698560 alphageometry.py:566] LM output (score=-1.649140): "l : C d g l 16 T d g k l 17 ;"
I0123 22:50:06.288766 139974069698560 alphageometry.py:567] Translation: "l = on_line l d g, on_tline l k d g"

I0123 22:50:06.288804 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d g, on_tline l k d g ? cong j f j e"
I0123 22:50:06.288943 139974069698560 graph.py:498] 
I0123 22:50:06.288997 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d g, on_tline l k d g ? cong j f j e
I0123 22:50:07.276669 139974069698560 ddar.py:60] Depth 1/1000 time = 0.9255986213684082
I0123 22:50:10.039392 139974069698560 ddar.py:60] Depth 2/1000 time = 2.762535810470581
I0123 22:50:13.163840 139974069698560 ddar.py:60] Depth 3/1000 time = 3.1242573261260986
I0123 22:50:14.977659 139974069698560 ddar.py:60] Depth 4/1000 time = 1.8136138916015625
I0123 22:50:18.091087 139974069698560 ddar.py:60] Depth 5/1000 time = 3.113020896911621
I0123 22:50:21.319053 139974069698560 ddar.py:60] Depth 6/1000 time = 3.2080771923065186
I0123 22:50:24.534729 139974069698560 ddar.py:60] Depth 7/1000 time = 3.215489387512207
I0123 22:50:26.438069 139974069698560 ddar.py:60] Depth 8/1000 time = 1.897134780883789
I0123 22:50:26.439170 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:50:26.439236 139974069698560 alphageometry.py:566] LM output (score=-1.657101): "l : C b i l 16 D b l i l 17 ;"
I0123 22:50:26.439275 139974069698560 alphageometry.py:567] Translation: "l = on_line l b i, on_bline l i b"

I0123 22:50:26.439326 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b i, on_bline l i b ? cong j f j e"
I0123 22:50:26.439472 139974069698560 graph.py:498] 
I0123 22:50:26.439527 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b i, on_bline l i b ? cong j f j e
I0123 22:50:27.244520 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7295422554016113
I0123 22:50:29.619703 139974069698560 ddar.py:60] Depth 2/1000 time = 2.3750088214874268
I0123 22:50:30.921102 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3012208938598633
I0123 22:50:33.558107 139974069698560 ddar.py:60] Depth 4/1000 time = 2.6368095874786377
I0123 22:50:34.889626 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3310294151306152
I0123 22:50:36.321949 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4156560897827148
I0123 22:50:39.053071 139974069698560 ddar.py:60] Depth 7/1000 time = 2.7309107780456543
I0123 22:50:40.411723 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3531162738800049
I0123 22:50:40.413152 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:50:40.413223 139974069698560 alphageometry.py:566] LM output (score=-1.845080): "l : C b f l 16 P b e b l 17 ;"
I0123 22:50:40.413262 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b e b l"

I0123 22:50:40.413299 139974069698560 alphageometry.py:566] LM output (score=-1.857309): "l : C h i l 16 D h l i l 17 ;"
I0123 22:50:40.413330 139974069698560 alphageometry.py:567] Translation: "l = on_line l h i, on_bline l i h"

I0123 22:50:40.413366 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l h i, on_bline l i h ? cong j f j e"
I0123 22:50:40.413523 139974069698560 graph.py:498] 
I0123 22:50:40.413582 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l h i, on_bline l i h ? cong j f j e
I0123 22:50:41.344895 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8545241355895996
I0123 22:50:44.093627 139974069698560 ddar.py:60] Depth 2/1000 time = 2.7485477924346924
I0123 22:50:45.902577 139974069698560 ddar.py:60] Depth 3/1000 time = 1.8087530136108398
I0123 22:50:49.129427 139974069698560 ddar.py:60] Depth 4/1000 time = 3.2266719341278076
I0123 22:50:50.971521 139974069698560 ddar.py:60] Depth 5/1000 time = 1.8419065475463867
I0123 22:50:54.170083 139974069698560 ddar.py:60] Depth 6/1000 time = 3.198312997817993
I0123 22:50:57.376247 139974069698560 ddar.py:60] Depth 7/1000 time = 3.205571174621582
I0123 22:50:59.265717 139974069698560 ddar.py:60] Depth 8/1000 time = 1.866166353225708
I0123 22:50:59.274285 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:50:59.274365 139974069698560 alphageometry.py:566] LM output (score=-1.868618): "l : C b c l 16 T b c d l 17 ;"
I0123 22:50:59.274406 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_tline l d b c"

I0123 22:50:59.274461 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b c, on_tline l d b c ? cong j f j e"
I0123 22:50:59.274620 139974069698560 graph.py:498] 
I0123 22:50:59.274687 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b c, on_tline l d b c ? cong j f j e
I0123 22:51:00.058896 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7212657928466797
I0123 22:51:02.735724 139974069698560 ddar.py:60] Depth 2/1000 time = 2.6766576766967773
I0123 22:51:04.447099 139974069698560 ddar.py:60] Depth 3/1000 time = 1.711184024810791
I0123 22:51:07.649701 139974069698560 ddar.py:60] Depth 4/1000 time = 3.2024085521698
I0123 22:51:10.917344 139974069698560 ddar.py:60] Depth 5/1000 time = 3.2674379348754883
I0123 22:51:12.828202 139974069698560 ddar.py:60] Depth 6/1000 time = 1.9104180335998535
I0123 22:51:16.195675 139974069698560 ddar.py:60] Depth 7/1000 time = 3.3484549522399902
I0123 22:51:18.163629 139974069698560 ddar.py:60] Depth 8/1000 time = 1.967761516571045
I0123 22:51:21.500805 139974069698560 ddar.py:60] Depth 9/1000 time = 3.330281972885132
I0123 22:51:21.506072 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:51:21.506149 139974069698560 alphageometry.py:566] LM output (score=-1.891057): "l : C d f l 16 D d l f l 17 ;"
I0123 22:51:21.506190 139974069698560 alphageometry.py:567] Translation: "l = on_line l d f, on_bline l f d"

I0123 22:51:21.506230 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d f, on_bline l f d ? cong j f j e"
I0123 22:51:21.506372 139974069698560 graph.py:498] 
I0123 22:51:21.506427 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d f, on_bline l f d ? cong j f j e
I0123 22:51:22.357034 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7757084369659424
I0123 22:51:23.775928 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4187145233154297
I0123 22:51:26.963438 139974069698560 ddar.py:60] Depth 3/1000 time = 3.1873161792755127
I0123 22:51:28.886771 139974069698560 ddar.py:60] Depth 4/1000 time = 1.9231395721435547
I0123 22:51:32.188295 139974069698560 ddar.py:60] Depth 5/1000 time = 3.3013105392456055
I0123 22:51:34.134074 139974069698560 ddar.py:60] Depth 6/1000 time = 1.945312738418579
I0123 22:51:37.570767 139974069698560 ddar.py:60] Depth 7/1000 time = 3.417513132095337
I0123 22:51:39.540561 139974069698560 ddar.py:60] Depth 8/1000 time = 1.9695959091186523
I0123 22:51:41.532368 139974069698560 ddar.py:60] Depth 9/1000 time = 1.9830117225646973
I0123 22:51:41.534597 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:51:41.534670 139974069698560 alphageometry.py:566] LM output (score=-1.928371): "l : C b h l 16 D b l h l 17 ;"
I0123 22:51:41.534710 139974069698560 alphageometry.py:567] Translation: "l = on_line l b h, on_bline l h b"

I0123 22:51:41.534751 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b h, on_bline l h b ? cong j f j e"
I0123 22:51:41.534896 139974069698560 graph.py:498] 
I0123 22:51:41.534951 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b h, on_bline l h b ? cong j f j e
I0123 22:51:43.647760 139974069698560 ddar.py:60] Depth 1/1000 time = 2.0376434326171875
I0123 22:51:44.859358 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2114248275756836
I0123 22:51:46.314049 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4545094966888428
I0123 22:51:49.082296 139974069698560 ddar.py:60] Depth 4/1000 time = 2.7680604457855225
I0123 22:51:50.565214 139974069698560 ddar.py:60] Depth 5/1000 time = 1.4824507236480713
I0123 22:51:52.154479 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5711054801940918
I0123 22:51:54.926101 139974069698560 ddar.py:60] Depth 7/1000 time = 2.7714502811431885
I0123 22:51:56.440695 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5072097778320312
I0123 22:51:56.441902 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:51:56.441990 139974069698560 alphageometry.py:566] LM output (score=-1.997066): "l : T b c k l 16 ;"
I0123 22:51:56.442029 139974069698560 alphageometry.py:567] Translation: "l = on_tline l k b c"

I0123 22:51:56.442067 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_tline l k b c ? cong j f j e"
I0123 22:51:56.442204 139974069698560 graph.py:498] 
I0123 22:51:56.442258 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_tline l k b c ? cong j f j e
I0123 22:51:57.166058 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6630117893218994
I0123 22:51:59.609326 139974069698560 ddar.py:60] Depth 2/1000 time = 2.443120241165161
I0123 22:52:01.090593 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4810853004455566
I0123 22:52:03.959239 139974069698560 ddar.py:60] Depth 4/1000 time = 2.868448257446289
I0123 22:52:05.468139 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5085029602050781
I0123 22:52:07.108886 139974069698560 ddar.py:60] Depth 6/1000 time = 1.6217753887176514
I0123 22:52:09.946187 139974069698560 ddar.py:60] Depth 7/1000 time = 2.8371193408966064
I0123 22:52:11.517568 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5631020069122314
I0123 22:52:11.518885 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:52:11.518950 139974069698560 alphageometry.py:566] LM output (score=-2.036074): "l : C b g l 16 D b l g l 17 ;"
I0123 22:52:11.518988 139974069698560 alphageometry.py:567] Translation: "l = on_line l b g, on_bline l g b"

I0123 22:52:11.519028 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b g, on_bline l g b ? cong j f j e"
I0123 22:52:11.519174 139974069698560 graph.py:498] 
I0123 22:52:11.519228 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b g, on_bline l g b ? cong j f j e
I0123 22:52:12.343349 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7498500347137451
I0123 22:52:14.917310 139974069698560 ddar.py:60] Depth 2/1000 time = 2.5737924575805664
I0123 22:52:16.369528 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4520387649536133
I0123 22:52:17.872295 139974069698560 ddar.py:60] Depth 4/1000 time = 1.5025591850280762
I0123 22:52:20.678888 139974069698560 ddar.py:60] Depth 5/1000 time = 2.806105613708496
I0123 22:52:22.285593 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5885026454925537
I0123 22:52:23.811484 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5256848335266113
I0123 22:52:26.664309 139974069698560 ddar.py:60] Depth 8/1000 time = 2.845388650894165
I0123 22:52:26.665521 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:52:26.665591 139974069698560 alphageometry.py:566] LM output (score=-2.159369): "l : C d e l 16 T d e k l 17 ;"
I0123 22:52:26.665631 139974069698560 alphageometry.py:567] Translation: "l = on_line l d e, on_tline l k d e"

I0123 22:52:26.665681 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d e, on_tline l k d e ? cong j f j e"
I0123 22:52:26.665826 139974069698560 graph.py:498] 
I0123 22:52:26.665902 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d e, on_tline l k d e ? cong j f j e
I0123 22:52:27.640780 139974069698560 ddar.py:60] Depth 1/1000 time = 0.9126203060150146
I0123 22:52:30.492825 139974069698560 ddar.py:60] Depth 2/1000 time = 2.8518593311309814
I0123 22:52:33.664525 139974069698560 ddar.py:60] Depth 3/1000 time = 3.1715004444122314
I0123 22:52:35.482880 139974069698560 ddar.py:60] Depth 4/1000 time = 1.8181607723236084
I0123 22:52:38.657726 139974069698560 ddar.py:60] Depth 5/1000 time = 3.174415349960327
I0123 22:52:41.953120 139974069698560 ddar.py:60] Depth 6/1000 time = 3.275381088256836
I0123 22:52:43.818266 139974069698560 ddar.py:60] Depth 7/1000 time = 1.8649444580078125
I0123 22:52:47.041485 139974069698560 ddar.py:60] Depth 8/1000 time = 3.2168920040130615
I0123 22:52:47.042938 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:52:47.043009 139974069698560 alphageometry.py:566] LM output (score=-2.191794): "l : C b f l 16 P b e f l 17 ;"
I0123 22:52:47.043047 139974069698560 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2570, in add_clause
    raise DepCheckFailError(
graph.DepCheckFailError: ncoll f b e
"

I0123 22:52:47.043086 139974069698560 alphageometry.py:566] LM output (score=-2.193645): "l : C b d l 16 D b l d l 17 ;"
I0123 22:52:47.043120 139974069698560 alphageometry.py:567] Translation: "l = on_line l b d, on_bline l d b"

I0123 22:52:47.043153 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b d, on_bline l d b ? cong j f j e"
I0123 22:52:47.043295 139974069698560 graph.py:498] 
I0123 22:52:47.043349 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b d, on_bline l d b ? cong j f j e
I0123 22:52:47.888438 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7706303596496582
I0123 22:52:50.881960 139974069698560 ddar.py:60] Depth 2/1000 time = 2.9933533668518066
I0123 22:52:52.574785 139974069698560 ddar.py:60] Depth 3/1000 time = 1.6926445960998535
I0123 22:52:54.296604 139974069698560 ddar.py:60] Depth 4/1000 time = 1.721635103225708
I0123 22:52:57.353759 139974069698560 ddar.py:60] Depth 5/1000 time = 3.0567471981048584
I0123 22:52:59.192046 139974069698560 ddar.py:60] Depth 6/1000 time = 1.8168323040008545
I0123 22:53:02.325106 139974069698560 ddar.py:60] Depth 7/1000 time = 3.132880449295044
I0123 22:53:04.133631 139974069698560 ddar.py:60] Depth 8/1000 time = 1.802051067352295
I0123 22:53:04.134766 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:53:04.134831 139974069698560 alphageometry.py:566] LM output (score=-2.201009): "l : C b c l 16 D b c c l 17 ;"
I0123 22:53:04.134868 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_circle l c b"

I0123 22:53:04.134909 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b c, on_circle l c b ? cong j f j e"
I0123 22:53:04.135053 139974069698560 graph.py:498] 
I0123 22:53:04.135128 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b c, on_circle l c b ? cong j f j e
I0123 22:53:05.012568 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8025774955749512
I0123 22:53:07.987065 139974069698560 ddar.py:60] Depth 2/1000 time = 2.974327325820923
I0123 22:53:09.906396 139974069698560 ddar.py:60] Depth 3/1000 time = 1.9191420078277588
I0123 22:53:13.232400 139974069698560 ddar.py:60] Depth 4/1000 time = 3.3257977962493896
I0123 22:53:15.187182 139974069698560 ddar.py:60] Depth 5/1000 time = 1.9543404579162598
I0123 22:53:18.632171 139974069698560 ddar.py:60] Depth 6/1000 time = 3.4246673583984375
I0123 22:53:20.613950 139974069698560 ddar.py:60] Depth 7/1000 time = 1.981590747833252
I0123 22:53:24.043625 139974069698560 ddar.py:60] Depth 8/1000 time = 3.4222705364227295
I0123 22:53:24.044755 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:53:24.044821 139974069698560 alphageometry.py:566] LM output (score=-2.320844): "l : C d e l 16 D d l e l 17 ;"
I0123 22:53:24.044857 139974069698560 alphageometry.py:567] Translation: "l = on_line l d e, on_bline l e d"

I0123 22:53:24.044895 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d e, on_bline l e d ? cong j f j e"
I0123 22:53:24.045033 139974069698560 graph.py:498] 
I0123 22:53:24.045087 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d e, on_bline l e d ? cong j f j e
I0123 22:53:25.037165 139974069698560 ddar.py:60] Depth 1/1000 time = 0.914503812789917
I0123 22:53:26.649413 139974069698560 ddar.py:60] Depth 2/1000 time = 1.6120693683624268
I0123 22:53:30.047743 139974069698560 ddar.py:60] Depth 3/1000 time = 3.3981523513793945
I0123 22:53:33.660721 139974069698560 ddar.py:60] Depth 4/1000 time = 3.6127662658691406
I0123 22:53:37.290622 139974069698560 ddar.py:60] Depth 5/1000 time = 3.629624366760254
I0123 22:53:40.896211 139974069698560 ddar.py:60] Depth 6/1000 time = 3.604994297027588
I0123 22:53:43.195846 139974069698560 ddar.py:60] Depth 7/1000 time = 2.2817139625549316
I0123 22:53:46.721490 139974069698560 ddar.py:60] Depth 8/1000 time = 3.525456428527832
I0123 22:53:50.389236 139974069698560 ddar.py:60] Depth 9/1000 time = 3.658440351486206
I0123 22:53:50.393895 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:53:50.393981 139974069698560 alphageometry.py:566] LM output (score=-2.449556): "l : C b f l 16 P d g k l 17 ;"
I0123 22:53:50.394022 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_pline l k d g"

I0123 22:53:50.394067 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b f, on_pline l k d g ? cong j f j e"
I0123 22:53:50.394220 139974069698560 graph.py:498] 
I0123 22:53:50.394280 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b f, on_pline l k d g ? cong j f j e
I0123 22:53:51.288327 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8296236991882324
I0123 22:53:54.064461 139974069698560 ddar.py:60] Depth 2/1000 time = 2.77593731880188
I0123 22:53:55.649731 139974069698560 ddar.py:60] Depth 3/1000 time = 1.585017442703247
I0123 22:53:58.687190 139974069698560 ddar.py:60] Depth 4/1000 time = 3.0372066497802734
I0123 22:54:00.552686 139974069698560 ddar.py:60] Depth 5/1000 time = 1.8653147220611572
I0123 22:54:03.864382 139974069698560 ddar.py:60] Depth 6/1000 time = 3.311502456665039
I0123 22:54:07.487555 139974069698560 ddar.py:60] Depth 7/1000 time = 3.6229915618896484
I0123 22:54:09.752724 139974069698560 ddar.py:60] Depth 8/1000 time = 2.264721632003784
I0123 22:54:13.541244 139974069698560 ddar.py:60] Depth 9/1000 time = 3.771378755569458
I0123 22:54:17.301537 139974069698560 ddar.py:60] Depth 10/1000 time = 3.760042428970337
I0123 22:54:19.602494 139974069698560 ddar.py:60] Depth 11/1000 time = 2.2959866523742676
I0123 22:54:19.611335 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:54:19.611432 139974069698560 alphageometry.py:566] LM output (score=-2.466307): "l : C b f l 16 P d k k l 17 ;"
I0123 22:54:19.611472 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P d k k l"

I0123 22:54:19.611512 139974069698560 alphageometry.py:566] LM output (score=-2.513952): "l : C b j l 16 D b l j l 17 ;"
I0123 22:54:19.611541 139974069698560 alphageometry.py:567] Translation: "l = on_line l b j, on_bline l j b"

I0123 22:54:19.611577 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b j, on_bline l j b ? cong j f j e"
I0123 22:54:19.611736 139974069698560 graph.py:498] 
I0123 22:54:19.611794 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b j, on_bline l j b ? cong j f j e
I0123 22:54:20.421436 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7325904369354248
I0123 22:54:22.910607 139974069698560 ddar.py:60] Depth 2/1000 time = 2.4890072345733643
I0123 22:54:24.188158 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2773568630218506
I0123 22:54:25.502548 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3141839504241943
I0123 22:54:28.240103 139974069698560 ddar.py:60] Depth 5/1000 time = 2.737123727798462
I0123 22:54:29.639851 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3832809925079346
I0123 22:54:30.981742 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3416874408721924
I0123 22:54:32.349045 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3615810871124268
I0123 22:54:32.350188 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:54:32.350268 139974069698560 alphageometry.py:566] LM output (score=-2.518344): "l : C g i l 16 D g l i l 17 ;"
I0123 22:54:32.350305 139974069698560 alphageometry.py:567] Translation: "l = on_line l g i, on_bline l i g"

I0123 22:54:32.350354 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l g i, on_bline l i g ? cong j f j e"
I0123 22:54:32.350513 139974069698560 graph.py:498] 
I0123 22:54:32.350577 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l g i, on_bline l i g ? cong j f j e
I0123 22:54:34.684628 139974069698560 ddar.py:60] Depth 1/1000 time = 2.258456230163574
I0123 22:54:36.183923 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4990427494049072
I0123 22:54:39.350305 139974069698560 ddar.py:60] Depth 3/1000 time = 3.1661767959594727
I0123 22:54:42.627249 139974069698560 ddar.py:60] Depth 4/1000 time = 3.276761531829834
I0123 22:54:44.553406 139974069698560 ddar.py:60] Depth 5/1000 time = 1.9259676933288574
I0123 22:54:47.793272 139974069698560 ddar.py:60] Depth 6/1000 time = 3.239694118499756
I0123 22:54:49.634159 139974069698560 ddar.py:60] Depth 7/1000 time = 1.840402603149414
I0123 22:54:52.951687 139974069698560 ddar.py:60] Depth 8/1000 time = 3.2962374687194824
I0123 22:54:52.960175 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:54:52.960258 139974069698560 alphageometry.py:566] LM output (score=-2.520230): "l : C c d l 16 D c l d l 17 ;"
I0123 22:54:52.960295 139974069698560 alphageometry.py:567] Translation: "l = on_line l c d, on_bline l d c"

I0123 22:54:52.960341 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l c d, on_bline l d c ? cong j f j e"
I0123 22:54:52.960495 139974069698560 graph.py:498] 
I0123 22:54:52.960556 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l c d, on_bline l d c ? cong j f j e
I0123 22:54:53.954054 139974069698560 ddar.py:60] Depth 1/1000 time = 0.9161896705627441
I0123 22:54:56.841284 139974069698560 ddar.py:60] Depth 2/1000 time = 2.886960029602051
I0123 22:55:00.031395 139974069698560 ddar.py:60] Depth 3/1000 time = 3.189924716949463
I0123 22:55:01.815472 139974069698560 ddar.py:60] Depth 4/1000 time = 1.7838869094848633
I0123 22:55:05.004230 139974069698560 ddar.py:60] Depth 5/1000 time = 3.1882946491241455
I0123 22:55:06.909359 139974069698560 ddar.py:60] Depth 6/1000 time = 1.8842532634735107
I0123 22:55:10.131075 139974069698560 ddar.py:60] Depth 7/1000 time = 3.2215194702148438
I0123 22:55:13.485064 139974069698560 ddar.py:60] Depth 8/1000 time = 3.3491742610931396
I0123 22:55:13.486562 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:55:13.486640 139974069698560 alphageometry.py:566] LM output (score=-2.569368): "l : C b d l 16 T b d k l 17 ;"
I0123 22:55:13.486680 139974069698560 alphageometry.py:567] Translation: "l = on_line l b d, on_tline l k b d"

I0123 22:55:13.486728 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b d, on_tline l k b d ? cong j f j e"
I0123 22:55:13.486883 139974069698560 graph.py:498] 
I0123 22:55:13.486939 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b d, on_tline l k b d ? cong j f j e
I0123 22:55:14.330525 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7757446765899658
I0123 22:55:15.770073 139974069698560 ddar.py:60] Depth 2/1000 time = 1.4392988681793213
I0123 22:55:18.820720 139974069698560 ddar.py:60] Depth 3/1000 time = 3.050434112548828
I0123 22:55:20.538636 139974069698560 ddar.py:60] Depth 4/1000 time = 1.7177162170410156
I0123 22:55:23.643492 139974069698560 ddar.py:60] Depth 5/1000 time = 3.104412794113159
I0123 22:55:25.464829 139974069698560 ddar.py:60] Depth 6/1000 time = 1.8005917072296143
I0123 22:55:27.241859 139974069698560 ddar.py:60] Depth 7/1000 time = 1.77683424949646
I0123 22:55:30.373275 139974069698560 ddar.py:60] Depth 8/1000 time = 3.125065326690674
I0123 22:55:30.374606 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:55:30.374701 139974069698560 alphageometry.py:566] LM output (score=-2.578750): "l : C d k l 16 P d k d l 17 ;"
I0123 22:55:30.374740 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P d k d l"

I0123 22:55:30.374776 139974069698560 alphageometry.py:566] LM output (score=-2.580727): "l : T b c k l 16 T b l c k 17 ;"
I0123 22:55:30.374807 139974069698560 alphageometry.py:567] Translation: "l = on_tline l k b c, on_tline l b c k"

I0123 22:55:30.374840 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_tline l k b c, on_tline l b c k ? cong j f j e"
I0123 22:55:30.374981 139974069698560 graph.py:498] 
I0123 22:55:30.375036 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_tline l k b c, on_tline l b c k ? cong j f j e
I0123 22:55:31.123563 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6846277713775635
I0123 22:55:32.378024 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2542831897735596
I0123 22:55:35.835483 139974069698560 ddar.py:60] Depth 3/1000 time = 3.457202434539795
I0123 22:55:37.721016 139974069698560 ddar.py:60] Depth 4/1000 time = 1.885298490524292
I0123 22:55:41.459444 139974069698560 ddar.py:60] Depth 5/1000 time = 3.7382383346557617
I0123 22:55:45.616575 139974069698560 ddar.py:60] Depth 6/1000 time = 4.156917095184326
I0123 22:55:49.732728 139974069698560 ddar.py:60] Depth 7/1000 time = 4.115693092346191
I0123 22:55:52.571895 139974069698560 ddar.py:60] Depth 8/1000 time = 2.8169641494750977
I0123 22:55:56.722136 139974069698560 ddar.py:60] Depth 9/1000 time = 4.149993419647217
I0123 22:56:00.873345 139974069698560 ddar.py:60] Depth 10/1000 time = 4.141936540603638
I0123 22:56:00.877138 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:56:00.877208 139974069698560 alphageometry.py:566] LM output (score=-2.647055): "l : C d g l 16 P b e k l 17 ;"
I0123 22:56:00.877246 139974069698560 alphageometry.py:567] Translation: "l = on_line l d g, on_pline l k b e"

I0123 22:56:00.877294 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d g, on_pline l k b e ? cong j f j e"
I0123 22:56:00.877453 139974069698560 graph.py:498] 
I0123 22:56:00.877514 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d g, on_pline l k b e ? cong j f j e
I0123 22:56:03.185837 139974069698560 ddar.py:60] Depth 1/1000 time = 2.242587089538574
I0123 22:56:04.571006 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3849821090698242
I0123 22:56:07.737677 139974069698560 ddar.py:60] Depth 3/1000 time = 3.1664717197418213
I0123 22:56:11.254230 139974069698560 ddar.py:60] Depth 4/1000 time = 3.5163352489471436
I0123 22:56:13.538620 139974069698560 ddar.py:60] Depth 5/1000 time = 2.2841203212738037
I0123 22:56:17.191536 139974069698560 ddar.py:60] Depth 6/1000 time = 3.6526429653167725
I0123 22:56:20.852052 139974069698560 ddar.py:60] Depth 7/1000 time = 3.660308361053467
I0123 22:56:24.512671 139974069698560 ddar.py:60] Depth 8/1000 time = 3.6601004600524902
I0123 22:56:26.871752 139974069698560 ddar.py:60] Depth 9/1000 time = 2.342198133468628
I0123 22:56:30.554882 139974069698560 ddar.py:60] Depth 10/1000 time = 3.6829400062561035
I0123 22:56:34.332831 139974069698560 ddar.py:60] Depth 11/1000 time = 3.7732326984405518
I0123 22:56:34.347187 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:56:34.347289 139974069698560 alphageometry.py:566] LM output (score=-2.648138): "l : C b f l 16 P c d k l 17 ;"
I0123 22:56:34.347329 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_pline l k c d"

I0123 22:56:34.347382 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b f, on_pline l k c d ? cong j f j e"
I0123 22:56:34.347545 139974069698560 graph.py:498] 
I0123 22:56:34.347605 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b f, on_pline l k c d ? cong j f j e
I0123 22:56:35.238248 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8235902786254883
I0123 22:56:37.992122 139974069698560 ddar.py:60] Depth 2/1000 time = 2.7536604404449463
I0123 22:56:39.561649 139974069698560 ddar.py:60] Depth 3/1000 time = 1.569333791732788
I0123 22:56:42.626339 139974069698560 ddar.py:60] Depth 4/1000 time = 3.064500570297241
I0123 22:56:44.518215 139974069698560 ddar.py:60] Depth 5/1000 time = 1.8916900157928467
I0123 22:56:47.967148 139974069698560 ddar.py:60] Depth 6/1000 time = 3.4487462043762207
I0123 22:56:51.734313 139974069698560 ddar.py:60] Depth 7/1000 time = 3.7669436931610107
I0123 22:56:54.007134 139974069698560 ddar.py:60] Depth 8/1000 time = 2.2722980976104736
I0123 22:56:57.871272 139974069698560 ddar.py:60] Depth 9/1000 time = 3.8465709686279297
I0123 22:57:00.163477 139974069698560 ddar.py:60] Depth 10/1000 time = 2.2920050621032715
I0123 22:57:03.856339 139974069698560 ddar.py:60] Depth 11/1000 time = 3.68818998336792
I0123 22:57:03.864641 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:57:03.864705 139974069698560 alphageometry.py:566] LM output (score=-2.652356): "l : C b f l 16 T b f k l 17 ;"
I0123 22:57:03.864741 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_tline l k b f"

I0123 22:57:03.864792 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b f, on_tline l k b f ? cong j f j e"
I0123 22:57:03.864944 139974069698560 graph.py:498] 
I0123 22:57:03.865002 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b f, on_tline l k b f ? cong j f j e
I0123 22:57:04.746118 139974069698560 ddar.py:60] Depth 1/1000 time = 0.8170499801635742
I0123 22:57:07.459052 139974069698560 ddar.py:60] Depth 2/1000 time = 2.712747573852539
I0123 22:57:09.017033 139974069698560 ddar.py:60] Depth 3/1000 time = 1.55778169631958
I0123 22:57:12.073232 139974069698560 ddar.py:60] Depth 4/1000 time = 3.055988311767578
I0123 22:57:13.664504 139974069698560 ddar.py:60] Depth 5/1000 time = 1.5907392501831055
I0123 22:57:16.750275 139974069698560 ddar.py:60] Depth 6/1000 time = 3.069549083709717
I0123 22:57:18.360101 139974069698560 ddar.py:60] Depth 7/1000 time = 1.609623908996582
I0123 22:57:21.353110 139974069698560 ddar.py:60] Depth 8/1000 time = 2.988699436187744
I0123 22:57:21.354398 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:57:21.354468 139974069698560 alphageometry.py:566] LM output (score=-2.668067): "l : C b k l 16 T b k d l 17 ;"
I0123 22:57:21.354507 139974069698560 alphageometry.py:567] Translation: "l = on_line l b k, on_tline l d b k"

I0123 22:57:21.354577 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b k, on_tline l d b k ? cong j f j e"
I0123 22:57:21.354738 139974069698560 graph.py:498] 
I0123 22:57:21.354797 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l b k, on_tline l d b k ? cong j f j e
I0123 22:57:22.123115 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7064344882965088
I0123 22:57:24.649229 139974069698560 ddar.py:60] Depth 2/1000 time = 2.5259456634521484
I0123 22:57:26.116991 139974069698560 ddar.py:60] Depth 3/1000 time = 1.4675805568695068
I0123 22:57:27.608064 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4908790588378906
I0123 22:57:30.630652 139974069698560 ddar.py:60] Depth 5/1000 time = 3.0223686695098877
I0123 22:57:32.148818 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5176820755004883
I0123 22:57:33.761296 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5944697856903076
I0123 22:57:36.793879 139974069698560 ddar.py:60] Depth 8/1000 time = 3.032306432723999
I0123 22:57:38.374013 139974069698560 ddar.py:60] Depth 9/1000 time = 1.5740861892700195
I0123 22:57:38.376854 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:57:38.376937 139974069698560 alphageometry.py:566] LM output (score=-2.672520): "l : C d i l 16 D d l i l 17 ;"
I0123 22:57:38.376977 139974069698560 alphageometry.py:567] Translation: "l = on_line l d i, on_bline l i d"

I0123 22:57:38.377026 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d i, on_bline l i d ? cong j f j e"
I0123 22:57:38.377178 139974069698560 graph.py:498] 
I0123 22:57:38.377236 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d i, on_bline l i d ? cong j f j e
I0123 22:57:39.197734 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7436790466308594
I0123 22:57:41.716021 139974069698560 ddar.py:60] Depth 2/1000 time = 2.518115758895874
I0123 22:57:43.019915 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3037080764770508
I0123 22:57:44.333677 139974069698560 ddar.py:60] Depth 4/1000 time = 1.3135685920715332
I0123 22:57:47.140745 139974069698560 ddar.py:60] Depth 5/1000 time = 2.806635618209839
I0123 22:57:48.553117 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3954010009765625
I0123 22:57:49.889857 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3365533351898193
I0123 22:57:51.244192 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3496367931365967
I0123 22:57:51.245696 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:57:51.245767 139974069698560 alphageometry.py:566] LM output (score=-2.677575): "l : C d g l 16 P d k k l 17 ;"
I0123 22:57:51.245804 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P d k k l"

I0123 22:57:51.245846 139974069698560 alphageometry.py:566] LM output (score=-2.696531): "l : C b f l 16 P d k g l 17 ;"
I0123 22:57:51.245874 139974069698560 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2637, in add_clause
    raise PointTooFarError()
graph.PointTooFarError
"

I0123 22:57:51.245930 139974069698560 alphageometry.py:566] LM output (score=-2.716992): "l : C d g l 16 D d g d l 17 ;"
I0123 22:57:51.245965 139974069698560 alphageometry.py:567] Translation: "l = on_line l d g, on_circle l d g"

I0123 22:57:51.246001 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d g, on_circle l d g ? cong j f j e"
I0123 22:57:51.246165 139974069698560 graph.py:498] 
I0123 22:57:51.246227 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_bline k d b, on_bline k d c; l = on_line l d g, on_circle l d g ? cong j f j e
I0123 22:57:53.709984 139974069698560 ddar.py:60] Depth 1/1000 time = 2.3862433433532715
I0123 22:57:55.077147 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3669548034667969
I0123 22:57:58.071063 139974069698560 ddar.py:60] Depth 3/1000 time = 2.993734836578369
I0123 22:58:01.127636 139974069698560 ddar.py:60] Depth 4/1000 time = 3.0563745498657227
I0123 22:58:02.737230 139974069698560 ddar.py:60] Depth 5/1000 time = 1.6090164184570312
I0123 22:58:05.861052 139974069698560 ddar.py:60] Depth 6/1000 time = 3.106523275375366
I0123 22:58:07.538569 139974069698560 ddar.py:60] Depth 7/1000 time = 1.6773207187652588
I0123 22:58:10.662057 139974069698560 ddar.py:60] Depth 8/1000 time = 3.1187472343444824
I0123 22:58:10.663543 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:58:10.663646 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : D a c a k 14 D a c c k 15 ; x00
I0123 22:58:16.604196 139974069698560 alphageometry.py:566] LM output (score=-1.207924): "l : T b c b l 16 ;"
I0123 22:58:16.604340 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b b c"

I0123 22:58:16.604384 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l b b c ? cong j f j e"
I0123 22:58:16.604522 139974069698560 graph.py:498] 
I0123 22:58:16.604578 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l b b c ? cong j f j e
I0123 22:58:17.253512 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5899498462677002
I0123 22:58:18.239715 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9860532283782959
I0123 22:58:20.713484 139974069698560 ddar.py:60] Depth 3/1000 time = 2.473585367202759
I0123 22:58:21.817858 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1041724681854248
I0123 22:58:22.927892 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1096513271331787
I0123 22:58:24.039163 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1105668544769287
I0123 22:58:26.620140 139974069698560 ddar.py:60] Depth 7/1000 time = 2.567368268966675
I0123 22:58:27.809857 139974069698560 ddar.py:60] Depth 8/1000 time = 1.189549446105957
I0123 22:58:29.014037 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1997101306915283
I0123 22:58:29.014990 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:58:29.015055 139974069698560 alphageometry.py:566] LM output (score=-1.822808): "l : T b c d l 16 ;"
I0123 22:58:29.015114 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d b c"

I0123 22:58:29.015154 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l d b c ? cong j f j e"
I0123 22:58:29.015293 139974069698560 graph.py:498] 
I0123 22:58:29.015344 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l d b c ? cong j f j e
I0123 22:58:29.662831 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5868954658508301
I0123 22:58:32.052771 139974069698560 ddar.py:60] Depth 2/1000 time = 2.389786958694458
I0123 22:58:33.148049 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0950932502746582
I0123 22:58:34.390044 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2418043613433838
I0123 22:58:35.651236 139974069698560 ddar.py:60] Depth 5/1000 time = 1.2609996795654297
I0123 22:58:38.289216 139974069698560 ddar.py:60] Depth 6/1000 time = 2.6376020908355713
I0123 22:58:39.544916 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2549521923065186
I0123 22:58:40.914320 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3553988933563232
I0123 22:58:43.694633 139974069698560 ddar.py:60] Depth 9/1000 time = 2.7801215648651123
I0123 22:58:45.056138 139974069698560 ddar.py:60] Depth 10/1000 time = 1.3570952415466309
I0123 22:58:46.432315 139974069698560 ddar.py:60] Depth 11/1000 time = 1.37270188331604
I0123 22:58:46.433307 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:58:46.433374 139974069698560 alphageometry.py:566] LM output (score=-1.854123): "l : T d g g l 16 ;"
I0123 22:58:46.433412 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g d g"

I0123 22:58:46.433456 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g d g ? cong j f j e"
I0123 22:58:46.433595 139974069698560 graph.py:498] 
I0123 22:58:46.433655 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g d g ? cong j f j e
I0123 22:58:47.078005 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5844600200653076
I0123 22:58:48.059312 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9811501502990723
I0123 22:58:50.438482 139974069698560 ddar.py:60] Depth 3/1000 time = 2.3789753913879395
I0123 22:58:51.434682 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9959940910339355
I0123 22:58:52.436234 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0012047290802002
I0123 22:58:53.443952 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0070619583129883
I0123 22:58:56.096575 139974069698560 ddar.py:60] Depth 7/1000 time = 2.638789176940918
I0123 22:58:57.276641 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1798551082611084
I0123 22:58:58.467043 139974069698560 ddar.py:60] Depth 9/1000 time = 1.185990571975708
I0123 22:58:58.468012 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:58:58.468082 139974069698560 alphageometry.py:566] LM output (score=-2.007663): "l : T i j i l 16 ;"
I0123 22:58:58.468121 139974069698560 alphageometry.py:567] Translation: "l = on_tline l i i j"

I0123 22:58:58.468166 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l i i j ? cong j f j e"
I0123 22:58:58.468326 139974069698560 graph.py:498] 
I0123 22:58:58.468381 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l i i j ? cong j f j e
I0123 22:58:59.117150 139974069698560 ddar.py:60] Depth 1/1000 time = 0.58734130859375
I0123 22:59:00.092264 139974069698560 ddar.py:60] Depth 2/1000 time = 0.974951982498169
I0123 22:59:02.505367 139974069698560 ddar.py:60] Depth 3/1000 time = 2.4129271507263184
I0123 22:59:03.514814 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0092542171478271
I0123 22:59:04.528175 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0130112171173096
I0123 22:59:05.547227 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0183720588684082
I0123 22:59:08.156692 139974069698560 ddar.py:60] Depth 7/1000 time = 2.596802234649658
I0123 22:59:09.314433 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1575565338134766
I0123 22:59:10.501602 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1827452182769775
I0123 22:59:10.502563 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:59:10.502627 139974069698560 alphageometry.py:566] LM output (score=-2.105915): "l : T f i f l 16 ;"
I0123 22:59:10.502665 139974069698560 alphageometry.py:567] Translation: "l = on_tline l f f i"

I0123 22:59:10.502704 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l f f i ? cong j f j e"
I0123 22:59:10.502842 139974069698560 graph.py:498] 
I0123 22:59:10.502894 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l f f i ? cong j f j e
I0123 22:59:11.146046 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5839962959289551
I0123 22:59:12.139950 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9937543869018555
I0123 22:59:14.612632 139974069698560 ddar.py:60] Depth 3/1000 time = 2.4725053310394287
I0123 22:59:15.728127 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1152980327606201
I0123 22:59:16.870660 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1421689987182617
I0123 22:59:17.987536 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1161713600158691
I0123 22:59:20.572281 139974069698560 ddar.py:60] Depth 7/1000 time = 2.5711824893951416
I0123 22:59:21.763305 139974069698560 ddar.py:60] Depth 8/1000 time = 1.190828561782837
I0123 22:59:22.977810 139974069698560 ddar.py:60] Depth 9/1000 time = 1.2100305557250977
I0123 22:59:22.978773 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:59:22.978839 139974069698560 alphageometry.py:566] LM output (score=-2.171416): "l : T b l g h 16 ;"
I0123 22:59:22.978877 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b g h"

I0123 22:59:22.978916 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l b g h ? cong j f j e"
I0123 22:59:22.979055 139974069698560 graph.py:498] 
I0123 22:59:22.979107 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l b g h ? cong j f j e
I0123 22:59:23.638055 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5994682312011719
I0123 22:59:26.011796 139974069698560 ddar.py:60] Depth 2/1000 time = 2.3735837936401367
I0123 22:59:26.990526 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9785473346710205
I0123 22:59:27.984029 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9933266639709473
I0123 22:59:28.981044 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9966650009155273
I0123 22:59:29.985435 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0036985874176025
I0123 22:59:32.607453 139974069698560 ddar.py:60] Depth 7/1000 time = 2.6078851222991943
I0123 22:59:33.777519 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1698837280273438
I0123 22:59:34.974512 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1925616264343262
I0123 22:59:34.975466 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:59:34.975535 139974069698560 alphageometry.py:566] LM output (score=-2.174824): "l : T b c h l 16 ;"
I0123 22:59:34.975573 139974069698560 alphageometry.py:567] Translation: "l = on_tline l h b c"

I0123 22:59:34.975612 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l h b c ? cong j f j e"
I0123 22:59:34.975751 139974069698560 graph.py:498] 
I0123 22:59:34.975803 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l h b c ? cong j f j e
I0123 22:59:35.622064 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5866885185241699
I0123 22:59:38.040613 139974069698560 ddar.py:60] Depth 2/1000 time = 2.4183974266052246
I0123 22:59:39.096916 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0561192035675049
I0123 22:59:40.198076 139974069698560 ddar.py:60] Depth 4/1000 time = 1.100970983505249
I0123 22:59:41.304449 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1059939861297607
I0123 22:59:42.418048 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1128995418548584
I0123 22:59:45.054617 139974069698560 ddar.py:60] Depth 7/1000 time = 2.623131513595581
I0123 22:59:46.243295 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1884467601776123
I0123 22:59:47.453133 139974069698560 ddar.py:60] Depth 9/1000 time = 1.2054338455200195
I0123 22:59:47.454147 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:59:47.454249 139974069698560 alphageometry.py:566] LM output (score=-2.205436): "l : T d g d l 16 ;"
I0123 22:59:47.454287 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d d g"

I0123 22:59:47.454349 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l d d g ? cong j f j e"
I0123 22:59:47.454526 139974069698560 graph.py:498] 
I0123 22:59:47.454589 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l d d g ? cong j f j e
I0123 22:59:48.101155 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5858705043792725
I0123 22:59:50.547116 139974069698560 ddar.py:60] Depth 2/1000 time = 2.445812463760376
I0123 22:59:51.542561 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9952578544616699
I0123 22:59:52.541867 139974069698560 ddar.py:60] Depth 4/1000 time = 0.999126672744751
I0123 22:59:53.539867 139974069698560 ddar.py:60] Depth 5/1000 time = 0.99764084815979
I0123 22:59:55.999185 139974069698560 ddar.py:60] Depth 6/1000 time = 2.458651065826416
I0123 22:59:57.180826 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1680285930633545
I0123 22:59:58.355290 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1742751598358154
I0123 22:59:59.547800 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1880533695220947
I0123 22:59:59.548761 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 22:59:59.548837 139974069698560 alphageometry.py:566] LM output (score=-2.268200): "l : T e g g l 16 ;"
I0123 22:59:59.548877 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g e g"

I0123 22:59:59.548917 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g e g ? cong j f j e"
I0123 22:59:59.549058 139974069698560 graph.py:498] 
I0123 22:59:59.549112 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g e g ? cong j f j e
I0123 23:00:00.197415 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5887448787689209
I0123 23:00:02.629317 139974069698560 ddar.py:60] Depth 2/1000 time = 2.4317405223846436
I0123 23:00:03.627058 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9975326061248779
I0123 23:00:04.630818 139974069698560 ddar.py:60] Depth 4/1000 time = 1.003533124923706
I0123 23:00:05.637127 139974069698560 ddar.py:60] Depth 5/1000 time = 1.005899429321289
I0123 23:00:06.644111 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0062134265899658
I0123 23:00:09.365957 139974069698560 ddar.py:60] Depth 7/1000 time = 2.7080209255218506
I0123 23:00:10.536361 139974069698560 ddar.py:60] Depth 8/1000 time = 1.170217752456665
I0123 23:00:11.725772 139974069698560 ddar.py:60] Depth 9/1000 time = 1.184981346130371
I0123 23:00:11.726722 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:00:11.726791 139974069698560 alphageometry.py:566] LM output (score=-2.320372): "l : T h i h l 16 ;"
I0123 23:00:11.726830 139974069698560 alphageometry.py:567] Translation: "l = on_tline l h h i"

I0123 23:00:11.726883 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l h h i ? cong j f j e"
I0123 23:00:11.727029 139974069698560 graph.py:498] 
I0123 23:00:11.727089 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l h h i ? cong j f j e
I0123 23:00:12.365613 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5775752067565918
I0123 23:00:14.794753 139974069698560 ddar.py:60] Depth 2/1000 time = 2.428987979888916
I0123 23:00:15.843474 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0485386848449707
I0123 23:00:16.935065 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0914058685302734
I0123 23:00:18.030773 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0953421592712402
I0123 23:00:19.140999 139974069698560 ddar.py:60] Depth 6/1000 time = 1.10951828956604
I0123 23:00:21.799764 139974069698560 ddar.py:60] Depth 7/1000 time = 2.64457631111145
I0123 23:00:22.975460 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1755025386810303
I0123 23:00:24.173964 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1942682266235352
I0123 23:00:24.174967 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:00:24.175040 139974069698560 alphageometry.py:566] LM output (score=-2.358974): "l : T e i e l 16 ;"
I0123 23:00:24.175094 139974069698560 alphageometry.py:567] Translation: "l = on_tline l e e i"

I0123 23:00:24.175141 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l e e i ? cong j f j e"
I0123 23:00:24.175296 139974069698560 graph.py:498] 
I0123 23:00:24.175356 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l e e i ? cong j f j e
I0123 23:00:24.814458 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5797526836395264
I0123 23:00:27.324790 139974069698560 ddar.py:60] Depth 2/1000 time = 2.510178565979004
I0123 23:00:28.365285 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0402882099151611
I0123 23:00:29.449550 139974069698560 ddar.py:60] Depth 4/1000 time = 1.084075927734375
I0123 23:00:30.540913 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0909836292266846
I0123 23:00:33.092873 139974069698560 ddar.py:60] Depth 6/1000 time = 2.551250696182251
I0123 23:00:34.289220 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1822550296783447
I0123 23:00:35.466363 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1769649982452393
I0123 23:00:36.659090 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1883435249328613
I0123 23:00:36.660044 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:00:36.660111 139974069698560 alphageometry.py:566] LM output (score=-2.360691): "l : D b f b l 16 D b f f l 17 ;"
I0123 23:00:36.660149 139974069698560 alphageometry.py:567] Translation: "l = on_circle l b f, on_circle l f b"

I0123 23:00:36.660187 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_circle l b f, on_circle l f b ? cong j f j e"
I0123 23:00:36.660324 139974069698560 graph.py:498] 
I0123 23:00:36.660376 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_circle l b f, on_circle l f b ? cong j f j e
I0123 23:00:37.508141 139974069698560 ddar.py:60] Depth 1/1000 time = 0.7714383602142334
I0123 23:00:40.268133 139974069698560 ddar.py:60] Depth 2/1000 time = 2.759838819503784
I0123 23:00:41.655860 139974069698560 ddar.py:60] Depth 3/1000 time = 1.3875415325164795
I0123 23:00:43.051214 139974069698560 ddar.py:60] Depth 4/1000 time = 1.395143985748291
I0123 23:00:46.027149 139974069698560 ddar.py:60] Depth 5/1000 time = 2.975485324859619
I0123 23:00:47.457179 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4284312725067139
I0123 23:00:49.121580 139974069698560 ddar.py:60] Depth 7/1000 time = 1.6442217826843262
I0123 23:00:50.750947 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6291732788085938
I0123 23:00:53.916981 139974069698560 ddar.py:60] Depth 9/1000 time = 3.1604413986206055
I0123 23:00:53.918008 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:00:53.918067 139974069698560 alphageometry.py:566] LM output (score=-2.376971): "l : T c e e l 16 ;"
I0123 23:00:53.918104 139974069698560 alphageometry.py:567] Translation: "l = on_tline l e c e"

I0123 23:00:53.918150 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l e c e ? cong j f j e"
I0123 23:00:53.918321 139974069698560 graph.py:498] 
I0123 23:00:53.918387 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l e c e ? cong j f j e
I0123 23:00:54.565568 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5873091220855713
I0123 23:00:55.531594 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9658718109130859
I0123 23:00:56.528789 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9970254898071289
I0123 23:00:57.527746 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9987857341766357
I0123 23:01:00.042509 139974069698560 ddar.py:60] Depth 5/1000 time = 2.514400005340576
I0123 23:01:01.047675 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0044786930084229
I0123 23:01:02.242754 139974069698560 ddar.py:60] Depth 7/1000 time = 1.181239366531372
I0123 23:01:03.416800 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1738560199737549
I0123 23:01:04.608072 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1867022514343262
I0123 23:01:04.609114 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:01:04.609211 139974069698560 alphageometry.py:566] LM output (score=-2.397210): "l : T g h g l 16 ;"
I0123 23:01:04.609249 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g g h"

I0123 23:01:04.609304 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g g h ? cong j f j e"
I0123 23:01:04.609486 139974069698560 graph.py:498] 
I0123 23:01:04.609552 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g g h ? cong j f j e
I0123 23:01:06.788219 139974069698560 ddar.py:60] Depth 1/1000 time = 2.118819236755371
I0123 23:01:07.752430 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9640078544616699
I0123 23:01:08.739028 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9864134788513184
I0123 23:01:09.735748 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9965462684631348
I0123 23:01:10.731938 139974069698560 ddar.py:60] Depth 5/1000 time = 0.995823860168457
I0123 23:01:13.159780 139974069698560 ddar.py:60] Depth 6/1000 time = 2.427178144454956
I0123 23:01:14.347052 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1734306812286377
I0123 23:01:15.552028 139974069698560 ddar.py:60] Depth 8/1000 time = 1.204796314239502
I0123 23:01:16.755528 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1990394592285156
I0123 23:01:16.756489 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:01:16.756548 139974069698560 alphageometry.py:566] LM output (score=-2.415632): "l : T f h g l 16 ;"
I0123 23:01:16.756584 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g f h"

I0123 23:01:16.756622 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g f h ? cong j f j e"
I0123 23:01:16.756760 139974069698560 graph.py:498] 
I0123 23:01:16.756814 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g f h ? cong j f j e
I0123 23:01:18.880180 139974069698560 ddar.py:60] Depth 1/1000 time = 2.0634095668792725
I0123 23:01:19.862217 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9818451404571533
I0123 23:01:20.838382 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9759731292724609
I0123 23:01:21.839823 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0012788772583008
I0123 23:01:22.834944 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9947311878204346
I0123 23:01:25.368507 139974069698560 ddar.py:60] Depth 6/1000 time = 2.532777786254883
I0123 23:01:26.509699 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1288917064666748
I0123 23:01:27.633622 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1237351894378662
I0123 23:01:28.776228 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1381657123565674
I0123 23:01:28.777195 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:01:28.777263 139974069698560 alphageometry.py:566] LM output (score=-2.428219): "l : T b c d l 16 T b l c d 17 ;"
I0123 23:01:28.777299 139974069698560 alphageometry.py:567] Translation: "l = on_tline l d b c, on_tline l b c d"

I0123 23:01:28.777352 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l d b c, on_tline l b c d ? cong j f j e"
I0123 23:01:28.777515 139974069698560 graph.py:498] 
I0123 23:01:28.777572 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l d b c, on_tline l b c d ? cong j f j e
I0123 23:01:29.464044 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6239962577819824
I0123 23:01:32.030255 139974069698560 ddar.py:60] Depth 2/1000 time = 2.5660529136657715
I0123 23:01:33.307752 139974069698560 ddar.py:60] Depth 3/1000 time = 1.277313232421875
I0123 23:01:34.828571 139974069698560 ddar.py:60] Depth 4/1000 time = 1.5206222534179688
I0123 23:01:37.839277 139974069698560 ddar.py:60] Depth 5/1000 time = 3.010305166244507
I0123 23:01:39.360646 139974069698560 ddar.py:60] Depth 6/1000 time = 1.5205533504486084
I0123 23:01:41.012359 139974069698560 ddar.py:60] Depth 7/1000 time = 1.6325573921203613
I0123 23:01:42.661653 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6490767002105713
I0123 23:01:45.882204 139974069698560 ddar.py:60] Depth 9/1000 time = 3.2143499851226807
I0123 23:01:45.885523 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:01:45.885622 139974069698560 alphageometry.py:566] LM output (score=-2.435171): "l : T b c c l 16 ;"
I0123 23:01:45.885669 139974069698560 alphageometry.py:567] Translation: "l = on_tline l c b c"

I0123 23:01:45.885725 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l c b c ? cong j f j e"
I0123 23:01:45.885886 139974069698560 graph.py:498] 
I0123 23:01:45.885944 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l c b c ? cong j f j e
I0123 23:01:46.537096 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5911006927490234
I0123 23:01:47.528576 139974069698560 ddar.py:60] Depth 2/1000 time = 0.991323709487915
I0123 23:01:48.587476 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0587234497070312
I0123 23:01:51.162667 139974069698560 ddar.py:60] Depth 4/1000 time = 2.5750017166137695
I0123 23:01:52.275925 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1128723621368408
I0123 23:01:53.388581 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1119534969329834
I0123 23:01:54.605509 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2031397819519043
I0123 23:01:57.266053 139974069698560 ddar.py:60] Depth 8/1000 time = 2.660362720489502
I0123 23:01:58.480573 139974069698560 ddar.py:60] Depth 9/1000 time = 1.2100434303283691
I0123 23:01:58.481540 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:01:58.481620 139974069698560 alphageometry.py:566] LM output (score=-2.441463): "l : D b f b l 16 T b c f l 17 ;"
I0123 23:01:58.481666 139974069698560 alphageometry.py:567] Translation: "l = on_circle l b f, on_tline l f b c"

I0123 23:01:58.481712 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_circle l b f, on_tline l f b c ? cong j f j e"
I0123 23:01:58.481859 139974069698560 graph.py:498] 
I0123 23:01:58.481914 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_circle l b f, on_tline l f b c ? cong j f j e
I0123 23:01:59.246702 139974069698560 ddar.py:60] Depth 1/1000 time = 0.697023868560791
I0123 23:02:00.609995 139974069698560 ddar.py:60] Depth 2/1000 time = 1.3631243705749512
I0123 23:02:03.949637 139974069698560 ddar.py:60] Depth 3/1000 time = 3.339439868927002
I0123 23:02:05.752920 139974069698560 ddar.py:60] Depth 4/1000 time = 1.8029913902282715
I0123 23:02:07.553385 139974069698560 ddar.py:60] Depth 5/1000 time = 1.7999536991119385
I0123 23:02:10.844505 139974069698560 ddar.py:60] Depth 6/1000 time = 3.290144920349121
I0123 23:02:12.796751 139974069698560 ddar.py:60] Depth 7/1000 time = 1.9317634105682373
I0123 23:02:14.735317 139974069698560 ddar.py:60] Depth 8/1000 time = 1.9383785724639893
I0123 23:02:18.250512 139974069698560 ddar.py:60] Depth 9/1000 time = 3.5035648345947266
I0123 23:02:18.251605 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:02:18.251687 139974069698560 alphageometry.py:566] LM output (score=-2.515129): "l : D b f f l 16 T b f f l 17 ;"
I0123 23:02:18.251727 139974069698560 alphageometry.py:567] Translation: "l = on_circle l f b, on_tline l f b f"

I0123 23:02:18.251775 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_circle l f b, on_tline l f b f ? cong j f j e"
I0123 23:02:18.251928 139974069698560 graph.py:498] 
I0123 23:02:18.251984 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_circle l f b, on_tline l f b f ? cong j f j e
I0123 23:02:18.986105 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6651833057403564
I0123 23:02:20.082096 139974069698560 ddar.py:60] Depth 2/1000 time = 1.0958161354064941
I0123 23:02:21.199096 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1168127059936523
I0123 23:02:23.935352 139974069698560 ddar.py:60] Depth 4/1000 time = 2.7360217571258545
I0123 23:02:25.052903 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1170275211334229
I0123 23:02:26.179913 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1261568069458008
I0123 23:02:27.467371 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2752225399017334
I0123 23:02:30.252686 139974069698560 ddar.py:60] Depth 8/1000 time = 2.7851433753967285
I0123 23:02:31.535151 139974069698560 ddar.py:60] Depth 9/1000 time = 1.2773945331573486
I0123 23:02:31.536150 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:02:31.536240 139974069698560 alphageometry.py:566] LM output (score=-2.559143): "l : T g i g l 16 ;"
I0123 23:02:31.536281 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g g i"

I0123 23:02:31.536334 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g g i ? cong j f j e"
I0123 23:02:31.536485 139974069698560 graph.py:498] 
I0123 23:02:31.536541 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g g i ? cong j f j e
I0123 23:02:32.178860 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5824370384216309
I0123 23:02:33.159074 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9800698757171631
I0123 23:02:34.216677 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0574254989624023
I0123 23:02:36.804468 139974069698560 ddar.py:60] Depth 4/1000 time = 2.587602376937866
I0123 23:02:37.922568 139974069698560 ddar.py:60] Depth 5/1000 time = 1.117724895477295
I0123 23:02:39.047510 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1242084503173828
I0123 23:02:40.274816 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2137444019317627
I0123 23:02:43.065624 139974069698560 ddar.py:60] Depth 8/1000 time = 2.790609836578369
I0123 23:02:44.287232 139974069698560 ddar.py:60] Depth 9/1000 time = 1.2169761657714844
I0123 23:02:44.288287 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:02:44.288382 139974069698560 alphageometry.py:566] LM output (score=-2.571240): "l : T k d k l 16 ;"
I0123 23:02:44.288422 139974069698560 alphageometry.py:567] Translation: "l = on_tline l k k d"

I0123 23:02:44.288476 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l k k d ? cong j f j e"
I0123 23:02:44.288645 139974069698560 graph.py:498] 
I0123 23:02:44.288706 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l k k d ? cong j f j e
I0123 23:02:44.938093 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5892260074615479
I0123 23:02:45.924589 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9863283634185791
I0123 23:02:46.918517 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9937291145324707
I0123 23:02:49.425884 139974069698560 ddar.py:60] Depth 4/1000 time = 2.5071794986724854
I0123 23:02:50.428704 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0024409294128418
I0123 23:02:51.439059 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0094971656799316
I0123 23:02:52.597696 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1471493244171143
I0123 23:02:53.740042 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1421658992767334
I0123 23:02:56.306346 139974069698560 ddar.py:60] Depth 9/1000 time = 2.5619325637817383
I0123 23:02:56.307314 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:02:56.307374 139974069698560 alphageometry.py:566] LM output (score=-2.612313): "l : T f g g l 16 ;"
I0123 23:02:56.307411 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g f g"

I0123 23:02:56.307450 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g f g ? cong j f j e"
I0123 23:02:56.307608 139974069698560 graph.py:498] 
I0123 23:02:56.307663 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g f g ? cong j f j e
I0123 23:02:56.950909 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5830707550048828
I0123 23:02:57.932801 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9817318916320801
I0123 23:02:58.998260 139974069698560 ddar.py:60] Depth 3/1000 time = 1.065277338027954
I0123 23:03:01.684605 139974069698560 ddar.py:60] Depth 4/1000 time = 2.686143159866333
I0123 23:03:02.796664 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1116447448730469
I0123 23:03:03.913296 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1158843040466309
I0123 23:03:05.121214 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1938555240631104
I0123 23:03:06.313662 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1922471523284912
I0123 23:03:09.013773 139974069698560 ddar.py:60] Depth 9/1000 time = 2.6956675052642822
I0123 23:03:09.014761 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:03:09.014828 139974069698560 alphageometry.py:566] LM output (score=-2.627261): "l : T b h b l 16 ;"
I0123 23:03:09.014867 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b b h"

I0123 23:03:09.014919 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l b b h ? cong j f j e"
I0123 23:03:09.015066 139974069698560 graph.py:498] 
I0123 23:03:09.015122 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l b b h ? cong j f j e
I0123 23:03:09.661892 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5863485336303711
I0123 23:03:10.645445 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9834070205688477
I0123 23:03:11.658651 139974069698560 ddar.py:60] Depth 3/1000 time = 1.0130300521850586
I0123 23:03:14.154344 139974069698560 ddar.py:60] Depth 4/1000 time = 2.4955179691314697
I0123 23:03:15.170158 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0154612064361572
I0123 23:03:16.189455 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0186269283294678
I0123 23:03:17.372952 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1712746620178223
I0123 23:03:18.548116 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1749846935272217
I0123 23:03:21.294578 139974069698560 ddar.py:60] Depth 9/1000 time = 2.7420225143432617
I0123 23:03:21.295537 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:03:21.295593 139974069698560 alphageometry.py:566] LM output (score=-2.676688): "l : D b f f l 16 T b l f h 17 ;"
I0123 23:03:21.295629 139974069698560 alphageometry.py:567] Translation: "l = on_circle l f b, on_tline l b f h"

I0123 23:03:21.295668 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_circle l f b, on_tline l b f h ? cong j f j e"
I0123 23:03:21.295809 139974069698560 graph.py:498] 
I0123 23:03:21.295868 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_circle l f b, on_tline l b f h ? cong j f j e
I0123 23:03:22.018645 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6548306941986084
I0123 23:03:23.105017 139974069698560 ddar.py:60] Depth 2/1000 time = 1.0861773490905762
I0123 23:03:24.274353 139974069698560 ddar.py:60] Depth 3/1000 time = 1.169130563735962
I0123 23:03:25.721922 139974069698560 ddar.py:60] Depth 4/1000 time = 1.4473111629486084
I0123 23:03:28.748498 139974069698560 ddar.py:60] Depth 5/1000 time = 3.026348114013672
I0123 23:03:30.241901 139974069698560 ddar.py:60] Depth 6/1000 time = 1.4930055141448975
I0123 23:03:31.743686 139974069698560 ddar.py:60] Depth 7/1000 time = 1.5010669231414795
I0123 23:03:33.422245 139974069698560 ddar.py:60] Depth 8/1000 time = 1.6639916896820068
I0123 23:03:36.522122 139974069698560 ddar.py:60] Depth 9/1000 time = 3.0996882915496826
I0123 23:03:38.220124 139974069698560 ddar.py:60] Depth 10/1000 time = 1.6927814483642578
I0123 23:03:38.225831 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:03:38.225919 139974069698560 alphageometry.py:566] LM output (score=-2.681871): "l : T c k k l 16 ;"
I0123 23:03:38.225959 139974069698560 alphageometry.py:567] Translation: "l = on_tline l k c k"

I0123 23:03:38.226005 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l k c k ? cong j f j e"
I0123 23:03:38.226151 139974069698560 graph.py:498] 
I0123 23:03:38.226208 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l k c k ? cong j f j e
I0123 23:03:38.861279 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5745522975921631
I0123 23:03:39.825771 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9643559455871582
I0123 23:03:42.436315 139974069698560 ddar.py:60] Depth 3/1000 time = 2.6103599071502686
I0123 23:03:43.426793 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9902400970458984
I0123 23:03:44.422945 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9957187175750732
I0123 23:03:45.424278 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0002810955047607
I0123 23:03:46.570340 139974069698560 ddar.py:60] Depth 7/1000 time = 1.134319543838501
I0123 23:03:49.218401 139974069698560 ddar.py:60] Depth 8/1000 time = 2.6478805541992188
I0123 23:03:50.365132 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1423213481903076
I0123 23:03:50.366098 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:03:50.366158 139974069698560 alphageometry.py:566] LM output (score=-2.775024): "l : D b f b l 16 T b g f l 17 ;"
I0123 23:03:50.366195 139974069698560 alphageometry.py:567] Translation: "l = on_circle l b f, on_tline l f b g"

I0123 23:03:50.366244 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_circle l b f, on_tline l f b g ? cong j f j e"
I0123 23:03:50.366394 139974069698560 graph.py:498] 
I0123 23:03:50.366451 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_circle l b f, on_tline l f b g ? cong j f j e
I0123 23:03:51.116829 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6820075511932373
I0123 23:03:52.329899 139974069698560 ddar.py:60] Depth 2/1000 time = 1.2129218578338623
I0123 23:03:53.688961 139974069698560 ddar.py:60] Depth 3/1000 time = 1.358884334564209
I0123 23:03:56.530191 139974069698560 ddar.py:60] Depth 4/1000 time = 2.841031551361084
I0123 23:03:57.929607 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3990139961242676
I0123 23:03:59.322949 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3925623893737793
I0123 23:04:02.568161 139974069698560 ddar.py:60] Depth 7/1000 time = 3.230787992477417
I0123 23:04:04.114918 139974069698560 ddar.py:60] Depth 8/1000 time = 1.5465259552001953
I0123 23:04:05.731616 139974069698560 ddar.py:60] Depth 9/1000 time = 1.608628273010254
I0123 23:04:05.732663 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:04:05.732752 139974069698560 alphageometry.py:566] LM output (score=-2.783658): "l : T c g g l 16 ;"
I0123 23:04:05.732793 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g c g"

I0123 23:04:05.732855 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g c g ? cong j f j e"
I0123 23:04:05.733017 139974069698560 graph.py:498] 
I0123 23:04:05.733078 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g c g ? cong j f j e
I0123 23:04:06.376952 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5835323333740234
I0123 23:04:07.342124 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9650254249572754
I0123 23:04:09.890565 139974069698560 ddar.py:60] Depth 3/1000 time = 2.548276424407959
I0123 23:04:10.885217 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9944615364074707
I0123 23:04:11.884340 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9987592697143555
I0123 23:04:12.890652 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0056438446044922
I0123 23:04:14.071511 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1670491695404053
I0123 23:04:16.742949 139974069698560 ddar.py:60] Depth 8/1000 time = 2.6712543964385986
I0123 23:04:17.928645 139974069698560 ddar.py:60] Depth 9/1000 time = 1.181279182434082
I0123 23:04:17.929621 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:04:17.929712 139974069698560 alphageometry.py:566] LM output (score=-2.807408): "l : D b f f l 16 T b l k f 17 ;"
I0123 23:04:17.929752 139974069698560 alphageometry.py:567] Translation: "l = on_circle l f b, on_tline l b k f"

I0123 23:04:17.929794 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_circle l f b, on_tline l b k f ? cong j f j e"
I0123 23:04:17.929938 139974069698560 graph.py:498] 
I0123 23:04:17.929992 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_circle l f b, on_tline l b k f ? cong j f j e
I0123 23:04:18.657014 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6584649085998535
I0123 23:04:19.755156 139974069698560 ddar.py:60] Depth 2/1000 time = 1.097987174987793
I0123 23:04:20.919680 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1643285751342773
I0123 23:04:23.775715 139974069698560 ddar.py:60] Depth 4/1000 time = 2.855785846710205
I0123 23:04:25.077165 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3011462688446045
I0123 23:04:26.376942 139974069698560 ddar.py:60] Depth 6/1000 time = 1.299356460571289
I0123 23:04:27.675801 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2981500625610352
I0123 23:04:30.688302 139974069698560 ddar.py:60] Depth 8/1000 time = 2.9986538887023926
I0123 23:04:32.135200 139974069698560 ddar.py:60] Depth 9/1000 time = 1.4467365741729736
I0123 23:04:33.610286 139974069698560 ddar.py:60] Depth 10/1000 time = 1.4697716236114502
I0123 23:04:33.613080 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:04:33.613146 139974069698560 alphageometry.py:566] LM output (score=-2.841478): "l : T g j g l 16 ;"
I0123 23:04:33.613183 139974069698560 alphageometry.py:567] Translation: "l = on_tline l g g j"

I0123 23:04:33.613233 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g g j ? cong j f j e"
I0123 23:04:33.613381 139974069698560 graph.py:498] 
I0123 23:04:33.613439 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l g g j ? cong j f j e
I0123 23:04:34.254038 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5808939933776855
I0123 23:04:35.242801 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9886014461517334
I0123 23:04:37.801160 139974069698560 ddar.py:60] Depth 3/1000 time = 2.558180809020996
I0123 23:04:38.821793 139974069698560 ddar.py:60] Depth 4/1000 time = 1.0204358100891113
I0123 23:04:39.851767 139974069698560 ddar.py:60] Depth 5/1000 time = 1.029615879058838
I0123 23:04:40.888933 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0364699363708496
I0123 23:04:43.685498 139974069698560 ddar.py:60] Depth 7/1000 time = 2.7837183475494385
I0123 23:04:44.845227 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1595244407653809
I0123 23:04:46.014909 139974069698560 ddar.py:60] Depth 9/1000 time = 1.1652483940124512
I0123 23:04:46.015876 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:04:46.015945 139974069698560 alphageometry.py:566] LM output (score=-2.842586): "l : T b l d e 16 ;"
I0123 23:04:46.015984 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b d e"

I0123 23:04:46.016037 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l b d e ? cong j f j e"
I0123 23:04:46.016191 139974069698560 graph.py:498] 
I0123 23:04:46.016250 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l b d e ? cong j f j e
I0123 23:04:46.663428 139974069698560 ddar.py:60] Depth 1/1000 time = 0.586444616317749
I0123 23:04:47.629755 139974069698560 ddar.py:60] Depth 2/1000 time = 0.966172456741333
I0123 23:04:48.616634 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9867017269134521
I0123 23:04:51.118849 139974069698560 ddar.py:60] Depth 4/1000 time = 2.502032995223999
I0123 23:04:52.110801 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9915788173675537
I0123 23:04:53.107384 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9959168434143066
I0123 23:04:54.284117 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1627843379974365
I0123 23:04:56.975923 139974069698560 ddar.py:60] Depth 8/1000 time = 2.6916215419769287
I0123 23:04:58.161649 139974069698560 ddar.py:60] Depth 9/1000 time = 1.181586742401123
I0123 23:04:58.162618 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:04:58.162682 139974069698560 alphageometry.py:566] LM output (score=-2.904897): "l : T f h f l 16 ;"
I0123 23:04:58.162720 139974069698560 alphageometry.py:567] Translation: "l = on_tline l f f h"

I0123 23:04:58.162758 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l f f h ? cong j f j e"
I0123 23:04:58.162912 139974069698560 graph.py:498] 
I0123 23:04:58.162965 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_tline l f f h ? cong j f j e
I0123 23:04:58.812333 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5898339748382568
I0123 23:04:59.789611 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9771220684051514
I0123 23:05:00.772251 139974069698560 ddar.py:60] Depth 3/1000 time = 0.9824504852294922
I0123 23:05:03.379170 139974069698560 ddar.py:60] Depth 4/1000 time = 2.6067097187042236
I0123 23:05:04.371981 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9923856258392334
I0123 23:05:05.372147 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9994521141052246
I0123 23:05:06.523049 139974069698560 ddar.py:60] Depth 7/1000 time = 1.1388063430786133
I0123 23:05:07.653932 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1307055950164795
I0123 23:05:10.348175 139974069698560 ddar.py:60] Depth 9/1000 time = 2.6900293827056885
I0123 23:05:10.349124 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:05:10.349183 139974069698560 alphageometry.py:566] LM output (score=-2.932034): "l : D g l i l 16 ;"
I0123 23:05:10.349219 139974069698560 alphageometry.py:567] Translation: "l = on_bline l i g"

I0123 23:05:10.349265 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_bline l i g ? cong j f j e"
I0123 23:05:10.349410 139974069698560 graph.py:498] 
I0123 23:05:10.349466 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_circle k a c, on_circle k c a; l = on_bline l i g ? cong j f j e
I0123 23:05:11.064407 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6416580677032471
I0123 23:05:12.155139 139974069698560 ddar.py:60] Depth 2/1000 time = 1.0905771255493164
I0123 23:05:13.352250 139974069698560 ddar.py:60] Depth 3/1000 time = 1.196929693222046
I0123 23:05:14.603990 139974069698560 ddar.py:60] Depth 4/1000 time = 1.2515509128570557
I0123 23:05:17.400330 139974069698560 ddar.py:60] Depth 5/1000 time = 2.795975685119629
I0123 23:05:18.658908 139974069698560 ddar.py:60] Depth 6/1000 time = 1.2578494548797607
I0123 23:05:20.041084 139974069698560 ddar.py:60] Depth 7/1000 time = 1.3661823272705078
I0123 23:05:21.407956 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3666656017303467
I0123 23:05:24.372941 139974069698560 ddar.py:60] Depth 9/1000 time = 2.960275411605835
I0123 23:05:24.373989 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:05:24.374067 139974069698560 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C c d e 02 T b d b e 03 ; f : C b e f 04 D b e b f 05 ; g : C c e g 06 D c e c g 07 ; h : C a f h 08 D a f a h 09 ; i : C e h i 10 C f g i 11 ; j : D g j h j 12 D h j i j 13 ? D j f j e {F1} x00 k : T d g g k 14 ; x00
I0123 23:05:29.865588 139974069698560 alphageometry.py:566] LM output (score=-0.669514): "l : P d g k l 15 ;"
I0123 23:05:29.865749 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k d g"

I0123 23:05:29.865802 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l k d g ? cong j f j e"
I0123 23:05:29.865957 139974069698560 graph.py:498] 
I0123 23:05:29.866015 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l k d g ? cong j f j e
I0123 23:05:30.392419 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4837164878845215
I0123 23:05:31.191988 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7994329929351807
I0123 23:05:31.992469 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8003053665161133
I0123 23:05:34.352653 139974069698560 ddar.py:60] Depth 4/1000 time = 2.3600046634674072
I0123 23:05:35.166380 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8133089542388916
I0123 23:05:36.077253 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9020755290985107
I0123 23:05:36.955429 139974069698560 ddar.py:60] Depth 7/1000 time = 0.877995491027832
I0123 23:05:37.841504 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8823678493499756
I0123 23:05:37.842396 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:05:37.842464 139974069698560 alphageometry.py:566] LM output (score=-0.835940): "l : P d l g k 15 ;"
I0123 23:05:37.842503 139974069698560 alphageometry.py:567] Translation: "l = on_pline l d g k"

I0123 23:05:37.842543 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l d g k ? cong j f j e"
I0123 23:05:37.842681 139974069698560 graph.py:498] 
I0123 23:05:37.842736 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l d g k ? cong j f j e
I0123 23:05:38.357520 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4723508358001709
I0123 23:05:40.630132 139974069698560 ddar.py:60] Depth 2/1000 time = 2.2724547386169434
I0123 23:05:41.418422 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7881135940551758
I0123 23:05:42.214634 139974069698560 ddar.py:60] Depth 4/1000 time = 0.7960574626922607
I0123 23:05:43.013148 139974069698560 ddar.py:60] Depth 5/1000 time = 0.7981433868408203
I0123 23:05:43.923742 139974069698560 ddar.py:60] Depth 6/1000 time = 0.90177321434021
I0123 23:05:46.297420 139974069698560 ddar.py:60] Depth 7/1000 time = 2.3734993934631348
I0123 23:05:47.181833 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8807559013366699
I0123 23:05:47.182712 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:05:47.182768 139974069698560 alphageometry.py:566] LM output (score=-1.057718): "l : P d g k l 15 P d l g k 16 ;"
I0123 23:05:47.182804 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k d g, on_pline l d g k"

I0123 23:05:47.182843 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l k d g, on_pline l d g k ? cong j f j e"
I0123 23:05:47.182982 139974069698560 graph.py:498] 
I0123 23:05:47.183036 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l k d g, on_pline l d g k ? cong j f j e
I0123 23:05:47.796174 139974069698560 ddar.py:60] Depth 1/1000 time = 0.566892147064209
I0123 23:05:48.878591 139974069698560 ddar.py:60] Depth 2/1000 time = 1.0822646617889404
I0123 23:05:51.535697 139974069698560 ddar.py:60] Depth 3/1000 time = 2.6569175720214844
I0123 23:05:52.664817 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1289381980895996
I0123 23:05:53.791829 139974069698560 ddar.py:60] Depth 5/1000 time = 1.126563310623169
I0123 23:05:55.055983 139974069698560 ddar.py:60] Depth 6/1000 time = 1.253211498260498
I0123 23:05:57.751165 139974069698560 ddar.py:60] Depth 7/1000 time = 2.6949880123138428
I0123 23:05:58.990079 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2322824001312256
I0123 23:05:58.991062 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:05:58.991130 139974069698560 alphageometry.py:566] LM output (score=-2.249448): "l : P b l g k 15 ;"
I0123 23:05:58.991168 139974069698560 alphageometry.py:567] Translation: "l = on_pline l b g k"

I0123 23:05:58.991207 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l b g k ? cong j f j e"
I0123 23:05:58.991343 139974069698560 graph.py:498] 
I0123 23:05:58.991395 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l b g k ? cong j f j e
I0123 23:05:59.501845 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4674403667449951
I0123 23:06:00.278969 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7769889831542969
I0123 23:06:01.065598 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7864644527435303
I0123 23:06:01.856028 139974069698560 ddar.py:60] Depth 4/1000 time = 0.7902572154998779
I0123 23:06:04.129677 139974069698560 ddar.py:60] Depth 5/1000 time = 2.2732627391815186
I0123 23:06:05.035702 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8972859382629395
I0123 23:06:05.909590 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8737082481384277
I0123 23:06:06.790037 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8767228126525879
I0123 23:06:06.790917 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:06:06.790982 139974069698560 alphageometry.py:566] LM output (score=-2.279554): "l : C d f l 15 D d l f l 16 ;"
I0123 23:06:06.791021 139974069698560 alphageometry.py:567] Translation: "l = on_line l d f, on_bline l f d"

I0123 23:06:06.791060 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l d f, on_bline l f d ? cong j f j e"
I0123 23:06:06.791197 139974069698560 graph.py:498] 
I0123 23:06:06.791250 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l d f, on_bline l f d ? cong j f j e
I0123 23:06:07.407166 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5638501644134521
I0123 23:06:10.059546 139974069698560 ddar.py:60] Depth 2/1000 time = 2.652226448059082
I0123 23:06:11.235446 139974069698560 ddar.py:60] Depth 3/1000 time = 1.1757047176361084
I0123 23:06:12.421877 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1862399578094482
I0123 23:06:15.136942 139974069698560 ddar.py:60] Depth 5/1000 time = 2.7148728370666504
I0123 23:06:16.320756 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1833767890930176
I0123 23:06:17.631143 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2987110614776611
I0123 23:06:18.877314 139974069698560 ddar.py:60] Depth 8/1000 time = 1.2459814548492432
I0123 23:06:21.633584 139974069698560 ddar.py:60] Depth 9/1000 time = 2.7494566440582275
I0123 23:06:21.634703 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:06:21.634781 139974069698560 alphageometry.py:566] LM output (score=-2.395449): "l : P g k i l 15 ;"
I0123 23:06:21.634819 139974069698560 alphageometry.py:567] Translation: "l = on_pline l i g k"

I0123 23:06:21.634859 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l i g k ? cong j f j e"
I0123 23:06:21.634990 139974069698560 graph.py:498] 
I0123 23:06:21.635043 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l i g k ? cong j f j e
I0123 23:06:22.146211 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4689033031463623
I0123 23:06:22.921484 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7751412391662598
I0123 23:06:23.703858 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7822067737579346
I0123 23:06:24.493039 139974069698560 ddar.py:60] Depth 4/1000 time = 0.7890172004699707
I0123 23:06:26.774221 139974069698560 ddar.py:60] Depth 5/1000 time = 2.280803918838501
I0123 23:06:27.668353 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8856146335601807
I0123 23:06:28.540298 139974069698560 ddar.py:60] Depth 7/1000 time = 0.871769905090332
I0123 23:06:29.425946 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8818995952606201
I0123 23:06:29.426825 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:06:29.426892 139974069698560 alphageometry.py:566] LM output (score=-2.567050): "l : C b c l 15 D b l c l 16 ;"
I0123 23:06:29.426931 139974069698560 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 23:06:29.426971 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l b c, on_bline l c b ? cong j f j e"
I0123 23:06:29.427111 139974069698560 graph.py:498] 
I0123 23:06:29.427164 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l b c, on_bline l c b ? cong j f j e
I0123 23:06:30.018453 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5388143062591553
I0123 23:06:32.580070 139974069698560 ddar.py:60] Depth 2/1000 time = 2.5614688396453857
I0123 23:06:33.732558 139974069698560 ddar.py:60] Depth 3/1000 time = 1.152315616607666
I0123 23:06:34.903934 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1711993217468262
I0123 23:06:37.592379 139974069698560 ddar.py:60] Depth 5/1000 time = 2.688047409057617
I0123 23:06:38.849427 139974069698560 ddar.py:60] Depth 6/1000 time = 1.2451200485229492
I0123 23:06:40.061029 139974069698560 ddar.py:60] Depth 7/1000 time = 1.211418628692627
I0123 23:06:42.792918 139974069698560 ddar.py:60] Depth 8/1000 time = 2.7267675399780273
I0123 23:06:42.793949 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:06:42.794019 139974069698560 alphageometry.py:566] LM output (score=-2.591533): "l : P f l g k 15 ;"
I0123 23:06:42.794060 139974069698560 alphageometry.py:567] Translation: "l = on_pline l f g k"

I0123 23:06:42.794102 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l f g k ? cong j f j e"
I0123 23:06:42.794238 139974069698560 graph.py:498] 
I0123 23:06:42.794289 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l f g k ? cong j f j e
I0123 23:06:43.305633 139974069698560 ddar.py:60] Depth 1/1000 time = 0.46852660179138184
I0123 23:06:44.082195 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7764153480529785
I0123 23:06:44.863425 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7810573577880859
I0123 23:06:45.652843 139974069698560 ddar.py:60] Depth 4/1000 time = 0.7892529964447021
I0123 23:06:47.948507 139974069698560 ddar.py:60] Depth 5/1000 time = 2.2953052520751953
I0123 23:06:48.850405 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8932812213897705
I0123 23:06:49.729818 139974069698560 ddar.py:60] Depth 7/1000 time = 0.879235029220581
I0123 23:06:50.615484 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8819689750671387
I0123 23:06:50.616369 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:06:50.616434 139974069698560 alphageometry.py:566] LM output (score=-2.699988): "l : P g k h l 15 ;"
I0123 23:06:50.616472 139974069698560 alphageometry.py:567] Translation: "l = on_pline l h g k"

I0123 23:06:50.616512 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l h g k ? cong j f j e"
I0123 23:06:50.616647 139974069698560 graph.py:498] 
I0123 23:06:50.616699 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l h g k ? cong j f j e
I0123 23:06:51.134852 139974069698560 ddar.py:60] Depth 1/1000 time = 0.47626376152038574
I0123 23:06:51.906490 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7714986801147461
I0123 23:06:54.209284 139974069698560 ddar.py:60] Depth 3/1000 time = 2.3026256561279297
I0123 23:06:55.009527 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8000564575195312
I0123 23:06:55.803916 139974069698560 ddar.py:60] Depth 5/1000 time = 0.7939989566802979
I0123 23:06:56.720862 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9083127975463867
I0123 23:06:59.129434 139974069698560 ddar.py:60] Depth 7/1000 time = 2.4083895683288574
I0123 23:07:00.018115 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8847815990447998
I0123 23:07:00.018990 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:07:00.019058 139974069698560 alphageometry.py:566] LM output (score=-2.705243): "l : C b f l 15 D b l f l 16 ;"
I0123 23:07:00.019098 139974069698560 alphageometry.py:567] Translation: "l = on_line l b f, on_bline l f b"

I0123 23:07:00.019138 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l b f, on_bline l f b ? cong j f j e"
I0123 23:07:00.019277 139974069698560 graph.py:498] 
I0123 23:07:00.019330 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l b f, on_bline l f b ? cong j f j e
I0123 23:07:00.692283 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6177141666412354
I0123 23:07:01.795758 139974069698560 ddar.py:60] Depth 2/1000 time = 1.1032953262329102
I0123 23:07:04.486399 139974069698560 ddar.py:60] Depth 3/1000 time = 2.6904523372650146
I0123 23:07:05.654422 139974069698560 ddar.py:60] Depth 4/1000 time = 1.1678211688995361
I0123 23:07:06.819607 139974069698560 ddar.py:60] Depth 5/1000 time = 1.1649916172027588
I0123 23:07:09.505230 139974069698560 ddar.py:60] Depth 6/1000 time = 2.6846163272857666
I0123 23:07:10.796450 139974069698560 ddar.py:60] Depth 7/1000 time = 1.2809817790985107
I0123 23:07:13.591359 139974069698560 ddar.py:60] Depth 8/1000 time = 2.7947113513946533
I0123 23:07:14.853020 139974069698560 ddar.py:60] Depth 9/1000 time = 1.2553091049194336
I0123 23:07:14.854169 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:07:14.854238 139974069698560 alphageometry.py:566] LM output (score=-2.788301): "l : C h i l 15 D h l i l 16 ;"
I0123 23:07:14.854276 139974069698560 alphageometry.py:567] Translation: "l = on_line l h i, on_bline l i h"

I0123 23:07:14.854315 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l h i, on_bline l i h ? cong j f j e"
I0123 23:07:14.854453 139974069698560 graph.py:498] 
I0123 23:07:14.854506 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l h i, on_bline l i h ? cong j f j e
I0123 23:07:15.560339 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6534171104431152
I0123 23:07:18.297513 139974069698560 ddar.py:60] Depth 2/1000 time = 2.7369987964630127
I0123 23:07:19.578257 139974069698560 ddar.py:60] Depth 3/1000 time = 1.280550241470337
I0123 23:07:20.934563 139974069698560 ddar.py:60] Depth 4/1000 time = 1.356116771697998
I0123 23:07:23.846867 139974069698560 ddar.py:60] Depth 5/1000 time = 2.9121174812316895
I0123 23:07:25.172219 139974069698560 ddar.py:60] Depth 6/1000 time = 1.3251543045043945
I0123 23:07:28.042306 139974069698560 ddar.py:60] Depth 7/1000 time = 2.869645833969116
I0123 23:07:29.495980 139974069698560 ddar.py:60] Depth 8/1000 time = 1.4383177757263184
I0123 23:07:29.503112 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:07:29.503188 139974069698560 alphageometry.py:566] LM output (score=-2.844940): "l : P b l c e 15 ;"
I0123 23:07:29.503228 139974069698560 alphageometry.py:567] Translation: "l = on_pline l b c e"

I0123 23:07:29.503268 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l b c e ? cong j f j e"
I0123 23:07:29.503406 139974069698560 graph.py:498] 
I0123 23:07:29.503461 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l b c e ? cong j f j e
I0123 23:07:30.027751 139974069698560 ddar.py:60] Depth 1/1000 time = 0.48161935806274414
I0123 23:07:30.828275 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8003814220428467
I0123 23:07:33.164787 139974069698560 ddar.py:60] Depth 3/1000 time = 2.3363332748413086
I0123 23:07:33.974734 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8097589015960693
I0123 23:07:34.785857 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8107447624206543
I0123 23:07:35.703717 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9090390205383301
I0123 23:07:38.160511 139974069698560 ddar.py:60] Depth 7/1000 time = 2.4566290378570557
I0123 23:07:39.060847 139974069698560 ddar.py:60] Depth 8/1000 time = 0.89640212059021
I0123 23:07:39.061728 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:07:39.061788 139974069698560 alphageometry.py:566] LM output (score=-2.856995): "l : T i j i l 15 ;"
I0123 23:07:39.061824 139974069698560 alphageometry.py:567] Translation: "l = on_tline l i i j"

I0123 23:07:39.061865 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_tline l i i j ? cong j f j e"
I0123 23:07:39.062033 139974069698560 graph.py:498] 
I0123 23:07:39.062093 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_tline l i i j ? cong j f j e
I0123 23:07:39.558100 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4538300037384033
I0123 23:07:40.349364 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7911045551300049
I0123 23:07:41.147515 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7979481220245361
I0123 23:07:41.954897 139974069698560 ddar.py:60] Depth 4/1000 time = 0.807183027267456
I0123 23:07:44.390066 139974069698560 ddar.py:60] Depth 5/1000 time = 2.434741497039795
I0123 23:07:45.312874 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9125285148620605
I0123 23:07:46.202198 139974069698560 ddar.py:60] Depth 7/1000 time = 0.889124870300293
I0123 23:07:47.100968 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8950331211090088
I0123 23:07:47.101853 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:07:47.101919 139974069698560 alphageometry.py:566] LM output (score=-2.952810): "l : P g k g l 15 ;"
I0123 23:07:47.101957 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P g k g l"

I0123 23:07:47.101996 139974069698560 alphageometry.py:566] LM output (score=-2.968754): "l : P c l g k 15 ;"
I0123 23:07:47.102026 139974069698560 alphageometry.py:567] Translation: "l = on_pline l c g k"

I0123 23:07:47.102070 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l c g k ? cong j f j e"
I0123 23:07:47.102211 139974069698560 graph.py:498] 
I0123 23:07:47.102270 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l c g k ? cong j f j e
I0123 23:07:47.643252 139974069698560 ddar.py:60] Depth 1/1000 time = 0.49810171127319336
I0123 23:07:48.593534 139974069698560 ddar.py:60] Depth 2/1000 time = 0.9501307010650635
I0123 23:07:51.057823 139974069698560 ddar.py:60] Depth 3/1000 time = 2.464097738265991
I0123 23:07:52.029057 139974069698560 ddar.py:60] Depth 4/1000 time = 0.9710433483123779
I0123 23:07:53.005269 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9758093357086182
I0123 23:07:54.051915 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0364024639129639
I0123 23:07:56.643299 139974069698560 ddar.py:60] Depth 7/1000 time = 2.591200113296509
I0123 23:07:57.659683 139974069698560 ddar.py:60] Depth 8/1000 time = 1.0125043392181396
I0123 23:07:57.660595 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:07:57.660676 139974069698560 alphageometry.py:566] LM output (score=-2.969826): "l : C d e l 15 D d l e l 16 ;"
I0123 23:07:57.660714 139974069698560 alphageometry.py:567] Translation: "l = on_line l d e, on_bline l e d"

I0123 23:07:57.660756 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l d e, on_bline l e d ? cong j f j e"
I0123 23:07:57.660901 139974069698560 graph.py:498] 
I0123 23:07:57.660955 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l d e, on_bline l e d ? cong j f j e
I0123 23:07:58.409431 139974069698560 ddar.py:60] Depth 1/1000 time = 0.6938979625701904
I0123 23:08:01.409252 139974069698560 ddar.py:60] Depth 2/1000 time = 2.9996371269226074
I0123 23:08:02.699427 139974069698560 ddar.py:60] Depth 3/1000 time = 1.2899556159973145
I0123 23:08:05.692243 139974069698560 ddar.py:60] Depth 4/1000 time = 2.992534875869751
I0123 23:08:06.994326 139974069698560 ddar.py:60] Depth 5/1000 time = 1.3018949031829834
I0123 23:08:08.301229 139974069698560 ddar.py:60] Depth 6/1000 time = 1.306386947631836
I0123 23:08:11.237516 139974069698560 ddar.py:60] Depth 7/1000 time = 2.9256839752197266
I0123 23:08:12.591934 139974069698560 ddar.py:60] Depth 8/1000 time = 1.3542251586914062
I0123 23:08:15.505261 139974069698560 ddar.py:60] Depth 9/1000 time = 2.906201124191284
I0123 23:08:15.506400 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:08:15.506483 139974069698560 alphageometry.py:566] LM output (score=-3.002411): "l : C b i l 15 D b l i l 16 ;"
I0123 23:08:15.506524 139974069698560 alphageometry.py:567] Translation: "l = on_line l b i, on_bline l i b"

I0123 23:08:15.506576 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l b i, on_bline l i b ? cong j f j e"
I0123 23:08:15.506728 139974069698560 graph.py:498] 
I0123 23:08:15.506784 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l b i, on_bline l i b ? cong j f j e
I0123 23:08:16.090390 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5312561988830566
I0123 23:08:16.976860 139974069698560 ddar.py:60] Depth 2/1000 time = 0.88631272315979
I0123 23:08:17.865864 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8888213634490967
I0123 23:08:20.409637 139974069698560 ddar.py:60] Depth 4/1000 time = 2.543591022491455
I0123 23:08:21.314525 139974069698560 ddar.py:60] Depth 5/1000 time = 0.9044656753540039
I0123 23:08:22.332472 139974069698560 ddar.py:60] Depth 6/1000 time = 1.0081231594085693
I0123 23:08:23.298634 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9658687114715576
I0123 23:08:25.904666 139974069698560 ddar.py:60] Depth 8/1000 time = 2.601057767868042
I0123 23:08:25.905693 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:08:25.905753 139974069698560 alphageometry.py:566] LM output (score=-3.091040): "l : P b l e g 15 ;"
I0123 23:08:25.905791 139974069698560 alphageometry.py:567] Translation: "l = on_pline l b e g"

I0123 23:08:25.905837 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l b e g ? cong j f j e"
I0123 23:08:25.905985 139974069698560 graph.py:498] 
I0123 23:08:25.906044 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l b e g ? cong j f j e
I0123 23:08:26.425843 139974069698560 ddar.py:60] Depth 1/1000 time = 0.477156400680542
I0123 23:08:27.228797 139974069698560 ddar.py:60] Depth 2/1000 time = 0.802818775177002
I0123 23:08:28.044402 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8154301643371582
I0123 23:08:28.859347 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8147714138031006
I0123 23:08:29.679482 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8197529315948486
I0123 23:08:32.164512 139974069698560 ddar.py:60] Depth 6/1000 time = 2.4761099815368652
I0123 23:08:33.054005 139974069698560 ddar.py:60] Depth 7/1000 time = 0.889317512512207
I0123 23:08:33.958163 139974069698560 ddar.py:60] Depth 8/1000 time = 0.9004359245300293
I0123 23:08:33.959016 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:08:33.959077 139974069698560 alphageometry.py:566] LM output (score=-3.120310): "l : C b h l 15 D b l h l 16 ;"
I0123 23:08:33.959115 139974069698560 alphageometry.py:567] Translation: "l = on_line l b h, on_bline l h b"

I0123 23:08:33.959152 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l b h, on_bline l h b ? cong j f j e"
I0123 23:08:33.959289 139974069698560 graph.py:498] 
I0123 23:08:33.959344 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_line l b h, on_bline l h b ? cong j f j e
I0123 23:08:34.553434 139974069698560 ddar.py:60] Depth 1/1000 time = 0.5417745113372803
I0123 23:08:35.526542 139974069698560 ddar.py:60] Depth 2/1000 time = 0.972919225692749
I0123 23:08:38.110197 139974069698560 ddar.py:60] Depth 3/1000 time = 2.5834691524505615
I0123 23:08:39.125919 139974069698560 ddar.py:60] Depth 4/1000 time = 1.015528678894043
I0123 23:08:40.151397 139974069698560 ddar.py:60] Depth 5/1000 time = 1.0250420570373535
I0123 23:08:41.291532 139974069698560 ddar.py:60] Depth 6/1000 time = 1.1287086009979248
I0123 23:08:44.033318 139974069698560 ddar.py:60] Depth 7/1000 time = 2.7414932250976562
I0123 23:08:45.142219 139974069698560 ddar.py:60] Depth 8/1000 time = 1.1024951934814453
I0123 23:08:45.143296 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:08:45.143366 139974069698560 alphageometry.py:566] LM output (score=-3.142230): "l : P g k j l 15 ;"
I0123 23:08:45.143404 139974069698560 alphageometry.py:567] Translation: "l = on_pline l j g k"

I0123 23:08:45.143455 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l j g k ? cong j f j e"
I0123 23:08:45.143610 139974069698560 graph.py:498] 
I0123 23:08:45.143667 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l j g k ? cong j f j e
I0123 23:08:45.657991 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4702415466308594
I0123 23:08:46.439371 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7812366485595703
I0123 23:08:47.218048 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7785170078277588
I0123 23:08:49.530310 139974069698560 ddar.py:60] Depth 4/1000 time = 2.3120970726013184
I0123 23:08:50.329811 139974069698560 ddar.py:60] Depth 5/1000 time = 0.7991201877593994
I0123 23:08:51.233253 139974069698560 ddar.py:60] Depth 6/1000 time = 0.8947048187255859
I0123 23:08:52.100319 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8668913841247559
I0123 23:08:52.985236 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8810055255889893
I0123 23:08:52.986111 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:08:52.986177 139974069698560 alphageometry.py:566] LM output (score=-3.167951): "l : P f g k l 15 ;"
I0123 23:08:52.986216 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k f g"

I0123 23:08:52.986254 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l k f g ? cong j f j e"
I0123 23:08:52.986414 139974069698560 graph.py:498] 
I0123 23:08:52.986470 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l k f g ? cong j f j e
I0123 23:08:55.103545 139974069698560 ddar.py:60] Depth 1/1000 time = 2.0746042728424072
I0123 23:08:55.901854 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7981302738189697
I0123 23:08:56.701319 139974069698560 ddar.py:60] Depth 3/1000 time = 0.7992780208587646
I0123 23:08:57.508644 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8071498870849609
I0123 23:08:58.318569 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8095827102661133
I0123 23:09:00.903403 139974069698560 ddar.py:60] Depth 6/1000 time = 2.575308322906494
I0123 23:09:01.795523 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8918511867523193
I0123 23:09:02.694775 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8955273628234863
I0123 23:09:02.695685 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:09:02.695775 139974069698560 alphageometry.py:566] LM output (score=-3.209409): "l : T b c b l 15 ;"
I0123 23:09:02.695814 139974069698560 alphageometry.py:567] Translation: "l = on_tline l b b c"

I0123 23:09:02.695880 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_tline l b b c ? cong j f j e"
I0123 23:09:02.696047 139974069698560 graph.py:498] 
I0123 23:09:02.696106 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_tline l b b c ? cong j f j e
I0123 23:09:03.202000 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4627559185028076
I0123 23:09:04.020398 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8182504177093506
I0123 23:09:04.880377 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8598172664642334
I0123 23:09:07.345755 139974069698560 ddar.py:60] Depth 4/1000 time = 2.465216636657715
I0123 23:09:08.230836 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8847057819366455
I0123 23:09:09.200653 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9581060409545898
I0123 23:09:10.127618 139974069698560 ddar.py:60] Depth 7/1000 time = 0.926790714263916
I0123 23:09:12.636303 139974069698560 ddar.py:60] Depth 8/1000 time = 2.504960775375366
I0123 23:09:12.637189 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:09:12.637245 139974069698560 alphageometry.py:566] LM output (score=-3.235451): "l : C b f l 15 P b e b l 16 ;"
I0123 23:09:12.637279 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b e b l"

I0123 23:09:12.637314 139974069698560 alphageometry.py:566] LM output (score=-3.397803): "l : P g k g l 15 T c g g l 16 ;"
I0123 23:09:12.637343 139974069698560 alphageometry.py:567] Translation: "ERROR: Invalid predicate P g k g l"

I0123 23:09:12.637375 139974069698560 alphageometry.py:566] LM output (score=-3.401877): "l : P b l d e 15 ;"
I0123 23:09:12.637401 139974069698560 alphageometry.py:567] Translation: "l = on_pline l b d e"

I0123 23:09:12.637433 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l b d e ? cong j f j e"
I0123 23:09:12.637563 139974069698560 graph.py:498] 
I0123 23:09:12.637630 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l b d e ? cong j f j e
I0123 23:09:13.163207 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4833672046661377
I0123 23:09:13.959707 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7963354587554932
I0123 23:09:14.772869 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8129959106445312
I0123 23:09:15.584779 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8117372989654541
I0123 23:09:16.406794 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8216259479522705
I0123 23:09:18.979306 139974069698560 ddar.py:60] Depth 6/1000 time = 2.563584327697754
I0123 23:09:19.875210 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8956711292266846
I0123 23:09:20.770764 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8914568424224854
I0123 23:09:20.771646 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:09:20.771742 139974069698560 alphageometry.py:566] LM output (score=-3.498469): "l : T b c c l 15 ;"
I0123 23:09:20.771781 139974069698560 alphageometry.py:567] Translation: "l = on_tline l c b c"

I0123 23:09:20.771846 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_tline l c b c ? cong j f j e"
I0123 23:09:20.772024 139974069698560 graph.py:498] 
I0123 23:09:20.772090 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_tline l c b c ? cong j f j e
I0123 23:09:21.281085 139974069698560 ddar.py:60] Depth 1/1000 time = 0.46614789962768555
I0123 23:09:22.098359 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8171074390411377
I0123 23:09:24.609869 139974069698560 ddar.py:60] Depth 3/1000 time = 2.5113401412963867
I0123 23:09:25.488496 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8784322738647461
I0123 23:09:26.376026 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8871657848358154
I0123 23:09:27.353608 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9657034873962402
I0123 23:09:28.285755 139974069698560 ddar.py:60] Depth 7/1000 time = 0.9319603443145752
I0123 23:09:30.824059 139974069698560 ddar.py:60] Depth 8/1000 time = 2.5342931747436523
I0123 23:09:30.824935 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:09:30.824994 139974069698560 alphageometry.py:566] LM output (score=-3.502765): "l : P c l e f 15 ;"
I0123 23:09:30.825029 139974069698560 alphageometry.py:567] Translation: "l = on_pline l c e f"

I0123 23:09:30.825068 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l c e f ? cong j f j e"
I0123 23:09:30.825202 139974069698560 graph.py:498] 
I0123 23:09:30.825255 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l c e f ? cong j f j e
I0123 23:09:31.331063 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4633016586303711
I0123 23:09:32.138475 139974069698560 ddar.py:60] Depth 2/1000 time = 0.8072693347930908
I0123 23:09:32.953086 139974069698560 ddar.py:60] Depth 3/1000 time = 0.8144185543060303
I0123 23:09:33.775110 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8218615055084229
I0123 23:09:36.265978 139974069698560 ddar.py:60] Depth 5/1000 time = 2.490473508834839
I0123 23:09:37.193269 139974069698560 ddar.py:60] Depth 6/1000 time = 0.9179449081420898
I0123 23:09:38.084431 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8909759521484375
I0123 23:09:38.987737 139974069698560 ddar.py:60] Depth 8/1000 time = 0.8995745182037354
I0123 23:09:38.988725 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:09:38.988817 139974069698560 alphageometry.py:566] LM output (score=-3.544158): "l : P b c h l 15 ;"
I0123 23:09:38.988856 139974069698560 alphageometry.py:567] Translation: "l = on_pline l h b c"

I0123 23:09:38.988915 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l h b c ? cong j f j e"
I0123 23:09:38.989089 139974069698560 graph.py:498] 
I0123 23:09:38.989155 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l h b c ? cong j f j e
I0123 23:09:39.501521 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4689812660217285
I0123 23:09:40.300435 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7987575531005859
I0123 23:09:42.741178 139974069698560 ddar.py:60] Depth 3/1000 time = 2.4405436515808105
I0123 23:09:43.550189 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8088228702545166
I0123 23:09:44.367883 139974069698560 ddar.py:60] Depth 5/1000 time = 0.8173353672027588
I0123 23:09:45.305363 139974069698560 ddar.py:60] Depth 6/1000 time = 0.92787766456604
I0123 23:09:46.204607 139974069698560 ddar.py:60] Depth 7/1000 time = 0.8990683555603027
I0123 23:09:48.671679 139974069698560 ddar.py:60] Depth 8/1000 time = 2.463331699371338
I0123 23:09:48.672546 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:09:48.672613 139974069698560 alphageometry.py:566] LM output (score=-3.580102): "l : P c g k l 15 ;"
I0123 23:09:48.672652 139974069698560 alphageometry.py:567] Translation: "l = on_pline l k c g"

I0123 23:09:48.672691 139974069698560 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l k c g ? cong j f j e"
I0123 23:09:48.672828 139974069698560 graph.py:498] 
I0123 23:09:48.672884 139974069698560 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = lc_tangent e b d, on_line e c d; f = mirror f e b; g = mirror g e c; h = mirror h f a; i = on_line i h e, on_line i g f; j = circle j i h g; k = on_tline k g d g; l = on_pline l k c g ? cong j f j e
I0123 23:09:49.191127 139974069698560 ddar.py:60] Depth 1/1000 time = 0.4753074645996094
I0123 23:09:49.985891 139974069698560 ddar.py:60] Depth 2/1000 time = 0.7946341037750244
I0123 23:09:50.788941 139974069698560 ddar.py:60] Depth 3/1000 time = 0.802884578704834
I0123 23:09:51.603671 139974069698560 ddar.py:60] Depth 4/1000 time = 0.8145554065704346
I0123 23:09:51.604085 139974069698560 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 23:09:51.604141 139974069698560 alphageometry.py:585] Timeout.
