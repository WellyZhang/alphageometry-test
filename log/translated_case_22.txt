I0123 14:02:31.243270 140012029288448 inference_utils.py:69] Parsing gin configuration.
I0123 14:02:31.243383 140012029288448 inference_utils.py:71] Added Gin search path meliad_lib/meliad/transformer/configs
I0123 14:02:31.243597 140012029288448 inference_utils.py:74] Loading Gin config file base_htrans.gin
I0123 14:02:31.243634 140012029288448 inference_utils.py:74] Loading Gin config file size/medium_150M.gin
I0123 14:02:31.243664 140012029288448 inference_utils.py:74] Loading Gin config file options/positions_t5.gin
I0123 14:02:31.243693 140012029288448 inference_utils.py:74] Loading Gin config file options/lr_cosine_decay.gin
I0123 14:02:31.243720 140012029288448 inference_utils.py:74] Loading Gin config file options/seq_1024_nocache.gin
I0123 14:02:31.243746 140012029288448 inference_utils.py:74] Loading Gin config file geometry_150M_generate.gin
I0123 14:02:31.243772 140012029288448 inference_utils.py:76] Overriding Gin param DecoderOnlyLanguageModelGenerate.output_token_losses=True
I0123 14:02:31.243798 140012029288448 inference_utils.py:76] Overriding Gin param TransformerTaskConfig.batch_size=32
I0123 14:02:31.243824 140012029288448 inference_utils.py:76] Overriding Gin param TransformerTaskConfig.sequence_length=128
I0123 14:02:31.243849 140012029288448 inference_utils.py:76] Overriding Gin param Trainer.restore_state_variables=False
I0123 14:02:31.243897 140012029288448 resource_reader.py:50] system_path_file_exists:base_htrans.gin
E0123 14:02:31.244039 140012029288448 resource_reader.py:55] Path not found: base_htrans.gin
I0123 14:02:31.244260 140012029288448 resource_reader.py:50] system_path_file_exists:trainer_configuration.gin
E0123 14:02:31.244368 140012029288448 resource_reader.py:55] Path not found: trainer_configuration.gin
I0123 14:02:31.250776 140012029288448 resource_reader.py:50] system_path_file_exists:size/medium_150M.gin
E0123 14:02:31.250905 140012029288448 resource_reader.py:55] Path not found: size/medium_150M.gin
I0123 14:02:31.251235 140012029288448 resource_reader.py:50] system_path_file_exists:options/positions_t5.gin
E0123 14:02:31.251340 140012029288448 resource_reader.py:55] Path not found: options/positions_t5.gin
I0123 14:02:31.251623 140012029288448 resource_reader.py:50] system_path_file_exists:options/lr_cosine_decay.gin
E0123 14:02:31.251724 140012029288448 resource_reader.py:55] Path not found: options/lr_cosine_decay.gin
I0123 14:02:31.252134 140012029288448 resource_reader.py:50] system_path_file_exists:options/seq_1024_nocache.gin
E0123 14:02:31.252234 140012029288448 resource_reader.py:55] Path not found: options/seq_1024_nocache.gin
I0123 14:02:31.256017 140012029288448 training_loop.py:334] ==== Training loop: initializing model ====
I0123 14:02:31.357493 140012029288448 xla_bridge.py:660] Unable to initialize backend 'rocm': NOT_FOUND: Could not find registered platform with name: "rocm". Available platform names are: CUDA
I0123 14:02:31.358645 140012029288448 xla_bridge.py:660] Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
I0123 14:02:31.369421 140012029288448 training_loop.py:335] Process 0 of 1
I0123 14:02:31.369514 140012029288448 training_loop.py:336] Local device count = 1
I0123 14:02:31.369583 140012029288448 training_loop.py:337] Number of replicas = 1
I0123 14:02:31.369637 140012029288448 training_loop.py:339] Using random number seed 42
I0123 14:02:31.867116 140012029288448 training_loop.py:359] Initializing the model.
I0123 14:02:32.293131 140012029288448 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.293371 140012029288448 decoder_stack.py:316] dstack: scanning over 1 windows.
I0123 14:02:32.293473 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 14:02:32.293549 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 14:02:32.293626 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 14:02:32.293716 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 14:02:32.293788 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 14:02:32.293857 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 14:02:32.293924 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 14:02:32.293991 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 14:02:32.294058 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 14:02:32.294127 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 14:02:32.294196 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 14:02:32.294263 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 14:02:32.294302 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.294347 140012029288448 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 14:02:32.294459 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.294498 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.294528 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.296517 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.301712 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.313009 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.313344 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.317762 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:32.328789 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.328851 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.328890 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.328924 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.328989 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.330215 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.330298 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.331019 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.333519 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.339740 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.341071 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.341156 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.341192 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.341255 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.341384 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.341727 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.341780 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.343703 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.343807 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.346702 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.346783 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:32.347310 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:32.357646 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.366584 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.366688 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.366996 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.367079 140012029288448 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 14:02:32.367190 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.367230 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.367263 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.369125 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.371659 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.377284 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.377542 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.380211 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:32.384172 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.384229 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.384265 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.384297 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.384359 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.384933 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.385010 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.385383 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.386177 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.388719 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.389350 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.389432 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.389468 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.389528 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.389662 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.389994 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.390039 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.392000 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.392093 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.394637 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.394721 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:32.395161 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:32.397486 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.399407 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.399505 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.399799 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.399879 140012029288448 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 14:02:32.399990 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.400029 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.400061 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.402325 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.404728 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.410413 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.410683 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.413364 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:32.417218 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.417276 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.417313 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.417346 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.417409 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.417983 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.418061 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.418428 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.419209 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.421766 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.422450 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.422529 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.422566 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.422625 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.422757 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.423087 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.423131 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.425055 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.425153 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.427711 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.427801 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:32.428300 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:32.430613 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.432555 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.432651 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.432953 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.433034 140012029288448 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 14:02:32.433145 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.433185 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.433218 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.435157 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.437569 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.443296 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.443567 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.446247 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:32.450090 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.450150 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.450186 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.450218 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.450280 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.450846 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.450923 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.451289 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.452094 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.454692 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.455326 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.455404 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.455441 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.455502 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.455628 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.455959 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.456004 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.457934 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.458030 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.460637 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.460722 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:32.461161 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:32.463461 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.465383 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.465479 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.465788 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.465870 140012029288448 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 14:02:32.465980 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.466019 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.466051 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.467985 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.470433 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.476128 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.476392 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.479457 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:32.483450 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.483507 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.483544 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.483575 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.483642 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.484214 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.484290 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.484658 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.485444 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.488036 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.488669 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.488748 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.488783 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.488843 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.488974 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.489305 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.489349 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.491289 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.491386 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.493983 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.494064 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:32.494504 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:32.496803 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.498786 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.498888 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.499189 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.499271 140012029288448 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 14:02:32.499381 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.499421 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.499453 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.501297 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.503715 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.509358 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.509612 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.512286 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:32.515998 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.516056 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.516092 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.516123 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.516185 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.516790 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.516867 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.517225 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.518019 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.520507 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.521134 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.521211 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.521246 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.521304 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.521436 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.521767 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.521811 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.523685 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.523784 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.526342 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.526422 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:32.526852 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:32.529143 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.531045 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.531143 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.531436 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.531517 140012029288448 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 14:02:32.531624 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.531663 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.531693 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.533525 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.535970 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.541512 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.541785 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.544438 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:32.548205 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.548262 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.548302 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.548334 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.548399 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.548967 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.549044 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.549406 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.550193 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.552681 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.553309 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.553386 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.553421 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.553478 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.553607 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.553934 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.553977 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.556233 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.556326 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.558848 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.558930 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:32.559366 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:32.699470 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.701683 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.701842 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.702165 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.702258 140012029288448 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 14:02:32.702373 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.702414 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.702445 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.704493 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.707034 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.712787 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.713067 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.715763 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:32.719706 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.719764 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.719803 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.719835 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.719898 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.720523 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.720599 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.720970 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.721787 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.724406 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.725053 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.725136 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.725173 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.725234 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.725362 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.725701 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.725747 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.727654 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.727748 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.730301 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.730382 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:32.730867 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:32.733189 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.735135 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.735239 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.735536 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.735618 140012029288448 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 14:02:32.735730 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.735769 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.735800 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.737739 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.740115 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.745761 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.746026 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.748714 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:32.752455 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.752512 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.752548 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.752578 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.752640 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.753211 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.753288 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.753654 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.754441 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.757006 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.757629 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.757713 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.757748 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.757806 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.757932 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.758256 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.758299 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.760200 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.760294 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.762843 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.762924 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:32.763363 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:32.765875 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.767952 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.768049 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.768347 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.768435 140012029288448 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 14:02:32.768547 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.768586 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.768618 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.770534 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.772935 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.778946 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.779212 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.781895 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:32.785623 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.785686 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.785722 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.785753 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.785815 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.786383 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.786459 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.786818 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.787646 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.790160 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.790779 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.790859 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.790894 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.790951 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.791079 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.791398 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.791440 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.793310 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.793404 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.795957 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.796040 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:32.796472 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:32.798721 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.800679 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.800776 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.801070 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.801160 140012029288448 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 14:02:32.801271 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.801310 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.801340 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.803154 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.805601 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.811164 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.811430 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.814083 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:32.817783 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.817843 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.817880 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.817911 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.818017 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.818582 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.818659 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.819020 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.819782 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.822258 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.822881 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.822960 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.822994 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.823055 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.823184 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.823500 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.823543 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.825480 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.825578 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.828352 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.828434 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:32.828868 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:32.831174 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.833044 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.833139 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.833429 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.833510 140012029288448 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 14:02:32.833626 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.833673 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.833705 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.835538 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.838000 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.843534 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.843797 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.846425 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:32.850519 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.850576 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.850616 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.850648 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.850709 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.851277 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.851354 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.851714 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.852502 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.854996 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.855618 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.855697 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.855733 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.855792 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.855923 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.856247 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.856291 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.858254 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.858350 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.860864 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.860944 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:32.861384 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:32.863677 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.865557 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.865664 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.865979 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.866267 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 14:02:32.866344 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 14:02:32.866409 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 14:02:32.866466 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 14:02:32.866522 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 14:02:32.866577 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 14:02:32.866630 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 14:02:32.866682 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 14:02:32.866734 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 14:02:32.866786 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 14:02:32.866839 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 14:02:32.866891 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 14:02:32.866928 140012029288448 decoder_stack.py:344] dstack: Final layernorm.
I0123 14:02:32.870642 140012029288448 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:32.918028 140012029288448 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.918116 140012029288448 decoder_stack.py:333] dstack: autoregressive generator.
I0123 14:02:32.918171 140012029288448 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 14:02:32.918275 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.918314 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.918344 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.918407 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.920871 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.926360 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.926621 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.929267 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:32.945649 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.945708 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.945744 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.945775 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.945839 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.946969 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.947050 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.947767 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.949780 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.954566 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.955883 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.955971 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.956007 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.956066 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.956197 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.956307 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.956347 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.958241 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.958338 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.960775 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.960857 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:32.960968 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:32.963216 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:32.965176 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.965274 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:32.965569 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.969415 140012029288448 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 14:02:32.969631 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:32.969680 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:32.969712 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:32.969784 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.972366 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:32.977967 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.978230 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:32.980973 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:32.994416 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:32.994476 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:32.994513 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:32.994544 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.994608 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.995199 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.995275 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.995638 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.996323 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.998872 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.999499 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.999578 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:32.999619 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:32.999681 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:32.999814 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:32.999926 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:32.999965 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.001870 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.001965 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.004406 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.004486 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.004595 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.006860 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.008795 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.008893 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.009187 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.009270 140012029288448 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 14:02:33.009379 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.009419 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.009450 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.009514 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.011797 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.017252 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.017507 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.020198 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.032726 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.032783 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.032819 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.032849 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.032912 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.033461 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.033545 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.033915 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.034610 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.037089 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.037724 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.037802 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.037837 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.037899 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.038028 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.038137 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.038176 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.040093 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.040186 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.042690 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.042770 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.042877 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.045084 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.047004 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.047103 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.047394 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.047477 140012029288448 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 14:02:33.047586 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.047626 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.047657 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.047718 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.049974 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.055430 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.055688 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.058353 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.071189 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.071247 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.071283 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.071314 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.071377 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.072108 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.072187 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.072552 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.073249 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.075734 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.076360 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.076437 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.076473 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.076531 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.076666 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.076775 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.076814 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.079036 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.079132 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.081564 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.081650 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.081760 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.083974 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.085849 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.085947 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.086236 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.086319 140012029288448 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 14:02:33.086427 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.086466 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.086497 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.086559 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.088871 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.094341 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.094605 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.097221 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.109846 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.109903 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.109940 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.109972 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.110035 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.110598 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.110674 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.111034 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.111728 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.114307 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.114938 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.115016 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.115050 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.115108 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.115241 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.115355 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.115395 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.117275 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.117370 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.119806 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.119887 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.119997 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.122279 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.124149 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.124246 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.124533 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.124615 140012029288448 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 14:02:33.124723 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.124762 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.124793 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.124855 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.127117 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.132561 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.132819 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.135532 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.148151 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.148208 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.148244 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.148275 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.148338 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.148894 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.148973 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.149331 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.150045 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.152560 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.153176 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.153257 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.153292 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.153351 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.153482 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.153596 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.153635 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.155582 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.155675 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.158094 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.158175 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.158283 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.160507 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.162374 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.162472 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.162765 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.162847 140012029288448 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 14:02:33.162956 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.162995 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.163025 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.163088 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.165330 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.170831 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.171088 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.173833 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.186833 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.186892 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.186928 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.186959 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.187025 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.187584 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.187664 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.188021 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.188713 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.191213 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.191882 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.191961 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.191995 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.192053 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.192184 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.192293 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.192336 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.194240 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.194335 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.196736 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.196816 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.196925 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.199135 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.201035 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.201131 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.201422 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.201504 140012029288448 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 14:02:33.201612 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.201660 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.201693 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.201756 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.203999 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.209419 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.209699 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.212378 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.225183 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.225242 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.225278 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.225309 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.225373 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.225988 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.226066 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.226426 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.227118 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.229620 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.230261 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.230339 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.230374 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.230432 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.230565 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.230675 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.230720 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.232598 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.232691 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.235168 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.235255 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.235363 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.237575 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.239453 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.239551 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.239839 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.239923 140012029288448 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 14:02:33.240030 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.240070 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.240101 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.240164 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.242419 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.247971 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.248233 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.250864 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.263459 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.263516 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.263552 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.263583 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.263645 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.264214 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.264291 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.264651 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.265353 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.267864 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.268538 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.268617 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.268652 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.268711 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.268842 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.268953 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.268990 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.270874 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.270969 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.273373 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.273453 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.273561 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.275773 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.277720 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.277820 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.278109 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.278191 140012029288448 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 14:02:33.278300 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.278339 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.278370 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.278432 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.280693 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.286088 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.286346 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.289329 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.301891 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.301950 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.301986 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.302016 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.302082 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.302693 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.302769 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.303131 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.303824 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.306318 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.306938 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.307015 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.307049 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.307106 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.307238 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.307349 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.307388 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.309262 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.309361 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.311830 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.311913 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.312021 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.314232 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.316075 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.316172 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.316457 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.316539 140012029288448 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 14:02:33.316647 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.316687 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.316718 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.316781 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.319026 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.324490 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.324749 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.327375 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.339855 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.339913 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.339950 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.339981 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.340044 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.340606 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.340683 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.341037 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.341727 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.344202 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.344862 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.344940 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.344974 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.345032 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.345158 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.345265 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.345303 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.347315 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.347413 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.349846 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.349929 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.350039 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.352242 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.354168 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.354266 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.354554 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.354636 140012029288448 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 14:02:33.354744 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.354783 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.354812 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.354873 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.357110 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.362529 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.362788 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.365405 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.377949 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.378006 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.378042 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.378073 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.378134 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.378688 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.378764 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.379122 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.379812 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.382382 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.383004 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.383083 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.383118 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.383177 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.383305 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.383415 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.383454 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.385312 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.385406 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.387816 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.387896 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.388007 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.390615 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.392455 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.392550 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.392835 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.392925 140012029288448 decoder_stack.py:344] dstack: Final layernorm.
I0123 14:02:33.395811 140012029288448 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:33.450938 140012029288448 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.451024 140012029288448 decoder_stack.py:333] dstack: autoregressive generator.
I0123 14:02:33.451078 140012029288448 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 14:02:33.451180 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.451218 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.451248 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.451309 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.453667 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.459012 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.459270 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.461832 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.474131 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.474187 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.474223 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.474254 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.474316 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.474870 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.474948 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.475302 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.475975 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.478499 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.479120 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.479197 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.479232 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.479291 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.479421 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.479537 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.479576 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.481389 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.481483 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.483894 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.483974 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.484084 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.486321 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.488155 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.488251 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.488541 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.488624 140012029288448 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 14:02:33.488731 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.488770 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.488800 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.488864 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.491099 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.496435 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.496689 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.499333 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.511717 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.511772 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.511808 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.511838 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.511899 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.512452 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.512529 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.512885 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.513562 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.516096 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.516714 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.516792 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.516828 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.516887 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.517014 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.517122 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.517166 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.518997 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.519092 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.521487 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.521567 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.521682 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.523908 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.525731 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.525828 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.526113 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.526193 140012029288448 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 14:02:33.526299 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.526337 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.526367 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.526429 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.528633 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.533972 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.534231 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.536876 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.548967 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.549024 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.549060 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.549091 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.549153 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.549714 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.549791 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.550150 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.550824 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.553778 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.554397 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.554475 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.554510 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.554568 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.554693 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.554799 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.554837 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.556661 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.556755 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.559142 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.559222 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.559331 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.561554 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.563375 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.563473 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.563761 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.563843 140012029288448 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 14:02:33.563949 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.563988 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.564018 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.564081 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.566310 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.571594 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.571852 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.574498 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.586732 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.586788 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.586825 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.586868 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.586933 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.587487 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.587561 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.587916 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.588590 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.591141 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.591756 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.591833 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.591867 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.591924 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.592052 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.592159 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.592201 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.594063 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.594156 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.596564 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.596642 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.596750 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.599018 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.600866 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.600961 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.601246 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.601325 140012029288448 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 14:02:33.601431 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.601468 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.601497 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.601558 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.603789 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.609138 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.609393 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.612055 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.624406 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.624462 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.624496 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.624526 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.624589 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.625144 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.625219 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.625577 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.626270 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.628820 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.629445 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.629521 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.629555 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.629612 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.629748 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.629855 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.629893 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.631892 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.631992 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.634415 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.634494 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.634601 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.636867 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.638717 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.638814 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.639103 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.639184 140012029288448 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 14:02:33.639291 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.639328 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.639358 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.639420 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.641667 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.647019 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.647275 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.649950 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.662458 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.662512 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.662547 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.662577 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.662637 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.663194 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.663269 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.663626 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.664313 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.667597 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.668214 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.668291 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.668325 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.668381 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.668506 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.668614 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.668651 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.670519 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.670618 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.673015 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.673094 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.673199 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.675464 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.677304 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.677397 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.677692 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.677773 140012029288448 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 14:02:33.677880 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.677917 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.677948 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.678010 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.680216 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.685562 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.685824 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.688492 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.700836 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.700890 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.700924 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.700953 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.701012 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.701571 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.701652 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.702010 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.702692 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.705223 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.705847 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.705924 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.705958 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.706015 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.706141 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.706253 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.706291 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.708141 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.708234 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.710644 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.710728 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.710836 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.713083 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.714927 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.715023 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.715309 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.715389 140012029288448 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 14:02:33.715495 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.715533 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.715563 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.715625 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.717859 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.723243 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.723501 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.726191 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.738495 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.738549 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.738583 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.738612 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.738673 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.739229 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.739304 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.739656 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.740344 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.742872 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.743501 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.743578 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.743611 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.743666 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.743792 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.743898 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.743936 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.745785 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.745877 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.748289 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.748373 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.748481 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.750798 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.752624 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.752716 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.753001 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.753080 140012029288448 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 14:02:33.753186 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.753224 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.753254 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.753314 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.755535 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.760868 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.761125 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.763801 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.776412 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.776469 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.776507 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.776537 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.776598 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.777153 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.777228 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.777583 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.778301 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.781226 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.781851 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.781929 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.781964 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.782019 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.782144 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.782251 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.782288 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.784122 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.784213 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.786608 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.786695 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.786801 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.789045 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.791072 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.791168 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.791456 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.791536 140012029288448 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 14:02:33.791642 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.791680 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.791709 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.791770 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.793997 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.799340 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.799594 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.802256 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.814645 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.814698 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.814732 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.814761 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.814823 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.815380 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.815456 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.815813 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.816493 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.819151 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.819807 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.819886 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.819923 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.819979 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.820105 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.820211 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.820248 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.822527 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.822622 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.825013 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.825090 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.825202 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.827448 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.829255 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.829348 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.829629 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.829717 140012029288448 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 14:02:33.829822 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.829859 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.829888 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.829947 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.832151 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.837472 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.837739 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.840408 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.852746 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.852799 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.852834 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.852863 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.852924 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.853480 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.853555 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.853921 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.854717 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.857458 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.858091 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.858168 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.858202 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.858257 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.858380 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.858485 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.858521 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.860553 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.860651 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.863305 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.863387 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.863496 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.865798 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.867686 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.867784 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.868080 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.868163 140012029288448 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 14:02:33.868272 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:33.868311 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:33.868342 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:33.868405 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.870727 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:33.876178 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.876432 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:33.879144 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:33.891663 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:33.891720 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:33.891756 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:33.891787 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.891851 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.892412 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.892490 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.892850 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.893533 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.896490 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.897114 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.897193 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:33.897227 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:33.897283 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.897408 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:33.897514 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:33.897551 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.899446 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.899541 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.901963 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.902043 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:33.902148 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:33.904472 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:33.906302 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.906400 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:33.906695 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:33.906782 140012029288448 decoder_stack.py:344] dstack: Final layernorm.
I0123 14:02:33.909590 140012029288448 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:38.316749 140012029288448 optimizer_config.py:74] Using Flax Adafactor Optimizer. lr=1.000000, b1=0.900000
I0123 14:02:38.826032 140012029288448 training_loop.py:409] No working directory specified.
I0123 14:02:38.826158 140012029288448 training_loop.py:431] Loading pre-trained model from ag_ckpt_vocab:
I0123 14:02:38.826920 140012029288448 checkpoints.py:1062] Restoring legacy Flax checkpoint from ag_ckpt_vocab/checkpoint_10999999
I0123 14:02:42.083444 140012029288448 training_loop.py:447] Only restoring trainable parameters.
I0123 14:02:42.084043 140012029288448 training_loop.py:724] parameter: decoder/embed/embedding, shape (1024, 1024), size 1048576
I0123 14:02:42.084120 140012029288448 training_loop.py:724] parameter: decoder/final_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.084171 140012029288448 training_loop.py:724] parameter: decoder/transformer0/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 14:02:42.084215 140012029288448 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 14:02:42.084257 140012029288448 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.084298 140012029288448 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.084337 140012029288448 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.084376 140012029288448 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.084412 140012029288448 training_loop.py:724] parameter: decoder/transformer0/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 14:02:42.084449 140012029288448 training_loop.py:724] parameter: decoder/transformer0/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 14:02:42.084484 140012029288448 training_loop.py:724] parameter: decoder/transformer0/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.084520 140012029288448 training_loop.py:724] parameter: decoder/transformer0/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.084557 140012029288448 training_loop.py:724] parameter: decoder/transformer1/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 14:02:42.084594 140012029288448 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 14:02:42.084630 140012029288448 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.084666 140012029288448 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.084702 140012029288448 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.084741 140012029288448 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.084778 140012029288448 training_loop.py:724] parameter: decoder/transformer1/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 14:02:42.084815 140012029288448 training_loop.py:724] parameter: decoder/transformer1/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 14:02:42.084862 140012029288448 training_loop.py:724] parameter: decoder/transformer1/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.084901 140012029288448 training_loop.py:724] parameter: decoder/transformer1/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.084937 140012029288448 training_loop.py:724] parameter: decoder/transformer10/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 14:02:42.084974 140012029288448 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 14:02:42.085009 140012029288448 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.085043 140012029288448 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.085079 140012029288448 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.085114 140012029288448 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.085149 140012029288448 training_loop.py:724] parameter: decoder/transformer10/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 14:02:42.085184 140012029288448 training_loop.py:724] parameter: decoder/transformer10/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 14:02:42.085219 140012029288448 training_loop.py:724] parameter: decoder/transformer10/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.085253 140012029288448 training_loop.py:724] parameter: decoder/transformer10/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.085286 140012029288448 training_loop.py:724] parameter: decoder/transformer11/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 14:02:42.085321 140012029288448 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 14:02:42.085355 140012029288448 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.085389 140012029288448 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.085422 140012029288448 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.085457 140012029288448 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.085491 140012029288448 training_loop.py:724] parameter: decoder/transformer11/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 14:02:42.085525 140012029288448 training_loop.py:724] parameter: decoder/transformer11/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 14:02:42.085559 140012029288448 training_loop.py:724] parameter: decoder/transformer11/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.085594 140012029288448 training_loop.py:724] parameter: decoder/transformer11/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.085627 140012029288448 training_loop.py:724] parameter: decoder/transformer2/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 14:02:42.085682 140012029288448 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 14:02:42.085719 140012029288448 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.085753 140012029288448 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.085793 140012029288448 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.085829 140012029288448 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.085863 140012029288448 training_loop.py:724] parameter: decoder/transformer2/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 14:02:42.085898 140012029288448 training_loop.py:724] parameter: decoder/transformer2/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 14:02:42.085932 140012029288448 training_loop.py:724] parameter: decoder/transformer2/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.085969 140012029288448 training_loop.py:724] parameter: decoder/transformer2/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.086005 140012029288448 training_loop.py:724] parameter: decoder/transformer3/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 14:02:42.086040 140012029288448 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 14:02:42.086076 140012029288448 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.086110 140012029288448 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.086146 140012029288448 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.086181 140012029288448 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.086215 140012029288448 training_loop.py:724] parameter: decoder/transformer3/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 14:02:42.086250 140012029288448 training_loop.py:724] parameter: decoder/transformer3/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 14:02:42.086286 140012029288448 training_loop.py:724] parameter: decoder/transformer3/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.086321 140012029288448 training_loop.py:724] parameter: decoder/transformer3/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.086355 140012029288448 training_loop.py:724] parameter: decoder/transformer4/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 14:02:42.086391 140012029288448 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 14:02:42.086426 140012029288448 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.086462 140012029288448 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.086497 140012029288448 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.086532 140012029288448 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.086567 140012029288448 training_loop.py:724] parameter: decoder/transformer4/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 14:02:42.086602 140012029288448 training_loop.py:724] parameter: decoder/transformer4/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 14:02:42.086636 140012029288448 training_loop.py:724] parameter: decoder/transformer4/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.086670 140012029288448 training_loop.py:724] parameter: decoder/transformer4/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.086705 140012029288448 training_loop.py:724] parameter: decoder/transformer5/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 14:02:42.086745 140012029288448 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 14:02:42.086782 140012029288448 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.086817 140012029288448 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.086852 140012029288448 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.086886 140012029288448 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.086920 140012029288448 training_loop.py:724] parameter: decoder/transformer5/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 14:02:42.086954 140012029288448 training_loop.py:724] parameter: decoder/transformer5/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 14:02:42.086988 140012029288448 training_loop.py:724] parameter: decoder/transformer5/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.087022 140012029288448 training_loop.py:724] parameter: decoder/transformer5/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.087056 140012029288448 training_loop.py:724] parameter: decoder/transformer6/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 14:02:42.087090 140012029288448 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 14:02:42.087124 140012029288448 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.087159 140012029288448 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.087193 140012029288448 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.087228 140012029288448 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.087262 140012029288448 training_loop.py:724] parameter: decoder/transformer6/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 14:02:42.087297 140012029288448 training_loop.py:724] parameter: decoder/transformer6/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 14:02:42.087331 140012029288448 training_loop.py:724] parameter: decoder/transformer6/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.087365 140012029288448 training_loop.py:724] parameter: decoder/transformer6/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.087399 140012029288448 training_loop.py:724] parameter: decoder/transformer7/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 14:02:42.087435 140012029288448 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 14:02:42.087469 140012029288448 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.087503 140012029288448 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.087537 140012029288448 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.087571 140012029288448 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.087606 140012029288448 training_loop.py:724] parameter: decoder/transformer7/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 14:02:42.087640 140012029288448 training_loop.py:724] parameter: decoder/transformer7/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 14:02:42.087679 140012029288448 training_loop.py:724] parameter: decoder/transformer7/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.087715 140012029288448 training_loop.py:724] parameter: decoder/transformer7/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.087749 140012029288448 training_loop.py:724] parameter: decoder/transformer8/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 14:02:42.087784 140012029288448 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 14:02:42.087818 140012029288448 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.087852 140012029288448 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.087886 140012029288448 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.087920 140012029288448 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.087954 140012029288448 training_loop.py:724] parameter: decoder/transformer8/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 14:02:42.087988 140012029288448 training_loop.py:724] parameter: decoder/transformer8/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 14:02:42.088021 140012029288448 training_loop.py:724] parameter: decoder/transformer8/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.088055 140012029288448 training_loop.py:724] parameter: decoder/transformer8/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.088088 140012029288448 training_loop.py:724] parameter: decoder/transformer9/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 14:02:42.088123 140012029288448 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 14:02:42.088157 140012029288448 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.088192 140012029288448 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.088226 140012029288448 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.088260 140012029288448 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.088294 140012029288448 training_loop.py:724] parameter: decoder/transformer9/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 14:02:42.088329 140012029288448 training_loop.py:724] parameter: decoder/transformer9/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 14:02:42.088363 140012029288448 training_loop.py:724] parameter: decoder/transformer9/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 14:02:42.088398 140012029288448 training_loop.py:724] parameter: decoder/transformer9/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 14:02:42.088425 140012029288448 training_loop.py:725] Total parameters: 152072288
I0123 14:02:42.088629 140012029288448 training_loop.py:739] Total state size: 0
I0123 14:02:42.110522 140012029288448 training_loop.py:492] Training loop: creating task for mode beam_search
I0123 14:02:42.110756 140012029288448 training_loop.py:685] Creating logging writer (train) for mode beam_search
I0123 14:02:42.111129 140012029288448 training_loop.py:652] Compiling mode beam_search with jit.
I0123 14:02:42.111442 140012029288448 training_loop.py:89] registering functions: dict_keys([])
I0123 14:02:42.127685 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k ? coll l d e
I0123 14:02:42.855458 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6961503028869629
I0123 14:02:43.755688 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9000687599182129
I0123 14:02:44.900338 140012029288448 ddar.py:60] Depth 3/1000 time = 1.1444880962371826
I0123 14:02:46.074134 140012029288448 ddar.py:60] Depth 4/1000 time = 1.1736068725585938
I0123 14:02:47.462153 140012029288448 ddar.py:60] Depth 5/1000 time = 1.376296043395996
I0123 14:02:48.769860 140012029288448 ddar.py:60] Depth 6/1000 time = 1.3075439929962158
I0123 14:02:48.777414 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:02:48.777489 140012029288448 alphageometry.py:540] Depth 0. There are 1 nodes to expand:
I0123 14:02:48.777523 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00
I0123 14:02:48.777554 140012029288448 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00
I0123 14:02:48.902349 140012029288448 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.902517 140012029288448 decoder_stack.py:316] dstack: scanning over 1 windows.
I0123 14:02:48.902613 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 14:02:48.902687 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 14:02:48.902757 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 14:02:48.902826 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 14:02:48.902893 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 14:02:48.902961 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 14:02:48.903028 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 14:02:48.903096 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 14:02:48.903163 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 14:02:48.903229 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 14:02:48.903294 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 14:02:48.903359 140012029288448 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 14:02:48.903396 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:48.903439 140012029288448 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 14:02:48.903541 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:48.903578 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:48.903607 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:48.905420 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.907831 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:48.913460 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.913731 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:48.916251 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:48.919991 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:48.920046 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:48.920082 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:48.920114 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.920174 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.920764 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.920839 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.921197 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.921962 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.924439 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.925054 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.925129 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:48.925162 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:48.925220 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.925346 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:48.925670 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:48.925712 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:48.927853 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.927946 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:48.930384 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.930463 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:48.930891 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:48.933159 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:48.935059 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.935153 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:48.935440 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.935518 140012029288448 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 14:02:48.935624 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:48.935661 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:48.935691 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:48.937538 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.939849 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:48.945302 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.945564 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:48.948163 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:48.951745 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:48.951800 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:48.951835 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:48.951867 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.951928 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.952476 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.952550 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.952904 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.953665 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.956072 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.956732 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.956809 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:48.956844 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:48.956902 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.957026 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:48.957339 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:48.957381 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:48.959293 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.959386 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:48.961836 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.961915 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:48.962340 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:48.964643 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:48.966538 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.966633 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:48.966920 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.967001 140012029288448 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 14:02:48.967107 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:48.967145 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:48.967177 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:48.968954 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.971272 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:48.976875 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.977129 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:48.979667 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:48.983228 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:48.983282 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:48.983318 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:48.983349 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.983409 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.984004 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.984079 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.984432 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.985180 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.987581 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.988188 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.988264 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:48.988298 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:48.988354 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.988479 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:48.988791 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:48.988832 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:48.990767 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.990859 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:48.993289 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.993368 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:48.993799 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:48.996019 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:48.997921 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.998015 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:48.998302 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:48.998381 140012029288448 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 14:02:48.998486 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:48.998523 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:48.998553 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.000399 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.002685 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.008160 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.008414 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.010938 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:49.014940 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.014993 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.015029 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.015059 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.015122 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.015670 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.015744 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.016098 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.016845 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.019286 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.019891 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.019967 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.020002 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.020060 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.020184 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.020546 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.020589 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.022479 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.022572 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.024987 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.025065 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.025482 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.027870 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.029823 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.029918 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.030203 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.030281 140012029288448 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 14:02:49.030384 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.030422 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.030452 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.032214 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.034490 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.040053 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.040305 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.042815 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:49.046374 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.046434 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.046470 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.046500 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.046609 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.047159 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.047233 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.047585 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.048329 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.050761 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.051373 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.051447 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.051481 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.051537 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.051660 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.051970 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.052013 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.053962 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.054054 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.056479 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.056557 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.056975 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.059179 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.061041 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.061133 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.061414 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.061494 140012029288448 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 14:02:49.061599 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.061637 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.061676 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.063521 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.065808 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.071268 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.071518 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.074091 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:49.077651 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.077705 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.077746 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.077777 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.077838 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.078385 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.078460 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.078809 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.079557 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.081977 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.082637 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.082713 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.082747 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.082804 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.082947 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.083264 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.083306 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.085188 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.085279 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.087685 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.087762 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.088184 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.090470 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.092334 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.092426 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.092710 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.092788 140012029288448 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 14:02:49.092894 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.092931 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.092962 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.094719 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.096985 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.102548 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.102802 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.105316 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:49.108873 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.108927 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.108962 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.108997 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.109110 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.109667 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.109743 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.110097 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.110849 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.113276 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.113894 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.113971 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.114005 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.114061 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.114186 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.114500 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.114541 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.116817 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.116909 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.119363 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.119441 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.119855 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.122077 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.123959 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.124052 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.124342 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.124421 140012029288448 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 14:02:49.124526 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.124565 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.124595 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.126443 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.128719 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.134240 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.134496 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.137081 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:49.140678 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.140733 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.140769 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.140800 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.140867 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.141422 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.141497 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.141855 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.142608 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.145201 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.145869 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.145947 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.145981 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.146039 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.146167 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.146487 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.146529 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.148416 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.148507 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.150924 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.151001 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.151420 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.153714 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.155608 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.155700 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.155988 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.156067 140012029288448 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 14:02:49.156174 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.156212 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.156242 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.158018 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.160289 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.165844 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.166098 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.168614 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:49.172176 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.172231 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.172266 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.172297 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.172358 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.172969 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.173046 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.173399 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.174160 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.176604 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.177215 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.177292 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.177326 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.177384 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.177510 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.177837 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.177880 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.179774 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.179865 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.182371 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.182450 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.182869 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.185093 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.186988 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.187081 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.187368 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.187448 140012029288448 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 14:02:49.187553 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.187591 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.187622 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.189383 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.191778 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.197335 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.197591 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.200172 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:49.203765 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.203819 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.203855 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.203885 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.204003 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.204565 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.204640 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.204991 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.205759 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.208232 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.208839 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.208914 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.208949 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.209007 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.209132 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.209444 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.209484 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.211444 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.211537 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.213986 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.214064 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.214480 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.216710 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.218628 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.218722 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.219011 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.219091 140012029288448 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 14:02:49.219196 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.219234 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.219264 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.221129 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.223450 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.228966 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.229217 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.231757 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:49.235769 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.235823 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.235859 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.235889 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.235951 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.236502 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.236584 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.236945 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.237704 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.240151 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.240763 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.240839 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.240873 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.240931 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.241057 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.241372 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.241414 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.243416 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.243508 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.245952 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.246030 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.246446 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.248682 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.250575 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.250670 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.250959 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.251039 140012029288448 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 14:02:49.251143 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.251181 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.251212 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.253062 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.255480 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.260989 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.261241 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.263795 140012029288448 transformer_layer.py:213] tlayer: windowed attention.
I0123 14:02:49.267457 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.267511 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.267546 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.267577 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.267639 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.268190 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.268265 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.268624 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.269377 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.271827 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.272438 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.272515 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.272548 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.272606 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.272732 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.273051 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.273092 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.275049 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.275142 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.277583 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.277668 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.278086 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.280297 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.282187 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.282281 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.282569 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.282817 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 14:02:49.282885 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 14:02:49.282941 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 14:02:49.282994 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 14:02:49.283046 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 14:02:49.283097 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 14:02:49.283148 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 14:02:49.283200 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 14:02:49.283251 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 14:02:49.283302 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 14:02:49.283353 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 14:02:49.283404 140012029288448 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 14:02:49.283439 140012029288448 decoder_stack.py:344] dstack: Final layernorm.
I0123 14:02:49.286287 140012029288448 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 14:02:49.330021 140012029288448 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.330109 140012029288448 decoder_stack.py:333] dstack: autoregressive generator.
I0123 14:02:49.330161 140012029288448 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 14:02:49.330265 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.330303 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.330331 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.330390 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.332687 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.337928 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.338179 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.340698 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:49.353104 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.353157 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.353191 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.353220 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.353280 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.353842 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.353918 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.354424 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.355107 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.357760 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.358375 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.358452 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.358485 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.358541 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.358669 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.358775 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.358812 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.360611 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.360701 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.363060 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.363139 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.363244 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.365441 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.367256 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.367348 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.367632 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.367717 140012029288448 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 14:02:49.367822 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.367859 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.367888 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.367947 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.370133 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.375342 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.375594 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.378191 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:49.390178 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.390233 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.390267 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.390297 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.390358 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.390907 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.390983 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.391337 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.392061 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.394504 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.395117 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.395192 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.395226 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.395281 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.395405 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.395512 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.395548 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.397362 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.397454 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.399817 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.399894 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.400000 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.402197 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.403995 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.404088 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.404373 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.404453 140012029288448 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 14:02:49.404565 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.404603 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.404634 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.404695 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.406889 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.412147 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.412396 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.415367 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:49.427897 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.427952 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.427986 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.428015 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.428076 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.428622 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.428697 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.429047 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.429775 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.432192 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.432800 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.432875 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.432908 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.432964 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.433089 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.433193 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.433230 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.435029 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.435121 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.437490 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.437566 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.437676 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.439857 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.441666 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.441760 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.442048 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.442127 140012029288448 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 14:02:49.442239 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.442278 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.442307 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.442368 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.444558 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.449821 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.450074 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.452686 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:49.464751 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.464806 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.464840 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.464871 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.464933 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.465479 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.465554 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.465914 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.466641 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.469087 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.469714 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.469791 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.469826 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.469885 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.470016 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.470126 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.470164 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.472014 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.472106 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.474519 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.474597 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.474704 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.476907 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.478711 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.478805 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.479091 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.479171 140012029288448 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 14:02:49.479276 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.479319 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.479350 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.479410 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.481598 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.486861 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.487115 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.489722 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:49.501691 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.501745 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.501778 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.501806 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.501867 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.502415 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.502490 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.502840 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.503561 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.505992 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.506603 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.506679 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.506713 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.506769 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.506895 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.507001 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.507039 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.508854 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.508945 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.511348 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.511425 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.511532 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.513771 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.515605 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.515699 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.515990 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.516071 140012029288448 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 14:02:49.516177 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.516216 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.516254 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.516319 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.518562 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.524104 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.524363 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.527427 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:49.539465 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.539520 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.539554 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.539583 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.539644 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.540191 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.540265 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.540616 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.541348 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.543789 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.544394 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.544468 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.544502 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.544559 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.544685 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.544790 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.544826 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.546651 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.546742 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.549098 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.549175 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.549279 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.551511 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.553336 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.553429 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.553725 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.553805 140012029288448 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 14:02:49.553911 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.553949 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.553979 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.554048 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.556255 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.561584 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.561850 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.564479 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:49.576611 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.576666 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.576701 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.576731 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.576792 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.577339 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.577414 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.577784 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.578513 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.580948 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.581559 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.581634 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.581676 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.581734 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.581865 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.581973 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.582011 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.583852 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.583943 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.586339 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.586417 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.586524 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.588740 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.590556 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.590650 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.590936 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.591016 140012029288448 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 14:02:49.591123 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.591161 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.591192 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.591262 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.593441 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.598667 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.598922 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.601497 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:49.613663 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.613720 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.613754 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.613783 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.613844 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.614389 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.614463 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.614814 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.615533 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.617950 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.618556 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.618633 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.618667 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.618723 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.618849 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.618954 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.618990 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.620789 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.620878 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.623225 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.623303 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.623408 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.625744 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.627539 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.627632 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.627921 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.628001 140012029288448 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 14:02:49.628107 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.628144 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.628174 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.628234 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.630440 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.635676 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.635926 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.638906 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:49.650829 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.650883 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.650917 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.650946 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.651006 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.651550 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.651623 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.651975 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.652646 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.655131 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.655738 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.655814 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.655847 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.655902 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.656030 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.656138 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.656175 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.657986 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.658077 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.660437 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.660514 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.660620 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.662826 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.664619 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.664712 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.665004 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.665084 140012029288448 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 14:02:49.665190 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.665229 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.665259 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.665320 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.667531 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.672815 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.673070 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.675678 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:49.687690 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.687744 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.687778 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.687808 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.687868 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.688416 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.688492 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.688845 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.689516 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.691984 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.692591 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.692667 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.692700 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.692755 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.692880 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.692985 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.693022 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.694826 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.694917 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.697269 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.697347 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.697452 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.699653 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.701451 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.701543 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.701835 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.701916 140012029288448 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 14:02:49.702021 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.702059 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.702089 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.702148 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.704328 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.709574 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.709834 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.712427 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:49.724546 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.724601 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.724636 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.724666 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.724728 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.725276 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.725350 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.725709 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.726383 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.728847 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.729454 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.729529 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.729563 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.729619 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.729750 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.729854 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.729891 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.731705 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.731796 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.734182 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.734260 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.734367 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.736581 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.738424 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.738520 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.738810 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.738890 140012029288448 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 14:02:49.738998 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.739037 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.739067 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.739129 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.741337 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.746679 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.746948 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.750149 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:49.762360 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:49.762415 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:49.762450 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:49.762481 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.762542 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.763092 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.763167 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.763521 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.764194 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.766696 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.767306 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.767383 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:49.767417 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:49.767474 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.767601 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:49.767707 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:49.767745 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.769570 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.769671 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.772109 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.772188 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:49.772294 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:49.774523 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:49.776355 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.776449 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:49.776741 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.776827 140012029288448 decoder_stack.py:344] dstack: Final layernorm.
I0123 14:02:49.779964 140012029288448 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 14:02:49.984693 140012029288448 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:49.984874 140012029288448 decoder_stack.py:333] dstack: autoregressive generator.
I0123 14:02:49.984938 140012029288448 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 14:02:49.985052 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:49.985090 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:49.985131 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:49.985200 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:49.988297 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:49.994196 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:49.994455 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:49.997039 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:50.009535 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:50.009592 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:50.009628 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:50.009666 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.009730 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.010320 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.010396 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.010750 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.011428 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.013901 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.014522 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.014599 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:50.014632 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:50.014688 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.014814 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:50.014924 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:50.014961 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.016857 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.016950 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.019371 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.019449 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:50.019557 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:50.021766 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.023598 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.023691 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.023982 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.024063 140012029288448 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 14:02:50.024169 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:50.024207 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:50.024237 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:50.024309 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.026748 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:50.032161 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.032417 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:50.035019 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:50.047550 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:50.047607 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:50.047644 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:50.047676 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.047738 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.048299 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.048375 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.048731 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.049421 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.051969 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.052592 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.052669 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:50.052703 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:50.052761 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.052888 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:50.052995 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:50.053033 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.054895 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.054989 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.057380 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.057458 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:50.057566 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:50.059809 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.061638 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.061743 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.062031 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.062111 140012029288448 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 14:02:50.062217 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:50.062254 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:50.062284 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:50.062346 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.064566 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:50.069955 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.070211 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:50.072751 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:50.085464 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:50.085520 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:50.085555 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:50.085585 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.085653 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.086210 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.086285 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.086636 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.087312 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.089851 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.090467 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.090544 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:50.090578 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:50.090636 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.090762 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:50.090869 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:50.090906 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.092905 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.092996 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.095368 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.095446 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:50.095551 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:50.097790 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.099624 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.099717 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.100004 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.100085 140012029288448 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 14:02:50.100192 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:50.100230 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:50.100260 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:50.100322 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.102518 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:50.108056 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.108310 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:50.111013 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:50.123132 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:50.123187 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:50.123221 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:50.123251 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.123312 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.123858 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.123933 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.124283 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.124953 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.127455 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.128070 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.128146 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:50.128179 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:50.128234 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.128357 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:50.128463 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:50.128500 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.130315 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.130406 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.132765 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.132842 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:50.132948 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:50.135159 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.136973 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.137067 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.137354 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.137433 140012029288448 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 14:02:50.137540 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:50.137578 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:50.137608 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:50.137676 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.139885 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:50.145234 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.145490 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:50.148046 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:50.160135 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:50.160189 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:50.160224 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:50.160254 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.160314 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.160858 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.160932 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.161283 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.161957 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.164810 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.165420 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.165496 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:50.165530 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:50.165585 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.165716 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:50.165823 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:50.165861 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.167670 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.167760 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.170124 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.170201 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:50.170307 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:50.172509 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.174341 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.174434 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.174721 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.174800 140012029288448 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 14:02:50.174905 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:50.174943 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:50.174972 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:50.175034 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.177223 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:50.182620 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.182876 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:50.185417 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:50.197573 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:50.197628 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:50.197668 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:50.197698 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.197760 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.198307 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.198383 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.198734 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.199397 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.201894 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.202495 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.202570 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:50.202603 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:50.202657 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.202780 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:50.202886 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:50.202923 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.204735 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.204825 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.207182 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.207260 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:50.207364 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:50.209733 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.211543 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.211636 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.211924 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.212004 140012029288448 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 14:02:50.212110 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:50.212148 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:50.212177 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:50.212239 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.214443 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:50.219984 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.220244 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:50.222770 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:50.234817 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:50.234870 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:50.234905 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:50.234934 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.234995 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.235545 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.235619 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.235970 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.236636 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.239109 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.239716 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.239789 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:50.239822 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:50.239878 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.240001 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:50.240107 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:50.240144 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.241968 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.242060 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.244424 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.244500 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:50.244605 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:50.246821 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.248627 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.248719 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.249005 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.249084 140012029288448 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 14:02:50.249190 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:50.249227 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:50.249256 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:50.249318 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.251512 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:50.257120 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.257382 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:50.259940 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:50.271989 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:50.272042 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:50.272077 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:50.272107 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.272168 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.272713 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.272788 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.273137 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.273811 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.276283 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.276892 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.276965 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:50.276999 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:50.277055 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.277176 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:50.277282 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:50.277319 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.279141 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.279231 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.281590 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.281674 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:50.281780 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:50.283954 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.285787 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.285878 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.286166 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.286244 140012029288448 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 14:02:50.286349 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:50.286386 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:50.286416 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:50.286478 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.288668 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:50.293986 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.294243 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:50.296794 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:50.308829 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:50.308884 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:50.308919 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:50.308950 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.309011 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.309555 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.309628 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.309986 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.310651 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.313099 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.313709 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.313783 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:50.313816 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:50.313871 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.313993 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:50.314099 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:50.314135 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.316107 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.316196 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.318569 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.318646 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:50.318751 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:50.320953 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.322769 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.322861 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.323148 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.323228 140012029288448 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 14:02:50.323334 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:50.323371 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:50.323401 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:50.323461 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.325629 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:50.330934 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.331190 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:50.333722 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:50.346060 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:50.346117 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:50.346151 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:50.346181 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.346240 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.346788 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.346861 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.347209 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.347871 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.350277 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.350928 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.351002 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:50.351036 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:50.351090 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.351212 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:50.351319 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:50.351355 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.353150 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.353238 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.355609 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.355685 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:50.355790 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:50.357936 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.359803 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.359894 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.360183 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.360261 140012029288448 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 14:02:50.360365 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:50.360402 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:50.360431 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:50.360491 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.362754 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:50.367998 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.368249 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:50.370849 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:50.382875 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:50.382930 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:50.382964 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:50.382994 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.383053 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.383643 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.383717 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.384069 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.384736 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.387156 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.387761 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.387835 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:50.387868 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:50.387923 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.388049 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:50.388155 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:50.388192 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.390010 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.390100 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.392539 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.392616 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:50.392721 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:50.394883 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.396678 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.396770 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.397061 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.397139 140012029288448 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 14:02:50.397246 140012029288448 transformer_layer.py:154] tlayer: recurrent = False
I0123 14:02:50.397284 140012029288448 transformer_layer.py:155] tlayer: compute_importance = False
I0123 14:02:50.397314 140012029288448 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 14:02:50.397374 140012029288448 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.399561 140012029288448 transformer_base.py:161] kvq: pre_attn dropout.
I0123 14:02:50.404875 140012029288448 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.405127 140012029288448 transformer_base.py:194] kvq: normalize keys, queries.
I0123 14:02:50.407666 140012029288448 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 14:02:50.419722 140012029288448 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 14:02:50.419784 140012029288448 attention.py:418] Single window, no scan.
I0123 14:02:50.419819 140012029288448 transformer_layer.py:389] tlayer: self-attention.
I0123 14:02:50.419848 140012029288448 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.419909 140012029288448 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.420455 140012029288448 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.420529 140012029288448 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.420881 140012029288448 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.421548 140012029288448 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.423947 140012029288448 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.424602 140012029288448 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.424678 140012029288448 transformer_layer.py:468] tlayer: End windows.
I0123 14:02:50.424711 140012029288448 transformer_layer.py:472] tlayer: final FFN.
I0123 14:02:50.424767 140012029288448 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.424891 140012029288448 transformer_base.py:410] tbase: post-attention MLP.
I0123 14:02:50.424998 140012029288448 nn_components.py:325] mlp: activation = None
I0123 14:02:50.425036 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.426838 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.426928 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.429291 140012029288448 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.429367 140012029288448 transformer_base.py:443] tbase: final FFN
I0123 14:02:50.429471 140012029288448 nn_components.py:320] mlp: hidden 4096, relu
I0123 14:02:50.431629 140012029288448 nn_components.py:329] mlp: final activation = None
I0123 14:02:50.433495 140012029288448 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.433588 140012029288448 nn_components.py:261] mlp: residual
I0123 14:02:50.433888 140012029288448 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:02:50.433973 140012029288448 decoder_stack.py:344] dstack: Final layernorm.
I0123 14:02:50.436773 140012029288448 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 14:03:02.197011 140012029288448 alphageometry.py:566] LM output (score=-1.555104): "m : C e i m 16 D e i i m 17 ;"
I0123 14:03:02.197260 140012029288448 alphageometry.py:567] Translation: "m = on_line m e i, on_circle m i e"

I0123 14:03:02.197317 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e ? coll l d e"
I0123 14:03:02.197467 140012029288448 graph.py:498] 
I0123 14:03:02.197523 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e ? coll l d e
I0123 14:03:03.316767 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0897619724273682
I0123 14:03:05.074201 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7572736740112305
I0123 14:03:06.928489 140012029288448 ddar.py:60] Depth 3/1000 time = 1.854123830795288
I0123 14:03:08.836046 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9073805809020996
I0123 14:03:10.902432 140012029288448 ddar.py:60] Depth 5/1000 time = 2.065969705581665
I0123 14:03:13.455453 140012029288448 ddar.py:60] Depth 6/1000 time = 2.527873992919922
I0123 14:03:15.747616 140012029288448 ddar.py:60] Depth 7/1000 time = 2.2920010089874268
I0123 14:03:15.758451 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:03:15.758563 140012029288448 alphageometry.py:566] LM output (score=-1.947325): "m : T e i e m 16 ;"
I0123 14:03:15.758603 140012029288448 alphageometry.py:567] Translation: "m = on_tline m e e i"

I0123 14:03:15.758642 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i ? coll l d e"
I0123 14:03:15.758783 140012029288448 graph.py:498] 
I0123 14:03:15.758834 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i ? coll l d e
I0123 14:03:16.562929 140012029288448 ddar.py:60] Depth 1/1000 time = 0.7774984836578369
I0123 14:03:17.625968 140012029288448 ddar.py:60] Depth 2/1000 time = 1.0628085136413574
I0123 14:03:18.948906 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3227009773254395
I0123 14:03:20.328070 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3789641857147217
I0123 14:03:21.956557 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6126666069030762
I0123 14:03:23.511854 140012029288448 ddar.py:60] Depth 6/1000 time = 1.5551295280456543
I0123 14:03:23.520805 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:03:23.520894 140012029288448 alphageometry.py:566] LM output (score=-2.025647): "m : C e f m 16 D e m f m 17 ;"
I0123 14:03:23.520930 140012029288448 alphageometry.py:567] Translation: "m = on_line m e f, on_bline m f e"

I0123 14:03:23.520967 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e ? coll l d e"
I0123 14:03:23.521114 140012029288448 graph.py:498] 
I0123 14:03:23.521171 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e ? coll l d e
I0123 14:03:24.698961 140012029288448 ddar.py:60] Depth 1/1000 time = 1.1424999237060547
I0123 14:03:26.007010 140012029288448 ddar.py:60] Depth 2/1000 time = 1.307887077331543
I0123 14:03:27.832073 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8248939514160156
I0123 14:03:29.721705 140012029288448 ddar.py:60] Depth 4/1000 time = 1.8894460201263428
I0123 14:03:31.613661 140012029288448 ddar.py:60] Depth 5/1000 time = 1.891547441482544
I0123 14:03:33.882866 140012029288448 ddar.py:60] Depth 6/1000 time = 2.250153064727783
I0123 14:03:36.067131 140012029288448 ddar.py:60] Depth 7/1000 time = 2.184098482131958
I0123 14:03:36.076347 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:03:36.076424 140012029288448 alphageometry.py:566] LM output (score=-2.090010): "m : C f i m 16 D f i i m 17 ;"
I0123 14:03:36.076469 140012029288448 alphageometry.py:567] Translation: "m = on_line m f i, on_circle m i f"

I0123 14:03:36.076508 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f ? coll l d e"
I0123 14:03:36.076651 140012029288448 graph.py:498] 
I0123 14:03:36.076700 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f ? coll l d e
I0123 14:03:37.037699 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9308326244354248
I0123 14:03:38.455117 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4172463417053223
I0123 14:03:40.301571 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8462424278259277
I0123 14:03:42.425246 140012029288448 ddar.py:60] Depth 4/1000 time = 2.1234323978424072
I0123 14:03:44.299216 140012029288448 ddar.py:60] Depth 5/1000 time = 1.873547077178955
I0123 14:03:46.855737 140012029288448 ddar.py:60] Depth 6/1000 time = 2.531745672225952
I0123 14:03:49.311349 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4554378986358643
I0123 14:03:49.321710 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:03:49.321795 140012029288448 alphageometry.py:566] LM output (score=-2.132771): "m : D f h h m 16 ;"
I0123 14:03:49.321831 140012029288448 alphageometry.py:567] Translation: "m = on_circle m h f"

I0123 14:03:49.321868 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f ? coll l d e"
I0123 14:03:49.322014 140012029288448 graph.py:498] 
I0123 14:03:49.322068 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f ? coll l d e
I0123 14:03:50.175308 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8207776546478271
I0123 14:03:51.459021 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2835609912872314
I0123 14:03:53.282977 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8237252235412598
I0123 14:03:54.966839 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6835510730743408
I0123 14:03:56.926402 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9438512325286865
I0123 14:03:58.783304 140012029288448 ddar.py:60] Depth 6/1000 time = 1.8567380905151367
I0123 14:03:58.791966 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:03:58.792049 140012029288448 alphageometry.py:566] LM output (score=-2.187954): "m : D e i i m 16 ;"
I0123 14:03:58.792084 140012029288448 alphageometry.py:567] Translation: "m = on_circle m i e"

I0123 14:03:58.792119 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e ? coll l d e"
I0123 14:03:58.792260 140012029288448 graph.py:498] 
I0123 14:03:58.792313 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e ? coll l d e
I0123 14:03:59.636728 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8148887157440186
I0123 14:04:00.928860 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2919583320617676
I0123 14:04:02.747542 140012029288448 ddar.py:60] Depth 3/1000 time = 1.818518877029419
I0123 14:04:04.409933 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6622123718261719
I0123 14:04:06.382439 140012029288448 ddar.py:60] Depth 5/1000 time = 1.956953763961792
I0123 14:04:08.265853 140012029288448 ddar.py:60] Depth 6/1000 time = 1.8832471370697021
I0123 14:04:08.274492 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:04:08.274568 140012029288448 alphageometry.py:566] LM output (score=-2.208901): "m : D e g g m 16 ;"
I0123 14:04:08.274604 140012029288448 alphageometry.py:567] Translation: "m = on_circle m g e"

I0123 14:04:08.274641 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e ? coll l d e"
I0123 14:04:08.274778 140012029288448 graph.py:498] 
I0123 14:04:08.274827 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e ? coll l d e
I0123 14:04:09.215147 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9101948738098145
I0123 14:04:10.303629 140012029288448 ddar.py:60] Depth 2/1000 time = 1.0883119106292725
I0123 14:04:12.126965 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8231604099273682
I0123 14:04:13.821768 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6946113109588623
I0123 14:04:15.809085 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9718456268310547
I0123 14:04:17.695141 140012029288448 ddar.py:60] Depth 6/1000 time = 1.8858847618103027
I0123 14:04:17.704512 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:04:17.704598 140012029288448 alphageometry.py:566] LM output (score=-2.264958): "m : T c g c m 16 ;"
I0123 14:04:17.704635 140012029288448 alphageometry.py:567] Translation: "m = on_tline m c c g"

I0123 14:04:17.704672 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g ? coll l d e"
I0123 14:04:17.704821 140012029288448 graph.py:498] 
I0123 14:04:17.704877 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g ? coll l d e
I0123 14:04:18.319561 140012029288448 ddar.py:60] Depth 1/1000 time = 0.5871920585632324
I0123 14:04:19.382081 140012029288448 ddar.py:60] Depth 2/1000 time = 1.06235933303833
I0123 14:04:20.723493 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3412370681762695
I0123 14:04:22.116657 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3929898738861084
I0123 14:04:23.765561 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6327366828918457
I0123 14:04:25.336282 140012029288448 ddar.py:60] Depth 6/1000 time = 1.5705373287200928
I0123 14:04:25.345165 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:04:25.345240 140012029288448 alphageometry.py:566] LM output (score=-2.380281): "m : C c g m 16 D c g g m 17 ;"
I0123 14:04:25.345275 140012029288448 alphageometry.py:567] Translation: "m = on_line m c g, on_circle m g c"

I0123 14:04:25.345309 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c ? coll l d e"
I0123 14:04:25.345460 140012029288448 graph.py:498] 
I0123 14:04:25.345510 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c ? coll l d e
I0123 14:04:26.449132 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0727283954620361
I0123 14:04:27.862502 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4131882190704346
I0123 14:04:29.951309 140012029288448 ddar.py:60] Depth 3/1000 time = 2.0886340141296387
I0123 14:04:31.897263 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9457776546478271
I0123 14:04:33.812448 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9146928787231445
I0123 14:04:36.401132 140012029288448 ddar.py:60] Depth 6/1000 time = 2.565115213394165
I0123 14:04:38.653575 140012029288448 ddar.py:60] Depth 7/1000 time = 2.2522568702697754
I0123 14:04:38.664926 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:04:38.665015 140012029288448 alphageometry.py:566] LM output (score=-2.399925): "m : C e g m 16 D e g g m 17 ;"
I0123 14:04:38.665052 140012029288448 alphageometry.py:567] Translation: "m = on_line m e g, on_circle m g e"

I0123 14:04:38.665089 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e ? coll l d e"
I0123 14:04:38.665235 140012029288448 graph.py:498] 
I0123 14:04:38.665289 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e ? coll l d e
I0123 14:04:39.437824 140012029288448 ddar.py:60] Depth 1/1000 time = 0.7418186664581299
I0123 14:04:41.118296 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6803174018859863
I0123 14:04:43.001252 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8827879428863525
I0123 14:04:44.963300 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9618549346923828
I0123 14:04:46.897211 140012029288448 ddar.py:60] Depth 5/1000 time = 1.933509349822998
I0123 14:04:49.517514 140012029288448 ddar.py:60] Depth 6/1000 time = 2.5956482887268066
I0123 14:04:51.807886 140012029288448 ddar.py:60] Depth 7/1000 time = 2.2901875972747803
I0123 14:04:51.818802 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:04:51.818877 140012029288448 alphageometry.py:566] LM output (score=-2.407270): "m : D e f f m 16 D e i i m 17 ;"
I0123 14:04:51.818912 140012029288448 alphageometry.py:567] Translation: "m = on_circle m f e, on_circle m i e"

I0123 14:04:51.818949 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e ? coll l d e"
I0123 14:04:51.819089 140012029288448 graph.py:498] 
I0123 14:04:51.819139 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e ? coll l d e
I0123 14:04:53.009900 140012029288448 ddar.py:60] Depth 1/1000 time = 1.1507279872894287
I0123 14:04:54.494614 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4845235347747803
I0123 14:04:56.375805 140012029288448 ddar.py:60] Depth 3/1000 time = 1.881004810333252
I0123 14:04:58.300538 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9245319366455078
I0123 14:05:00.624328 140012029288448 ddar.py:60] Depth 5/1000 time = 2.2993898391723633
I0123 14:05:02.864208 140012029288448 ddar.py:60] Depth 6/1000 time = 2.239706039428711
I0123 14:05:02.873876 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:05:02.873960 140012029288448 alphageometry.py:566] LM output (score=-2.428508): "m : C f h m 16 D f h h m 17 ;"
I0123 14:05:02.873996 140012029288448 alphageometry.py:567] Translation: "m = on_line m f h, on_circle m h f"

I0123 14:05:02.874034 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f h, on_circle m h f ? coll l d e"
I0123 14:05:02.874186 140012029288448 graph.py:498] 
I0123 14:05:02.874242 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f h, on_circle m h f ? coll l d e
I0123 14:05:04.007672 140012029288448 ddar.py:60] Depth 1/1000 time = 1.1017980575561523
I0123 14:05:05.471447 140012029288448 ddar.py:60] Depth 2/1000 time = 1.463606595993042
I0123 14:05:07.378278 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9066598415374756
I0123 14:05:09.347322 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9688396453857422
I0123 14:05:11.276930 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9291739463806152
I0123 14:05:13.898901 140012029288448 ddar.py:60] Depth 6/1000 time = 2.597874641418457
I0123 14:05:16.203614 140012029288448 ddar.py:60] Depth 7/1000 time = 2.30454421043396
I0123 14:05:16.214049 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:05:16.214126 140012029288448 alphageometry.py:566] LM output (score=-2.449872): "m : D d h h m 16 ;"
I0123 14:05:16.214162 140012029288448 alphageometry.py:567] Translation: "m = on_circle m h d"

I0123 14:05:16.214200 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h d ? coll l d e"
I0123 14:05:16.214338 140012029288448 graph.py:498] 
I0123 14:05:16.214389 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h d ? coll l d e
I0123 14:05:16.950511 140012029288448 ddar.py:60] Depth 1/1000 time = 0.7069001197814941
I0123 14:05:18.303095 140012029288448 ddar.py:60] Depth 2/1000 time = 1.352330207824707
I0123 14:05:19.943653 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6403570175170898
I0123 14:05:21.629304 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6854593753814697
I0123 14:05:23.867239 140012029288448 ddar.py:60] Depth 5/1000 time = 2.222771406173706
I0123 14:05:25.770529 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9031131267547607
I0123 14:05:25.779535 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:05:25.779621 140012029288448 alphageometry.py:566] LM output (score=-2.452607): "m : D c g g m 16 ;"
I0123 14:05:25.779658 140012029288448 alphageometry.py:567] Translation: "m = on_circle m g c"

I0123 14:05:25.779695 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g c ? coll l d e"
I0123 14:05:25.779840 140012029288448 graph.py:498] 
I0123 14:05:25.779910 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g c ? coll l d e
I0123 14:05:26.627706 140012029288448 ddar.py:60] Depth 1/1000 time = 0.816453218460083
I0123 14:05:28.143521 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5156593322753906
I0123 14:05:29.797503 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6537978649139404
I0123 14:05:31.515694 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7179818153381348
I0123 14:05:33.529744 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9988353252410889
I0123 14:05:35.464449 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9345345497131348
I0123 14:05:35.473441 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:05:35.473521 140012029288448 alphageometry.py:566] LM output (score=-2.479911): "m : T e g e m 16 ;"
I0123 14:05:35.473556 140012029288448 alphageometry.py:567] Translation: "m = on_tline m e e g"

I0123 14:05:35.473591 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e g ? coll l d e"
I0123 14:05:35.473739 140012029288448 graph.py:498] 
I0123 14:05:35.473790 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e g ? coll l d e
I0123 14:05:36.096506 140012029288448 ddar.py:60] Depth 1/1000 time = 0.5958366394042969
I0123 14:05:37.208090 140012029288448 ddar.py:60] Depth 2/1000 time = 1.1114110946655273
I0123 14:05:38.615430 140012029288448 ddar.py:60] Depth 3/1000 time = 1.4071543216705322
I0123 14:05:40.071856 140012029288448 ddar.py:60] Depth 4/1000 time = 1.456181526184082
I0123 14:05:41.742028 140012029288448 ddar.py:60] Depth 5/1000 time = 1.655198097229004
I0123 14:05:43.086782 140012029288448 ddar.py:60] Depth 6/1000 time = 1.3445818424224854
I0123 14:05:43.095621 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:05:43.095700 140012029288448 alphageometry.py:566] LM output (score=-2.545788): "m : T c g g m 16 ;"
I0123 14:05:43.095735 140012029288448 alphageometry.py:567] Translation: "m = on_tline m g c g"

I0123 14:05:43.095769 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m g c g ? coll l d e"
I0123 14:05:43.095908 140012029288448 graph.py:498] 
I0123 14:05:43.095962 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m g c g ? coll l d e
I0123 14:05:43.965594 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8429124355316162
I0123 14:05:45.059217 140012029288448 ddar.py:60] Depth 2/1000 time = 1.0934536457061768
I0123 14:05:46.435296 140012029288448 ddar.py:60] Depth 3/1000 time = 1.375913143157959
I0123 14:05:47.579778 140012029288448 ddar.py:60] Depth 4/1000 time = 1.1443121433258057
I0123 14:05:49.259063 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6622099876403809
I0123 14:05:50.861429 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6021966934204102
I0123 14:05:50.869827 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:05:50.869903 140012029288448 alphageometry.py:566] LM output (score=-2.574831): "m : T f h f m 16 ;"
I0123 14:05:50.869957 140012029288448 alphageometry.py:567] Translation: "m = on_tline m f f h"

I0123 14:05:50.869995 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m f f h ? coll l d e"
I0123 14:05:50.870133 140012029288448 graph.py:498] 
I0123 14:05:50.870183 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m f f h ? coll l d e
I0123 14:05:51.755199 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8561136722564697
I0123 14:05:52.884815 140012029288448 ddar.py:60] Depth 2/1000 time = 1.1294543743133545
I0123 14:05:54.009052 140012029288448 ddar.py:60] Depth 3/1000 time = 1.1240649223327637
I0123 14:05:55.433415 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4241833686828613
I0123 14:05:57.124320 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6754415035247803
I0123 14:05:58.761085 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6365671157836914
I0123 14:05:58.769917 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:05:58.769994 140012029288448 alphageometry.py:566] LM output (score=-2.601722): "m : D c h i m 16 D c i h m 17 ;"
I0123 14:05:58.770030 140012029288448 alphageometry.py:567] Translation: "m = eqdistance m i c h, eqdistance m h c i"

I0123 14:05:58.770066 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = eqdistance m i c h, eqdistance m h c i ? coll l d e"
I0123 14:05:58.770210 140012029288448 graph.py:498] 
I0123 14:05:58.770264 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = eqdistance m i c h, eqdistance m h c i ? coll l d e
I0123 14:05:59.832254 140012029288448 ddar.py:60] Depth 1/1000 time = 1.017622709274292
I0123 14:06:01.138741 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3063006401062012
I0123 14:06:02.459982 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3210556507110596
I0123 14:06:04.115263 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6551051139831543
I0123 14:06:05.801707 140012029288448 ddar.py:60] Depth 5/1000 time = 1.68626070022583
I0123 14:06:07.790191 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9722058773040771
I0123 14:06:09.968544 140012029288448 ddar.py:60] Depth 7/1000 time = 2.1781885623931885
I0123 14:06:09.977837 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:06:09.977923 140012029288448 alphageometry.py:566] LM output (score=-2.631711): "m : D c h c m 16 D g h g m 17 ;"
I0123 14:06:09.977959 140012029288448 alphageometry.py:567] Translation: "m = on_circle m c h, on_circle m g h"

I0123 14:06:09.977994 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m c h, on_circle m g h ? coll l d e"
I0123 14:06:09.978141 140012029288448 graph.py:498] 
I0123 14:06:09.978196 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m c h, on_circle m g h ? coll l d e
I0123 14:06:10.748209 140012029288448 ddar.py:60] Depth 1/1000 time = 0.7251133918762207
I0123 14:06:12.108620 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3602571487426758
I0123 14:06:13.736902 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6280953884124756
I0123 14:06:15.441845 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7047536373138428
I0123 14:06:17.485017 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0235157012939453
I0123 14:06:19.142834 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6576299667358398
I0123 14:06:19.151989 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:06:19.152075 140012029288448 alphageometry.py:566] LM output (score=-2.717668): "m : D e f e m 16 D e f f m 17 ;"
I0123 14:06:19.152112 140012029288448 alphageometry.py:567] Translation: "m = on_circle m e f, on_circle m f e"

I0123 14:06:19.152148 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m e f, on_circle m f e ? coll l d e"
I0123 14:06:19.152294 140012029288448 graph.py:498] 
I0123 14:06:19.152344 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m e f, on_circle m f e ? coll l d e
I0123 14:06:20.209561 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0172317028045654
I0123 14:06:21.590567 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3808116912841797
I0123 14:06:23.277267 140012029288448 ddar.py:60] Depth 3/1000 time = 1.686509609222412
I0123 14:06:25.013680 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7361829280853271
I0123 14:06:26.451162 140012029288448 ddar.py:60] Depth 5/1000 time = 1.4367120265960693
I0123 14:06:28.899816 140012029288448 ddar.py:60] Depth 6/1000 time = 2.424987554550171
I0123 14:06:30.936525 140012029288448 ddar.py:60] Depth 7/1000 time = 2.036527633666992
I0123 14:06:30.946576 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:06:30.946692 140012029288448 alphageometry.py:566] LM output (score=-2.783246): "m : C h i m 16 D h m i m 17 ;"
I0123 14:06:30.946731 140012029288448 alphageometry.py:567] Translation: "m = on_line m h i, on_bline m i h"

I0123 14:06:30.946768 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m h i, on_bline m i h ? coll l d e"
I0123 14:06:30.946919 140012029288448 graph.py:498] 
I0123 14:06:30.946976 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m h i, on_bline m i h ? coll l d e
I0123 14:06:32.063008 140012029288448 ddar.py:60] Depth 1/1000 time = 1.080667495727539
I0123 14:06:33.482146 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4189600944519043
I0123 14:06:35.536904 140012029288448 ddar.py:60] Depth 3/1000 time = 2.0545806884765625
I0123 14:06:37.333591 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7965080738067627
I0123 14:06:39.431738 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0977818965911865
I0123 14:06:41.513303 140012029288448 ddar.py:60] Depth 6/1000 time = 2.068675994873047
I0123 14:06:43.819022 140012029288448 ddar.py:60] Depth 7/1000 time = 2.3055319786071777
I0123 14:06:43.827603 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:06:43.827700 140012029288448 alphageometry.py:566] LM output (score=-2.789436): "m : D c h c m 16 D e h e m 17 ;"
I0123 14:06:43.827748 140012029288448 alphageometry.py:567] Translation: "m = on_circle m c h, on_circle m e h"

I0123 14:06:43.827790 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m c h, on_circle m e h ? coll l d e"
I0123 14:06:43.827938 140012029288448 graph.py:498] 
I0123 14:06:43.827992 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m c h, on_circle m e h ? coll l d e
I0123 14:06:44.602699 140012029288448 ddar.py:60] Depth 1/1000 time = 0.7298314571380615
I0123 14:06:46.021686 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4188344478607178
I0123 14:06:47.964819 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9429593086242676
I0123 14:06:50.013942 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0489213466644287
I0123 14:06:52.507196 140012029288448 ddar.py:60] Depth 5/1000 time = 2.466902256011963
I0123 14:06:54.921782 140012029288448 ddar.py:60] Depth 6/1000 time = 2.41441011428833
I0123 14:06:57.398585 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4653992652893066
I0123 14:06:57.402170 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:06:57.402247 140012029288448 alphageometry.py:566] LM output (score=-2.810967): "m : C f i m 16 D f h h m 17 ;"
I0123 14:06:57.402284 140012029288448 alphageometry.py:567] Translation: "m = on_line m f i, on_circle m h f"

I0123 14:06:57.402322 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m h f ? coll l d e"
I0123 14:06:57.402466 140012029288448 graph.py:498] 
I0123 14:06:57.402516 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m h f ? coll l d e
I0123 14:06:58.314056 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8817465305328369
I0123 14:06:59.952275 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6380629539489746
I0123 14:07:01.737259 140012029288448 ddar.py:60] Depth 3/1000 time = 1.7848002910614014
I0123 14:07:03.587002 140012029288448 ddar.py:60] Depth 4/1000 time = 1.8495101928710938
I0123 14:07:05.478723 140012029288448 ddar.py:60] Depth 5/1000 time = 1.891350269317627
I0123 14:07:07.475131 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9962058067321777
I0123 14:07:09.440316 140012029288448 ddar.py:60] Depth 7/1000 time = 1.9650168418884277
I0123 14:07:11.703628 140012029288448 ddar.py:60] Depth 8/1000 time = 2.245026111602783
I0123 14:07:13.928491 140012029288448 ddar.py:60] Depth 9/1000 time = 2.2246878147125244
I0123 14:07:13.937364 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:07:13.937449 140012029288448 alphageometry.py:566] LM output (score=-2.854909): "m : D d g g m 16 ;"
I0123 14:07:13.937484 140012029288448 alphageometry.py:567] Translation: "m = on_circle m g d"

I0123 14:07:13.937521 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g d ? coll l d e"
I0123 14:07:13.937669 140012029288448 graph.py:498] 
I0123 14:07:13.937723 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g d ? coll l d e
I0123 14:07:14.779194 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8116018772125244
I0123 14:07:16.351463 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5721077919006348
I0123 14:07:18.068830 140012029288448 ddar.py:60] Depth 3/1000 time = 1.7171986103057861
I0123 14:07:19.823091 140012029288448 ddar.py:60] Depth 4/1000 time = 1.754063367843628
I0123 14:07:21.560694 140012029288448 ddar.py:60] Depth 5/1000 time = 1.722350835800171
I0123 14:07:23.507407 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9465365409851074
I0123 14:07:23.516933 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:07:23.517016 140012029288448 alphageometry.py:566] LM output (score=-2.879028): "m : D e f f m 16 D e h h m 17 ;"
I0123 14:07:23.517051 140012029288448 alphageometry.py:567] Translation: "m = on_circle m f e, on_circle m h e"

I0123 14:07:23.517086 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m h e ? coll l d e"
I0123 14:07:23.517227 140012029288448 graph.py:498] 
I0123 14:07:23.517278 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m h e ? coll l d e
I0123 14:07:24.593183 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0311691761016846
I0123 14:07:25.990863 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3974087238311768
I0123 14:07:27.375149 140012029288448 ddar.py:60] Depth 3/1000 time = 1.384108066558838
I0123 14:07:29.134493 140012029288448 ddar.py:60] Depth 4/1000 time = 1.759124517440796
I0123 14:07:31.259683 140012029288448 ddar.py:60] Depth 5/1000 time = 2.1040468215942383
I0123 14:07:33.291932 140012029288448 ddar.py:60] Depth 6/1000 time = 2.0320792198181152
I0123 14:07:33.301716 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:07:33.301803 140012029288448 alphageometry.py:566] LM output (score=-2.904643): "m : T e f f m 16 ;"
I0123 14:07:33.301839 140012029288448 alphageometry.py:567] Translation: "m = on_tline m f e f"

I0123 14:07:33.301874 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m f e f ? coll l d e"
I0123 14:07:33.302016 140012029288448 graph.py:498] 
I0123 14:07:33.302068 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m f e f ? coll l d e
I0123 14:07:34.257732 140012029288448 ddar.py:60] Depth 1/1000 time = 0.927370548248291
I0123 14:07:35.108921 140012029288448 ddar.py:60] Depth 2/1000 time = 0.8510165214538574
I0123 14:07:36.553015 140012029288448 ddar.py:60] Depth 3/1000 time = 1.4439353942871094
I0123 14:07:38.061470 140012029288448 ddar.py:60] Depth 4/1000 time = 1.5082716941833496
I0123 14:07:39.928802 140012029288448 ddar.py:60] Depth 5/1000 time = 1.8488881587982178
I0123 14:07:41.389306 140012029288448 ddar.py:60] Depth 6/1000 time = 1.4603235721588135
I0123 14:07:41.397797 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:07:41.397872 140012029288448 alphageometry.py:566] LM output (score=-2.920681): "m : D b h h m 16 ;"
I0123 14:07:41.397922 140012029288448 alphageometry.py:567] Translation: "m = on_circle m h b"

I0123 14:07:41.397962 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h b ? coll l d e"
I0123 14:07:41.398099 140012029288448 graph.py:498] 
I0123 14:07:41.398148 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h b ? coll l d e
I0123 14:07:42.553367 140012029288448 ddar.py:60] Depth 1/1000 time = 1.1259267330169678
I0123 14:07:43.974121 140012029288448 ddar.py:60] Depth 2/1000 time = 1.420577049255371
I0123 14:07:45.724871 140012029288448 ddar.py:60] Depth 3/1000 time = 1.7505860328674316
I0123 14:07:47.191712 140012029288448 ddar.py:60] Depth 4/1000 time = 1.466606855392456
I0123 14:07:49.299793 140012029288448 ddar.py:60] Depth 5/1000 time = 2.092742919921875
I0123 14:07:51.293052 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9930627346038818
I0123 14:07:51.302192 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:07:51.302289 140012029288448 alphageometry.py:566] LM output (score=-2.929094): "m : T c e e m 16 ;"
I0123 14:07:51.302326 140012029288448 alphageometry.py:567] Translation: "m = on_tline m e c e"

I0123 14:07:51.302364 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e c e ? coll l d e"
I0123 14:07:51.302511 140012029288448 graph.py:498] 
I0123 14:07:51.302565 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e c e ? coll l d e
I0123 14:07:51.932757 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6024892330169678
I0123 14:07:53.094141 140012029288448 ddar.py:60] Depth 2/1000 time = 1.1612296104431152
I0123 14:07:54.566910 140012029288448 ddar.py:60] Depth 3/1000 time = 1.4726054668426514
I0123 14:07:56.089139 140012029288448 ddar.py:60] Depth 4/1000 time = 1.5220539569854736
I0123 14:07:57.557384 140012029288448 ddar.py:60] Depth 5/1000 time = 1.4517464637756348
I0123 14:07:59.261045 140012029288448 ddar.py:60] Depth 6/1000 time = 1.7034900188446045
I0123 14:07:59.269962 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:07:59.270039 140012029288448 alphageometry.py:566] LM output (score=-2.948628): "m : D c g i m 16 ;"
I0123 14:07:59.270075 140012029288448 alphageometry.py:567] Translation: "m = eqdistance m i c g"

I0123 14:07:59.270112 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = eqdistance m i c g ? coll l d e"
I0123 14:07:59.270250 140012029288448 graph.py:498] 
I0123 14:07:59.270300 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = eqdistance m i c g ? coll l d e
I0123 14:08:00.396573 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0962295532226562
I0123 14:08:01.435164 140012029288448 ddar.py:60] Depth 2/1000 time = 1.0384352207183838
I0123 14:08:03.055731 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6204092502593994
I0123 14:08:04.710489 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6545612812042236
I0123 14:08:06.638065 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9156816005706787
I0123 14:08:08.123090 140012029288448 ddar.py:60] Depth 6/1000 time = 1.4848179817199707
I0123 14:08:08.132296 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:08:08.132409 140012029288448 alphageometry.py:566] LM output (score=-3.003096): "m : C e i m 16 D e m i m 17 ;"
I0123 14:08:08.132446 140012029288448 alphageometry.py:567] Translation: "m = on_line m e i, on_bline m i e"

I0123 14:08:08.132494 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_bline m i e ? coll l d e"
I0123 14:08:08.132654 140012029288448 graph.py:498] 
I0123 14:08:08.132710 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_bline m i e ? coll l d e
I0123 14:08:09.176225 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0094616413116455
I0123 14:08:10.429834 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2534289360046387
I0123 14:08:11.559854 140012029288448 ddar.py:60] Depth 3/1000 time = 1.129854440689087
I0123 14:08:13.056893 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4968633651733398
I0123 14:08:14.542302 140012029288448 ddar.py:60] Depth 5/1000 time = 1.4850149154663086
I0123 14:08:16.286430 140012029288448 ddar.py:60] Depth 6/1000 time = 1.731717824935913
I0123 14:08:17.959876 140012029288448 ddar.py:60] Depth 7/1000 time = 1.6732778549194336
I0123 14:08:17.968370 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:08:17.968450 140012029288448 alphageometry.py:566] LM output (score=-3.004288): "m : C e i m 16 T e i g m 17 ;"
I0123 14:08:17.968487 140012029288448 alphageometry.py:567] Translation: "m = on_line m e i, on_tline m g e i"

I0123 14:08:17.968525 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_tline m g e i ? coll l d e"
I0123 14:08:17.968668 140012029288448 graph.py:498] 
I0123 14:08:17.968718 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_tline m g e i ? coll l d e
I0123 14:08:18.655460 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6587536334991455
I0123 14:08:19.945622 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2900047302246094
I0123 14:08:21.655971 140012029288448 ddar.py:60] Depth 3/1000 time = 1.7101731300354004
I0123 14:08:23.056589 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4004402160644531
I0123 14:08:25.097397 140012029288448 ddar.py:60] Depth 5/1000 time = 2.023678779602051
I0123 14:08:27.074675 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9770946502685547
I0123 14:08:27.083806 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:08:27.083889 140012029288448 alphageometry.py:566] LM output (score=-3.039885): "m : D c h i m 16 D c m h i 17 ;"
I0123 14:08:27.083925 140012029288448 alphageometry.py:567] Translation: "m = eqdistance m i c h, eqdistance m c h i"

I0123 14:08:27.083962 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = eqdistance m i c h, eqdistance m c h i ? coll l d e"
I0123 14:08:27.084118 140012029288448 graph.py:498] 
I0123 14:08:27.084168 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = eqdistance m i c h, eqdistance m c h i ? coll l d e
I0123 14:08:28.185485 140012029288448 ddar.py:60] Depth 1/1000 time = 1.057096242904663
I0123 14:08:29.593580 140012029288448 ddar.py:60] Depth 2/1000 time = 1.407904863357544
I0123 14:08:30.935287 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3415000438690186
I0123 14:08:32.684699 140012029288448 ddar.py:60] Depth 4/1000 time = 1.74920654296875
I0123 14:08:34.415427 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7305364608764648
I0123 14:08:36.437930 140012029288448 ddar.py:60] Depth 6/1000 time = 2.007371664047241
I0123 14:08:38.021883 140012029288448 ddar.py:60] Depth 7/1000 time = 1.5837748050689697
I0123 14:08:38.030579 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:08:38.030674 140012029288448 alphageometry.py:540] Depth 1. There are 32 nodes to expand:
I0123 14:08:38.030712 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C e i m 16 D e i i m 17 ; x00
I0123 14:08:38.030743 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : T e i e m 16 ; x00
I0123 14:08:38.030771 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C e f m 16 D e m f m 17 ; x00
I0123 14:08:38.030796 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C f i m 16 D f i i m 17 ; x00
I0123 14:08:38.030821 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D f h h m 16 ; x00
I0123 14:08:38.030845 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D e i i m 16 ; x00
I0123 14:08:38.030870 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D e g g m 16 ; x00
I0123 14:08:38.030894 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : T c g c m 16 ; x00
I0123 14:08:38.030930 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C c g m 16 D c g g m 17 ; x00
I0123 14:08:38.030956 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C e g m 16 D e g g m 17 ; x00
I0123 14:08:38.030980 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D e f f m 16 D e i i m 17 ; x00
I0123 14:08:38.031004 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C f h m 16 D f h h m 17 ; x00
I0123 14:08:38.031028 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D d h h m 16 ; x00
I0123 14:08:38.031051 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D c g g m 16 ; x00
I0123 14:08:38.031075 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : T e g e m 16 ; x00
I0123 14:08:38.031099 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : T c g g m 16 ; x00
I0123 14:08:38.031123 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : T f h f m 16 ; x00
I0123 14:08:38.031147 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D c h i m 16 D c i h m 17 ; x00
I0123 14:08:38.031171 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D c h c m 16 D g h g m 17 ; x00
I0123 14:08:38.031198 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D e f e m 16 D e f f m 17 ; x00
I0123 14:08:38.031223 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C h i m 16 D h m i m 17 ; x00
I0123 14:08:38.031248 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D c h c m 16 D e h e m 17 ; x00
I0123 14:08:38.031271 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C f i m 16 D f h h m 17 ; x00
I0123 14:08:38.031295 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D d g g m 16 ; x00
I0123 14:08:38.031318 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D e f f m 16 D e h h m 17 ; x00
I0123 14:08:38.031342 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : T e f f m 16 ; x00
I0123 14:08:38.031365 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D b h h m 16 ; x00
I0123 14:08:38.031388 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : T c e e m 16 ; x00
I0123 14:08:38.031411 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D c g i m 16 ; x00
I0123 14:08:38.031434 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C e i m 16 D e m i m 17 ; x00
I0123 14:08:38.031460 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C e i m 16 T e i g m 17 ; x00
I0123 14:08:38.031483 140012029288448 alphageometry.py:544] {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D c h i m 16 D c m h i 17 ; x00
I0123 14:08:38.031509 140012029288448 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C e i m 16 D e i i m 17 ; x00
I0123 14:08:45.590620 140012029288448 alphageometry.py:566] LM output (score=-1.577864): "n : T c g g n 18 ;"
I0123 14:08:45.590778 140012029288448 alphageometry.py:567] Translation: "n = on_tline n g c g"

I0123 14:08:45.590827 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n g c g ? coll l d e"
I0123 14:08:45.590973 140012029288448 graph.py:498] 
I0123 14:08:45.591023 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n g c g ? coll l d e
I0123 14:08:46.942360 140012029288448 ddar.py:60] Depth 1/1000 time = 1.3181068897247314
I0123 14:08:48.659914 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7173759937286377
I0123 14:08:50.912261 140012029288448 ddar.py:60] Depth 3/1000 time = 2.252166986465454
I0123 14:08:53.275759 140012029288448 ddar.py:60] Depth 4/1000 time = 2.363307237625122
I0123 14:08:55.617747 140012029288448 ddar.py:60] Depth 5/1000 time = 2.341580629348755
I0123 14:08:58.528819 140012029288448 ddar.py:60] Depth 6/1000 time = 2.8762080669403076
I0123 14:09:01.309041 140012029288448 ddar.py:60] Depth 7/1000 time = 2.7799768447875977
I0123 14:09:01.321092 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:09:01.321149 140012029288448 alphageometry.py:566] LM output (score=-1.891931): "n : T c e e n 18 ;"
I0123 14:09:01.321184 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c e"

I0123 14:09:01.321224 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e c e ? coll l d e"
I0123 14:09:01.321380 140012029288448 graph.py:498] 
I0123 14:09:01.321439 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e c e ? coll l d e
I0123 14:09:02.324341 140012029288448 ddar.py:60] Depth 1/1000 time = 0.968529462814331
I0123 14:09:04.120562 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7960522174835205
I0123 14:09:06.352472 140012029288448 ddar.py:60] Depth 3/1000 time = 2.231740713119507
I0123 14:09:08.668076 140012029288448 ddar.py:60] Depth 4/1000 time = 2.3154304027557373
I0123 14:09:10.959562 140012029288448 ddar.py:60] Depth 5/1000 time = 2.2910749912261963
I0123 14:09:13.746241 140012029288448 ddar.py:60] Depth 6/1000 time = 2.759608030319214
I0123 14:09:16.433681 140012029288448 ddar.py:60] Depth 7/1000 time = 2.6872737407684326
I0123 14:09:16.444920 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:09:16.444974 140012029288448 alphageometry.py:566] LM output (score=-1.914842): "n : T c e c n 18 ;"
I0123 14:09:16.445009 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c e"

I0123 14:09:16.445045 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c c e ? coll l d e"
I0123 14:09:16.445190 140012029288448 graph.py:498] 
I0123 14:09:16.445241 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c c e ? coll l d e
I0123 14:09:17.819258 140012029288448 ddar.py:60] Depth 1/1000 time = 1.3404464721679688
I0123 14:09:19.801536 140012029288448 ddar.py:60] Depth 2/1000 time = 1.9821138381958008
I0123 14:09:22.020546 140012029288448 ddar.py:60] Depth 3/1000 time = 2.218827247619629
I0123 14:09:23.958860 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9381349086761475
I0123 14:09:26.220437 140012029288448 ddar.py:60] Depth 5/1000 time = 2.261157274246216
I0123 14:09:29.314680 140012029288448 ddar.py:60] Depth 6/1000 time = 3.066960573196411
I0123 14:09:31.992998 140012029288448 ddar.py:60] Depth 7/1000 time = 2.678148031234741
I0123 14:09:32.004445 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:09:32.004499 140012029288448 alphageometry.py:566] LM output (score=-1.920002): "n : T c d c n 18 ;"
I0123 14:09:32.004534 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c d"

I0123 14:09:32.004572 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c c d ? coll l d e"
I0123 14:09:32.004720 140012029288448 graph.py:498] 
I0123 14:09:32.004771 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c c d ? coll l d e
I0123 14:09:32.999867 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9618370532989502
I0123 14:09:34.978657 140012029288448 ddar.py:60] Depth 2/1000 time = 1.9786205291748047
I0123 14:09:37.260992 140012029288448 ddar.py:60] Depth 3/1000 time = 2.282151460647583
I0123 14:09:39.688132 140012029288448 ddar.py:60] Depth 4/1000 time = 2.426957368850708
I0123 14:09:42.116377 140012029288448 ddar.py:60] Depth 5/1000 time = 2.4278054237365723
I0123 14:09:45.097692 140012029288448 ddar.py:60] Depth 6/1000 time = 2.947702646255493
I0123 14:09:47.965826 140012029288448 ddar.py:60] Depth 7/1000 time = 2.8679537773132324
I0123 14:09:47.977927 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:09:47.977995 140012029288448 alphageometry.py:566] LM output (score=-2.006321): "n : T e f f n 18 ;"
I0123 14:09:47.978033 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f e f"

I0123 14:09:47.978072 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n f e f ? coll l d e"
I0123 14:09:47.978229 140012029288448 graph.py:498] 
I0123 14:09:47.978287 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n f e f ? coll l d e
I0123 14:09:48.980493 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9676518440246582
I0123 14:09:51.035486 140012029288448 ddar.py:60] Depth 2/1000 time = 2.054821491241455
I0123 14:09:53.330965 140012029288448 ddar.py:60] Depth 3/1000 time = 2.2953155040740967
I0123 14:09:55.704834 140012029288448 ddar.py:60] Depth 4/1000 time = 2.373689889907837
I0123 14:09:58.058647 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3533806800842285
I0123 14:10:01.445415 140012029288448 ddar.py:60] Depth 6/1000 time = 3.357414484024048
I0123 14:10:04.294120 140012029288448 ddar.py:60] Depth 7/1000 time = 2.848503351211548
I0123 14:10:04.304864 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:10:04.304917 140012029288448 alphageometry.py:566] LM output (score=-2.008707): "n : T c g c n 18 ;"
I0123 14:10:04.304951 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c g"

I0123 14:10:04.304987 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c c g ? coll l d e"
I0123 14:10:04.305137 140012029288448 graph.py:498] 
I0123 14:10:04.305192 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c c g ? coll l d e
I0123 14:10:05.294419 140012029288448 ddar.py:60] Depth 1/1000 time = 0.954432487487793
I0123 14:10:07.053319 140012029288448 ddar.py:60] Depth 2/1000 time = 1.758723497390747
I0123 14:10:09.398736 140012029288448 ddar.py:60] Depth 3/1000 time = 2.345249652862549
I0123 14:10:11.854984 140012029288448 ddar.py:60] Depth 4/1000 time = 2.4560670852661133
I0123 14:10:14.330642 140012029288448 ddar.py:60] Depth 5/1000 time = 2.475468873977661
I0123 14:10:16.823528 140012029288448 ddar.py:60] Depth 6/1000 time = 2.492461919784546
I0123 14:10:19.769418 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9130008220672607
I0123 14:10:22.611815 140012029288448 ddar.py:60] Depth 8/1000 time = 2.8421685695648193
I0123 14:10:22.623726 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:10:22.623783 140012029288448 alphageometry.py:566] LM output (score=-2.034431): "n : C c i n 18 D c n i n 19 ;"
I0123 14:10:22.623818 140012029288448 alphageometry.py:567] Translation: "n = on_line n c i, on_bline n i c"

I0123 14:10:22.623855 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_line n c i, on_bline n i c ? coll l d e"
I0123 14:10:22.624019 140012029288448 graph.py:498] 
I0123 14:10:22.624089 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_line n c i, on_bline n i c ? coll l d e
I0123 14:10:23.711843 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0451371669769287
I0123 14:10:25.736516 140012029288448 ddar.py:60] Depth 2/1000 time = 2.024513006210327
I0123 14:10:28.000498 140012029288448 ddar.py:60] Depth 3/1000 time = 2.2637972831726074
I0123 14:10:30.360286 140012029288448 ddar.py:60] Depth 4/1000 time = 2.359609603881836
I0123 14:10:32.690766 140012029288448 ddar.py:60] Depth 5/1000 time = 2.329922676086426
I0123 14:10:35.504943 140012029288448 ddar.py:60] Depth 6/1000 time = 2.7893645763397217
I0123 14:10:38.270836 140012029288448 ddar.py:60] Depth 7/1000 time = 2.765678882598877
I0123 14:10:38.281771 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:10:38.281843 140012029288448 alphageometry.py:566] LM output (score=-2.331826): "n : T c e h n 18 ;"
I0123 14:10:38.281878 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h c e"

I0123 14:10:38.281928 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n h c e ? coll l d e"
I0123 14:10:38.282092 140012029288448 graph.py:498] 
I0123 14:10:38.282148 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n h c e ? coll l d e
I0123 14:10:39.279037 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9635322093963623
I0123 14:10:41.135398 140012029288448 ddar.py:60] Depth 2/1000 time = 1.8561725616455078
I0123 14:10:43.378810 140012029288448 ddar.py:60] Depth 3/1000 time = 2.2432448863983154
I0123 14:10:45.705469 140012029288448 ddar.py:60] Depth 4/1000 time = 2.326478958129883
I0123 14:10:47.997401 140012029288448 ddar.py:60] Depth 5/1000 time = 2.2914955615997314
I0123 14:10:50.771573 140012029288448 ddar.py:60] Depth 6/1000 time = 2.746833086013794
I0123 14:10:53.478831 140012029288448 ddar.py:60] Depth 7/1000 time = 2.707087755203247
I0123 14:10:53.489574 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:10:53.489627 140012029288448 alphageometry.py:566] LM output (score=-2.341130): "n : C c f n 18 D c n f n 19 ;"
I0123 14:10:53.489668 140012029288448 alphageometry.py:567] Translation: "n = on_line n c f, on_bline n f c"

I0123 14:10:53.489706 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_line n c f, on_bline n f c ? coll l d e"
I0123 14:10:53.489856 140012029288448 graph.py:498] 
I0123 14:10:53.489906 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_line n c f, on_bline n f c ? coll l d e
I0123 14:10:55.031373 140012029288448 ddar.py:60] Depth 1/1000 time = 1.499511957168579
I0123 14:10:56.877695 140012029288448 ddar.py:60] Depth 2/1000 time = 1.8461408615112305
I0123 14:10:59.207927 140012029288448 ddar.py:60] Depth 3/1000 time = 2.3300435543060303
I0123 14:11:01.143014 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9348735809326172
I0123 14:11:03.483982 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3405895233154297
I0123 14:11:06.320731 140012029288448 ddar.py:60] Depth 6/1000 time = 2.8113653659820557
I0123 14:11:09.526906 140012029288448 ddar.py:60] Depth 7/1000 time = 3.205997943878174
I0123 14:11:09.538048 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:11:09.538102 140012029288448 alphageometry.py:566] LM output (score=-2.465521): "n : T c e g n 18 ;"
I0123 14:11:09.538136 140012029288448 alphageometry.py:567] Translation: "n = on_tline n g c e"

I0123 14:11:09.538173 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n g c e ? coll l d e"
I0123 14:11:09.538325 140012029288448 graph.py:498] 
I0123 14:11:09.538381 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n g c e ? coll l d e
I0123 14:11:10.530472 140012029288448 ddar.py:60] Depth 1/1000 time = 0.958197832107544
I0123 14:11:12.359937 140012029288448 ddar.py:60] Depth 2/1000 time = 1.829293966293335
I0123 14:11:14.645055 140012029288448 ddar.py:60] Depth 3/1000 time = 2.28493332862854
I0123 14:11:16.599510 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9542250633239746
I0123 14:11:18.937880 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3378188610076904
I0123 14:11:21.782876 140012029288448 ddar.py:60] Depth 6/1000 time = 2.8176448345184326
I0123 14:11:25.182920 140012029288448 ddar.py:60] Depth 7/1000 time = 3.399862051010132
I0123 14:11:28.184521 140012029288448 ddar.py:60] Depth 8/1000 time = 3.001425266265869
I0123 14:11:30.782820 140012029288448 ddar.py:60] Depth 9/1000 time = 2.582773208618164
I0123 14:11:30.783036 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:11:30.783084 140012029288448 alphageometry.py:566] LM output (score=-2.483262): "n : C e f n 18 D e n f n 19 ;"
I0123 14:11:30.783117 140012029288448 alphageometry.py:567] Translation: "n = on_line n e f, on_bline n f e"

I0123 14:11:30.783154 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_line n e f, on_bline n f e ? coll l d e"
I0123 14:11:30.783306 140012029288448 graph.py:498] 
I0123 14:11:30.783365 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_line n e f, on_bline n f e ? coll l d e
I0123 14:11:32.813034 140012029288448 ddar.py:60] Depth 1/1000 time = 1.9865233898162842
I0123 14:11:35.024271 140012029288448 ddar.py:60] Depth 2/1000 time = 2.2110331058502197
I0123 14:11:37.691192 140012029288448 ddar.py:60] Depth 3/1000 time = 2.666703462600708
I0123 14:11:40.858282 140012029288448 ddar.py:60] Depth 4/1000 time = 3.1668853759765625
I0123 14:11:43.588608 140012029288448 ddar.py:60] Depth 5/1000 time = 2.729918956756592
I0123 14:11:47.305068 140012029288448 ddar.py:60] Depth 6/1000 time = 3.6884326934814453
I0123 14:11:50.966964 140012029288448 ddar.py:60] Depth 7/1000 time = 3.6617162227630615
I0123 14:11:50.981169 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:11:50.981229 140012029288448 alphageometry.py:566] LM output (score=-2.608370): "n : T c e i n 18 ;"
I0123 14:11:50.981274 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i c e"

I0123 14:11:50.981316 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n i c e ? coll l d e"
I0123 14:11:50.981472 140012029288448 graph.py:498] 
I0123 14:11:50.981527 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n i c e ? coll l d e
I0123 14:11:51.983149 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9676547050476074
I0123 14:11:53.943664 140012029288448 ddar.py:60] Depth 2/1000 time = 1.9603524208068848
I0123 14:11:55.991281 140012029288448 ddar.py:60] Depth 3/1000 time = 2.0474112033843994
I0123 14:11:59.042749 140012029288448 ddar.py:60] Depth 4/1000 time = 3.051243305206299
I0123 14:12:01.178109 140012029288448 ddar.py:60] Depth 5/1000 time = 2.1349358558654785
I0123 14:12:04.260749 140012029288448 ddar.py:60] Depth 6/1000 time = 3.053856134414673
I0123 14:12:07.716260 140012029288448 ddar.py:60] Depth 7/1000 time = 3.4553351402282715
I0123 14:12:10.772145 140012029288448 ddar.py:60] Depth 8/1000 time = 3.043997287750244
I0123 14:12:10.775793 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:12:10.775877 140012029288448 alphageometry.py:566] LM output (score=-2.686154): "n : T e g e n 18 ;"
I0123 14:12:10.775913 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e g"

I0123 14:12:10.775948 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e e g ? coll l d e"
I0123 14:12:10.776112 140012029288448 graph.py:498] 
I0123 14:12:10.776169 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e e g ? coll l d e
I0123 14:12:11.765278 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9552457332611084
I0123 14:12:13.812324 140012029288448 ddar.py:60] Depth 2/1000 time = 2.0467689037323
I0123 14:12:16.226057 140012029288448 ddar.py:60] Depth 3/1000 time = 2.413525342941284
I0123 14:12:18.358952 140012029288448 ddar.py:60] Depth 4/1000 time = 2.132704496383667
I0123 14:12:20.859877 140012029288448 ddar.py:60] Depth 5/1000 time = 2.5007336139678955
I0123 14:12:23.410126 140012029288448 ddar.py:60] Depth 6/1000 time = 2.5498151779174805
I0123 14:12:26.377845 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9369592666625977
I0123 14:12:29.300553 140012029288448 ddar.py:60] Depth 8/1000 time = 2.922534942626953
I0123 14:12:29.313108 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:12:29.313173 140012029288448 alphageometry.py:566] LM output (score=-2.696004): "n : T b h b n 18 ;"
I0123 14:12:29.313209 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b h"

I0123 14:12:29.313248 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n b b h ? coll l d e"
I0123 14:12:29.313405 140012029288448 graph.py:498] 
I0123 14:12:29.313475 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n b b h ? coll l d e
I0123 14:12:30.783944 140012029288448 ddar.py:60] Depth 1/1000 time = 1.4364264011383057
I0123 14:12:32.360521 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5763099193572998
I0123 14:12:34.786981 140012029288448 ddar.py:60] Depth 3/1000 time = 2.426276683807373
I0123 14:12:37.298959 140012029288448 ddar.py:60] Depth 4/1000 time = 2.5117998123168945
I0123 14:12:39.832876 140012029288448 ddar.py:60] Depth 5/1000 time = 2.533710479736328
I0123 14:12:42.356496 140012029288448 ddar.py:60] Depth 6/1000 time = 2.523165464401245
I0123 14:12:45.258508 140012029288448 ddar.py:60] Depth 7/1000 time = 2.869929313659668
I0123 14:12:48.090229 140012029288448 ddar.py:60] Depth 8/1000 time = 2.831547260284424
I0123 14:12:48.102465 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:12:48.102529 140012029288448 alphageometry.py:566] LM output (score=-2.704625): "n : T e f e n 18 ;"
I0123 14:12:48.102564 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e f"

I0123 14:12:48.102604 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e e f ? coll l d e"
I0123 14:12:48.102760 140012029288448 graph.py:498] 
I0123 14:12:48.102816 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e e f ? coll l d e
I0123 14:12:49.111459 140012029288448 ddar.py:60] Depth 1/1000 time = 0.974452018737793
I0123 14:12:51.052733 140012029288448 ddar.py:60] Depth 2/1000 time = 1.9410889148712158
I0123 14:12:52.915997 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8630595207214355
I0123 14:12:55.290276 140012029288448 ddar.py:60] Depth 4/1000 time = 2.374055862426758
I0123 14:12:57.624972 140012029288448 ddar.py:60] Depth 5/1000 time = 2.334273099899292
I0123 14:13:00.442774 140012029288448 ddar.py:60] Depth 6/1000 time = 2.788987398147583
I0123 14:13:03.608665 140012029288448 ddar.py:60] Depth 7/1000 time = 3.165698289871216
I0123 14:13:03.619004 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:13:03.619058 140012029288448 alphageometry.py:566] LM output (score=-2.717550): "n : T c n e f 18 ;"
I0123 14:13:03.619093 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c e f"

I0123 14:13:03.619130 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c e f ? coll l d e"
I0123 14:13:03.619284 140012029288448 graph.py:498] 
I0123 14:13:03.619341 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c e f ? coll l d e
I0123 14:13:04.619063 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9654903411865234
I0123 14:13:06.484344 140012029288448 ddar.py:60] Depth 2/1000 time = 1.8651082515716553
I0123 14:13:08.826045 140012029288448 ddar.py:60] Depth 3/1000 time = 2.341466188430786
I0123 14:13:10.742983 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9166016578674316
I0123 14:13:13.108864 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3654041290283203
I0123 14:13:15.958918 140012029288448 ddar.py:60] Depth 6/1000 time = 2.820585012435913
I0123 14:13:18.718927 140012029288448 ddar.py:60] Depth 7/1000 time = 2.759827136993408
I0123 14:13:18.729042 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:13:18.729102 140012029288448 alphageometry.py:566] LM output (score=-2.733102): "n : T c g i n 18 ;"
I0123 14:13:18.729137 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i c g"

I0123 14:13:18.729175 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n i c g ? coll l d e"
I0123 14:13:18.729329 140012029288448 graph.py:498] 
I0123 14:13:18.729386 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n i c g ? coll l d e
I0123 14:13:20.188667 140012029288448 ddar.py:60] Depth 1/1000 time = 1.4250988960266113
I0123 14:13:21.998624 140012029288448 ddar.py:60] Depth 2/1000 time = 1.809779405593872
I0123 14:13:23.881296 140012029288448 ddar.py:60] Depth 3/1000 time = 1.882490634918213
I0123 14:13:26.353615 140012029288448 ddar.py:60] Depth 4/1000 time = 2.4721267223358154
I0123 14:13:28.799643 140012029288448 ddar.py:60] Depth 5/1000 time = 2.445552110671997
I0123 14:13:31.816958 140012029288448 ddar.py:60] Depth 6/1000 time = 2.9839541912078857
I0123 14:13:34.686157 140012029288448 ddar.py:60] Depth 7/1000 time = 2.869011640548706
I0123 14:13:34.697887 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:13:34.697947 140012029288448 alphageometry.py:566] LM output (score=-2.760495): "n : T c e f n 18 ;"
I0123 14:13:34.697981 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f c e"

I0123 14:13:34.698018 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n f c e ? coll l d e"
I0123 14:13:34.698168 140012029288448 graph.py:498] 
I0123 14:13:34.698222 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n f c e ? coll l d e
I0123 14:13:35.700572 140012029288448 ddar.py:60] Depth 1/1000 time = 0.968440055847168
I0123 14:13:37.816311 140012029288448 ddar.py:60] Depth 2/1000 time = 2.115565776824951
I0123 14:13:40.166156 140012029288448 ddar.py:60] Depth 3/1000 time = 2.349670886993408
I0123 14:13:42.108067 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9417219161987305
I0123 14:13:44.467175 140012029288448 ddar.py:60] Depth 5/1000 time = 2.358677625656128
I0123 14:13:47.340100 140012029288448 ddar.py:60] Depth 6/1000 time = 2.845339059829712
I0123 14:13:50.140215 140012029288448 ddar.py:60] Depth 7/1000 time = 2.799809455871582
I0123 14:13:50.151986 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:13:50.152065 140012029288448 alphageometry.py:566] LM output (score=-2.763158): "n : C f i n 18 D f i i n 19 ;"
I0123 14:13:50.152102 140012029288448 alphageometry.py:567] Translation: "n = on_line n f i, on_circle n i f"

I0123 14:13:50.152142 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_line n f i, on_circle n i f ? coll l d e"
I0123 14:13:50.152311 140012029288448 graph.py:498] 
I0123 14:13:50.152369 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_line n f i, on_circle n i f ? coll l d e
I0123 14:13:52.072201 140012029288448 ddar.py:60] Depth 1/1000 time = 1.8788697719573975
I0123 14:13:55.201014 140012029288448 ddar.py:60] Depth 2/1000 time = 3.128643751144409
I0123 14:13:59.195575 140012029288448 ddar.py:60] Depth 3/1000 time = 3.9943768978118896
I0123 14:14:03.878067 140012029288448 ddar.py:60] Depth 4/1000 time = 4.68230938911438
I0123 14:14:08.058950 140012029288448 ddar.py:60] Depth 5/1000 time = 4.180335283279419
I0123 14:14:13.069465 140012029288448 ddar.py:60] Depth 6/1000 time = 4.964457035064697
I0123 14:14:17.900085 140012029288448 ddar.py:60] Depth 7/1000 time = 4.830441474914551
I0123 14:14:17.916102 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:14:17.916157 140012029288448 alphageometry.py:566] LM output (score=-2.887603): "n : T e l e n 18 ;"
I0123 14:14:17.916191 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e l"

I0123 14:14:17.916227 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e e l ? coll l d e"
I0123 14:14:17.916378 140012029288448 graph.py:498] 
I0123 14:14:17.916432 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e e l ? coll l d e
I0123 14:14:19.395598 140012029288448 ddar.py:60] Depth 1/1000 time = 1.4453110694885254
I0123 14:14:21.480235 140012029288448 ddar.py:60] Depth 2/1000 time = 2.0842599868774414
I0123 14:14:23.406872 140012029288448 ddar.py:60] Depth 3/1000 time = 1.926455020904541
I0123 14:14:26.025109 140012029288448 ddar.py:60] Depth 4/1000 time = 2.61800217628479
I0123 14:14:28.581936 140012029288448 ddar.py:60] Depth 5/1000 time = 2.5562660694122314
I0123 14:14:31.624229 140012029288448 ddar.py:60] Depth 6/1000 time = 3.0112903118133545
I0123 14:14:34.084251 140012029288448 ddar.py:60] Depth 7/1000 time = 2.459846258163452
I0123 14:14:34.096755 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:14:34.096811 140012029288448 alphageometry.py:566] LM output (score=-2.888339): "n : T b f b n 18 ;"
I0123 14:14:34.096847 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b f"

I0123 14:14:34.096886 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n b b f ? coll l d e"
I0123 14:14:34.097050 140012029288448 graph.py:498] 
I0123 14:14:34.097112 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n b b f ? coll l d e
I0123 14:14:35.600006 140012029288448 ddar.py:60] Depth 1/1000 time = 1.4680736064910889
I0123 14:14:37.223010 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6228296756744385
I0123 14:14:39.621860 140012029288448 ddar.py:60] Depth 3/1000 time = 2.39868426322937
I0123 14:14:42.173733 140012029288448 ddar.py:60] Depth 4/1000 time = 2.5516932010650635
I0123 14:14:44.701469 140012029288448 ddar.py:60] Depth 5/1000 time = 2.5272634029388428
I0123 14:14:47.883466 140012029288448 ddar.py:60] Depth 6/1000 time = 3.1466939449310303
I0123 14:14:50.923592 140012029288448 ddar.py:60] Depth 7/1000 time = 3.0399553775787354
I0123 14:14:50.935370 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:14:50.935432 140012029288448 alphageometry.py:566] LM output (score=-2.889521): "n : C f i n 18 D f n i n 19 ;"
I0123 14:14:50.935466 140012029288448 alphageometry.py:567] Translation: "n = on_line n f i, on_bline n i f"

I0123 14:14:50.935503 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_line n f i, on_bline n i f ? coll l d e"
I0123 14:14:50.935662 140012029288448 graph.py:498] 
I0123 14:14:50.935719 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_line n f i, on_bline n i f ? coll l d e
I0123 14:14:52.018596 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0400464534759521
I0123 14:14:53.946991 140012029288448 ddar.py:60] Depth 2/1000 time = 1.9282338619232178
I0123 14:14:55.819040 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8718831539154053
I0123 14:14:58.252123 140012029288448 ddar.py:60] Depth 4/1000 time = 2.4329044818878174
I0123 14:15:00.666450 140012029288448 ddar.py:60] Depth 5/1000 time = 2.41363525390625
I0123 14:15:03.602765 140012029288448 ddar.py:60] Depth 6/1000 time = 2.910292387008667
I0123 14:15:06.441080 140012029288448 ddar.py:60] Depth 7/1000 time = 2.8380284309387207
I0123 14:15:06.452029 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:15:06.452084 140012029288448 alphageometry.py:566] LM output (score=-2.897013): "n : T e i e n 18 ;"
I0123 14:15:06.452119 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e i"

I0123 14:15:06.452157 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e e i ? coll l d e"
I0123 14:15:06.452308 140012029288448 graph.py:498] 
I0123 14:15:06.452364 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e e i ? coll l d e
I0123 14:15:07.466309 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9802372455596924
I0123 14:15:09.566280 140012029288448 ddar.py:60] Depth 2/1000 time = 2.0998029708862305
I0123 14:15:11.998154 140012029288448 ddar.py:60] Depth 3/1000 time = 2.4317026138305664
I0123 14:15:14.544784 140012029288448 ddar.py:60] Depth 4/1000 time = 2.546449661254883
I0123 14:15:16.546367 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0011396408081055
I0123 14:15:19.563938 140012029288448 ddar.py:60] Depth 6/1000 time = 2.9854376316070557
I0123 14:15:22.514928 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9507675170898438
I0123 14:15:22.527210 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:15:22.527288 140012029288448 alphageometry.py:566] LM output (score=-2.998038): "n : T c g e n 18 ;"
I0123 14:15:22.527323 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c g"

I0123 14:15:22.527373 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e c g ? coll l d e"
I0123 14:15:22.527537 140012029288448 graph.py:498] 
I0123 14:15:22.527592 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e c g ? coll l d e
I0123 14:15:24.073736 140012029288448 ddar.py:60] Depth 1/1000 time = 1.5123639106750488
I0123 14:15:25.623357 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5494177341461182
I0123 14:15:28.028512 140012029288448 ddar.py:60] Depth 3/1000 time = 2.404979705810547
I0123 14:15:30.545121 140012029288448 ddar.py:60] Depth 4/1000 time = 2.51642107963562
I0123 14:15:33.060991 140012029288448 ddar.py:60] Depth 5/1000 time = 2.5154476165771484
I0123 14:15:35.561712 140012029288448 ddar.py:60] Depth 6/1000 time = 2.466458320617676
I0123 14:15:38.467630 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9057369232177734
I0123 14:15:38.479658 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:15:38.479716 140012029288448 alphageometry.py:566] LM output (score=-3.050923): "n : T f h f n 18 ;"
I0123 14:15:38.479752 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f f h"

I0123 14:15:38.479790 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n f f h ? coll l d e"
I0123 14:15:38.479939 140012029288448 graph.py:498] 
I0123 14:15:38.479990 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n f f h ? coll l d e
I0123 14:15:40.045185 140012029288448 ddar.py:60] Depth 1/1000 time = 1.53200101852417
I0123 14:15:41.443427 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3980238437652588
I0123 14:15:43.954622 140012029288448 ddar.py:60] Depth 3/1000 time = 2.510917901992798
I0123 14:15:46.633085 140012029288448 ddar.py:60] Depth 4/1000 time = 2.678250789642334
I0123 14:15:48.725458 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0922110080718994
I0123 14:15:51.327812 140012029288448 ddar.py:60] Depth 6/1000 time = 2.60193133354187
I0123 14:15:54.359391 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9994847774505615
I0123 14:15:57.351928 140012029288448 ddar.py:60] Depth 8/1000 time = 2.9923603534698486
I0123 14:15:57.363649 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:15:57.363703 140012029288448 alphageometry.py:566] LM output (score=-3.064465): "n : T c f f n 18 ;"
I0123 14:15:57.363737 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f c f"

I0123 14:15:57.363775 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n f c f ? coll l d e"
I0123 14:15:57.363946 140012029288448 graph.py:498] 
I0123 14:15:57.364005 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n f c f ? coll l d e
I0123 14:15:58.369176 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9714765548706055
I0123 14:16:00.545483 140012029288448 ddar.py:60] Depth 2/1000 time = 2.176098585128784
I0123 14:16:02.493119 140012029288448 ddar.py:60] Depth 3/1000 time = 1.947340726852417
I0123 14:16:05.128598 140012029288448 ddar.py:60] Depth 4/1000 time = 2.6352760791778564
I0123 14:16:07.700679 140012029288448 ddar.py:60] Depth 5/1000 time = 2.571690559387207
I0123 14:16:10.805647 140012029288448 ddar.py:60] Depth 6/1000 time = 3.0748066902160645
I0123 14:16:13.290241 140012029288448 ddar.py:60] Depth 7/1000 time = 2.484426259994507
I0123 14:16:13.302629 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:16:13.302684 140012029288448 alphageometry.py:566] LM output (score=-3.083567): "n : T c d e n 18 ;"
I0123 14:16:13.302720 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c d"

I0123 14:16:13.302757 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e c d ? coll l d e"
I0123 14:16:13.302911 140012029288448 graph.py:498] 
I0123 14:16:13.302970 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n e c d ? coll l d e
I0123 14:16:14.838953 140012029288448 ddar.py:60] Depth 1/1000 time = 1.5023689270019531
I0123 14:16:16.234960 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3958401679992676
I0123 14:16:18.678689 140012029288448 ddar.py:60] Depth 3/1000 time = 2.443516254425049
I0123 14:16:21.264080 140012029288448 ddar.py:60] Depth 4/1000 time = 2.585092544555664
I0123 14:16:23.797822 140012029288448 ddar.py:60] Depth 5/1000 time = 2.5332655906677246
I0123 14:16:26.373854 140012029288448 ddar.py:60] Depth 6/1000 time = 2.541893482208252
I0123 14:16:29.365499 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9914743900299072
I0123 14:16:29.377697 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:16:29.377754 140012029288448 alphageometry.py:566] LM output (score=-3.084892): "n : T c n e i 18 ;"
I0123 14:16:29.377789 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c e i"

I0123 14:16:29.377827 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c e i ? coll l d e"
I0123 14:16:29.377983 140012029288448 graph.py:498] 
I0123 14:16:29.378039 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c e i ? coll l d e
I0123 14:16:30.926616 140012029288448 ddar.py:60] Depth 1/1000 time = 1.5147922039031982
I0123 14:16:32.306363 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3795733451843262
I0123 14:16:34.743246 140012029288448 ddar.py:60] Depth 3/1000 time = 2.4367141723632812
I0123 14:16:37.313618 140012029288448 ddar.py:60] Depth 4/1000 time = 2.570172071456909
I0123 14:16:39.896043 140012029288448 ddar.py:60] Depth 5/1000 time = 2.5819687843322754
I0123 14:16:42.390734 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4629459381103516
I0123 14:16:45.350815 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9598984718322754
I0123 14:16:45.362154 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:16:45.362209 140012029288448 alphageometry.py:566] LM output (score=-3.093318): "n : T c d f n 18 ;"
I0123 14:16:45.362243 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f c d"

I0123 14:16:45.362279 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n f c d ? coll l d e"
I0123 14:16:45.362434 140012029288448 graph.py:498] 
I0123 14:16:45.362489 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n f c d ? coll l d e
I0123 14:16:46.927188 140012029288448 ddar.py:60] Depth 1/1000 time = 1.5310115814208984
I0123 14:16:48.519861 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5925054550170898
I0123 14:16:51.012559 140012029288448 ddar.py:60] Depth 3/1000 time = 2.4925119876861572
I0123 14:16:53.035257 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0225043296813965
I0123 14:16:55.569920 140012029288448 ddar.py:60] Depth 5/1000 time = 2.5342743396759033
I0123 14:16:58.758575 140012029288448 ddar.py:60] Depth 6/1000 time = 3.154050588607788
I0123 14:17:01.800694 140012029288448 ddar.py:60] Depth 7/1000 time = 3.0418787002563477
I0123 14:17:01.812409 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:17:01.812463 140012029288448 alphageometry.py:566] LM output (score=-3.156372): "n : T c n f h 18 ;"
I0123 14:17:01.812497 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c f h"

I0123 14:17:01.812534 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c f h ? coll l d e"
I0123 14:17:01.812688 140012029288448 graph.py:498] 
I0123 14:17:01.812745 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c f h ? coll l d e
I0123 14:17:02.804298 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9573132991790771
I0123 14:17:04.946739 140012029288448 ddar.py:60] Depth 2/1000 time = 2.142273187637329
I0123 14:17:06.846829 140012029288448 ddar.py:60] Depth 3/1000 time = 1.899918794631958
I0123 14:17:09.396491 140012029288448 ddar.py:60] Depth 4/1000 time = 2.549480438232422
I0123 14:17:11.945125 140012029288448 ddar.py:60] Depth 5/1000 time = 2.548236131668091
I0123 14:17:15.045290 140012029288448 ddar.py:60] Depth 6/1000 time = 3.06758189201355
I0123 14:17:17.480052 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4345359802246094
I0123 14:17:17.491810 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:17:17.491899 140012029288448 alphageometry.py:566] LM output (score=-3.231338): "n : T c n d e 18 ;"
I0123 14:17:17.491934 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c d e"

I0123 14:17:17.491986 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c d e ? coll l d e"
I0123 14:17:17.492179 140012029288448 graph.py:498] 
I0123 14:17:17.492235 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n c d e ? coll l d e
I0123 14:17:19.113035 140012029288448 ddar.py:60] Depth 1/1000 time = 1.5867269039154053
I0123 14:17:20.718397 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6051902770996094
I0123 14:17:23.101824 140012029288448 ddar.py:60] Depth 3/1000 time = 2.3832578659057617
I0123 14:17:25.586989 140012029288448 ddar.py:60] Depth 4/1000 time = 2.4849789142608643
I0123 14:17:28.037625 140012029288448 ddar.py:60] Depth 5/1000 time = 2.45023250579834
I0123 14:17:30.438859 140012029288448 ddar.py:60] Depth 6/1000 time = 2.3722617626190186
I0123 14:17:33.299610 140012029288448 ddar.py:60] Depth 7/1000 time = 2.860562324523926
I0123 14:17:33.309850 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:17:33.309914 140012029288448 alphageometry.py:566] LM output (score=-3.279186): "n : T b n c e 18 ;"
I0123 14:17:33.309947 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b c e"

I0123 14:17:33.309987 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n b c e ? coll l d e"
I0123 14:17:33.310144 140012029288448 graph.py:498] 
I0123 14:17:33.310195 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e i, on_circle m i e; n = on_tline n b c e ? coll l d e
I0123 14:17:34.902063 140012029288448 ddar.py:60] Depth 1/1000 time = 1.5589041709899902
I0123 14:17:36.314574 140012029288448 ddar.py:60] Depth 2/1000 time = 1.412217617034912
I0123 14:17:38.778749 140012029288448 ddar.py:60] Depth 3/1000 time = 2.4639787673950195
I0123 14:17:41.308015 140012029288448 ddar.py:60] Depth 4/1000 time = 2.5290820598602295
I0123 14:17:43.236664 140012029288448 ddar.py:60] Depth 5/1000 time = 1.928227186203003
I0123 14:17:46.223068 140012029288448 ddar.py:60] Depth 6/1000 time = 2.9584786891937256
I0123 14:17:49.159857 140012029288448 ddar.py:60] Depth 7/1000 time = 2.936614751815796
I0123 14:17:49.171400 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:17:49.171459 140012029288448 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : T e i e m 16 ; x00
I0123 14:17:56.192886 140012029288448 alphageometry.py:566] LM output (score=-0.967185): "n : P e m i n 17 ;"
I0123 14:17:56.193029 140012029288448 alphageometry.py:567] Translation: "n = on_pline n i e m"

I0123 14:17:56.193078 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_pline n i e m ? coll l d e"
I0123 14:17:56.193225 140012029288448 graph.py:498] 
I0123 14:17:56.193289 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_pline n i e m ? coll l d e
I0123 14:17:56.895916 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6719214916229248
I0123 14:17:58.408996 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5129034519195557
I0123 14:17:59.633472 140012029288448 ddar.py:60] Depth 3/1000 time = 1.2242848873138428
I0123 14:18:01.503969 140012029288448 ddar.py:60] Depth 4/1000 time = 1.8702647686004639
I0123 14:18:03.055497 140012029288448 ddar.py:60] Depth 5/1000 time = 1.534888505935669
I0123 14:18:05.094706 140012029288448 ddar.py:60] Depth 6/1000 time = 2.039013624191284
I0123 14:18:05.103763 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:18:05.103817 140012029288448 alphageometry.py:566] LM output (score=-1.195353): "n : P e i m n 17 ;"
I0123 14:18:05.103852 140012029288448 alphageometry.py:567] Translation: "n = on_pline n m e i"

I0123 14:18:05.103889 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_pline n m e i ? coll l d e"
I0123 14:18:05.104048 140012029288448 graph.py:498] 
I0123 14:18:05.104104 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_pline n m e i ? coll l d e
I0123 14:18:05.800441 140012029288448 ddar.py:60] Depth 1/1000 time = 0.66501784324646
I0123 14:18:07.312986 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5123794078826904
I0123 14:18:08.534513 140012029288448 ddar.py:60] Depth 3/1000 time = 1.2213544845581055
I0123 14:18:10.396575 140012029288448 ddar.py:60] Depth 4/1000 time = 1.861870288848877
I0123 14:18:11.937431 140012029288448 ddar.py:60] Depth 5/1000 time = 1.5241284370422363
I0123 14:18:13.986290 140012029288448 ddar.py:60] Depth 6/1000 time = 2.048689126968384
I0123 14:18:13.995232 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:18:13.995285 140012029288448 alphageometry.py:566] LM output (score=-1.881269): "n : T c g g n 17 ;"
I0123 14:18:13.995320 140012029288448 alphageometry.py:567] Translation: "n = on_tline n g c g"

I0123 14:18:13.995358 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n g c g ? coll l d e"
I0123 14:18:13.995502 140012029288448 graph.py:498] 
I0123 14:18:13.995551 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n g c g ? coll l d e
I0123 14:18:14.690585 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6644229888916016
I0123 14:18:15.665141 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9744081497192383
I0123 14:18:17.540713 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8754143714904785
I0123 14:18:18.926019 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3851144313812256
I0123 14:18:21.227260 140012029288448 ddar.py:60] Depth 5/1000 time = 2.278435468673706
I0123 14:18:22.850346 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6229209899902344
I0123 14:18:22.859961 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:18:22.860030 140012029288448 alphageometry.py:566] LM output (score=-2.050696): "n : T c g c n 17 ;"
I0123 14:18:22.860067 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c g"

I0123 14:18:22.860106 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n c c g ? coll l d e"
I0123 14:18:22.860255 140012029288448 graph.py:498] 
I0123 14:18:22.860307 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n c c g ? coll l d e
I0123 14:18:24.143540 140012029288448 ddar.py:60] Depth 1/1000 time = 1.2521381378173828
I0123 14:18:25.137241 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9935348033905029
I0123 14:18:26.452127 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3147222995758057
I0123 14:18:28.423332 140012029288448 ddar.py:60] Depth 4/1000 time = 1.97102689743042
I0123 14:18:30.118587 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6743137836456299
I0123 14:18:32.278111 140012029288448 ddar.py:60] Depth 6/1000 time = 2.159355640411377
I0123 14:18:32.288168 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:18:32.288222 140012029288448 alphageometry.py:566] LM output (score=-2.293691): "n : P e i m n 17 P e m i n 18 ;"
I0123 14:18:32.288256 140012029288448 alphageometry.py:567] Translation: "n = on_pline n m e i, on_pline n i e m"

I0123 14:18:32.288294 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_pline n m e i, on_pline n i e m ? coll l d e"
I0123 14:18:32.288443 140012029288448 graph.py:498] 
I0123 14:18:32.288495 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_pline n m e i, on_pline n i e m ? coll l d e
I0123 14:18:33.075242 140012029288448 ddar.py:60] Depth 1/1000 time = 0.7507462501525879
I0123 14:18:35.164013 140012029288448 ddar.py:60] Depth 2/1000 time = 2.0886073112487793
I0123 14:18:37.081877 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9176900386810303
I0123 14:18:39.616794 140012029288448 ddar.py:60] Depth 4/1000 time = 2.5347254276275635
I0123 14:18:42.531011 140012029288448 ddar.py:60] Depth 5/1000 time = 2.8948187828063965
I0123 14:18:44.801254 140012029288448 ddar.py:60] Depth 6/1000 time = 2.2700624465942383
I0123 14:18:44.815134 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:18:44.815198 140012029288448 alphageometry.py:566] LM output (score=-2.488007): "n : T c e c n 17 ;"
I0123 14:18:44.815234 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c e"

I0123 14:18:44.815271 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n c c e ? coll l d e"
I0123 14:18:44.815424 140012029288448 graph.py:498] 
I0123 14:18:44.815476 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n c c e ? coll l d e
I0123 14:18:46.171019 140012029288448 ddar.py:60] Depth 1/1000 time = 1.3242788314819336
I0123 14:18:47.165180 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9939322471618652
I0123 14:18:49.077559 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9121792316436768
I0123 14:18:50.469924 140012029288448 ddar.py:60] Depth 4/1000 time = 1.392158031463623
I0123 14:18:52.802408 140012029288448 ddar.py:60] Depth 5/1000 time = 2.309924602508545
I0123 14:18:54.428166 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6255745887756348
I0123 14:18:54.437793 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:18:54.437849 140012029288448 alphageometry.py:566] LM output (score=-2.593700): "n : T b h b n 17 ;"
I0123 14:18:54.437883 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b h"

I0123 14:18:54.437921 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n b b h ? coll l d e"
I0123 14:18:54.438081 140012029288448 graph.py:498] 
I0123 14:18:54.438138 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n b b h ? coll l d e
I0123 14:18:55.133697 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6640429496765137
I0123 14:18:56.720010 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5861635208129883
I0123 14:18:58.048615 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3284411430358887
I0123 14:19:00.056141 140012029288448 ddar.py:60] Depth 4/1000 time = 2.00734543800354
I0123 14:19:01.760270 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6797382831573486
I0123 14:19:04.047425 140012029288448 ddar.py:60] Depth 6/1000 time = 2.286942720413208
I0123 14:19:04.057184 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:19:04.057253 140012029288448 alphageometry.py:566] LM output (score=-2.597509): "n : C c i n 17 D c n i n 18 ;"
I0123 14:19:04.057289 140012029288448 alphageometry.py:567] Translation: "n = on_line n c i, on_bline n i c"

I0123 14:19:04.057335 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_line n c i, on_bline n i c ? coll l d e"
I0123 14:19:04.057498 140012029288448 graph.py:498] 
I0123 14:19:04.057552 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_line n c i, on_bline n i c ? coll l d e
I0123 14:19:04.827710 140012029288448 ddar.py:60] Depth 1/1000 time = 0.7330777645111084
I0123 14:19:05.851984 140012029288448 ddar.py:60] Depth 2/1000 time = 1.024099588394165
I0123 14:19:07.818659 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9664599895477295
I0123 14:19:09.207520 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3886117935180664
I0123 14:19:11.187315 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9793775081634521
I0123 14:19:12.837714 140012029288448 ddar.py:60] Depth 6/1000 time = 1.634018898010254
I0123 14:19:14.992467 140012029288448 ddar.py:60] Depth 7/1000 time = 2.154548406600952
I0123 14:19:15.001782 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:19:15.001839 140012029288448 alphageometry.py:566] LM output (score=-2.645907): "n : T c e e n 17 ;"
I0123 14:19:15.001886 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c e"

I0123 14:19:15.001927 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n e c e ? coll l d e"
I0123 14:19:15.002077 140012029288448 graph.py:498] 
I0123 14:19:15.002130 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n e c e ? coll l d e
I0123 14:19:15.711321 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6772773265838623
I0123 14:19:17.316941 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6054692268371582
I0123 14:19:18.658533 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3414225578308105
I0123 14:19:20.689486 140012029288448 ddar.py:60] Depth 4/1000 time = 2.030770778656006
I0123 14:19:22.409103 140012029288448 ddar.py:60] Depth 5/1000 time = 1.697488784790039
I0123 14:19:24.725018 140012029288448 ddar.py:60] Depth 6/1000 time = 2.315708875656128
I0123 14:19:24.734662 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:19:24.734724 140012029288448 alphageometry.py:566] LM output (score=-2.772618): "n : D c g i n 17 P c g i n 18 ;"
I0123 14:19:24.734760 140012029288448 alphageometry.py:567] Translation: "n = eqdistance n i c g, on_pline n i c g"

I0123 14:19:24.734805 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = eqdistance n i c g, on_pline n i c g ? coll l d e"
I0123 14:19:24.734966 140012029288448 graph.py:498] 
I0123 14:19:24.735023 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = eqdistance n i c g, on_pline n i c g ? coll l d e
I0123 14:19:25.678722 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9069719314575195
I0123 14:19:27.052087 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3732116222381592
I0123 14:19:29.369770 140012029288448 ddar.py:60] Depth 3/1000 time = 2.317509651184082
I0123 14:19:31.137111 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7671597003936768
I0123 14:19:33.815175 140012029288448 ddar.py:60] Depth 5/1000 time = 2.659480571746826
I0123 14:19:36.444313 140012029288448 ddar.py:60] Depth 6/1000 time = 2.62896728515625
I0123 14:19:36.454715 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:19:36.454770 140012029288448 alphageometry.py:566] LM output (score=-2.778179): "n : C e i n 17 D e i i n 18 ;"
I0123 14:19:36.454804 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_circle n i e"

I0123 14:19:36.454842 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_line n e i, on_circle n i e ? coll l d e"
I0123 14:19:36.454988 140012029288448 graph.py:498] 
I0123 14:19:36.455038 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_line n e i, on_circle n i e ? coll l d e
I0123 14:19:37.463488 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9755685329437256
I0123 14:19:39.713629 140012029288448 ddar.py:60] Depth 2/1000 time = 2.2499806880950928
I0123 14:19:41.644536 140012029288448 ddar.py:60] Depth 3/1000 time = 1.930670976638794
I0123 14:19:44.343305 140012029288448 ddar.py:60] Depth 4/1000 time = 2.6984665393829346
I0123 14:19:46.340565 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9968247413635254
I0123 14:19:49.471753 140012029288448 ddar.py:60] Depth 6/1000 time = 3.0984082221984863
I0123 14:19:52.508270 140012029288448 ddar.py:60] Depth 7/1000 time = 3.0363423824310303
I0123 14:19:52.519648 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:19:52.519703 140012029288448 alphageometry.py:566] LM output (score=-2.790282): "n : C c g n 17 D c g g n 18 ;"
I0123 14:19:52.519738 140012029288448 alphageometry.py:567] Translation: "n = on_line n c g, on_circle n g c"

I0123 14:19:52.519776 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_line n c g, on_circle n g c ? coll l d e"
I0123 14:19:52.519932 140012029288448 graph.py:498] 
I0123 14:19:52.519989 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_line n c g, on_circle n g c ? coll l d e
I0123 14:19:53.516163 140012029288448 ddar.py:60] Depth 1/1000 time = 0.962169885635376
I0123 14:19:55.734698 140012029288448 ddar.py:60] Depth 2/1000 time = 2.2183785438537598
I0123 14:19:57.665307 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9304375648498535
I0123 14:20:00.422527 140012029288448 ddar.py:60] Depth 4/1000 time = 2.7569875717163086
I0123 14:20:03.189231 140012029288448 ddar.py:60] Depth 5/1000 time = 2.766401767730713
I0123 14:20:05.289043 140012029288448 ddar.py:60] Depth 6/1000 time = 2.0993778705596924
I0123 14:20:08.369976 140012029288448 ddar.py:60] Depth 7/1000 time = 3.051518201828003
I0123 14:20:11.405147 140012029288448 ddar.py:60] Depth 8/1000 time = 3.0350053310394287
I0123 14:20:11.418137 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:20:11.418191 140012029288448 alphageometry.py:566] LM output (score=-2.795173): "n : T c d c n 17 ;"
I0123 14:20:11.418226 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c d"

I0123 14:20:11.418266 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n c c d ? coll l d e"
I0123 14:20:11.418419 140012029288448 graph.py:498] 
I0123 14:20:11.418473 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n c c d ? coll l d e
I0123 14:20:12.118695 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6694350242614746
I0123 14:20:13.111689 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9928390979766846
I0123 14:20:15.033261 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9214074611663818
I0123 14:20:16.433477 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4000320434570312
I0123 14:20:18.851257 140012029288448 ddar.py:60] Depth 5/1000 time = 2.395287036895752
I0123 14:20:20.496181 140012029288448 ddar.py:60] Depth 6/1000 time = 1.644641637802124
I0123 14:20:20.506525 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:20:20.506613 140012029288448 alphageometry.py:566] LM output (score=-2.829029): "n : T f h f n 17 ;"
I0123 14:20:20.506651 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f f h"

I0123 14:20:20.506705 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n f f h ? coll l d e"
I0123 14:20:20.506882 140012029288448 graph.py:498] 
I0123 14:20:20.506938 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n f f h ? coll l d e
I0123 14:20:21.899671 140012029288448 ddar.py:60] Depth 1/1000 time = 1.36031174659729
I0123 14:20:22.886300 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9864547252655029
I0123 14:20:24.209450 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3229894638061523
I0123 14:20:26.243722 140012029288448 ddar.py:60] Depth 4/1000 time = 2.034097194671631
I0123 14:20:27.964151 140012029288448 ddar.py:60] Depth 5/1000 time = 1.699012041091919
I0123 14:20:30.232732 140012029288448 ddar.py:60] Depth 6/1000 time = 2.2684078216552734
I0123 14:20:30.242899 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:20:30.242954 140012029288448 alphageometry.py:566] LM output (score=-2.861471): "n : D d h h n 17 ;"
I0123 14:20:30.242988 140012029288448 alphageometry.py:567] Translation: "n = on_circle n h d"

I0123 14:20:30.243025 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_circle n h d ? coll l d e"
I0123 14:20:30.243171 140012029288448 graph.py:498] 
I0123 14:20:30.243222 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_circle n h d ? coll l d e
I0123 14:20:31.050048 140012029288448 ddar.py:60] Depth 1/1000 time = 0.774794340133667
I0123 14:20:32.946353 140012029288448 ddar.py:60] Depth 2/1000 time = 1.8961524963378906
I0123 14:20:34.560770 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6142497062683105
I0123 14:20:36.270374 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7094061374664307
I0123 14:20:38.995531 140012029288448 ddar.py:60] Depth 5/1000 time = 2.7045016288757324
I0123 14:20:40.930594 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9348595142364502
I0123 14:20:40.940216 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:20:40.940273 140012029288448 alphageometry.py:566] LM output (score=-2.952710): "n : D e i i n 17 ;"
I0123 14:20:40.940307 140012029288448 alphageometry.py:567] Translation: "n = on_circle n i e"

I0123 14:20:40.940347 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_circle n i e ? coll l d e"
I0123 14:20:40.940496 140012029288448 graph.py:498] 
I0123 14:20:40.940551 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_circle n i e ? coll l d e
I0123 14:20:42.525885 140012029288448 ddar.py:60] Depth 1/1000 time = 1.5527136325836182
I0123 14:20:44.000576 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4745309352874756
I0123 14:20:46.287125 140012029288448 ddar.py:60] Depth 3/1000 time = 2.286377191543579
I0123 14:20:47.979990 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6926648616790771
I0123 14:20:50.700997 140012029288448 ddar.py:60] Depth 5/1000 time = 2.701507329940796
I0123 14:20:52.657933 140012029288448 ddar.py:60] Depth 6/1000 time = 1.956761360168457
I0123 14:20:52.667657 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:20:52.667710 140012029288448 alphageometry.py:566] LM output (score=-2.954510): "n : C e i n 17 P e i i n 18 ;"
I0123 14:20:52.667744 140012029288448 alphageometry.py:567] Translation: "ERROR: Invalid predicate P e i i n"

I0123 14:20:52.667779 140012029288448 alphageometry.py:566] LM output (score=-2.971268): "n : T c g e n 17 ;"
I0123 14:20:52.667807 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c g"

I0123 14:20:52.667837 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n e c g ? coll l d e"
I0123 14:20:52.667979 140012029288448 graph.py:498] 
I0123 14:20:52.668029 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n e c g ? coll l d e
I0123 14:20:53.366944 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6676838397979736
I0123 14:20:55.035805 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6686537265777588
I0123 14:20:56.329139 140012029288448 ddar.py:60] Depth 3/1000 time = 1.2930586338043213
I0123 14:20:58.402707 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0733819007873535
I0123 14:21:00.112112 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6869044303894043
I0123 14:21:01.726279 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6139986515045166
I0123 14:21:01.736550 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:21:01.736605 140012029288448 alphageometry.py:566] LM output (score=-3.008335): "n : T c e i n 17 ;"
I0123 14:21:01.736641 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i c e"

I0123 14:21:01.736679 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n i c e ? coll l d e"
I0123 14:21:01.736834 140012029288448 graph.py:498] 
I0123 14:21:01.736892 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n i c e ? coll l d e
I0123 14:21:03.070185 140012029288448 ddar.py:60] Depth 1/1000 time = 1.302048921585083
I0123 14:21:04.065508 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9951603412628174
I0123 14:21:06.113660 140012029288448 ddar.py:60] Depth 3/1000 time = 2.0479843616485596
I0123 14:21:07.700042 140012029288448 ddar.py:60] Depth 4/1000 time = 1.5862112045288086
I0123 14:21:09.965926 140012029288448 ddar.py:60] Depth 5/1000 time = 2.2656993865966797
I0123 14:21:11.898182 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9092047214508057
I0123 14:21:14.459476 140012029288448 ddar.py:60] Depth 7/1000 time = 2.561070203781128
I0123 14:21:16.320273 140012029288448 ddar.py:60] Depth 8/1000 time = 1.8510377407073975
I0123 14:21:16.323607 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:21:16.323687 140012029288448 alphageometry.py:566] LM output (score=-3.041149): "n : D f h h n 17 ;"
I0123 14:21:16.323721 140012029288448 alphageometry.py:567] Translation: "n = on_circle n h f"

I0123 14:21:16.323774 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_circle n h f ? coll l d e"
I0123 14:21:16.323945 140012029288448 graph.py:498] 
I0123 14:21:16.324004 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_circle n h f ? coll l d e
I0123 14:21:17.269675 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9123439788818359
I0123 14:21:19.243895 140012029288448 ddar.py:60] Depth 2/1000 time = 1.9740574359893799
I0123 14:21:20.858541 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6144678592681885
I0123 14:21:23.248710 140012029288448 ddar.py:60] Depth 4/1000 time = 2.389989137649536
I0123 14:21:25.295987 140012029288448 ddar.py:60] Depth 5/1000 time = 2.027541160583496
I0123 14:21:27.252970 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9568157196044922
I0123 14:21:27.263184 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:21:27.263238 140012029288448 alphageometry.py:566] LM output (score=-3.042558): "n : T c g f n 17 ;"
I0123 14:21:27.263272 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f c g"

I0123 14:21:27.263308 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n f c g ? coll l d e"
I0123 14:21:27.263449 140012029288448 graph.py:498] 
I0123 14:21:27.263500 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n f c g ? coll l d e
I0123 14:21:28.645121 140012029288448 ddar.py:60] Depth 1/1000 time = 1.350445032119751
I0123 14:21:29.624290 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9789934158325195
I0123 14:21:31.626810 140012029288448 ddar.py:60] Depth 3/1000 time = 2.0023510456085205
I0123 14:21:33.015437 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3883774280548096
I0123 14:21:34.745060 140012029288448 ddar.py:60] Depth 5/1000 time = 1.70705246925354
I0123 14:21:37.065199 140012029288448 ddar.py:60] Depth 6/1000 time = 2.3199477195739746
I0123 14:21:37.074814 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:21:37.074866 140012029288448 alphageometry.py:566] LM output (score=-3.052342): "n : D c h c n 17 D g h g n 18 ;"
I0123 14:21:37.074901 140012029288448 alphageometry.py:567] Translation: "n = on_circle n c h, on_circle n g h"

I0123 14:21:37.074938 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_circle n c h, on_circle n g h ? coll l d e"
I0123 14:21:37.075089 140012029288448 graph.py:498] 
I0123 14:21:37.075145 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_circle n c h, on_circle n g h ? coll l d e
I0123 14:21:37.930454 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8075919151306152
I0123 14:21:39.888454 140012029288448 ddar.py:60] Depth 2/1000 time = 1.957843542098999
I0123 14:21:41.490298 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6016747951507568
I0123 14:21:43.248529 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7580487728118896
I0123 14:21:45.991133 140012029288448 ddar.py:60] Depth 5/1000 time = 2.717292547225952
I0123 14:21:47.975230 140012029288448 ddar.py:60] Depth 6/1000 time = 1.983922004699707
I0123 14:21:47.985336 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:21:47.985391 140012029288448 alphageometry.py:566] LM output (score=-3.121817): "n : P e m f n 17 ;"
I0123 14:21:47.985424 140012029288448 alphageometry.py:567] Translation: "n = on_pline n f e m"

I0123 14:21:47.985460 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_pline n f e m ? coll l d e"
I0123 14:21:47.985602 140012029288448 graph.py:498] 
I0123 14:21:47.985846 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_pline n f e m ? coll l d e
I0123 14:21:49.361920 140012029288448 ddar.py:60] Depth 1/1000 time = 1.3455095291137695
I0123 14:21:50.302973 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9408352375030518
I0123 14:21:52.264510 140012029288448 ddar.py:60] Depth 3/1000 time = 1.961240530014038
I0123 14:21:53.536978 140012029288448 ddar.py:60] Depth 4/1000 time = 1.2722437381744385
I0123 14:21:55.074603 140012029288448 ddar.py:60] Depth 5/1000 time = 1.5217804908752441
I0123 14:21:57.218887 140012029288448 ddar.py:60] Depth 6/1000 time = 2.1441009044647217
I0123 14:21:57.228438 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:21:57.228492 140012029288448 alphageometry.py:566] LM output (score=-3.150662): "n : T e f f n 17 ;"
I0123 14:21:57.228527 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f e f"

I0123 14:21:57.228564 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n f e f ? coll l d e"
I0123 14:21:57.228718 140012029288448 graph.py:498] 
I0123 14:21:57.228776 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n f e f ? coll l d e
I0123 14:21:57.931448 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6714856624603271
I0123 14:21:58.927996 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9963877201080322
I0123 14:22:00.922981 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9948108196258545
I0123 14:22:02.335329 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4121522903442383
I0123 14:22:04.814834 140012029288448 ddar.py:60] Depth 5/1000 time = 2.455413818359375
I0123 14:22:06.521092 140012029288448 ddar.py:60] Depth 6/1000 time = 1.706068992614746
I0123 14:22:06.530723 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:22:06.530778 140012029288448 alphageometry.py:566] LM output (score=-3.157739): "n : T c n e i 17 ;"
I0123 14:22:06.530813 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c e i"

I0123 14:22:06.530861 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n c e i ? coll l d e"
I0123 14:22:06.531009 140012029288448 graph.py:498] 
I0123 14:22:06.531060 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n c e i ? coll l d e
I0123 14:22:07.956984 140012029288448 ddar.py:60] Depth 1/1000 time = 1.3926200866699219
I0123 14:22:08.904324 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9471249580383301
I0123 14:22:10.131804 140012029288448 ddar.py:60] Depth 3/1000 time = 1.227217435836792
I0123 14:22:12.145196 140012029288448 ddar.py:60] Depth 4/1000 time = 2.013202428817749
I0123 14:22:13.669199 140012029288448 ddar.py:60] Depth 5/1000 time = 1.5080358982086182
I0123 14:22:15.831074 140012029288448 ddar.py:60] Depth 6/1000 time = 2.1616997718811035
I0123 14:22:15.840686 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:22:15.840740 140012029288448 alphageometry.py:566] LM output (score=-3.169114): "n : T c e f n 17 ;"
I0123 14:22:15.840773 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f c e"

I0123 14:22:15.840808 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n f c e ? coll l d e"
I0123 14:22:15.840960 140012029288448 graph.py:498] 
I0123 14:22:15.841015 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n f c e ? coll l d e
I0123 14:22:16.594818 140012029288448 ddar.py:60] Depth 1/1000 time = 0.7213356494903564
I0123 14:22:17.598306 140012029288448 ddar.py:60] Depth 2/1000 time = 1.0033388137817383
I0123 14:22:19.643069 140012029288448 ddar.py:60] Depth 3/1000 time = 2.044593095779419
I0123 14:22:21.091589 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4483308792114258
I0123 14:22:22.816955 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7034916877746582
I0123 14:22:25.147187 140012029288448 ddar.py:60] Depth 6/1000 time = 2.3300576210021973
I0123 14:22:25.157449 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:22:25.157502 140012029288448 alphageometry.py:566] LM output (score=-3.206714): "n : T c e h n 17 ;"
I0123 14:22:25.157536 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h c e"

I0123 14:22:25.157572 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n h c e ? coll l d e"
I0123 14:22:25.157721 140012029288448 graph.py:498] 
I0123 14:22:25.157773 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n h c e ? coll l d e
I0123 14:22:25.860208 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6723167896270752
I0123 14:22:27.599560 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7391314506530762
I0123 14:22:28.928986 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3291559219360352
I0123 14:22:30.344938 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4157497882843018
I0123 14:22:32.807116 140012029288448 ddar.py:60] Depth 5/1000 time = 2.440047264099121
I0123 14:22:34.436859 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6295621395111084
I0123 14:22:34.447053 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:22:34.447108 140012029288448 alphageometry.py:566] LM output (score=-3.206852): "n : P e i f n 17 ;"
I0123 14:22:34.447143 140012029288448 alphageometry.py:567] Translation: "n = on_pline n f e i"

I0123 14:22:34.447181 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_pline n f e i ? coll l d e"
I0123 14:22:34.447332 140012029288448 graph.py:498] 
I0123 14:22:34.447388 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_pline n f e i ? coll l d e
I0123 14:22:35.135724 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6573200225830078
I0123 14:22:36.750012 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6141319274902344
I0123 14:22:37.962979 140012029288448 ddar.py:60] Depth 3/1000 time = 1.2128055095672607
I0123 14:22:39.930236 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9670908451080322
I0123 14:22:41.452760 140012029288448 ddar.py:60] Depth 5/1000 time = 1.5062968730926514
I0123 14:22:42.906812 140012029288448 ddar.py:60] Depth 6/1000 time = 1.453885793685913
I0123 14:22:42.915751 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:22:42.915806 140012029288448 alphageometry.py:566] LM output (score=-3.208058): "n : D c h c n 17 D e h e n 18 ;"
I0123 14:22:42.915841 140012029288448 alphageometry.py:567] Translation: "n = on_circle n c h, on_circle n e h"

I0123 14:22:42.915877 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_circle n c h, on_circle n e h ? coll l d e"
I0123 14:22:42.916025 140012029288448 graph.py:498] 
I0123 14:22:42.916077 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_circle n c h, on_circle n e h ? coll l d e
I0123 14:22:44.471136 140012029288448 ddar.py:60] Depth 1/1000 time = 1.5081818103790283
I0123 14:22:45.759144 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2878351211547852
I0123 14:22:48.470593 140012029288448 ddar.py:60] Depth 3/1000 time = 2.711266279220581
I0123 14:22:50.549573 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0787720680236816
I0123 14:22:53.886522 140012029288448 ddar.py:60] Depth 5/1000 time = 3.3041322231292725
I0123 14:22:56.400604 140012029288448 ddar.py:60] Depth 6/1000 time = 2.5139098167419434
I0123 14:22:59.686478 140012029288448 ddar.py:60] Depth 7/1000 time = 3.2728991508483887
I0123 14:22:59.690058 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:22:59.690110 140012029288448 alphageometry.py:566] LM output (score=-3.209118): "n : T c n e f 17 ;"
I0123 14:22:59.690145 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c e f"

I0123 14:22:59.690182 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n c e f ? coll l d e"
I0123 14:22:59.690343 140012029288448 graph.py:498] 
I0123 14:22:59.690399 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n c e f ? coll l d e
I0123 14:23:00.386022 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6642565727233887
I0123 14:23:01.387463 140012029288448 ddar.py:60] Depth 2/1000 time = 1.0012822151184082
I0123 14:23:02.710258 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3226299285888672
I0123 14:23:04.842430 140012029288448 ddar.py:60] Depth 4/1000 time = 2.1319339275360107
I0123 14:23:06.632911 140012029288448 ddar.py:60] Depth 5/1000 time = 1.766303539276123
I0123 14:23:09.067970 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4348597526550293
I0123 14:23:09.077979 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:23:09.078032 140012029288448 alphageometry.py:566] LM output (score=-3.234246): "n : D c g g n 17 ;"
I0123 14:23:09.078066 140012029288448 alphageometry.py:567] Translation: "n = on_circle n g c"

I0123 14:23:09.078102 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_circle n g c ? coll l d e"
I0123 14:23:09.078249 140012029288448 graph.py:498] 
I0123 14:23:09.078305 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_circle n g c ? coll l d e
I0123 14:23:10.019244 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9083428382873535
I0123 14:23:12.199773 140012029288448 ddar.py:60] Depth 2/1000 time = 2.180372476577759
I0123 14:23:13.812525 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6125762462615967
I0123 14:23:15.511262 140012029288448 ddar.py:60] Depth 4/1000 time = 1.698552131652832
I0123 14:23:18.247221 140012029288448 ddar.py:60] Depth 5/1000 time = 2.7164835929870605
I0123 14:23:20.213163 140012029288448 ddar.py:60] Depth 6/1000 time = 1.965761661529541
I0123 14:23:20.223725 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:23:20.223794 140012029288448 alphageometry.py:566] LM output (score=-3.275554): "n : T c n d e 17 ;"
I0123 14:23:20.223831 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c d e"

I0123 14:23:20.223869 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n c d e ? coll l d e"
I0123 14:23:20.224013 140012029288448 graph.py:498] 
I0123 14:23:20.224066 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m e e i; n = on_tline n c d e ? coll l d e
I0123 14:23:20.923277 140012029288448 ddar.py:60] Depth 1/1000 time = 0.668712854385376
I0123 14:23:22.628294 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7048683166503906
I0123 14:23:23.949163 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3206570148468018
I0123 14:23:26.122445 140012029288448 ddar.py:60] Depth 4/1000 time = 2.172973155975342
I0123 14:23:27.884678 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7384703159332275
I0123 14:23:30.307647 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4228012561798096
I0123 14:23:30.317816 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:23:30.317873 140012029288448 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C e f m 16 D e m f m 17 ; x00
I0123 14:23:37.490949 140012029288448 alphageometry.py:566] LM output (score=-0.792415): "n : C f i n 18 D f n i n 19 ;"
I0123 14:23:37.491092 140012029288448 alphageometry.py:567] Translation: "n = on_line n f i, on_bline n i f"

I0123 14:23:37.491138 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f i, on_bline n i f ? coll l d e"
I0123 14:23:37.491286 140012029288448 graph.py:498] 
I0123 14:23:37.491343 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f i, on_bline n i f ? coll l d e
I0123 14:23:38.474759 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9302256107330322
I0123 14:23:40.623154 140012029288448 ddar.py:60] Depth 2/1000 time = 2.148219347000122
I0123 14:23:43.209514 140012029288448 ddar.py:60] Depth 3/1000 time = 2.586193323135376
I0123 14:23:45.084769 140012029288448 ddar.py:60] Depth 4/1000 time = 1.8750617504119873
I0123 14:23:47.718525 140012029288448 ddar.py:60] Depth 5/1000 time = 2.6333487033843994
I0123 14:23:50.804788 140012029288448 ddar.py:60] Depth 6/1000 time = 3.064973831176758
I0123 14:23:53.801736 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9966838359832764
I0123 14:23:53.812891 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:23:53.812948 140012029288448 alphageometry.py:566] LM output (score=-0.812373): "n : C e i n 18 D e n i n 19 ;"
I0123 14:23:53.812983 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_bline n i e"

I0123 14:23:53.813020 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e i, on_bline n i e ? coll l d e"
I0123 14:23:53.813185 140012029288448 graph.py:498] 
I0123 14:23:53.813243 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e i, on_bline n i e ? coll l d e
I0123 14:23:54.801490 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9416382312774658
I0123 14:23:56.936804 140012029288448 ddar.py:60] Depth 2/1000 time = 2.135148525238037
I0123 14:23:59.540146 140012029288448 ddar.py:60] Depth 3/1000 time = 2.6031739711761475
I0123 14:24:02.169368 140012029288448 ddar.py:60] Depth 4/1000 time = 2.6290245056152344
I0123 14:24:04.041804 140012029288448 ddar.py:60] Depth 5/1000 time = 1.8720293045043945
I0123 14:24:07.069301 140012029288448 ddar.py:60] Depth 6/1000 time = 3.0066394805908203
I0123 14:24:10.033102 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9636290073394775
I0123 14:24:10.044601 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:24:10.044668 140012029288448 alphageometry.py:566] LM output (score=-1.690403): "n : T c g g n 18 ;"
I0123 14:24:10.044702 140012029288448 alphageometry.py:567] Translation: "n = on_tline n g c g"

I0123 14:24:10.044739 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n g c g ? coll l d e"
I0123 14:24:10.044883 140012029288448 graph.py:498] 
I0123 14:24:10.044932 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n g c g ? coll l d e
I0123 14:24:11.663230 140012029288448 ddar.py:60] Depth 1/1000 time = 1.580791711807251
I0123 14:24:12.904366 140012029288448 ddar.py:60] Depth 2/1000 time = 1.240976333618164
I0123 14:24:15.302003 140012029288448 ddar.py:60] Depth 3/1000 time = 2.397463321685791
I0123 14:24:17.790911 140012029288448 ddar.py:60] Depth 4/1000 time = 2.488527774810791
I0123 14:24:19.497276 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7059745788574219
I0123 14:24:22.401204 140012029288448 ddar.py:60] Depth 6/1000 time = 2.877683401107788
I0123 14:24:25.181786 140012029288448 ddar.py:60] Depth 7/1000 time = 2.78041410446167
I0123 14:24:25.192097 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:24:25.192152 140012029288448 alphageometry.py:566] LM output (score=-1.691123): "n : C e h n 18 D e n h n 19 ;"
I0123 14:24:25.192185 140012029288448 alphageometry.py:567] Translation: "n = on_line n e h, on_bline n h e"

I0123 14:24:25.192220 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e h, on_bline n h e ? coll l d e"
I0123 14:24:25.192368 140012029288448 graph.py:498] 
I0123 14:24:25.192419 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e h, on_bline n h e ? coll l d e
I0123 14:24:26.182493 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9440197944641113
I0123 14:24:28.343390 140012029288448 ddar.py:60] Depth 2/1000 time = 2.160720109939575
I0123 14:24:30.894556 140012029288448 ddar.py:60] Depth 3/1000 time = 2.5509824752807617
I0123 14:24:32.675208 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7804045677185059
I0123 14:24:35.244902 140012029288448 ddar.py:60] Depth 5/1000 time = 2.569254159927368
I0123 14:24:38.241478 140012029288448 ddar.py:60] Depth 6/1000 time = 2.9761743545532227
I0123 14:24:41.156568 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9149012565612793
I0123 14:24:41.167970 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:24:41.168024 140012029288448 alphageometry.py:566] LM output (score=-1.694157): "n : C c f n 18 D c n f n 19 ;"
I0123 14:24:41.168057 140012029288448 alphageometry.py:567] Translation: "n = on_line n c f, on_bline n f c"

I0123 14:24:41.168092 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n c f, on_bline n f c ? coll l d e"
I0123 14:24:41.168256 140012029288448 graph.py:498] 
I0123 14:24:41.168310 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n c f, on_bline n f c ? coll l d e
I0123 14:24:42.157032 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9423980712890625
I0123 14:24:44.320214 140012029288448 ddar.py:60] Depth 2/1000 time = 2.163008213043213
I0123 14:24:46.077226 140012029288448 ddar.py:60] Depth 3/1000 time = 1.7568483352661133
I0123 14:24:48.653310 140012029288448 ddar.py:60] Depth 4/1000 time = 2.575856924057007
I0123 14:24:51.280401 140012029288448 ddar.py:60] Depth 5/1000 time = 2.6265690326690674
I0123 14:24:54.291272 140012029288448 ddar.py:60] Depth 6/1000 time = 2.9894793033599854
I0123 14:24:57.208367 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9169211387634277
I0123 14:24:57.219539 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:24:57.219594 140012029288448 alphageometry.py:566] LM output (score=-1.712497): "n : C f h n 18 D f n h n 19 ;"
I0123 14:24:57.219629 140012029288448 alphageometry.py:567] Translation: "n = on_line n f h, on_bline n h f"

I0123 14:24:57.219666 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f h, on_bline n h f ? coll l d e"
I0123 14:24:57.219832 140012029288448 graph.py:498] 
I0123 14:24:57.219888 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f h, on_bline n h f ? coll l d e
I0123 14:24:58.203689 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9373633861541748
I0123 14:25:00.383435 140012029288448 ddar.py:60] Depth 2/1000 time = 2.1795785427093506
I0123 14:25:02.146752 140012029288448 ddar.py:60] Depth 3/1000 time = 1.7631487846374512
I0123 14:25:04.729495 140012029288448 ddar.py:60] Depth 4/1000 time = 2.5825464725494385
I0123 14:25:07.352065 140012029288448 ddar.py:60] Depth 5/1000 time = 2.622121572494507
I0123 14:25:10.434120 140012029288448 ddar.py:60] Depth 6/1000 time = 3.0620298385620117
I0123 14:25:12.590842 140012029288448 ddar.py:60] Depth 7/1000 time = 2.1565444469451904
I0123 14:25:12.602166 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:25:12.602222 140012029288448 alphageometry.py:566] LM output (score=-2.073342): "n : C e g n 18 D e n g n 19 ;"
I0123 14:25:12.602257 140012029288448 alphageometry.py:567] Translation: "n = on_line n e g, on_bline n g e"

I0123 14:25:12.602294 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e g, on_bline n g e ? coll l d e"
I0123 14:25:12.602459 140012029288448 graph.py:498] 
I0123 14:25:12.602514 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e g, on_bline n g e ? coll l d e
I0123 14:25:14.339572 140012029288448 ddar.py:60] Depth 1/1000 time = 1.690565824508667
I0123 14:25:16.515679 140012029288448 ddar.py:60] Depth 2/1000 time = 2.1759352684020996
I0123 14:25:18.283279 140012029288448 ddar.py:60] Depth 3/1000 time = 1.7674140930175781
I0123 14:25:20.818752 140012029288448 ddar.py:60] Depth 4/1000 time = 2.535275936126709
I0123 14:25:23.416302 140012029288448 ddar.py:60] Depth 5/1000 time = 2.5971693992614746
I0123 14:25:26.475773 140012029288448 ddar.py:60] Depth 6/1000 time = 3.038651943206787
I0123 14:25:29.465825 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9897634983062744
I0123 14:25:29.477089 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:25:29.477147 140012029288448 alphageometry.py:566] LM output (score=-2.125381): "n : C f h n 18 D f h h n 19 ;"
I0123 14:25:29.477182 140012029288448 alphageometry.py:567] Translation: "n = on_line n f h, on_circle n h f"

I0123 14:25:29.477218 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f h, on_circle n h f ? coll l d e"
I0123 14:25:29.477378 140012029288448 graph.py:498] 
I0123 14:25:29.477433 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f h, on_circle n h f ? coll l d e
I0123 14:25:30.707740 140012029288448 ddar.py:60] Depth 1/1000 time = 1.1881403923034668
I0123 14:25:33.596764 140012029288448 ddar.py:60] Depth 2/1000 time = 2.8888657093048096
I0123 14:25:36.886467 140012029288448 ddar.py:60] Depth 3/1000 time = 3.2895336151123047
I0123 14:25:40.302913 140012029288448 ddar.py:60] Depth 4/1000 time = 3.416264057159424
I0123 14:25:43.750585 140012029288448 ddar.py:60] Depth 5/1000 time = 3.447176694869995
I0123 14:25:47.598627 140012029288448 ddar.py:60] Depth 6/1000 time = 3.818669080734253
I0123 14:25:51.346854 140012029288448 ddar.py:60] Depth 7/1000 time = 3.748051404953003
I0123 14:25:51.361713 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:25:51.361766 140012029288448 alphageometry.py:566] LM output (score=-2.149965): "n : C c e n 18 D c n e n 19 ;"
I0123 14:25:51.361800 140012029288448 alphageometry.py:567] Translation: "n = on_line n c e, on_bline n e c"

I0123 14:25:51.361836 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n c e, on_bline n e c ? coll l d e"
I0123 14:25:51.361995 140012029288448 graph.py:498] 
I0123 14:25:51.362050 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n c e, on_bline n e c ? coll l d e
I0123 14:25:52.477225 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0687966346740723
I0123 14:25:54.960421 140012029288448 ddar.py:60] Depth 2/1000 time = 2.4830172061920166
I0123 14:25:58.076560 140012029288448 ddar.py:60] Depth 3/1000 time = 3.1159610748291016
I0123 14:26:02.084119 140012029288448 ddar.py:60] Depth 4/1000 time = 4.007306337356567
I0123 14:26:05.300725 140012029288448 ddar.py:60] Depth 5/1000 time = 3.2160723209381104
I0123 14:26:08.824054 140012029288448 ddar.py:60] Depth 6/1000 time = 3.496572732925415
I0123 14:26:12.309485 140012029288448 ddar.py:60] Depth 7/1000 time = 3.485250949859619
I0123 14:26:12.322604 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:26:12.322659 140012029288448 alphageometry.py:566] LM output (score=-2.182149): "n : C d e n 18 D d n e n 19 ;"
I0123 14:26:12.322706 140012029288448 alphageometry.py:567] Translation: "n = on_line n d e, on_bline n e d"

I0123 14:26:12.322746 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n d e, on_bline n e d ? coll l d e"
I0123 14:26:12.322912 140012029288448 graph.py:498] 
I0123 14:26:12.322968 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n d e, on_bline n e d ? coll l d e
I0123 14:26:14.356444 140012029288448 ddar.py:60] Depth 1/1000 time = 1.9832804203033447
I0123 14:26:16.951769 140012029288448 ddar.py:60] Depth 2/1000 time = 2.595165252685547
I0123 14:26:20.862170 140012029288448 ddar.py:60] Depth 3/1000 time = 3.9101743698120117
I0123 14:26:24.027615 140012029288448 ddar.py:60] Depth 4/1000 time = 3.1651461124420166
I0123 14:26:27.931009 140012029288448 ddar.py:60] Depth 5/1000 time = 3.9026997089385986
I0123 14:26:31.384131 140012029288448 ddar.py:60] Depth 6/1000 time = 3.431058883666992
I0123 14:26:35.554525 140012029288448 ddar.py:60] Depth 7/1000 time = 4.170205593109131
I0123 14:26:35.564128 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:26:35.564202 140012029288448 alphageometry.py:566] LM output (score=-2.211773): "n : C f g n 18 D f n g n 19 ;"
I0123 14:26:35.564239 140012029288448 alphageometry.py:567] Translation: "n = on_line n f g, on_bline n g f"

I0123 14:26:35.564279 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f g, on_bline n g f ? coll l d e"
I0123 14:26:35.564441 140012029288448 graph.py:498] 
I0123 14:26:35.564498 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f g, on_bline n g f ? coll l d e
I0123 14:26:36.564195 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9530162811279297
I0123 14:26:38.748444 140012029288448 ddar.py:60] Depth 2/1000 time = 2.184049606323242
I0123 14:26:41.328225 140012029288448 ddar.py:60] Depth 3/1000 time = 2.579493522644043
I0123 14:26:43.107298 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7788524627685547
I0123 14:26:45.666605 140012029288448 ddar.py:60] Depth 5/1000 time = 2.558933734893799
I0123 14:26:48.648047 140012029288448 ddar.py:60] Depth 6/1000 time = 2.9602363109588623
I0123 14:26:51.550934 140012029288448 ddar.py:60] Depth 7/1000 time = 2.902700662612915
I0123 14:26:51.562912 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:26:51.562967 140012029288448 alphageometry.py:566] LM output (score=-2.292227): "n : C e l n 18 D e n l n 19 ;"
I0123 14:26:51.563001 140012029288448 alphageometry.py:567] Translation: "n = on_line n e l, on_bline n l e"

I0123 14:26:51.563037 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e l, on_bline n l e ? coll l d e"
I0123 14:26:51.563193 140012029288448 graph.py:498] 
I0123 14:26:51.563248 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e l, on_bline n l e ? coll l d e
I0123 14:26:52.562414 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9507064819335938
I0123 14:26:54.769743 140012029288448 ddar.py:60] Depth 2/1000 time = 2.207153081893921
I0123 14:26:57.408744 140012029288448 ddar.py:60] Depth 3/1000 time = 2.6387672424316406
I0123 14:26:59.235014 140012029288448 ddar.py:60] Depth 4/1000 time = 1.8259730339050293
I0123 14:27:01.895059 140012029288448 ddar.py:60] Depth 5/1000 time = 2.6595938205718994
I0123 14:27:04.924604 140012029288448 ddar.py:60] Depth 6/1000 time = 3.008735179901123
I0123 14:27:07.821509 140012029288448 ddar.py:60] Depth 7/1000 time = 2.8967201709747314
I0123 14:27:07.833348 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:27:07.833408 140012029288448 alphageometry.py:566] LM output (score=-2.354652): "n : C d f n 18 D d n f n 19 ;"
I0123 14:27:07.833440 140012029288448 alphageometry.py:567] Translation: "n = on_line n d f, on_bline n f d"

I0123 14:27:07.833478 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n d f, on_bline n f d ? coll l d e"
I0123 14:27:07.833646 140012029288448 graph.py:498] 
I0123 14:27:07.833704 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n d f, on_bline n f d ? coll l d e
I0123 14:27:09.896286 140012029288448 ddar.py:60] Depth 1/1000 time = 2.0138676166534424
I0123 14:27:12.522213 140012029288448 ddar.py:60] Depth 2/1000 time = 2.625760078430176
I0123 14:27:15.670406 140012029288448 ddar.py:60] Depth 3/1000 time = 3.147979497909546
I0123 14:27:19.723330 140012029288448 ddar.py:60] Depth 4/1000 time = 4.052640438079834
I0123 14:27:22.856881 140012029288448 ddar.py:60] Depth 5/1000 time = 3.1328773498535156
I0123 14:27:27.104730 140012029288448 ddar.py:60] Depth 6/1000 time = 4.224791526794434
I0123 14:27:30.522098 140012029288448 ddar.py:60] Depth 7/1000 time = 3.4171853065490723
I0123 14:27:30.532313 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:27:30.532366 140012029288448 alphageometry.py:566] LM output (score=-2.374340): "n : T c g c n 18 ;"
I0123 14:27:30.532401 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c g"

I0123 14:27:30.532438 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n c c g ? coll l d e"
I0123 14:27:30.532591 140012029288448 graph.py:498] 
I0123 14:27:30.532645 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n c c g ? coll l d e
I0123 14:27:32.211421 140012029288448 ddar.py:60] Depth 1/1000 time = 1.6414299011230469
I0123 14:27:33.473603 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2620220184326172
I0123 14:27:36.003202 140012029288448 ddar.py:60] Depth 3/1000 time = 2.5294101238250732
I0123 14:27:38.573858 140012029288448 ddar.py:60] Depth 4/1000 time = 2.570430040359497
I0123 14:27:40.309159 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7348740100860596
I0123 14:27:43.247317 140012029288448 ddar.py:60] Depth 6/1000 time = 2.9118030071258545
I0123 14:27:45.253044 140012029288448 ddar.py:60] Depth 7/1000 time = 2.0055601596832275
I0123 14:27:45.263144 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:27:45.263211 140012029288448 alphageometry.py:566] LM output (score=-2.403586): "n : C e i n 18 D e i i n 19 ;"
I0123 14:27:45.263246 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_circle n i e"

I0123 14:27:45.263283 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e i, on_circle n i e ? coll l d e"
I0123 14:27:45.263446 140012029288448 graph.py:498] 
I0123 14:27:45.263502 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e i, on_circle n i e ? coll l d e
I0123 14:27:47.254105 140012029288448 ddar.py:60] Depth 1/1000 time = 1.9486744403839111
I0123 14:27:49.848520 140012029288448 ddar.py:60] Depth 2/1000 time = 2.5942511558532715
I0123 14:27:52.980542 140012029288448 ddar.py:60] Depth 3/1000 time = 3.131808042526245
I0123 14:27:55.292320 140012029288448 ddar.py:60] Depth 4/1000 time = 2.3114700317382812
I0123 14:27:58.435901 140012029288448 ddar.py:60] Depth 5/1000 time = 3.1431400775909424
I0123 14:28:02.074575 140012029288448 ddar.py:60] Depth 6/1000 time = 3.6102676391601562
I0123 14:28:05.623425 140012029288448 ddar.py:60] Depth 7/1000 time = 3.5486700534820557
I0123 14:28:05.637321 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:28:05.637376 140012029288448 alphageometry.py:566] LM output (score=-2.490993): "n : C a e n 18 D a n e n 19 ;"
I0123 14:28:05.637409 140012029288448 alphageometry.py:567] Translation: "n = on_line n a e, on_bline n e a"

I0123 14:28:05.637444 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n a e, on_bline n e a ? coll l d e"
I0123 14:28:05.637608 140012029288448 graph.py:498] 
I0123 14:28:05.637670 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n a e, on_bline n e a ? coll l d e
I0123 14:28:07.560513 140012029288448 ddar.py:60] Depth 1/1000 time = 1.8758368492126465
I0123 14:28:10.129130 140012029288448 ddar.py:60] Depth 2/1000 time = 2.5684549808502197
I0123 14:28:13.254190 140012029288448 ddar.py:60] Depth 3/1000 time = 3.124868631362915
I0123 14:28:16.385726 140012029288448 ddar.py:60] Depth 4/1000 time = 3.1313071250915527
I0123 14:28:19.507861 140012029288448 ddar.py:60] Depth 5/1000 time = 3.1217429637908936
I0123 14:28:23.181668 140012029288448 ddar.py:60] Depth 6/1000 time = 3.6455137729644775
I0123 14:28:26.753162 140012029288448 ddar.py:60] Depth 7/1000 time = 3.571319341659546
I0123 14:28:26.765178 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:28:26.765237 140012029288448 alphageometry.py:566] LM output (score=-2.520096): "n : C e g n 18 D e g g n 19 ;"
I0123 14:28:26.765272 140012029288448 alphageometry.py:567] Translation: "n = on_line n e g, on_circle n g e"

I0123 14:28:26.765311 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e g, on_circle n g e ? coll l d e"
I0123 14:28:26.765479 140012029288448 graph.py:498] 
I0123 14:28:26.765535 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e g, on_circle n g e ? coll l d e
I0123 14:28:28.673560 140012029288448 ddar.py:60] Depth 1/1000 time = 1.866079330444336
I0123 14:28:31.423826 140012029288448 ddar.py:60] Depth 2/1000 time = 2.7500689029693604
I0123 14:28:33.951606 140012029288448 ddar.py:60] Depth 3/1000 time = 2.5275516510009766
I0123 14:28:37.355127 140012029288448 ddar.py:60] Depth 4/1000 time = 3.403352737426758
I0123 14:28:40.734110 140012029288448 ddar.py:60] Depth 5/1000 time = 3.37858510017395
I0123 14:28:44.514920 140012029288448 ddar.py:60] Depth 6/1000 time = 3.7533440589904785
I0123 14:28:48.292857 140012029288448 ddar.py:60] Depth 7/1000 time = 3.777717113494873
I0123 14:28:48.306885 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:28:48.306959 140012029288448 alphageometry.py:566] LM output (score=-2.545228): "n : C f j n 18 D f n j n 19 ;"
I0123 14:28:48.306993 140012029288448 alphageometry.py:567] Translation: "n = on_line n f j, on_bline n j f"

I0123 14:28:48.307038 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f j, on_bline n j f ? coll l d e"
I0123 14:28:48.307216 140012029288448 graph.py:498] 
I0123 14:28:48.307272 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f j, on_bline n j f ? coll l d e
I0123 14:28:50.184708 140012029288448 ddar.py:60] Depth 1/1000 time = 1.8281939029693604
I0123 14:28:51.588791 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4038982391357422
I0123 14:28:54.193788 140012029288448 ddar.py:60] Depth 3/1000 time = 2.6048223972320557
I0123 14:28:56.842959 140012029288448 ddar.py:60] Depth 4/1000 time = 2.6489851474761963
I0123 14:28:58.673768 140012029288448 ddar.py:60] Depth 5/1000 time = 1.8304333686828613
I0123 14:29:01.705238 140012029288448 ddar.py:60] Depth 6/1000 time = 3.011638641357422
I0123 14:29:04.685647 140012029288448 ddar.py:60] Depth 7/1000 time = 2.980217218399048
I0123 14:29:04.696954 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:29:04.697014 140012029288448 alphageometry.py:566] LM output (score=-2.607059): "n : C e j n 18 D e n j n 19 ;"
I0123 14:29:04.697050 140012029288448 alphageometry.py:567] Translation: "n = on_line n e j, on_bline n j e"

I0123 14:29:04.697090 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e j, on_bline n j e ? coll l d e"
I0123 14:29:04.697247 140012029288448 graph.py:498] 
I0123 14:29:04.697300 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n e j, on_bline n j e ? coll l d e
I0123 14:29:05.692701 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9472081661224365
I0123 14:29:07.952801 140012029288448 ddar.py:60] Depth 2/1000 time = 2.2598795890808105
I0123 14:29:10.628718 140012029288448 ddar.py:60] Depth 3/1000 time = 2.6756341457366943
I0123 14:29:12.465193 140012029288448 ddar.py:60] Depth 4/1000 time = 1.836296558380127
I0123 14:29:15.098135 140012029288448 ddar.py:60] Depth 5/1000 time = 2.632561206817627
I0123 14:29:18.181887 140012029288448 ddar.py:60] Depth 6/1000 time = 3.0628392696380615
I0123 14:29:21.179292 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9972212314605713
I0123 14:29:21.190283 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:29:21.190337 140012029288448 alphageometry.py:566] LM output (score=-2.607129): "n : C f l n 18 D f n l n 19 ;"
I0123 14:29:21.190370 140012029288448 alphageometry.py:567] Translation: "n = on_line n f l, on_bline n l f"

I0123 14:29:21.190406 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f l, on_bline n l f ? coll l d e"
I0123 14:29:21.190564 140012029288448 graph.py:498] 
I0123 14:29:21.190617 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f l, on_bline n l f ? coll l d e
I0123 14:29:22.182767 140012029288448 ddar.py:60] Depth 1/1000 time = 0.946094274520874
I0123 14:29:24.457443 140012029288448 ddar.py:60] Depth 2/1000 time = 2.2744898796081543
I0123 14:29:26.242815 140012029288448 ddar.py:60] Depth 3/1000 time = 1.785142183303833
I0123 14:29:28.949104 140012029288448 ddar.py:60] Depth 4/1000 time = 2.7059900760650635
I0123 14:29:31.629534 140012029288448 ddar.py:60] Depth 5/1000 time = 2.6800270080566406
I0123 14:29:34.743092 140012029288448 ddar.py:60] Depth 6/1000 time = 3.0932681560516357
I0123 14:29:36.876287 140012029288448 ddar.py:60] Depth 7/1000 time = 2.1330196857452393
I0123 14:29:36.888280 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:29:36.888335 140012029288448 alphageometry.py:566] LM output (score=-2.777742): "n : C a f n 18 D a n f n 19 ;"
I0123 14:29:36.888367 140012029288448 alphageometry.py:567] Translation: "n = on_line n a f, on_bline n f a"

I0123 14:29:36.888403 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n a f, on_bline n f a ? coll l d e"
I0123 14:29:36.888562 140012029288448 graph.py:498] 
I0123 14:29:36.888617 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n a f, on_bline n f a ? coll l d e
I0123 14:29:38.841515 140012029288448 ddar.py:60] Depth 1/1000 time = 1.906078815460205
I0123 14:29:41.431433 140012029288448 ddar.py:60] Depth 2/1000 time = 2.589740514755249
I0123 14:29:44.580246 140012029288448 ddar.py:60] Depth 3/1000 time = 3.1485815048217773
I0123 14:29:47.810285 140012029288448 ddar.py:60] Depth 4/1000 time = 3.229738712310791
I0123 14:29:50.982895 140012029288448 ddar.py:60] Depth 5/1000 time = 3.17219877243042
I0123 14:29:54.684948 140012029288448 ddar.py:60] Depth 6/1000 time = 3.6739718914031982
I0123 14:29:58.269726 140012029288448 ddar.py:60] Depth 7/1000 time = 3.584577798843384
I0123 14:29:58.280447 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:29:58.280502 140012029288448 alphageometry.py:566] LM output (score=-2.879928): "n : C f i n 18 D f i i n 19 ;"
I0123 14:29:58.280535 140012029288448 alphageometry.py:567] Translation: "n = on_line n f i, on_circle n i f"

I0123 14:29:58.280571 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f i, on_circle n i f ? coll l d e"
I0123 14:29:58.280730 140012029288448 graph.py:498] 
I0123 14:29:58.280785 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n f i, on_circle n i f ? coll l d e
I0123 14:30:00.214675 140012029288448 ddar.py:60] Depth 1/1000 time = 1.8921937942504883
I0123 14:30:01.979488 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7646446228027344
I0123 14:30:05.106191 140012029288448 ddar.py:60] Depth 3/1000 time = 3.1264967918395996
I0123 14:30:08.295794 140012029288448 ddar.py:60] Depth 4/1000 time = 3.1893792152404785
I0123 14:30:11.475806 140012029288448 ddar.py:60] Depth 5/1000 time = 3.179593801498413
I0123 14:30:15.232313 140012029288448 ddar.py:60] Depth 6/1000 time = 3.728147029876709
I0123 14:30:18.928251 140012029288448 ddar.py:60] Depth 7/1000 time = 3.6957626342773438
I0123 14:30:18.940960 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:30:18.941023 140012029288448 alphageometry.py:566] LM output (score=-2.908793): "n : T c e e n 18 ;"
I0123 14:30:18.941058 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c e"

I0123 14:30:18.941098 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n e c e ? coll l d e"
I0123 14:30:18.941250 140012029288448 graph.py:498] 
I0123 14:30:18.941306 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n e c e ? coll l d e
I0123 14:30:19.839643 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8609046936035156
I0123 14:30:22.070389 140012029288448 ddar.py:60] Depth 2/1000 time = 2.2305662631988525
I0123 14:30:23.770547 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6999294757843018
I0123 14:30:26.445743 140012029288448 ddar.py:60] Depth 4/1000 time = 2.674990177154541
I0123 14:30:28.226495 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7803587913513184
I0123 14:30:31.297249 140012029288448 ddar.py:60] Depth 6/1000 time = 3.0445332527160645
I0123 14:30:34.333386 140012029288448 ddar.py:60] Depth 7/1000 time = 3.0359692573547363
I0123 14:30:34.343282 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:30:34.343336 140012029288448 alphageometry.py:566] LM output (score=-2.942596): "n : T e m h n 18 ;"
I0123 14:30:34.343369 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h e m"

I0123 14:30:34.343406 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n h e m ? coll l d e"
I0123 14:30:34.343573 140012029288448 graph.py:498] 
I0123 14:30:34.343630 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n h e m ? coll l d e
I0123 14:30:35.252094 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8690884113311768
I0123 14:30:37.442785 140012029288448 ddar.py:60] Depth 2/1000 time = 2.190513849258423
I0123 14:30:39.075678 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6327123641967773
I0123 14:30:41.703989 140012029288448 ddar.py:60] Depth 4/1000 time = 2.628112316131592
I0123 14:30:43.374881 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6704456806182861
I0123 14:30:46.310413 140012029288448 ddar.py:60] Depth 6/1000 time = 2.913548231124878
I0123 14:30:49.304137 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9935455322265625
I0123 14:30:52.331590 140012029288448 ddar.py:60] Depth 8/1000 time = 3.027256965637207
I0123 14:30:54.523426 140012029288448 ddar.py:60] Depth 9/1000 time = 2.1762890815734863
I0123 14:30:54.523651 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:30:54.523697 140012029288448 alphageometry.py:566] LM output (score=-2.951149): "n : T b h b n 18 ;"
I0123 14:30:54.523730 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b h"

I0123 14:30:54.523769 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n b b h ? coll l d e"
I0123 14:30:54.523921 140012029288448 graph.py:498] 
I0123 14:30:54.523977 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n b b h ? coll l d e
I0123 14:30:56.272825 140012029288448 ddar.py:60] Depth 1/1000 time = 1.7113451957702637
I0123 14:30:57.533150 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2601561546325684
I0123 14:31:00.123694 140012029288448 ddar.py:60] Depth 3/1000 time = 2.5903491973876953
I0123 14:31:01.863834 140012029288448 ddar.py:60] Depth 4/1000 time = 1.739926815032959
I0123 14:31:04.425584 140012029288448 ddar.py:60] Depth 5/1000 time = 2.561345338821411
I0123 14:31:07.480504 140012029288448 ddar.py:60] Depth 6/1000 time = 3.0278594493865967
I0123 14:31:09.518685 140012029288448 ddar.py:60] Depth 7/1000 time = 2.0380053520202637
I0123 14:31:09.529224 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:31:09.529277 140012029288448 alphageometry.py:566] LM output (score=-2.961592): "n : C h i n 18 D h n i n 19 ;"
I0123 14:31:09.529310 140012029288448 alphageometry.py:567] Translation: "n = on_line n h i, on_bline n i h"

I0123 14:31:09.529345 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n h i, on_bline n i h ? coll l d e"
I0123 14:31:09.529504 140012029288448 graph.py:498] 
I0123 14:31:09.529558 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_line n h i, on_bline n i h ? coll l d e
I0123 14:31:11.510093 140012029288448 ddar.py:60] Depth 1/1000 time = 1.933661699295044
I0123 14:31:14.069977 140012029288448 ddar.py:60] Depth 2/1000 time = 2.5597095489501953
I0123 14:31:17.063233 140012029288448 ddar.py:60] Depth 3/1000 time = 2.993042230606079
I0123 14:31:20.105860 140012029288448 ddar.py:60] Depth 4/1000 time = 3.042327642440796
I0123 14:31:23.103273 140012029288448 ddar.py:60] Depth 5/1000 time = 2.9970345497131348
I0123 14:31:26.479101 140012029288448 ddar.py:60] Depth 6/1000 time = 3.3541553020477295
I0123 14:31:29.766221 140012029288448 ddar.py:60] Depth 7/1000 time = 3.286933183670044
I0123 14:31:29.776234 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:31:29.776288 140012029288448 alphageometry.py:566] LM output (score=-2.978142): "n : T e i e n 18 ;"
I0123 14:31:29.776322 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e i"

I0123 14:31:29.776358 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n e e i ? coll l d e"
I0123 14:31:29.776513 140012029288448 graph.py:498] 
I0123 14:31:29.776568 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n e e i ? coll l d e
I0123 14:31:31.543347 140012029288448 ddar.py:60] Depth 1/1000 time = 1.7282004356384277
I0123 14:31:32.811388 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2676723003387451
I0123 14:31:35.402757 140012029288448 ddar.py:60] Depth 3/1000 time = 2.5911433696746826
I0123 14:31:37.108007 140012029288448 ddar.py:60] Depth 4/1000 time = 1.704965353012085
I0123 14:31:39.757352 140012029288448 ddar.py:60] Depth 5/1000 time = 2.6488921642303467
I0123 14:31:41.876132 140012029288448 ddar.py:60] Depth 6/1000 time = 2.095041275024414
I0123 14:31:44.730040 140012029288448 ddar.py:60] Depth 7/1000 time = 2.853742837905884
I0123 14:31:44.740500 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:31:44.740555 140012029288448 alphageometry.py:566] LM output (score=-3.015769): "n : T c g i n 18 ;"
I0123 14:31:44.740589 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i c g"

I0123 14:31:44.740627 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n i c g ? coll l d e"
I0123 14:31:44.740784 140012029288448 graph.py:498] 
I0123 14:31:44.740846 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n i c g ? coll l d e
I0123 14:31:45.612310 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8345358371734619
I0123 14:31:47.685607 140012029288448 ddar.py:60] Depth 2/1000 time = 2.0731165409088135
I0123 14:31:50.227639 140012029288448 ddar.py:60] Depth 3/1000 time = 2.5418426990509033
I0123 14:31:51.930395 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7025587558746338
I0123 14:31:54.538967 140012029288448 ddar.py:60] Depth 5/1000 time = 2.608159303665161
I0123 14:31:56.677516 140012029288448 ddar.py:60] Depth 6/1000 time = 2.1121745109558105
I0123 14:31:59.670929 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9931325912475586
I0123 14:31:59.680863 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:31:59.680935 140012029288448 alphageometry.py:566] LM output (score=-3.103544): "n : T c d c n 18 ;"
I0123 14:31:59.680970 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c d"

I0123 14:31:59.681010 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n c c d ? coll l d e"
I0123 14:31:59.681162 140012029288448 graph.py:498] 
I0123 14:31:59.681216 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n c c d ? coll l d e
I0123 14:32:00.564764 140012029288448 ddar.py:60] Depth 1/1000 time = 0.845827579498291
I0123 14:32:02.752097 140012029288448 ddar.py:60] Depth 2/1000 time = 2.187171697616577
I0123 14:32:04.412186 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6599230766296387
I0123 14:32:07.011515 140012029288448 ddar.py:60] Depth 4/1000 time = 2.5991580486297607
I0123 14:32:08.734344 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7224462032318115
I0123 14:32:11.748149 140012029288448 ddar.py:60] Depth 6/1000 time = 2.988896131515503
I0123 14:32:14.738178 140012029288448 ddar.py:60] Depth 7/1000 time = 2.989863634109497
I0123 14:32:14.747944 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:32:14.748004 140012029288448 alphageometry.py:566] LM output (score=-3.123352): "n : T c g e n 18 ;"
I0123 14:32:14.748039 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c g"

I0123 14:32:14.748077 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n e c g ? coll l d e"
I0123 14:32:14.748231 140012029288448 graph.py:498] 
I0123 14:32:14.748283 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n e c g ? coll l d e
I0123 14:32:15.627681 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8409712314605713
I0123 14:32:17.839622 140012029288448 ddar.py:60] Depth 2/1000 time = 2.2116644382476807
I0123 14:32:19.469447 140012029288448 ddar.py:60] Depth 3/1000 time = 1.629633903503418
I0123 14:32:22.094885 140012029288448 ddar.py:60] Depth 4/1000 time = 2.625229597091675
I0123 14:32:23.797788 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7025220394134521
I0123 14:32:26.836506 140012029288448 ddar.py:60] Depth 6/1000 time = 3.0124690532684326
I0123 14:32:29.790919 140012029288448 ddar.py:60] Depth 7/1000 time = 2.954235076904297
I0123 14:32:29.800837 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:32:29.800892 140012029288448 alphageometry.py:566] LM output (score=-3.152219): "n : T f h f n 18 ;"
I0123 14:32:29.800926 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f f h"

I0123 14:32:29.800963 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n f f h ? coll l d e"
I0123 14:32:29.801119 140012029288448 graph.py:498] 
I0123 14:32:29.801175 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n f f h ? coll l d e
I0123 14:32:30.674778 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8364419937133789
I0123 14:32:31.929726 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2547578811645508
I0123 14:32:34.502052 140012029288448 ddar.py:60] Depth 3/1000 time = 2.5721633434295654
I0123 14:32:37.349135 140012029288448 ddar.py:60] Depth 4/1000 time = 2.846900224685669
I0123 14:32:39.143572 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7942216396331787
I0123 14:32:41.859568 140012029288448 ddar.py:60] Depth 6/1000 time = 2.715545654296875
I0123 14:32:43.983753 140012029288448 ddar.py:60] Depth 7/1000 time = 2.0996596813201904
I0123 14:32:46.952624 140012029288448 ddar.py:60] Depth 8/1000 time = 2.9687163829803467
I0123 14:32:46.963223 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:32:46.963282 140012029288448 alphageometry.py:566] LM output (score=-3.188052): "n : T c e c n 18 ;"
I0123 14:32:46.963317 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c e"

I0123 14:32:46.963355 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n c c e ? coll l d e"
I0123 14:32:46.963513 140012029288448 graph.py:498] 
I0123 14:32:46.963569 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e f, on_bline m f e; n = on_tline n c c e ? coll l d e
I0123 14:32:47.849844 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8482120037078857
I0123 14:32:50.017426 140012029288448 ddar.py:60] Depth 2/1000 time = 2.1672182083129883
I0123 14:32:51.719295 140012029288448 ddar.py:60] Depth 3/1000 time = 1.70170259475708
I0123 14:32:54.409880 140012029288448 ddar.py:60] Depth 4/1000 time = 2.6904006004333496
I0123 14:32:56.199137 140012029288448 ddar.py:60] Depth 5/1000 time = 1.788822889328003
I0123 14:32:59.327140 140012029288448 ddar.py:60] Depth 6/1000 time = 3.10200572013855
I0123 14:33:02.334885 140012029288448 ddar.py:60] Depth 7/1000 time = 3.0075504779815674
I0123 14:33:02.345373 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:33:02.345432 140012029288448 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C f i m 16 D f i i m 17 ; x00
I0123 14:33:08.775170 140012029288448 alphageometry.py:566] LM output (score=-1.755095): "n : C e i n 18 D e i i n 19 ;"
I0123 14:33:08.775309 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_circle n i e"

I0123 14:33:08.775352 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n e i, on_circle n i e ? coll l d e"
I0123 14:33:08.775499 140012029288448 graph.py:498] 
I0123 14:33:08.775555 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n e i, on_circle n i e ? coll l d e
I0123 14:33:10.220711 140012029288448 ddar.py:60] Depth 1/1000 time = 1.4076414108276367
I0123 14:33:14.233729 140012029288448 ddar.py:60] Depth 2/1000 time = 4.012841701507568
I0123 14:33:17.773623 140012029288448 ddar.py:60] Depth 3/1000 time = 3.539719581604004
I0123 14:33:22.425011 140012029288448 ddar.py:60] Depth 4/1000 time = 4.651202917098999
I0123 14:33:27.047670 140012029288448 ddar.py:60] Depth 5/1000 time = 4.622229814529419
I0123 14:33:31.683992 140012029288448 ddar.py:60] Depth 6/1000 time = 4.590548038482666
I0123 14:33:37.042774 140012029288448 ddar.py:60] Depth 7/1000 time = 5.358590364456177
I0123 14:33:37.059393 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:33:37.059447 140012029288448 alphageometry.py:566] LM output (score=-1.776542): "n : T c g g n 18 ;"
I0123 14:33:37.059481 140012029288448 alphageometry.py:567] Translation: "n = on_tline n g c g"

I0123 14:33:37.059517 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n g c g ? coll l d e"
I0123 14:33:37.059664 140012029288448 graph.py:498] 
I0123 14:33:37.059713 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n g c g ? coll l d e
I0123 14:33:38.814859 140012029288448 ddar.py:60] Depth 1/1000 time = 1.7224767208099365
I0123 14:33:40.173220 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3581840991973877
I0123 14:33:42.054694 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8813090324401855
I0123 14:33:44.976409 140012029288448 ddar.py:60] Depth 4/1000 time = 2.921541929244995
I0123 14:33:46.954226 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9774250984191895
I0123 14:33:50.510872 140012029288448 ddar.py:60] Depth 6/1000 time = 3.5227720737457275
I0123 14:33:52.950325 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4392447471618652
I0123 14:33:52.962165 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:33:52.962220 140012029288448 alphageometry.py:566] LM output (score=-2.104135): "n : T c e e n 18 ;"
I0123 14:33:52.962254 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c e"

I0123 14:33:52.962294 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n e c e ? coll l d e"
I0123 14:33:52.962448 140012029288448 graph.py:498] 
I0123 14:33:52.962502 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n e c e ? coll l d e
I0123 14:33:53.830389 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8345715999603271
I0123 14:33:56.157318 140012029288448 ddar.py:60] Depth 2/1000 time = 2.326758861541748
I0123 14:33:58.100214 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9427342414855957
I0123 14:34:01.099070 140012029288448 ddar.py:60] Depth 4/1000 time = 2.9986774921417236
I0123 14:34:03.109008 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0095345973968506
I0123 14:34:06.605938 140012029288448 ddar.py:60] Depth 6/1000 time = 3.463256359100342
I0123 14:34:09.046407 140012029288448 ddar.py:60] Depth 7/1000 time = 2.440295696258545
I0123 14:34:09.058381 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:34:09.058439 140012029288448 alphageometry.py:566] LM output (score=-2.141934): "n : C c f n 18 D c n f n 19 ;"
I0123 14:34:09.058475 140012029288448 alphageometry.py:567] Translation: "n = on_line n c f, on_bline n f c"

I0123 14:34:09.058513 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n c f, on_bline n f c ? coll l d e"
I0123 14:34:09.058662 140012029288448 graph.py:498] 
I0123 14:34:09.058712 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n c f, on_bline n f c ? coll l d e
I0123 14:34:10.020052 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9197070598602295
I0123 14:34:12.571773 140012029288448 ddar.py:60] Depth 2/1000 time = 2.5515599250793457
I0123 14:34:14.561973 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9900312423706055
I0123 14:34:17.730566 140012029288448 ddar.py:60] Depth 4/1000 time = 3.1683907508850098
I0123 14:34:19.823953 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0929393768310547
I0123 14:34:23.417144 140012029288448 ddar.py:60] Depth 6/1000 time = 3.56714129447937
I0123 14:34:25.941396 140012029288448 ddar.py:60] Depth 7/1000 time = 2.5240745544433594
I0123 14:34:25.953613 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:34:25.953689 140012029288448 alphageometry.py:566] LM output (score=-2.210356): "n : T c e c n 18 ;"
I0123 14:34:25.953727 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c e"

I0123 14:34:25.953768 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n c c e ? coll l d e"
I0123 14:34:25.953928 140012029288448 graph.py:498] 
I0123 14:34:25.953984 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n c c e ? coll l d e
I0123 14:34:26.825418 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8375928401947021
I0123 14:34:29.187954 140012029288448 ddar.py:60] Depth 2/1000 time = 2.3623697757720947
I0123 14:34:31.132863 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9447405338287354
I0123 14:34:33.175805 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0427517890930176
I0123 14:34:36.207207 140012029288448 ddar.py:60] Depth 5/1000 time = 3.0309829711914062
I0123 14:34:38.789805 140012029288448 ddar.py:60] Depth 6/1000 time = 2.547708511352539
I0123 14:34:42.257044 140012029288448 ddar.py:60] Depth 7/1000 time = 3.4670400619506836
I0123 14:34:42.268325 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:34:42.268383 140012029288448 alphageometry.py:566] LM output (score=-2.216085): "n : C c i n 18 D c n i n 19 ;"
I0123 14:34:42.268418 140012029288448 alphageometry.py:567] Translation: "n = on_line n c i, on_bline n i c"

I0123 14:34:42.268455 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n c i, on_bline n i c ? coll l d e"
I0123 14:34:42.268631 140012029288448 graph.py:498] 
I0123 14:34:42.268687 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n c i, on_bline n i c ? coll l d e
I0123 14:34:43.260241 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9496912956237793
I0123 14:34:45.678201 140012029288448 ddar.py:60] Depth 2/1000 time = 2.4177961349487305
I0123 14:34:47.582593 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9042129516601562
I0123 14:34:49.575821 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9930434226989746
I0123 14:34:52.468589 140012029288448 ddar.py:60] Depth 5/1000 time = 2.892242670059204
I0123 14:34:54.894190 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4005486965179443
I0123 14:34:58.202572 140012029288448 ddar.py:60] Depth 7/1000 time = 3.3080897331237793
I0123 14:34:58.213649 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:34:58.213708 140012029288448 alphageometry.py:566] LM output (score=-2.235447): "n : T c g c n 18 ;"
I0123 14:34:58.213743 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c g"

I0123 14:34:58.213783 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n c c g ? coll l d e"
I0123 14:34:58.213936 140012029288448 graph.py:498] 
I0123 14:34:58.213992 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n c c g ? coll l d e
I0123 14:34:59.070620 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8221631050109863
I0123 14:35:00.457428 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3866441249847412
I0123 14:35:03.390094 140012029288448 ddar.py:60] Depth 3/1000 time = 2.9324872493743896
I0123 14:35:05.468456 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0781869888305664
I0123 14:35:08.535445 140012029288448 ddar.py:60] Depth 5/1000 time = 3.0668017864227295
I0123 14:35:10.650783 140012029288448 ddar.py:60] Depth 6/1000 time = 2.1149163246154785
I0123 14:35:14.147576 140012029288448 ddar.py:60] Depth 7/1000 time = 3.464482069015503
I0123 14:35:16.543308 140012029288448 ddar.py:60] Depth 8/1000 time = 2.3954436779022217
I0123 14:35:16.555274 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:35:16.555362 140012029288448 alphageometry.py:566] LM output (score=-2.285834): "n : T c d c n 18 ;"
I0123 14:35:16.555399 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c d"

I0123 14:35:16.555454 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n c c d ? coll l d e"
I0123 14:35:16.555636 140012029288448 graph.py:498] 
I0123 14:35:16.555701 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n c c d ? coll l d e
I0123 14:35:17.425304 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8353753089904785
I0123 14:35:19.835781 140012029288448 ddar.py:60] Depth 2/1000 time = 2.4102742671966553
I0123 14:35:21.737718 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9017539024353027
I0123 14:35:23.765275 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0273566246032715
I0123 14:35:26.695984 140012029288448 ddar.py:60] Depth 5/1000 time = 2.930299997329712
I0123 14:35:29.321318 140012029288448 ddar.py:60] Depth 6/1000 time = 2.5906224250793457
I0123 14:35:32.839297 140012029288448 ddar.py:60] Depth 7/1000 time = 3.517805576324463
I0123 14:35:32.851615 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:35:32.851681 140012029288448 alphageometry.py:566] LM output (score=-2.398326): "n : C e m n 18 D e n m n 19 ;"
I0123 14:35:32.851716 140012029288448 alphageometry.py:567] Translation: "n = on_line n e m, on_bline n m e"

I0123 14:35:32.851761 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n e m, on_bline n m e ? coll l d e"
I0123 14:35:32.851923 140012029288448 graph.py:498] 
I0123 14:35:32.851977 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n e m, on_bline n m e ? coll l d e
I0123 14:35:33.822620 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9282317161560059
I0123 14:35:35.480078 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6572320461273193
I0123 14:35:38.585391 140012029288448 ddar.py:60] Depth 3/1000 time = 3.105015516281128
I0123 14:35:41.792109 140012029288448 ddar.py:60] Depth 4/1000 time = 3.206488609313965
I0123 14:35:44.053193 140012029288448 ddar.py:60] Depth 5/1000 time = 2.260667562484741
I0123 14:35:47.847437 140012029288448 ddar.py:60] Depth 6/1000 time = 3.766354560852051
I0123 14:35:50.570213 140012029288448 ddar.py:60] Depth 7/1000 time = 2.722586154937744
I0123 14:35:50.582786 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:35:50.582848 140012029288448 alphageometry.py:566] LM output (score=-2.438771): "n : T e f f n 18 ;"
I0123 14:35:50.582884 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f e f"

I0123 14:35:50.582924 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n f e f ? coll l d e"
I0123 14:35:50.583081 140012029288448 graph.py:498] 
I0123 14:35:50.583137 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n f e f ? coll l d e
I0123 14:35:52.444919 140012029288448 ddar.py:60] Depth 1/1000 time = 1.8281190395355225
I0123 14:35:53.889710 140012029288448 ddar.py:60] Depth 2/1000 time = 1.444601058959961
I0123 14:35:55.777078 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8871691226959229
I0123 14:35:58.753462 140012029288448 ddar.py:60] Depth 4/1000 time = 2.9761369228363037
I0123 14:36:00.684051 140012029288448 ddar.py:60] Depth 5/1000 time = 1.930145025253296
I0123 14:36:04.125972 140012029288448 ddar.py:60] Depth 6/1000 time = 3.4130423069000244
I0123 14:36:06.508176 140012029288448 ddar.py:60] Depth 7/1000 time = 2.382023334503174
I0123 14:36:06.520014 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:36:06.520068 140012029288448 alphageometry.py:566] LM output (score=-2.483638): "n : C e f n 18 D e n f n 19 ;"
I0123 14:36:06.520118 140012029288448 alphageometry.py:567] Translation: "n = on_line n e f, on_bline n f e"

I0123 14:36:06.520158 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n e f, on_bline n f e ? coll l d e"
I0123 14:36:06.520325 140012029288448 graph.py:498] 
I0123 14:36:06.520381 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n e f, on_bline n f e ? coll l d e
I0123 14:36:08.565829 140012029288448 ddar.py:60] Depth 1/1000 time = 2.0005455017089844
I0123 14:36:10.347874 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7818827629089355
I0123 14:36:13.612287 140012029288448 ddar.py:60] Depth 3/1000 time = 3.2642405033111572
I0123 14:36:17.021170 140012029288448 ddar.py:60] Depth 4/1000 time = 3.408633232116699
I0123 14:36:19.367609 140012029288448 ddar.py:60] Depth 5/1000 time = 2.345931053161621
I0123 14:36:23.195365 140012029288448 ddar.py:60] Depth 6/1000 time = 3.799102783203125
I0123 14:36:26.941617 140012029288448 ddar.py:60] Depth 7/1000 time = 3.7460668087005615
I0123 14:36:26.955428 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:36:26.955483 140012029288448 alphageometry.py:566] LM output (score=-2.554925): "n : C c g n 18 D c g g n 19 ;"
I0123 14:36:26.955518 140012029288448 alphageometry.py:567] Translation: "n = on_line n c g, on_circle n g c"

I0123 14:36:26.955556 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n c g, on_circle n g c ? coll l d e"
I0123 14:36:26.955717 140012029288448 graph.py:498] 
I0123 14:36:26.955772 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n c g, on_circle n g c ? coll l d e
I0123 14:36:28.172245 140012029288448 ddar.py:60] Depth 1/1000 time = 1.1783103942871094
I0123 14:36:31.310677 140012029288448 ddar.py:60] Depth 2/1000 time = 3.138268232345581
I0123 14:36:34.217410 140012029288448 ddar.py:60] Depth 3/1000 time = 2.9065568447113037
I0123 14:36:38.366872 140012029288448 ddar.py:60] Depth 4/1000 time = 4.1492297649383545
I0123 14:36:41.427370 140012029288448 ddar.py:60] Depth 5/1000 time = 3.0599989891052246
I0123 14:36:45.999243 140012029288448 ddar.py:60] Depth 6/1000 time = 4.524470567703247
I0123 14:36:50.512895 140012029288448 ddar.py:60] Depth 7/1000 time = 4.51346492767334
I0123 14:36:50.529603 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:36:50.529683 140012029288448 alphageometry.py:566] LM output (score=-2.575087): "n : T e i e n 18 ;"
I0123 14:36:50.529722 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e i"

I0123 14:36:50.529763 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n e e i ? coll l d e"
I0123 14:36:50.529919 140012029288448 graph.py:498] 
I0123 14:36:50.529976 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n e e i ? coll l d e
I0123 14:36:51.397494 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8338632583618164
I0123 14:36:52.819710 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4220530986785889
I0123 14:36:55.838483 140012029288448 ddar.py:60] Depth 3/1000 time = 3.0185601711273193
I0123 14:36:57.883512 140012029288448 ddar.py:60] Depth 4/1000 time = 2.044760227203369
I0123 14:36:59.895581 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0115480422973633
I0123 14:37:03.445033 140012029288448 ddar.py:60] Depth 6/1000 time = 3.51699161529541
I0123 14:37:05.868862 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4236512184143066
I0123 14:37:05.881207 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:37:05.881259 140012029288448 alphageometry.py:566] LM output (score=-2.588836): "n : T b h b n 18 ;"
I0123 14:37:05.881293 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b h"

I0123 14:37:05.881329 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n b b h ? coll l d e"
I0123 14:37:05.881490 140012029288448 graph.py:498] 
I0123 14:37:05.881546 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n b b h ? coll l d e
I0123 14:37:07.723041 140012029288448 ddar.py:60] Depth 1/1000 time = 1.8079123497009277
I0123 14:37:09.155637 140012029288448 ddar.py:60] Depth 2/1000 time = 1.432417392730713
I0123 14:37:11.263204 140012029288448 ddar.py:60] Depth 3/1000 time = 2.107401132583618
I0123 14:37:14.527400 140012029288448 ddar.py:60] Depth 4/1000 time = 3.2639336585998535
I0123 14:37:16.786763 140012029288448 ddar.py:60] Depth 5/1000 time = 2.2589027881622314
I0123 14:37:19.036449 140012029288448 ddar.py:60] Depth 6/1000 time = 2.248919725418091
I0123 14:37:22.673929 140012029288448 ddar.py:60] Depth 7/1000 time = 3.6018331050872803
I0123 14:37:25.160924 140012029288448 ddar.py:60] Depth 8/1000 time = 2.4866459369659424
I0123 14:37:25.173787 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:37:25.173877 140012029288448 alphageometry.py:566] LM output (score=-2.596741): "n : C e l n 18 D e n l n 19 ;"
I0123 14:37:25.173914 140012029288448 alphageometry.py:567] Translation: "n = on_line n e l, on_bline n l e"

I0123 14:37:25.173968 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n e l, on_bline n l e ? coll l d e"
I0123 14:37:25.174161 140012029288448 graph.py:498] 
I0123 14:37:25.174224 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n e l, on_bline n l e ? coll l d e
I0123 14:37:27.265179 140012029288448 ddar.py:60] Depth 1/1000 time = 2.0462446212768555
I0123 14:37:28.709936 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4445605278015137
I0123 14:37:30.569766 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8595502376556396
I0123 14:37:33.643873 140012029288448 ddar.py:60] Depth 4/1000 time = 3.0737595558166504
I0123 14:37:35.595623 140012029288448 ddar.py:60] Depth 5/1000 time = 1.951218605041504
I0123 14:37:39.178979 140012029288448 ddar.py:60] Depth 6/1000 time = 3.557252883911133
I0123 14:37:41.569100 140012029288448 ddar.py:60] Depth 7/1000 time = 2.3898239135742188
I0123 14:37:41.580499 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:37:41.580602 140012029288448 alphageometry.py:566] LM output (score=-2.679566): "n : D c h c n 18 D g h g n 19 ;"
I0123 14:37:41.580640 140012029288448 alphageometry.py:567] Translation: "n = on_circle n c h, on_circle n g h"

I0123 14:37:41.580696 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_circle n c h, on_circle n g h ? coll l d e"
I0123 14:37:41.580893 140012029288448 graph.py:498] 
I0123 14:37:41.580960 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_circle n c h, on_circle n g h ? coll l d e
I0123 14:37:42.625107 140012029288448 ddar.py:60] Depth 1/1000 time = 0.989063024520874
I0123 14:37:45.510794 140012029288448 ddar.py:60] Depth 2/1000 time = 2.885491371154785
I0123 14:37:47.812771 140012029288448 ddar.py:60] Depth 3/1000 time = 2.301708221435547
I0123 14:37:51.370903 140012029288448 ddar.py:60] Depth 4/1000 time = 3.557838201522827
I0123 14:37:53.794852 140012029288448 ddar.py:60] Depth 5/1000 time = 2.4234812259674072
I0123 14:37:56.825940 140012029288448 ddar.py:60] Depth 6/1000 time = 2.993145227432251
I0123 14:38:00.836997 140012029288448 ddar.py:60] Depth 7/1000 time = 4.0108582973480225
I0123 14:38:00.849254 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:38:00.849318 140012029288448 alphageometry.py:566] LM output (score=-2.689033): "n : D d h h n 18 ;"
I0123 14:38:00.849353 140012029288448 alphageometry.py:567] Translation: "n = on_circle n h d"

I0123 14:38:00.849392 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_circle n h d ? coll l d e"
I0123 14:38:00.849546 140012029288448 graph.py:498] 
I0123 14:38:00.849605 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_circle n h d ? coll l d e
I0123 14:38:01.848863 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9624061584472656
I0123 14:38:03.566062 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7169749736785889
I0123 14:38:06.939483 140012029288448 ddar.py:60] Depth 3/1000 time = 3.373150587081909
I0123 14:38:09.286642 140012029288448 ddar.py:60] Depth 4/1000 time = 2.3469667434692383
I0123 14:38:12.667587 140012029288448 ddar.py:60] Depth 5/1000 time = 3.3805408477783203
I0123 14:38:15.602841 140012029288448 ddar.py:60] Depth 6/1000 time = 2.902510643005371
I0123 14:38:19.570656 140012029288448 ddar.py:60] Depth 7/1000 time = 3.96751070022583
I0123 14:38:19.582580 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:38:19.582636 140012029288448 alphageometry.py:566] LM output (score=-2.746947): "n : C h i n 18 D h i i n 19 ;"
I0123 14:38:19.582671 140012029288448 alphageometry.py:567] Translation: "n = on_line n h i, on_circle n i h"

I0123 14:38:19.582709 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n h i, on_circle n i h ? coll l d e"
I0123 14:38:19.582890 140012029288448 graph.py:498] 
I0123 14:38:19.582949 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n h i, on_circle n i h ? coll l d e
I0123 14:38:20.728470 140012029288448 ddar.py:60] Depth 1/1000 time = 1.1033048629760742
I0123 14:38:23.930427 140012029288448 ddar.py:60] Depth 2/1000 time = 3.2017812728881836
I0123 14:38:26.619601 140012029288448 ddar.py:60] Depth 3/1000 time = 2.6889870166778564
I0123 14:38:30.446764 140012029288448 ddar.py:60] Depth 4/1000 time = 3.8269054889678955
I0123 14:38:34.250881 140012029288448 ddar.py:60] Depth 5/1000 time = 3.8036820888519287
I0123 14:38:38.552426 140012029288448 ddar.py:60] Depth 6/1000 time = 4.271977424621582
I0123 14:38:41.765045 140012029288448 ddar.py:60] Depth 7/1000 time = 3.2124276161193848
I0123 14:38:41.778497 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:38:41.778564 140012029288448 alphageometry.py:566] LM output (score=-2.832086): "n : C e i n 18 D e n i n 19 ;"
I0123 14:38:41.778599 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_bline n i e"

I0123 14:38:41.778637 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n e i, on_bline n i e ? coll l d e"
I0123 14:38:41.778805 140012029288448 graph.py:498] 
I0123 14:38:41.778866 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_line n e i, on_bline n i e ? coll l d e
I0123 14:38:43.868695 140012029288448 ddar.py:60] Depth 1/1000 time = 2.047606945037842
I0123 14:38:45.296432 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4274661540985107
I0123 14:38:47.181129 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8845081329345703
I0123 14:38:50.180397 140012029288448 ddar.py:60] Depth 4/1000 time = 2.9990649223327637
I0123 14:38:52.110989 140012029288448 ddar.py:60] Depth 5/1000 time = 1.929908037185669
I0123 14:38:55.604503 140012029288448 ddar.py:60] Depth 6/1000 time = 3.4689440727233887
I0123 14:38:57.961718 140012029288448 ddar.py:60] Depth 7/1000 time = 2.357044219970703
I0123 14:38:57.972455 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:38:57.972515 140012029288448 alphageometry.py:566] LM output (score=-2.832822): "n : D c g g n 18 ;"
I0123 14:38:57.972550 140012029288448 alphageometry.py:567] Translation: "n = on_circle n g c"

I0123 14:38:57.972589 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_circle n g c ? coll l d e"
I0123 14:38:57.972741 140012029288448 graph.py:498] 
I0123 14:38:57.972797 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_circle n g c ? coll l d e
I0123 14:38:59.092489 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0833754539489746
I0123 14:39:01.904359 140012029288448 ddar.py:60] Depth 2/1000 time = 2.811677932739258
I0123 14:39:04.169675 140012029288448 ddar.py:60] Depth 3/1000 time = 2.2650644779205322
I0123 14:39:07.699939 140012029288448 ddar.py:60] Depth 4/1000 time = 3.5299787521362305
I0123 14:39:10.028265 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3279130458831787
I0123 14:39:13.011331 140012029288448 ddar.py:60] Depth 6/1000 time = 2.9506032466888428
I0123 14:39:16.905543 140012029288448 ddar.py:60] Depth 7/1000 time = 3.8940396308898926
I0123 14:39:16.918083 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:39:16.918147 140012029288448 alphageometry.py:566] LM output (score=-2.839871): "n : D e i i n 18 ;"
I0123 14:39:16.918183 140012029288448 alphageometry.py:567] Translation: "n = on_circle n i e"

I0123 14:39:16.918224 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_circle n i e ? coll l d e"
I0123 14:39:16.918385 140012029288448 graph.py:498] 
I0123 14:39:16.918440 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_circle n i e ? coll l d e
I0123 14:39:18.255629 140012029288448 ddar.py:60] Depth 1/1000 time = 1.299774408340454
I0123 14:39:20.824838 140012029288448 ddar.py:60] Depth 2/1000 time = 2.5690250396728516
I0123 14:39:24.810471 140012029288448 ddar.py:60] Depth 3/1000 time = 3.9853873252868652
I0123 14:39:27.846014 140012029288448 ddar.py:60] Depth 4/1000 time = 3.0352790355682373
I0123 14:39:31.902152 140012029288448 ddar.py:60] Depth 5/1000 time = 4.055715799331665
I0123 14:39:35.629008 140012029288448 ddar.py:60] Depth 6/1000 time = 3.685899496078491
I0123 14:39:40.321421 140012029288448 ddar.py:60] Depth 7/1000 time = 4.692224025726318
I0123 14:39:40.339148 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:39:40.339277 140012029288448 alphageometry.py:566] LM output (score=-2.843078): "n : T c e f n 18 ;"
I0123 14:39:40.339315 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f c e"

I0123 14:39:40.339361 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n f c e ? coll l d e"
I0123 14:39:40.339543 140012029288448 graph.py:498] 
I0123 14:39:40.339603 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n f c e ? coll l d e
I0123 14:39:41.201442 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8280754089355469
I0123 14:39:42.592034 140012029288448 ddar.py:60] Depth 2/1000 time = 1.390397548675537
I0123 14:39:45.666540 140012029288448 ddar.py:60] Depth 3/1000 time = 3.0742766857147217
I0123 14:39:47.709218 140012029288448 ddar.py:60] Depth 4/1000 time = 2.042496919631958
I0123 14:39:49.726436 140012029288448 ddar.py:60] Depth 5/1000 time = 2.016800880432129
I0123 14:39:53.357495 140012029288448 ddar.py:60] Depth 6/1000 time = 3.5968806743621826
I0123 14:39:55.859818 140012029288448 ddar.py:60] Depth 7/1000 time = 2.5021204948425293
I0123 14:39:55.871974 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:39:55.872050 140012029288448 alphageometry.py:566] LM output (score=-2.844669): "n : D e g g n 18 ;"
I0123 14:39:55.872087 140012029288448 alphageometry.py:567] Translation: "n = on_circle n g e"

I0123 14:39:55.872127 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_circle n g e ? coll l d e"
I0123 14:39:55.872281 140012029288448 graph.py:498] 
I0123 14:39:55.872333 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_circle n g e ? coll l d e
I0123 14:39:56.862007 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9523305892944336
I0123 14:39:59.649196 140012029288448 ddar.py:60] Depth 2/1000 time = 2.787022829055786
I0123 14:40:01.912101 140012029288448 ddar.py:60] Depth 3/1000 time = 2.2626726627349854
I0123 14:40:05.471053 140012029288448 ddar.py:60] Depth 4/1000 time = 3.5586533546447754
I0123 14:40:07.836252 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3648030757904053
I0123 14:40:10.810830 140012029288448 ddar.py:60] Depth 6/1000 time = 2.9406075477600098
I0123 14:40:14.755110 140012029288448 ddar.py:60] Depth 7/1000 time = 3.9441020488739014
I0123 14:40:14.767068 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:40:14.767132 140012029288448 alphageometry.py:566] LM output (score=-2.850869): "n : T c e h n 18 ;"
I0123 14:40:14.767167 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h c e"

I0123 14:40:14.767205 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n h c e ? coll l d e"
I0123 14:40:14.767359 140012029288448 graph.py:498] 
I0123 14:40:14.767414 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n h c e ? coll l d e
I0123 14:40:15.633537 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8297853469848633
I0123 14:40:17.007777 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3740577697753906
I0123 14:40:20.056342 140012029288448 ddar.py:60] Depth 3/1000 time = 3.048377513885498
I0123 14:40:22.127671 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0710411071777344
I0123 14:40:25.300814 140012029288448 ddar.py:60] Depth 5/1000 time = 3.1725914478302
I0123 14:40:27.913259 140012029288448 ddar.py:60] Depth 6/1000 time = 2.5775885581970215
I0123 14:40:30.441820 140012029288448 ddar.py:60] Depth 7/1000 time = 2.528388738632202
I0123 14:40:30.453750 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:40:30.453806 140012029288448 alphageometry.py:566] LM output (score=-2.857201): "n : T e m h n 18 ;"
I0123 14:40:30.453840 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h e m"

I0123 14:40:30.453877 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n h e m ? coll l d e"
I0123 14:40:30.454035 140012029288448 graph.py:498] 
I0123 14:40:30.454102 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n h e m ? coll l d e
I0123 14:40:32.407916 140012029288448 ddar.py:60] Depth 1/1000 time = 1.9202837944030762
I0123 14:40:33.828639 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4205491542816162
I0123 14:40:35.664462 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8356378078460693
I0123 14:40:38.728085 140012029288448 ddar.py:60] Depth 4/1000 time = 3.0634191036224365
I0123 14:40:40.626198 140012029288448 ddar.py:60] Depth 5/1000 time = 1.8976562023162842
I0123 14:40:42.996727 140012029288448 ddar.py:60] Depth 6/1000 time = 2.3426177501678467
I0123 14:40:46.429391 140012029288448 ddar.py:60] Depth 7/1000 time = 3.4324066638946533
I0123 14:40:46.439661 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:40:46.439718 140012029288448 alphageometry.py:566] LM output (score=-2.864630): "n : T e i h n 18 ;"
I0123 14:40:46.439754 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h e i"

I0123 14:40:46.439795 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n h e i ? coll l d e"
I0123 14:40:46.439967 140012029288448 graph.py:498] 
I0123 14:40:46.440022 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n h e i ? coll l d e
I0123 14:40:47.295452 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8214297294616699
I0123 14:40:48.672186 140012029288448 ddar.py:60] Depth 2/1000 time = 1.376573085784912
I0123 14:40:51.610373 140012029288448 ddar.py:60] Depth 3/1000 time = 2.9380061626434326
I0123 14:40:53.630011 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0194644927978516
I0123 14:40:55.612243 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9818217754364014
I0123 14:40:59.194009 140012029288448 ddar.py:60] Depth 6/1000 time = 3.5487306118011475
I0123 14:41:01.609444 140012029288448 ddar.py:60] Depth 7/1000 time = 2.415170907974243
I0123 14:41:01.621754 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:41:01.621846 140012029288448 alphageometry.py:566] LM output (score=-2.937215): "n : T e g e n 18 ;"
I0123 14:41:01.621882 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e g"

I0123 14:41:01.621937 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n e e g ? coll l d e"
I0123 14:41:01.622129 140012029288448 graph.py:498] 
I0123 14:41:01.622193 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n e e g ? coll l d e
I0123 14:41:03.633610 140012029288448 ddar.py:60] Depth 1/1000 time = 1.9781560897827148
I0123 14:41:05.055540 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4217357635498047
I0123 14:41:07.044491 140012029288448 ddar.py:60] Depth 3/1000 time = 1.988769292831421
I0123 14:41:10.304384 140012029288448 ddar.py:60] Depth 4/1000 time = 3.259700059890747
I0123 14:41:12.412071 140012029288448 ddar.py:60] Depth 5/1000 time = 2.107492446899414
I0123 14:41:14.549764 140012029288448 ddar.py:60] Depth 6/1000 time = 2.137270450592041
I0123 14:41:18.195488 140012029288448 ddar.py:60] Depth 7/1000 time = 3.6127748489379883
I0123 14:41:20.644356 140012029288448 ddar.py:60] Depth 8/1000 time = 2.4486186504364014
I0123 14:41:20.656617 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:41:20.656698 140012029288448 alphageometry.py:566] LM output (score=-2.946597): "n : T c e i n 18 ;"
I0123 14:41:20.656733 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i c e"

I0123 14:41:20.656784 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n i c e ? coll l d e"
I0123 14:41:20.656973 140012029288448 graph.py:498] 
I0123 14:41:20.657033 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n i c e ? coll l d e
I0123 14:41:21.516673 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8262882232666016
I0123 14:41:24.078122 140012029288448 ddar.py:60] Depth 2/1000 time = 2.5612599849700928
I0123 14:41:26.001039 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9227347373962402
I0123 14:41:28.078646 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0774312019348145
I0123 14:41:31.404515 140012029288448 ddar.py:60] Depth 5/1000 time = 3.3257052898406982
I0123 14:41:33.682785 140012029288448 ddar.py:60] Depth 6/1000 time = 2.278090476989746
I0123 14:41:37.092018 140012029288448 ddar.py:60] Depth 7/1000 time = 3.4088287353515625
I0123 14:41:39.952994 140012029288448 ddar.py:60] Depth 8/1000 time = 2.8257200717926025
I0123 14:41:42.706840 140012029288448 ddar.py:60] Depth 9/1000 time = 2.7535781860351562
I0123 14:41:46.670658 140012029288448 ddar.py:60] Depth 10/1000 time = 3.9511687755584717
I0123 14:41:46.674183 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:41:46.674242 140012029288448 alphageometry.py:566] LM output (score=-3.014591): "n : D c g i n 18 ;"
I0123 14:41:46.674277 140012029288448 alphageometry.py:567] Translation: "n = eqdistance n i c g"

I0123 14:41:46.674314 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = eqdistance n i c g ? coll l d e"
I0123 14:41:46.674473 140012029288448 graph.py:498] 
I0123 14:41:46.674529 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = eqdistance n i c g ? coll l d e
I0123 14:41:47.733630 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0216281414031982
I0123 14:41:49.343259 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6094558238983154
I0123 14:41:52.492279 140012029288448 ddar.py:60] Depth 3/1000 time = 3.1488420963287354
I0123 14:41:54.642790 140012029288448 ddar.py:60] Depth 4/1000 time = 2.1503114700317383
I0123 14:41:56.768071 140012029288448 ddar.py:60] Depth 5/1000 time = 2.1248779296875
I0123 14:42:00.520062 140012029288448 ddar.py:60] Depth 6/1000 time = 3.7270545959472656
I0123 14:42:03.044431 140012029288448 ddar.py:60] Depth 7/1000 time = 2.524080514907837
I0123 14:42:03.056408 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:42:03.056484 140012029288448 alphageometry.py:566] LM output (score=-3.061085): "n : T c g i n 18 ;"
I0123 14:42:03.056520 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i c g"

I0123 14:42:03.056572 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n i c g ? coll l d e"
I0123 14:42:03.056742 140012029288448 graph.py:498] 
I0123 14:42:03.056797 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n i c g ? coll l d e
I0123 14:42:05.056322 140012029288448 ddar.py:60] Depth 1/1000 time = 1.9646506309509277
I0123 14:42:06.437830 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3813378810882568
I0123 14:42:08.335601 140012029288448 ddar.py:60] Depth 3/1000 time = 1.897611141204834
I0123 14:42:11.449048 140012029288448 ddar.py:60] Depth 4/1000 time = 3.1132471561431885
I0123 14:42:13.420864 140012029288448 ddar.py:60] Depth 5/1000 time = 1.971395492553711
I0123 14:42:15.961281 140012029288448 ddar.py:60] Depth 6/1000 time = 2.506556510925293
I0123 14:42:19.625336 140012029288448 ddar.py:60] Depth 7/1000 time = 3.6638295650482178
I0123 14:42:19.637300 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:42:19.637372 140012029288448 alphageometry.py:566] LM output (score=-3.067438): "n : D c h c n 18 D e h e n 19 ;"
I0123 14:42:19.637407 140012029288448 alphageometry.py:567] Translation: "n = on_circle n c h, on_circle n e h"

I0123 14:42:19.637456 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_circle n c h, on_circle n e h ? coll l d e"
I0123 14:42:19.637630 140012029288448 graph.py:498] 
I0123 14:42:19.637691 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_circle n c h, on_circle n e h ? coll l d e
I0123 14:42:20.675399 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9846596717834473
I0123 14:42:22.431677 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7560746669769287
I0123 14:42:26.293907 140012029288448 ddar.py:60] Depth 3/1000 time = 3.862030506134033
I0123 14:42:29.148835 140012029288448 ddar.py:60] Depth 4/1000 time = 2.8547346591949463
I0123 14:42:31.983599 140012029288448 ddar.py:60] Depth 5/1000 time = 2.834360122680664
I0123 14:42:36.722738 140012029288448 ddar.py:60] Depth 6/1000 time = 4.69032621383667
I0123 14:42:40.265974 140012029288448 ddar.py:60] Depth 7/1000 time = 3.5430047512054443
I0123 14:42:45.018250 140012029288448 ddar.py:60] Depth 8/1000 time = 4.735889434814453
I0123 14:42:45.022122 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:42:45.022181 140012029288448 alphageometry.py:566] LM output (score=-3.117225): "n : T c n e f 18 ;"
I0123 14:42:45.022216 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c e f"

I0123 14:42:45.022254 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n c e f ? coll l d e"
I0123 14:42:45.022423 140012029288448 graph.py:498] 
I0123 14:42:45.022480 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m f i, on_circle m i f; n = on_tline n c e f ? coll l d e
I0123 14:42:45.891645 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8338828086853027
I0123 14:42:47.312115 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4203102588653564
I0123 14:42:50.253105 140012029288448 ddar.py:60] Depth 3/1000 time = 2.940819263458252
I0123 14:42:52.195249 140012029288448 ddar.py:60] Depth 4/1000 time = 1.941948652267456
I0123 14:42:55.288311 140012029288448 ddar.py:60] Depth 5/1000 time = 3.092664957046509
I0123 14:42:57.713558 140012029288448 ddar.py:60] Depth 6/1000 time = 2.3961498737335205
I0123 14:43:00.031492 140012029288448 ddar.py:60] Depth 7/1000 time = 2.317666530609131
I0123 14:43:00.042477 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:43:00.042594 140012029288448 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D f h h m 16 ; x00
I0123 14:43:06.744509 140012029288448 alphageometry.py:566] LM output (score=-1.450333): "n : T c g g n 17 ;"
I0123 14:43:06.744674 140012029288448 alphageometry.py:567] Translation: "n = on_tline n g c g"

I0123 14:43:06.744727 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n g c g ? coll l d e"
I0123 14:43:06.744888 140012029288448 graph.py:498] 
I0123 14:43:06.744950 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n g c g ? coll l d e
I0123 14:43:08.913563 140012029288448 ddar.py:60] Depth 1/1000 time = 2.136070728302002
I0123 14:43:10.150360 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2366089820861816
I0123 14:43:11.736156 140012029288448 ddar.py:60] Depth 3/1000 time = 1.585620403289795
I0123 14:43:13.413501 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6771585941314697
I0123 14:43:16.608557 140012029288448 ddar.py:60] Depth 5/1000 time = 3.1725521087646484
I0123 14:43:18.557911 140012029288448 ddar.py:60] Depth 6/1000 time = 1.949183702468872
I0123 14:43:18.567560 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:43:18.567616 140012029288448 alphageometry.py:566] LM output (score=-1.707461): "n : T e i e n 17 ;"
I0123 14:43:18.567651 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e i"

I0123 14:43:18.567687 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n e e i ? coll l d e"
I0123 14:43:18.567833 140012029288448 graph.py:498] 
I0123 14:43:18.567885 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n e e i ? coll l d e
I0123 14:43:19.520715 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9203650951385498
I0123 14:43:20.984456 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4635579586029053
I0123 14:43:23.749974 140012029288448 ddar.py:60] Depth 3/1000 time = 2.7653369903564453
I0123 14:43:25.453833 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7036757469177246
I0123 14:43:27.500125 140012029288448 ddar.py:60] Depth 5/1000 time = 2.026008367538452
I0123 14:43:29.457168 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9568722248077393
I0123 14:43:29.466807 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:43:29.466863 140012029288448 alphageometry.py:566] LM output (score=-1.755548): "n : T e g e n 17 ;"
I0123 14:43:29.466897 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e g"

I0123 14:43:29.466932 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n e e g ? coll l d e"
I0123 14:43:29.467078 140012029288448 graph.py:498] 
I0123 14:43:29.467129 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n e e g ? coll l d e
I0123 14:43:31.551978 140012029288448 ddar.py:60] Depth 1/1000 time = 2.052945852279663
I0123 14:43:33.020824 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4686806201934814
I0123 14:43:34.633364 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6123719215393066
I0123 14:43:36.347928 140012029288448 ddar.py:60] Depth 4/1000 time = 1.714386224746704
I0123 14:43:39.530011 140012029288448 ddar.py:60] Depth 5/1000 time = 3.161710500717163
I0123 14:43:41.470645 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9404475688934326
I0123 14:43:41.480876 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:43:41.480930 140012029288448 alphageometry.py:566] LM output (score=-1.859254): "n : T c g c n 17 ;"
I0123 14:43:41.480964 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c g"

I0123 14:43:41.481000 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n c c g ? coll l d e"
I0123 14:43:41.481143 140012029288448 graph.py:498] 
I0123 14:43:41.481193 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n c c g ? coll l d e
I0123 14:43:42.422386 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9093620777130127
I0123 14:43:43.680686 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2581336498260498
I0123 14:43:46.430483 140012029288448 ddar.py:60] Depth 3/1000 time = 2.74961256980896
I0123 14:43:48.134019 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7033321857452393
I0123 14:43:50.190874 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0345726013183594
I0123 14:43:52.146860 140012029288448 ddar.py:60] Depth 6/1000 time = 1.955716609954834
I0123 14:43:52.157343 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:43:52.157425 140012029288448 alphageometry.py:566] LM output (score=-1.956890): "n : T c e e n 17 ;"
I0123 14:43:52.157462 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c e"

I0123 14:43:52.157515 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n e c e ? coll l d e"
I0123 14:43:52.157730 140012029288448 graph.py:498] 
I0123 14:43:52.157796 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n e c e ? coll l d e
I0123 14:43:54.319784 140012029288448 ddar.py:60] Depth 1/1000 time = 2.1285691261291504
I0123 14:43:55.574930 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2549731731414795
I0123 14:43:57.179565 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6044526100158691
I0123 14:43:58.868655 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6888890266418457
I0123 14:44:02.052919 140012029288448 ddar.py:60] Depth 5/1000 time = 3.162121534347534
I0123 14:44:04.027800 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9746947288513184
I0123 14:44:04.037864 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:44:04.037919 140012029288448 alphageometry.py:566] LM output (score=-2.122774): "n : T e f f n 17 ;"
I0123 14:44:04.037953 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f e f"

I0123 14:44:04.037991 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n f e f ? coll l d e"
I0123 14:44:04.038135 140012029288448 graph.py:498] 
I0123 14:44:04.038185 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n f e f ? coll l d e
I0123 14:44:04.997170 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9256110191345215
I0123 14:44:06.257329 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2599856853485107
I0123 14:44:09.007901 140012029288448 ddar.py:60] Depth 3/1000 time = 2.7503929138183594
I0123 14:44:10.691823 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6837091445922852
I0123 14:44:12.881064 140012029288448 ddar.py:60] Depth 5/1000 time = 2.1647753715515137
I0123 14:44:16.176282 140012029288448 ddar.py:60] Depth 6/1000 time = 3.294957399368286
I0123 14:44:16.186462 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:44:16.186516 140012029288448 alphageometry.py:566] LM output (score=-2.133379): "n : C e i n 17 D e i i n 18 ;"
I0123 14:44:16.186550 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_circle n i e"

I0123 14:44:16.186586 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_line n e i, on_circle n i e ? coll l d e"
I0123 14:44:16.186741 140012029288448 graph.py:498] 
I0123 14:44:16.186796 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_line n e i, on_circle n i e ? coll l d e
I0123 14:44:17.457509 140012029288448 ddar.py:60] Depth 1/1000 time = 1.233499526977539
I0123 14:44:19.399816 140012029288448 ddar.py:60] Depth 2/1000 time = 1.9421238899230957
I0123 14:44:22.802762 140012029288448 ddar.py:60] Depth 3/1000 time = 3.4027628898620605
I0123 14:44:25.182862 140012029288448 ddar.py:60] Depth 4/1000 time = 2.3799099922180176
I0123 14:44:27.540961 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3576786518096924
I0123 14:44:31.759028 140012029288448 ddar.py:60] Depth 6/1000 time = 4.185933589935303
I0123 14:44:34.607371 140012029288448 ddar.py:60] Depth 7/1000 time = 2.848033905029297
I0123 14:44:34.620178 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:44:34.620254 140012029288448 alphageometry.py:566] LM output (score=-2.134175): "n : T b h b n 17 ;"
I0123 14:44:34.620289 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b h"

I0123 14:44:34.620343 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n b b h ? coll l d e"
I0123 14:44:34.620515 140012029288448 graph.py:498] 
I0123 14:44:34.620573 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n b b h ? coll l d e
I0123 14:44:35.563969 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9105241298675537
I0123 14:44:38.068493 140012029288448 ddar.py:60] Depth 2/1000 time = 2.504349708557129
I0123 14:44:39.669764 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6010947227478027
I0123 14:44:41.363209 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6932651996612549
I0123 14:44:43.435466 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0514309406280518
I0123 14:44:46.588609 140012029288448 ddar.py:60] Depth 6/1000 time = 3.152959108352661
I0123 14:44:46.598286 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:44:46.598348 140012029288448 alphageometry.py:566] LM output (score=-2.343678): "n : T c e f n 17 ;"
I0123 14:44:46.598388 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f c e"

I0123 14:44:46.598425 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n f c e ? coll l d e"
I0123 14:44:46.598571 140012029288448 graph.py:498] 
I0123 14:44:46.598624 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n f c e ? coll l d e
I0123 14:44:47.559722 140012029288448 ddar.py:60] Depth 1/1000 time = 0.926884651184082
I0123 14:44:48.823349 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2634656429290771
I0123 14:44:50.443436 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6198961734771729
I0123 14:44:53.385976 140012029288448 ddar.py:60] Depth 4/1000 time = 2.94228196144104
I0123 14:44:55.467705 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0595285892486572
I0123 14:44:57.449361 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9814732074737549
I0123 14:44:57.459034 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:44:57.459091 140012029288448 alphageometry.py:566] LM output (score=-2.442450): "n : T e i i n 17 ;"
I0123 14:44:57.459126 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i e i"

I0123 14:44:57.459168 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n i e i ? coll l d e"
I0123 14:44:57.459319 140012029288448 graph.py:498] 
I0123 14:44:57.459392 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n i e i ? coll l d e
I0123 14:44:58.403631 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9113619327545166
I0123 14:44:59.646922 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2431268692016602
I0123 14:45:02.384663 140012029288448 ddar.py:60] Depth 3/1000 time = 2.737569808959961
I0123 14:45:04.058333 140012029288448 ddar.py:60] Depth 4/1000 time = 1.673473596572876
I0123 14:45:06.099680 140012029288448 ddar.py:60] Depth 5/1000 time = 2.02009916305542
I0123 14:45:09.306221 140012029288448 ddar.py:60] Depth 6/1000 time = 3.2063450813293457
I0123 14:45:09.316246 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:45:09.316315 140012029288448 alphageometry.py:566] LM output (score=-2.545437): "n : T e i h n 17 ;"
I0123 14:45:09.316352 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h e i"

I0123 14:45:09.316394 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n h e i ? coll l d e"
I0123 14:45:09.316553 140012029288448 graph.py:498] 
I0123 14:45:09.316612 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n h e i ? coll l d e
I0123 14:45:10.265132 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9164285659790039
I0123 14:45:11.499140 140012029288448 ddar.py:60] Depth 2/1000 time = 1.233811378479004
I0123 14:45:13.089517 140012029288448 ddar.py:60] Depth 3/1000 time = 1.590120792388916
I0123 14:45:14.763081 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6733415126800537
I0123 14:45:17.999244 140012029288448 ddar.py:60] Depth 5/1000 time = 3.215466260910034
I0123 14:45:19.933875 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9344592094421387
I0123 14:45:19.943438 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:45:19.943494 140012029288448 alphageometry.py:566] LM output (score=-2.555924): "n : T f i f n 17 ;"
I0123 14:45:19.943529 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f f i"

I0123 14:45:19.943566 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n f f i ? coll l d e"
I0123 14:45:19.943714 140012029288448 graph.py:498] 
I0123 14:45:19.943765 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n f f i ? coll l d e
I0123 14:45:20.883726 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9073829650878906
I0123 14:45:22.143749 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2598600387573242
I0123 14:45:24.904093 140012029288448 ddar.py:60] Depth 3/1000 time = 2.760164499282837
I0123 14:45:26.607110 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7028169631958008
I0123 14:45:28.660481 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0339789390563965
I0123 14:45:31.921133 140012029288448 ddar.py:60] Depth 6/1000 time = 3.260416269302368
I0123 14:45:31.931470 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:45:31.931545 140012029288448 alphageometry.py:566] LM output (score=-2.577224): "n : T e l e n 17 ;"
I0123 14:45:31.931582 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e l"

I0123 14:45:31.931626 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n e e l ? coll l d e"
I0123 14:45:31.931795 140012029288448 graph.py:498] 
I0123 14:45:31.931850 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n e e l ? coll l d e
I0123 14:45:32.890896 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9267046451568604
I0123 14:45:34.157669 140012029288448 ddar.py:60] Depth 2/1000 time = 1.26658034324646
I0123 14:45:35.766988 140012029288448 ddar.py:60] Depth 3/1000 time = 1.609151840209961
I0123 14:45:37.468813 140012029288448 ddar.py:60] Depth 4/1000 time = 1.70163893699646
I0123 14:45:40.676093 140012029288448 ddar.py:60] Depth 5/1000 time = 3.189850091934204
I0123 14:45:42.616703 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9404280185699463
I0123 14:45:42.626333 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:45:42.626388 140012029288448 alphageometry.py:566] LM output (score=-2.584895): "n : T c e c n 17 ;"
I0123 14:45:42.626423 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c e"

I0123 14:45:42.626460 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n c c e ? coll l d e"
I0123 14:45:42.626609 140012029288448 graph.py:498] 
I0123 14:45:42.626660 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n c c e ? coll l d e
I0123 14:45:43.593963 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9331576824188232
I0123 14:45:44.851709 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2575738430023193
I0123 14:45:47.716526 140012029288448 ddar.py:60] Depth 3/1000 time = 2.864642381668091
I0123 14:45:49.419551 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7028183937072754
I0123 14:45:51.528697 140012029288448 ddar.py:60] Depth 5/1000 time = 2.086439847946167
I0123 14:45:54.788955 140012029288448 ddar.py:60] Depth 6/1000 time = 3.2600033283233643
I0123 14:45:54.798731 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:45:54.798788 140012029288448 alphageometry.py:566] LM output (score=-2.592464): "n : T c e i n 17 ;"
I0123 14:45:54.798824 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i c e"

I0123 14:45:54.798861 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n i c e ? coll l d e"
I0123 14:45:54.799016 140012029288448 graph.py:498] 
I0123 14:45:54.799072 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n i c e ? coll l d e
I0123 14:45:55.758683 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9271535873413086
I0123 14:45:57.001771 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2429168224334717
I0123 14:45:58.625629 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6236827373504639
I0123 14:46:00.318353 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6925249099731445
I0123 14:46:03.627087 140012029288448 ddar.py:60] Depth 5/1000 time = 3.28631329536438
I0123 14:46:05.850718 140012029288448 ddar.py:60] Depth 6/1000 time = 2.2234461307525635
I0123 14:46:08.126373 140012029288448 ddar.py:60] Depth 7/1000 time = 2.2754647731781006
I0123 14:46:11.674021 140012029288448 ddar.py:60] Depth 8/1000 time = 3.5338010787963867
I0123 14:46:11.674358 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:46:11.674426 140012029288448 alphageometry.py:566] LM output (score=-2.689902): "n : T c g f n 17 ;"
I0123 14:46:11.674461 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f c g"

I0123 14:46:11.674508 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n f c g ? coll l d e"
I0123 14:46:11.674673 140012029288448 graph.py:498] 
I0123 14:46:11.674729 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n f c g ? coll l d e
I0123 14:46:12.614477 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9067349433898926
I0123 14:46:14.055533 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4408891201019287
I0123 14:46:15.627794 140012029288448 ddar.py:60] Depth 3/1000 time = 1.5720808506011963
I0123 14:46:18.533012 140012029288448 ddar.py:60] Depth 4/1000 time = 2.9050161838531494
I0123 14:46:20.575036 140012029288448 ddar.py:60] Depth 5/1000 time = 2.019730567932129
I0123 14:46:22.513541 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9383273124694824
I0123 14:46:22.523195 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:46:22.523262 140012029288448 alphageometry.py:566] LM output (score=-2.725175): "n : T c e h n 17 ;"
I0123 14:46:22.523298 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h c e"

I0123 14:46:22.523335 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n h c e ? coll l d e"
I0123 14:46:22.523481 140012029288448 graph.py:498] 
I0123 14:46:22.523531 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n h c e ? coll l d e
I0123 14:46:23.489914 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9333839416503906
I0123 14:46:25.954935 140012029288448 ddar.py:60] Depth 2/1000 time = 2.4648542404174805
I0123 14:46:27.567837 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6127047538757324
I0123 14:46:29.255878 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6878435611724854
I0123 14:46:31.344530 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0666394233703613
I0123 14:46:34.622880 140012029288448 ddar.py:60] Depth 6/1000 time = 3.2780330181121826
I0123 14:46:34.632365 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:46:34.632418 140012029288448 alphageometry.py:566] LM output (score=-2.764778): "n : T b f b n 17 ;"
I0123 14:46:34.632453 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b f"

I0123 14:46:34.632500 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n b b f ? coll l d e"
I0123 14:46:34.632658 140012029288448 graph.py:498] 
I0123 14:46:34.632713 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n b b f ? coll l d e
I0123 14:46:35.590947 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9256024360656738
I0123 14:46:36.849919 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2588021755218506
I0123 14:46:38.436152 140012029288448 ddar.py:60] Depth 3/1000 time = 1.5860528945922852
I0123 14:46:41.336461 140012029288448 ddar.py:60] Depth 4/1000 time = 2.9001243114471436
I0123 14:46:43.401256 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0433316230773926
I0123 14:46:45.371561 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9701347351074219
I0123 14:46:45.381633 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:46:45.381703 140012029288448 alphageometry.py:566] LM output (score=-2.797349): "n : T c e g n 17 ;"
I0123 14:46:45.381736 140012029288448 alphageometry.py:567] Translation: "n = on_tline n g c e"

I0123 14:46:45.381772 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n g c e ? coll l d e"
I0123 14:46:45.381917 140012029288448 graph.py:498] 
I0123 14:46:45.381966 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n g c e ? coll l d e
I0123 14:46:46.339267 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9255514144897461
I0123 14:46:48.925131 140012029288448 ddar.py:60] Depth 2/1000 time = 2.585692882537842
I0123 14:46:50.544622 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6192643642425537
I0123 14:46:52.232760 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6878178119659424
I0123 14:46:54.372239 140012029288448 ddar.py:60] Depth 5/1000 time = 2.1169674396514893
I0123 14:46:57.880818 140012029288448 ddar.py:60] Depth 6/1000 time = 3.5084023475646973
I0123 14:47:00.133015 140012029288448 ddar.py:60] Depth 7/1000 time = 2.2520060539245605
I0123 14:47:02.421233 140012029288448 ddar.py:60] Depth 8/1000 time = 2.274386405944824
I0123 14:47:02.421448 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:47:02.421506 140012029288448 alphageometry.py:566] LM output (score=-2.807302): "n : T b n c e 17 ;"
I0123 14:47:02.421541 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b c e"

I0123 14:47:02.421579 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n b c e ? coll l d e"
I0123 14:47:02.421736 140012029288448 graph.py:498] 
I0123 14:47:02.421793 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n b c e ? coll l d e
I0123 14:47:03.377297 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9227395057678223
I0123 14:47:06.099988 140012029288448 ddar.py:60] Depth 2/1000 time = 2.7225348949432373
I0123 14:47:07.725947 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6257965564727783
I0123 14:47:09.420971 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6947894096374512
I0123 14:47:11.530296 140012029288448 ddar.py:60] Depth 5/1000 time = 2.086728096008301
I0123 14:47:14.853749 140012029288448 ddar.py:60] Depth 6/1000 time = 3.323246479034424
I0123 14:47:14.863930 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:47:14.863986 140012029288448 alphageometry.py:566] LM output (score=-2.869173): "n : T c g i n 17 ;"
I0123 14:47:14.864022 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i c g"

I0123 14:47:14.864059 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n i c g ? coll l d e"
I0123 14:47:14.864215 140012029288448 graph.py:498] 
I0123 14:47:14.864270 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n i c g ? coll l d e
I0123 14:47:15.807982 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9099876880645752
I0123 14:47:17.261878 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4537413120269775
I0123 14:47:18.837994 140012029288448 ddar.py:60] Depth 3/1000 time = 1.5759491920471191
I0123 14:47:20.510543 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6723530292510986
I0123 14:47:23.784617 140012029288448 ddar.py:60] Depth 5/1000 time = 3.251882314682007
I0123 14:47:25.729138 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9443409442901611
I0123 14:47:25.739168 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:47:25.739233 140012029288448 alphageometry.py:566] LM output (score=-2.883625): "n : T c g e n 17 ;"
I0123 14:47:25.739268 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c g"

I0123 14:47:25.739306 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n e c g ? coll l d e"
I0123 14:47:25.739452 140012029288448 graph.py:498] 
I0123 14:47:25.739504 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n e c g ? coll l d e
I0123 14:47:26.679372 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9075539112091064
I0123 14:47:28.134796 140012029288448 ddar.py:60] Depth 2/1000 time = 1.455265998840332
I0123 14:47:31.016898 140012029288448 ddar.py:60] Depth 3/1000 time = 2.881892204284668
I0123 14:47:32.675508 140012029288448 ddar.py:60] Depth 4/1000 time = 1.658372402191162
I0123 14:47:34.731010 140012029288448 ddar.py:60] Depth 5/1000 time = 2.033294677734375
I0123 14:47:36.681995 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9508028030395508
I0123 14:47:36.691675 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:47:36.691749 140012029288448 alphageometry.py:566] LM output (score=-2.915578): "n : T f h f n 17 ;"
I0123 14:47:36.691787 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f f h"

I0123 14:47:36.691828 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n f f h ? coll l d e"
I0123 14:47:36.691988 140012029288448 graph.py:498] 
I0123 14:47:36.692044 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n f f h ? coll l d e
I0123 14:47:38.844857 140012029288448 ddar.py:60] Depth 1/1000 time = 2.1171393394470215
I0123 14:47:40.103050 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2580113410949707
I0123 14:47:41.731866 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6286342144012451
I0123 14:47:43.440040 140012029288448 ddar.py:60] Depth 4/1000 time = 1.707982063293457
I0123 14:47:46.767813 140012029288448 ddar.py:60] Depth 5/1000 time = 3.308035135269165
I0123 14:47:48.724507 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9564738273620605
I0123 14:47:48.734088 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:47:48.734166 140012029288448 alphageometry.py:566] LM output (score=-2.937076): "n : T h i i n 17 ;"
I0123 14:47:48.734202 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i h i"

I0123 14:47:48.734248 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n i h i ? coll l d e"
I0123 14:47:48.734426 140012029288448 graph.py:498] 
I0123 14:47:48.734484 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n i h i ? coll l d e
I0123 14:47:49.711599 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9444549083709717
I0123 14:47:50.939020 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2272307872772217
I0123 14:47:53.858019 140012029288448 ddar.py:60] Depth 3/1000 time = 2.918795108795166
I0123 14:47:55.435212 140012029288448 ddar.py:60] Depth 4/1000 time = 1.576993703842163
I0123 14:47:57.311047 140012029288448 ddar.py:60] Depth 5/1000 time = 1.8600432872772217
I0123 14:47:59.115860 140012029288448 ddar.py:60] Depth 6/1000 time = 1.8046293258666992
I0123 14:47:59.125618 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:47:59.125753 140012029288448 alphageometry.py:566] LM output (score=-2.977920): "n : T c d c n 17 ;"
I0123 14:47:59.125793 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c d"

I0123 14:47:59.125833 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n c c d ? coll l d e"
I0123 14:47:59.125982 140012029288448 graph.py:498] 
I0123 14:47:59.126034 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n c c d ? coll l d e
I0123 14:48:00.085701 140012029288448 ddar.py:60] Depth 1/1000 time = 0.926271915435791
I0123 14:48:02.604495 140012029288448 ddar.py:60] Depth 2/1000 time = 2.5186245441436768
I0123 14:48:04.228144 140012029288448 ddar.py:60] Depth 3/1000 time = 1.623483657836914
I0123 14:48:05.913684 140012029288448 ddar.py:60] Depth 4/1000 time = 1.685354232788086
I0123 14:48:07.999695 140012029288448 ddar.py:60] Depth 5/1000 time = 2.064328193664551
I0123 14:48:11.291583 140012029288448 ddar.py:60] Depth 6/1000 time = 3.2915892601013184
I0123 14:48:11.301307 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:48:11.301362 140012029288448 alphageometry.py:566] LM output (score=-3.017187): "n : T e g g n 17 ;"
I0123 14:48:11.301398 140012029288448 alphageometry.py:567] Translation: "n = on_tline n g e g"

I0123 14:48:11.301436 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n g e g ? coll l d e"
I0123 14:48:11.301586 140012029288448 graph.py:498] 
I0123 14:48:11.301648 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n g e g ? coll l d e
I0123 14:48:12.255572 140012029288448 ddar.py:60] Depth 1/1000 time = 0.919811487197876
I0123 14:48:13.700632 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4449052810668945
I0123 14:48:15.281802 140012029288448 ddar.py:60] Depth 3/1000 time = 1.580981731414795
I0123 14:48:18.204501 140012029288448 ddar.py:60] Depth 4/1000 time = 2.9225077629089355
I0123 14:48:20.237267 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0121724605560303
I0123 14:48:22.181968 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9445133209228516
I0123 14:48:22.192094 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:48:22.192158 140012029288448 alphageometry.py:566] LM output (score=-3.044817): "n : T f i i n 17 ;"
I0123 14:48:22.192192 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i f i"

I0123 14:48:22.192229 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n i f i ? coll l d e"
I0123 14:48:22.192373 140012029288448 graph.py:498] 
I0123 14:48:22.192423 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n i f i ? coll l d e
I0123 14:48:23.136032 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9113013744354248
I0123 14:48:24.380235 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2440438270568848
I0123 14:48:27.246937 140012029288448 ddar.py:60] Depth 3/1000 time = 2.866515874862671
I0123 14:48:28.915315 140012029288448 ddar.py:60] Depth 4/1000 time = 1.668128252029419
I0123 14:48:30.971108 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0349717140197754
I0123 14:48:32.897992 140012029288448 ddar.py:60] Depth 6/1000 time = 1.926675796508789
I0123 14:48:32.908092 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:48:32.908163 140012029288448 alphageometry.py:566] LM output (score=-3.057024): "n : T b n e g 17 ;"
I0123 14:48:32.908198 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b e g"

I0123 14:48:32.908250 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n b e g ? coll l d e"
I0123 14:48:32.908433 140012029288448 graph.py:498] 
I0123 14:48:32.908504 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n b e g ? coll l d e
I0123 14:48:35.137158 140012029288448 ddar.py:60] Depth 1/1000 time = 2.19571590423584
I0123 14:48:36.580259 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4429376125335693
I0123 14:48:38.177681 140012029288448 ddar.py:60] Depth 3/1000 time = 1.5972402095794678
I0123 14:48:39.850811 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6729364395141602
I0123 14:48:43.164631 140012029288448 ddar.py:60] Depth 5/1000 time = 3.2921056747436523
I0123 14:48:45.108813 140012029288448 ddar.py:60] Depth 6/1000 time = 1.943993330001831
I0123 14:48:45.123403 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:48:45.123567 140012029288448 alphageometry.py:566] LM output (score=-3.073867): "n : T b n e i 17 ;"
I0123 14:48:45.123623 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b e i"

I0123 14:48:45.123677 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n b e i ? coll l d e"
I0123 14:48:45.123882 140012029288448 graph.py:498] 
I0123 14:48:45.123949 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n b e i ? coll l d e
I0123 14:48:46.080622 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9201593399047852
I0123 14:48:47.538004 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4571380615234375
I0123 14:48:49.129611 140012029288448 ddar.py:60] Depth 3/1000 time = 1.5913188457489014
I0123 14:48:52.148091 140012029288448 ddar.py:60] Depth 4/1000 time = 3.0182442665100098
I0123 14:48:54.172440 140012029288448 ddar.py:60] Depth 5/1000 time = 2.003445625305176
I0123 14:48:56.094417 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9217963218688965
I0123 14:48:56.104528 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:48:56.104584 140012029288448 alphageometry.py:566] LM output (score=-3.106034): "n : T a e a n 17 ;"
I0123 14:48:56.104618 140012029288448 alphageometry.py:567] Translation: "n = on_tline n a a e"

I0123 14:48:56.104654 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n a a e ? coll l d e"
I0123 14:48:56.104809 140012029288448 graph.py:498] 
I0123 14:48:56.104865 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n a a e ? coll l d e
I0123 14:48:57.060782 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9223654270172119
I0123 14:48:59.597978 140012029288448 ddar.py:60] Depth 2/1000 time = 2.537034511566162
I0123 14:49:01.228837 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6306781768798828
I0123 14:49:02.920169 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6911303997039795
I0123 14:49:05.042662 140012029288448 ddar.py:60] Depth 5/1000 time = 2.1001884937286377
I0123 14:49:08.472372 140012029288448 ddar.py:60] Depth 6/1000 time = 3.4295079708099365
I0123 14:49:08.482018 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:49:08.482102 140012029288448 alphageometry.py:566] LM output (score=-3.120683): "n : T b n c g 17 ;"
I0123 14:49:08.482137 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b c g"

I0123 14:49:08.482177 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n b c g ? coll l d e"
I0123 14:49:08.482338 140012029288448 graph.py:498] 
I0123 14:49:08.482394 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n b c g ? coll l d e
I0123 14:49:09.426441 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9117343425750732
I0123 14:49:10.863085 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4364449977874756
I0123 14:49:12.436079 140012029288448 ddar.py:60] Depth 3/1000 time = 1.572798490524292
I0123 14:49:14.100731 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6644575595855713
I0123 14:49:17.458822 140012029288448 ddar.py:60] Depth 5/1000 time = 3.3357527256011963
I0123 14:49:19.415291 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9562995433807373
I0123 14:49:19.425486 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:49:19.425542 140012029288448 alphageometry.py:566] LM output (score=-3.137468): "n : T b h h n 17 ;"
I0123 14:49:19.425576 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h b h"

I0123 14:49:19.425613 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n h b h ? coll l d e"
I0123 14:49:19.425767 140012029288448 graph.py:498] 
I0123 14:49:19.425819 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m h f; n = on_tline n h b h ? coll l d e
I0123 14:49:20.382747 140012029288448 ddar.py:60] Depth 1/1000 time = 0.922863245010376
I0123 14:49:21.619967 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2370429039001465
I0123 14:49:23.201708 140012029288448 ddar.py:60] Depth 3/1000 time = 1.5815637111663818
I0123 14:49:26.188143 140012029288448 ddar.py:60] Depth 4/1000 time = 2.986255407333374
I0123 14:49:28.233069 140012029288448 ddar.py:60] Depth 5/1000 time = 2.023866891860962
I0123 14:49:30.182494 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9491090774536133
I0123 14:49:30.192095 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:49:30.192188 140012029288448 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D e i i m 16 ; x00
I0123 14:49:37.293683 140012029288448 alphageometry.py:566] LM output (score=-1.210795): "n : C e i n 17 D e i i n 18 ;"
I0123 14:49:37.293834 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_circle n i e"

I0123 14:49:37.293883 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e i, on_circle n i e ? coll l d e"
I0123 14:49:37.294058 140012029288448 graph.py:498] 
I0123 14:49:37.294119 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e i, on_circle n i e ? coll l d e
I0123 14:49:38.886093 140012029288448 ddar.py:60] Depth 1/1000 time = 1.5546185970306396
I0123 14:49:42.468089 140012029288448 ddar.py:60] Depth 2/1000 time = 3.581831216812134
I0123 14:49:45.355956 140012029288448 ddar.py:60] Depth 3/1000 time = 2.887693166732788
I0123 14:49:48.410932 140012029288448 ddar.py:60] Depth 4/1000 time = 3.054797410964966
I0123 14:49:52.684214 140012029288448 ddar.py:60] Depth 5/1000 time = 4.272844552993774
I0123 14:49:56.314685 140012029288448 ddar.py:60] Depth 6/1000 time = 3.5902445316314697
I0123 14:50:01.279077 140012029288448 ddar.py:60] Depth 7/1000 time = 4.96420431137085
I0123 14:50:01.292849 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:50:01.292913 140012029288448 alphageometry.py:566] LM output (score=-1.359871): "n : C e f n 17 D e n f n 18 ;"
I0123 14:50:01.292950 140012029288448 alphageometry.py:567] Translation: "n = on_line n e f, on_bline n f e"

I0123 14:50:01.292991 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e f, on_bline n f e ? coll l d e"
I0123 14:50:01.293142 140012029288448 graph.py:498] 
I0123 14:50:01.293194 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e f, on_bline n f e ? coll l d e
I0123 14:50:02.472934 140012029288448 ddar.py:60] Depth 1/1000 time = 1.138185977935791
I0123 14:50:04.067159 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5940515995025635
I0123 14:50:07.467519 140012029288448 ddar.py:60] Depth 3/1000 time = 3.4001593589782715
I0123 14:50:09.589931 140012029288448 ddar.py:60] Depth 4/1000 time = 2.122229814529419
I0123 14:50:11.731920 140012029288448 ddar.py:60] Depth 5/1000 time = 2.141587257385254
I0123 14:50:15.574920 140012029288448 ddar.py:60] Depth 6/1000 time = 3.8182790279388428
I0123 14:50:18.035703 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4605977535247803
I0123 14:50:18.045327 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:50:18.045401 140012029288448 alphageometry.py:566] LM output (score=-1.775370): "n : C c i n 17 D c n i n 18 ;"
I0123 14:50:18.045438 140012029288448 alphageometry.py:567] Translation: "n = on_line n c i, on_bline n i c"

I0123 14:50:18.045475 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n c i, on_bline n i c ? coll l d e"
I0123 14:50:18.045634 140012029288448 graph.py:498] 
I0123 14:50:18.045700 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n c i, on_bline n i c ? coll l d e
I0123 14:50:20.479391 140012029288448 ddar.py:60] Depth 1/1000 time = 2.3930585384368896
I0123 14:50:21.801909 140012029288448 ddar.py:60] Depth 2/1000 time = 1.322291374206543
I0123 14:50:23.450981 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6488656997680664
I0123 14:50:25.151002 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6997995376586914
I0123 14:50:28.185556 140012029288448 ddar.py:60] Depth 5/1000 time = 3.0341413021087646
I0123 14:50:30.230168 140012029288448 ddar.py:60] Depth 6/1000 time = 2.028167247772217
I0123 14:50:32.154161 140012029288448 ddar.py:60] Depth 7/1000 time = 1.92380690574646
I0123 14:50:32.162914 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:50:32.162968 140012029288448 alphageometry.py:566] LM output (score=-1.811226): "n : C f i n 17 D f i i n 18 ;"
I0123 14:50:32.163002 140012029288448 alphageometry.py:567] Translation: "n = on_line n f i, on_circle n i f"

I0123 14:50:32.163040 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n f i, on_circle n i f ? coll l d e"
I0123 14:50:32.163199 140012029288448 graph.py:498] 
I0123 14:50:32.163257 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n f i, on_circle n i f ? coll l d e
I0123 14:50:33.496276 140012029288448 ddar.py:60] Depth 1/1000 time = 1.2931201457977295
I0123 14:50:37.052436 140012029288448 ddar.py:60] Depth 2/1000 time = 3.5559797286987305
I0123 14:50:40.169611 140012029288448 ddar.py:60] Depth 3/1000 time = 3.116978645324707
I0123 14:50:43.235434 140012029288448 ddar.py:60] Depth 4/1000 time = 3.0655548572540283
I0123 14:50:47.636692 140012029288448 ddar.py:60] Depth 5/1000 time = 4.400631666183472
I0123 14:50:51.374727 140012029288448 ddar.py:60] Depth 6/1000 time = 3.698399543762207
I0123 14:50:55.019650 140012029288448 ddar.py:60] Depth 7/1000 time = 3.644735336303711
I0123 14:50:55.033098 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:50:55.033165 140012029288448 alphageometry.py:566] LM output (score=-1.828290): "n : C e m n 17 D e n m n 18 ;"
I0123 14:50:55.033201 140012029288448 alphageometry.py:567] Translation: "n = on_line n e m, on_bline n m e"

I0123 14:50:55.033241 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e m, on_bline n m e ? coll l d e"
I0123 14:50:55.033396 140012029288448 graph.py:498] 
I0123 14:50:55.033452 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e m, on_bline n m e ? coll l d e
I0123 14:50:56.103385 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0283827781677246
I0123 14:50:59.081024 140012029288448 ddar.py:60] Depth 2/1000 time = 2.9774653911590576
I0123 14:51:00.918783 140012029288448 ddar.py:60] Depth 3/1000 time = 1.837526559829712
I0123 14:51:02.866646 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9475574493408203
I0123 14:51:06.186189 140012029288448 ddar.py:60] Depth 5/1000 time = 3.319088935852051
I0123 14:51:08.473621 140012029288448 ddar.py:60] Depth 6/1000 time = 2.266223430633545
I0123 14:51:10.637044 140012029288448 ddar.py:60] Depth 7/1000 time = 2.1632230281829834
I0123 14:51:10.647399 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:51:10.647462 140012029288448 alphageometry.py:566] LM output (score=-1.992071): "n : T c g g n 17 ;"
I0123 14:51:10.647497 140012029288448 alphageometry.py:567] Translation: "n = on_tline n g c g"

I0123 14:51:10.647548 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n g c g ? coll l d e"
I0123 14:51:10.647701 140012029288448 graph.py:498] 
I0123 14:51:10.647755 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n g c g ? coll l d e
I0123 14:51:11.596189 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9152708053588867
I0123 14:51:14.190798 140012029288448 ddar.py:60] Depth 2/1000 time = 2.5944366455078125
I0123 14:51:15.806788 140012029288448 ddar.py:60] Depth 3/1000 time = 1.615814447402954
I0123 14:51:17.489092 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6821131706237793
I0123 14:51:19.549760 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0383265018463135
I0123 14:51:21.512818 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9628143310546875
I0123 14:51:21.522215 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:51:21.522306 140012029288448 alphageometry.py:566] LM output (score=-2.165342): "n : C e l n 17 D e n l n 18 ;"
I0123 14:51:21.522342 140012029288448 alphageometry.py:567] Translation: "n = on_line n e l, on_bline n l e"

I0123 14:51:21.522392 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e l, on_bline n l e ? coll l d e"
I0123 14:51:21.522583 140012029288448 graph.py:498] 
I0123 14:51:21.522647 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e l, on_bline n l e ? coll l d e
I0123 14:51:24.021035 140012029288448 ddar.py:60] Depth 1/1000 time = 2.4553990364074707
I0123 14:51:25.531334 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5101122856140137
I0123 14:51:27.157459 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6259346008300781
I0123 14:51:28.849518 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6918678283691406
I0123 14:51:31.864829 140012029288448 ddar.py:60] Depth 5/1000 time = 3.0149197578430176
I0123 14:51:33.878638 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9977304935455322
I0123 14:51:35.784291 140012029288448 ddar.py:60] Depth 7/1000 time = 1.9054710865020752
I0123 14:51:35.792899 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:51:35.792963 140012029288448 alphageometry.py:566] LM output (score=-2.172107): "n : C h i n 17 D h i i n 18 ;"
I0123 14:51:35.792999 140012029288448 alphageometry.py:567] Translation: "n = on_line n h i, on_circle n i h"

I0123 14:51:35.793041 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n h i, on_circle n i h ? coll l d e"
I0123 14:51:35.793190 140012029288448 graph.py:498] 
I0123 14:51:35.793241 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n h i, on_circle n i h ? coll l d e
I0123 14:51:36.987767 140012029288448 ddar.py:60] Depth 1/1000 time = 1.1532304286956787
I0123 14:51:39.872358 140012029288448 ddar.py:60] Depth 2/1000 time = 2.8843634128570557
I0123 14:51:41.670475 140012029288448 ddar.py:60] Depth 3/1000 time = 1.7978172302246094
I0123 14:51:44.935966 140012029288448 ddar.py:60] Depth 4/1000 time = 3.265258312225342
I0123 14:51:46.794482 140012029288448 ddar.py:60] Depth 5/1000 time = 1.8581037521362305
I0123 14:51:50.340650 140012029288448 ddar.py:60] Depth 6/1000 time = 3.5298993587493896
I0123 14:51:52.410540 140012029288448 ddar.py:60] Depth 7/1000 time = 2.069704532623291
I0123 14:51:52.419802 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:51:52.419857 140012029288448 alphageometry.py:566] LM output (score=-2.201113): "n : C h i n 17 D h n i n 18 ;"
I0123 14:51:52.419893 140012029288448 alphageometry.py:567] Translation: "n = on_line n h i, on_bline n i h"

I0123 14:51:52.419928 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n h i, on_bline n i h ? coll l d e"
I0123 14:51:52.420083 140012029288448 graph.py:498] 
I0123 14:51:52.420140 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n h i, on_bline n i h ? coll l d e
I0123 14:51:53.626472 140012029288448 ddar.py:60] Depth 1/1000 time = 1.1644508838653564
I0123 14:51:56.803959 140012029288448 ddar.py:60] Depth 2/1000 time = 3.1773087978363037
I0123 14:51:58.828567 140012029288448 ddar.py:60] Depth 3/1000 time = 2.024435043334961
I0123 14:52:02.354738 140012029288448 ddar.py:60] Depth 4/1000 time = 3.5259509086608887
I0123 14:52:04.436990 140012029288448 ddar.py:60] Depth 5/1000 time = 2.081815242767334
I0123 14:52:06.837278 140012029288448 ddar.py:60] Depth 6/1000 time = 2.3832826614379883
I0123 14:52:10.451490 140012029288448 ddar.py:60] Depth 7/1000 time = 3.6140379905700684
I0123 14:52:10.460755 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:52:10.460808 140012029288448 alphageometry.py:566] LM output (score=-2.206525): "n : C c g n 17 D c g g n 18 ;"
I0123 14:52:10.460843 140012029288448 alphageometry.py:567] Translation: "n = on_line n c g, on_circle n g c"

I0123 14:52:10.460880 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n c g, on_circle n g c ? coll l d e"
I0123 14:52:10.461040 140012029288448 graph.py:498] 
I0123 14:52:10.461095 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n c g, on_circle n g c ? coll l d e
I0123 14:52:11.740259 140012029288448 ddar.py:60] Depth 1/1000 time = 1.2418460845947266
I0123 14:52:13.900612 140012029288448 ddar.py:60] Depth 2/1000 time = 2.16017484664917
I0123 14:52:17.563368 140012029288448 ddar.py:60] Depth 3/1000 time = 3.662571907043457
I0123 14:52:19.977576 140012029288448 ddar.py:60] Depth 4/1000 time = 2.4139487743377686
I0123 14:52:22.354313 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3761754035949707
I0123 14:52:26.741594 140012029288448 ddar.py:60] Depth 6/1000 time = 4.355766773223877
I0123 14:52:29.578824 140012029288448 ddar.py:60] Depth 7/1000 time = 2.837036371231079
I0123 14:52:29.591276 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:52:29.591339 140012029288448 alphageometry.py:566] LM output (score=-2.277152): "n : C c f n 17 D c n f n 18 ;"
I0123 14:52:29.591374 140012029288448 alphageometry.py:567] Translation: "n = on_line n c f, on_bline n f c"

I0123 14:52:29.591414 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n c f, on_bline n f c ? coll l d e"
I0123 14:52:29.591572 140012029288448 graph.py:498] 
I0123 14:52:29.591628 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n c f, on_bline n f c ? coll l d e
I0123 14:52:30.653543 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0204637050628662
I0123 14:52:32.174527 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5207955837249756
I0123 14:52:35.190764 140012029288448 ddar.py:60] Depth 3/1000 time = 3.016056537628174
I0123 14:52:36.887416 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6964538097381592
I0123 14:52:38.575459 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6876354217529297
I0123 14:52:40.614202 140012029288448 ddar.py:60] Depth 6/1000 time = 2.0227038860321045
I0123 14:52:43.961673 140012029288448 ddar.py:60] Depth 7/1000 time = 3.347172975540161
I0123 14:52:43.970332 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:52:43.970387 140012029288448 alphageometry.py:566] LM output (score=-2.281846): "n : C c e n 17 D c n e n 18 ;"
I0123 14:52:43.970422 140012029288448 alphageometry.py:567] Translation: "n = on_line n c e, on_bline n e c"

I0123 14:52:43.970458 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n c e, on_bline n e c ? coll l d e"
I0123 14:52:43.970612 140012029288448 graph.py:498] 
I0123 14:52:43.970668 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n c e, on_bline n e c ? coll l d e
I0123 14:52:45.124430 140012029288448 ddar.py:60] Depth 1/1000 time = 1.1083276271820068
I0123 14:52:46.893472 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7688579559326172
I0123 14:52:50.224325 140012029288448 ddar.py:60] Depth 3/1000 time = 3.3306753635406494
I0123 14:52:52.350759 140012029288448 ddar.py:60] Depth 4/1000 time = 2.1262526512145996
I0123 14:52:55.847250 140012029288448 ddar.py:60] Depth 5/1000 time = 3.4960978031158447
I0123 14:52:58.327859 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4589428901672363
I0123 14:53:00.729157 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4010534286499023
I0123 14:53:00.739133 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:53:00.739217 140012029288448 alphageometry.py:566] LM output (score=-2.307119): "n : C e g n 17 D e g g n 18 ;"
I0123 14:53:00.739254 140012029288448 alphageometry.py:567] Translation: "n = on_line n e g, on_circle n g e"

I0123 14:53:00.739308 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e g, on_circle n g e ? coll l d e"
I0123 14:53:00.739502 140012029288448 graph.py:498] 
I0123 14:53:00.739578 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e g, on_circle n g e ? coll l d e
I0123 14:53:03.333143 140012029288448 ddar.py:60] Depth 1/1000 time = 2.5557703971862793
I0123 14:53:05.046444 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7131288051605225
I0123 14:53:07.314430 140012029288448 ddar.py:60] Depth 3/1000 time = 2.26781964302063
I0123 14:53:09.696320 140012029288448 ddar.py:60] Depth 4/1000 time = 2.381685972213745
I0123 14:53:13.395879 140012029288448 ddar.py:60] Depth 5/1000 time = 3.6991517543792725
I0123 14:53:16.363108 140012029288448 ddar.py:60] Depth 6/1000 time = 2.9358127117156982
I0123 14:53:19.217525 140012029288448 ddar.py:60] Depth 7/1000 time = 2.854187250137329
I0123 14:53:19.230482 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:53:19.230568 140012029288448 alphageometry.py:566] LM output (score=-2.451511): "n : T e f f n 17 ;"
I0123 14:53:19.230604 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f e f"

I0123 14:53:19.230653 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n f e f ? coll l d e"
I0123 14:53:19.230831 140012029288448 graph.py:498] 
I0123 14:53:19.230895 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n f e f ? coll l d e
I0123 14:53:21.638451 140012029288448 ddar.py:60] Depth 1/1000 time = 2.374424934387207
I0123 14:53:22.898087 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2594554424285889
I0123 14:53:24.519580 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6213173866271973
I0123 14:53:26.216494 140012029288448 ddar.py:60] Depth 4/1000 time = 1.696714162826538
I0123 14:53:29.907141 140012029288448 ddar.py:60] Depth 5/1000 time = 3.666414976119995
I0123 14:53:32.025825 140012029288448 ddar.py:60] Depth 6/1000 time = 2.1185081005096436
I0123 14:53:32.035142 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:53:32.035208 140012029288448 alphageometry.py:566] LM output (score=-2.465431): "n : C l m n 17 D l n m n 18 ;"
I0123 14:53:32.035244 140012029288448 alphageometry.py:567] Translation: "n = on_line n l m, on_bline n m l"

I0123 14:53:32.035283 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n l m, on_bline n m l ? coll l d e"
I0123 14:53:32.035434 140012029288448 graph.py:498] 
I0123 14:53:32.035487 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n l m, on_bline n m l ? coll l d e
I0123 14:53:33.083674 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0067782402038574
I0123 14:53:34.639637 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5557959079742432
I0123 14:53:36.267502 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6276719570159912
I0123 14:53:39.441431 140012029288448 ddar.py:60] Depth 4/1000 time = 3.173652172088623
I0123 14:53:41.100050 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6580400466918945
I0123 14:53:43.095592 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9797213077545166
I0123 14:53:44.984861 140012029288448 ddar.py:60] Depth 7/1000 time = 1.889085054397583
I0123 14:53:44.994178 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:53:44.994255 140012029288448 alphageometry.py:566] LM output (score=-2.474615): "n : C c d n 17 D c n d n 18 ;"
I0123 14:53:44.994291 140012029288448 alphageometry.py:567] Translation: "n = on_line n c d, on_bline n d c"

I0123 14:53:44.994345 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n c d, on_bline n d c ? coll l d e"
I0123 14:53:44.994521 140012029288448 graph.py:498] 
I0123 14:53:44.994579 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n c d, on_bline n d c ? coll l d e
I0123 14:53:47.574980 140012029288448 ddar.py:60] Depth 1/1000 time = 2.5383174419403076
I0123 14:53:49.207596 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6324279308319092
I0123 14:53:51.228180 140012029288448 ddar.py:60] Depth 3/1000 time = 2.020397424697876
I0123 14:53:54.691042 140012029288448 ddar.py:60] Depth 4/1000 time = 3.462674617767334
I0123 14:53:56.760533 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0690901279449463
I0123 14:54:00.730512 140012029288448 ddar.py:60] Depth 6/1000 time = 3.947089433670044
I0123 14:54:03.098233 140012029288448 ddar.py:60] Depth 7/1000 time = 2.367480516433716
I0123 14:54:03.108060 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:54:03.108134 140012029288448 alphageometry.py:566] LM output (score=-2.510910): "n : C f h n 17 D f h h n 18 ;"
I0123 14:54:03.108171 140012029288448 alphageometry.py:567] Translation: "n = on_line n f h, on_circle n h f"

I0123 14:54:03.108217 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n f h, on_circle n h f ? coll l d e"
I0123 14:54:03.108384 140012029288448 graph.py:498] 
I0123 14:54:03.108440 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n f h, on_circle n h f ? coll l d e
I0123 14:54:04.389218 140012029288448 ddar.py:60] Depth 1/1000 time = 1.2429912090301514
I0123 14:54:07.552397 140012029288448 ddar.py:60] Depth 2/1000 time = 3.163003921508789
I0123 14:54:09.812902 140012029288448 ddar.py:60] Depth 3/1000 time = 2.260326385498047
I0123 14:54:12.197515 140012029288448 ddar.py:60] Depth 4/1000 time = 2.384413242340088
I0123 14:54:14.530772 140012029288448 ddar.py:60] Depth 5/1000 time = 2.33286190032959
I0123 14:54:18.930783 140012029288448 ddar.py:60] Depth 6/1000 time = 4.367853164672852
I0123 14:54:21.788177 140012029288448 ddar.py:60] Depth 7/1000 time = 2.857095956802368
I0123 14:54:21.800424 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:54:21.800502 140012029288448 alphageometry.py:566] LM output (score=-2.524295): "n : T e g e n 17 ;"
I0123 14:54:21.800538 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e g"

I0123 14:54:21.800591 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n e e g ? coll l d e"
I0123 14:54:21.800799 140012029288448 graph.py:498] 
I0123 14:54:21.800862 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n e e g ? coll l d e
I0123 14:54:22.746135 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9115736484527588
I0123 14:54:24.007952 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2616550922393799
I0123 14:54:27.038991 140012029288448 ddar.py:60] Depth 3/1000 time = 3.0308735370635986
I0123 14:54:28.727543 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6883785724639893
I0123 14:54:30.770031 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0232512950897217
I0123 14:54:32.714785 140012029288448 ddar.py:60] Depth 6/1000 time = 1.944580316543579
I0123 14:54:32.724602 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:54:32.724666 140012029288448 alphageometry.py:566] LM output (score=-2.539128): "n : C h k n 17 D h k k n 18 ;"
I0123 14:54:32.724701 140012029288448 alphageometry.py:567] Translation: "n = on_line n h k, on_circle n k h"

I0123 14:54:32.724740 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n h k, on_circle n k h ? coll l d e"
I0123 14:54:32.724892 140012029288448 graph.py:498] 
I0123 14:54:32.724943 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n h k, on_circle n k h ? coll l d e
I0123 14:54:35.385022 140012029288448 ddar.py:60] Depth 1/1000 time = 2.618375301361084
I0123 14:54:37.470496 140012029288448 ddar.py:60] Depth 2/1000 time = 2.085310220718384
I0123 14:54:41.313501 140012029288448 ddar.py:60] Depth 3/1000 time = 3.842813491821289
I0123 14:54:43.708469 140012029288448 ddar.py:60] Depth 4/1000 time = 2.3947224617004395
I0123 14:54:46.106599 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3977174758911133
I0123 14:54:50.258624 140012029288448 ddar.py:60] Depth 6/1000 time = 4.131987571716309
I0123 14:54:52.914093 140012029288448 ddar.py:60] Depth 7/1000 time = 2.6552984714508057
I0123 14:54:52.925201 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:54:52.925267 140012029288448 alphageometry.py:566] LM output (score=-2.540682): "n : C e i n 17 D e n i n 18 ;"
I0123 14:54:52.925302 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_bline n i e"

I0123 14:54:52.925343 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e i, on_bline n i e ? coll l d e"
I0123 14:54:52.925502 140012029288448 graph.py:498] 
I0123 14:54:52.925558 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e i, on_bline n i e ? coll l d e
I0123 14:54:55.391623 140012029288448 ddar.py:60] Depth 1/1000 time = 2.424365758895874
I0123 14:54:56.902344 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5105524063110352
I0123 14:54:58.505136 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6026058197021484
I0123 14:55:00.149179 140012029288448 ddar.py:60] Depth 4/1000 time = 1.643794059753418
I0123 14:55:03.272237 140012029288448 ddar.py:60] Depth 5/1000 time = 3.122540235519409
I0123 14:55:05.210564 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9220976829528809
I0123 14:55:07.113766 140012029288448 ddar.py:60] Depth 7/1000 time = 1.9030346870422363
I0123 14:55:07.123177 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:55:07.123235 140012029288448 alphageometry.py:566] LM output (score=-2.543118): "n : T e i e n 17 ;"
I0123 14:55:07.123271 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e i"

I0123 14:55:07.123314 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n e e i ? coll l d e"
I0123 14:55:07.123468 140012029288448 graph.py:498] 
I0123 14:55:07.123524 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n e e i ? coll l d e
I0123 14:55:08.077484 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9182236194610596
I0123 14:55:09.340742 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2630984783172607
I0123 14:55:12.355701 140012029288448 ddar.py:60] Depth 3/1000 time = 3.0147817134857178
I0123 14:55:14.050141 140012029288448 ddar.py:60] Depth 4/1000 time = 1.694258451461792
I0123 14:55:16.114965 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0460503101348877
I0123 14:55:18.072271 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9571168422698975
I0123 14:55:18.081950 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:55:18.082018 140012029288448 alphageometry.py:566] LM output (score=-2.547961): "n : T c e e n 17 ;"
I0123 14:55:18.082053 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c e"

I0123 14:55:18.082093 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n e c e ? coll l d e"
I0123 14:55:18.082242 140012029288448 graph.py:498] 
I0123 14:55:18.082296 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n e c e ? coll l d e
I0123 14:55:19.043137 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9278390407562256
I0123 14:55:21.979851 140012029288448 ddar.py:60] Depth 2/1000 time = 2.9364891052246094
I0123 14:55:23.568442 140012029288448 ddar.py:60] Depth 3/1000 time = 1.5883080959320068
I0123 14:55:25.248762 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6801142692565918
I0123 14:55:27.349037 140012029288448 ddar.py:60] Depth 5/1000 time = 2.078415870666504
I0123 14:55:30.819301 140012029288448 ddar.py:60] Depth 6/1000 time = 3.470088243484497
I0123 14:55:30.829109 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:55:30.829165 140012029288448 alphageometry.py:566] LM output (score=-2.587163): "n : C f i n 17 D f n i n 18 ;"
I0123 14:55:30.829201 140012029288448 alphageometry.py:567] Translation: "n = on_line n f i, on_bline n i f"

I0123 14:55:30.829238 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n f i, on_bline n i f ? coll l d e"
I0123 14:55:30.829409 140012029288448 graph.py:498] 
I0123 14:55:30.829467 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n f i, on_bline n i f ? coll l d e
I0123 14:55:31.852891 140012029288448 ddar.py:60] Depth 1/1000 time = 0.980832576751709
I0123 14:55:33.357006 140012029288448 ddar.py:60] Depth 2/1000 time = 1.503951072692871
I0123 14:55:34.960195 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6030256748199463
I0123 14:55:36.623208 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6628408432006836
I0123 14:55:39.701894 140012029288448 ddar.py:60] Depth 5/1000 time = 3.0782952308654785
I0123 14:55:41.649590 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9316353797912598
I0123 14:55:43.542703 140012029288448 ddar.py:60] Depth 7/1000 time = 1.8928766250610352
I0123 14:55:43.551433 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:55:43.551516 140012029288448 alphageometry.py:566] LM output (score=-2.618657): "n : C h l n 17 D h l l n 18 ;"
I0123 14:55:43.551553 140012029288448 alphageometry.py:567] Translation: "n = on_line n h l, on_circle n l h"

I0123 14:55:43.551603 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n h l, on_circle n l h ? coll l d e"
I0123 14:55:43.551788 140012029288448 graph.py:498] 
I0123 14:55:43.551854 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n h l, on_circle n l h ? coll l d e
I0123 14:55:46.188390 140012029288448 ddar.py:60] Depth 1/1000 time = 2.594593048095703
I0123 14:55:47.821872 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6332943439483643
I0123 14:55:49.590656 140012029288448 ddar.py:60] Depth 3/1000 time = 1.768601655960083
I0123 14:55:52.833294 140012029288448 ddar.py:60] Depth 4/1000 time = 3.242457151412964
I0123 14:55:54.652917 140012029288448 ddar.py:60] Depth 5/1000 time = 1.8192143440246582
I0123 14:55:56.789476 140012029288448 ddar.py:60] Depth 6/1000 time = 2.120389461517334
I0123 14:56:00.237353 140012029288448 ddar.py:60] Depth 7/1000 time = 3.4477083683013916
I0123 14:56:00.246575 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:56:00.246628 140012029288448 alphageometry.py:566] LM output (score=-2.622704): "n : C c i n 17 D c i i n 18 ;"
I0123 14:56:00.246663 140012029288448 alphageometry.py:567] Translation: "n = on_line n c i, on_circle n i c"

I0123 14:56:00.246700 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n c i, on_circle n i c ? coll l d e"
I0123 14:56:00.246847 140012029288448 graph.py:498] 
I0123 14:56:00.246899 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n c i, on_circle n i c ? coll l d e
I0123 14:56:01.312468 140012029288448 ddar.py:60] Depth 1/1000 time = 1.02433443069458
I0123 14:56:02.846795 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5341618061065674
I0123 14:56:06.004913 140012029288448 ddar.py:60] Depth 3/1000 time = 3.157926082611084
I0123 14:56:07.675116 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6699938774108887
I0123 14:56:09.338653 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6630980968475342
I0123 14:56:11.315099 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9603729248046875
I0123 14:56:13.172200 140012029288448 ddar.py:60] Depth 7/1000 time = 1.856909990310669
I0123 14:56:13.181477 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:56:13.181537 140012029288448 alphageometry.py:566] LM output (score=-2.640079): "n : T b h b n 17 ;"
I0123 14:56:13.181572 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b h"

I0123 14:56:13.181614 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n b b h ? coll l d e"
I0123 14:56:13.181772 140012029288448 graph.py:498] 
I0123 14:56:13.181829 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n b b h ? coll l d e
I0123 14:56:15.548509 140012029288448 ddar.py:60] Depth 1/1000 time = 2.332292079925537
I0123 14:56:17.014780 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4660882949829102
I0123 14:56:18.626232 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6112654209136963
I0123 14:56:20.321036 140012029288448 ddar.py:60] Depth 4/1000 time = 1.694610595703125
I0123 14:56:22.374013 140012029288448 ddar.py:60] Depth 5/1000 time = 2.031130075454712
I0123 14:56:25.822267 140012029288448 ddar.py:60] Depth 6/1000 time = 3.448025941848755
I0123 14:56:25.831537 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:56:25.831613 140012029288448 alphageometry.py:566] LM output (score=-2.770984): "n : C e i n 17 T e i g n 18 ;"
I0123 14:56:25.831649 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_tline n g e i"

I0123 14:56:25.831697 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e i, on_tline n g e i ? coll l d e"
I0123 14:56:25.831871 140012029288448 graph.py:498] 
I0123 14:56:25.831929 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e i, on_tline n g e i ? coll l d e
I0123 14:56:26.855460 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9903268814086914
I0123 14:56:28.453314 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5976581573486328
I0123 14:56:30.304014 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8504867553710938
I0123 14:56:33.761454 140012029288448 ddar.py:60] Depth 4/1000 time = 3.4572479724884033
I0123 14:56:36.131338 140012029288448 ddar.py:60] Depth 5/1000 time = 2.349670648574829
I0123 14:56:38.396698 140012029288448 ddar.py:60] Depth 6/1000 time = 2.2651867866516113
I0123 14:56:38.406790 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:56:38.406844 140012029288448 alphageometry.py:566] LM output (score=-2.805907): "n : T c g c n 17 ;"
I0123 14:56:38.406881 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c g"

I0123 14:56:38.406919 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n c c g ? coll l d e"
I0123 14:56:38.407077 140012029288448 graph.py:498] 
I0123 14:56:38.407129 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n c c g ? coll l d e
I0123 14:56:39.349853 140012029288448 ddar.py:60] Depth 1/1000 time = 0.909778356552124
I0123 14:56:42.136591 140012029288448 ddar.py:60] Depth 2/1000 time = 2.7865729331970215
I0123 14:56:43.757661 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6208715438842773
I0123 14:56:45.458190 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7003450393676758
I0123 14:56:47.515783 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0359389781951904
I0123 14:56:49.462796 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9467289447784424
I0123 14:56:49.472121 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:56:49.472205 140012029288448 alphageometry.py:566] LM output (score=-2.833571): "n : C h l n 17 D h n l n 18 ;"
I0123 14:56:49.472241 140012029288448 alphageometry.py:567] Translation: "n = on_line n h l, on_bline n l h"

I0123 14:56:49.472294 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n h l, on_bline n l h ? coll l d e"
I0123 14:56:49.472490 140012029288448 graph.py:498] 
I0123 14:56:49.472556 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n h l, on_bline n l h ? coll l d e
I0123 14:56:52.199941 140012029288448 ddar.py:60] Depth 1/1000 time = 2.685837745666504
I0123 14:56:53.879901 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6797893047332764
I0123 14:56:55.909615 140012029288448 ddar.py:60] Depth 3/1000 time = 2.0295419692993164
I0123 14:56:59.446497 140012029288448 ddar.py:60] Depth 4/1000 time = 3.53667950630188
I0123 14:57:01.541583 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0946900844573975
I0123 14:57:05.454838 140012029288448 ddar.py:60] Depth 6/1000 time = 3.8962485790252686
I0123 14:57:07.755185 140012029288448 ddar.py:60] Depth 7/1000 time = 2.300168752670288
I0123 14:57:07.764311 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:57:07.764373 140012029288448 alphageometry.py:566] LM output (score=-2.871512): "n : C e l n 17 D e l l n 18 ;"
I0123 14:57:07.764408 140012029288448 alphageometry.py:567] Translation: "n = on_line n e l, on_circle n l e"

I0123 14:57:07.764446 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e l, on_circle n l e ? coll l d e"
I0123 14:57:07.764611 140012029288448 graph.py:498] 
I0123 14:57:07.764672 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_line n e l, on_circle n l e ? coll l d e
I0123 14:57:08.815044 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0087385177612305
I0123 14:57:11.877837 140012029288448 ddar.py:60] Depth 2/1000 time = 3.0625743865966797
I0123 14:57:13.486595 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6085472106933594
I0123 14:57:15.157150 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6703743934631348
I0123 14:57:16.837365 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6798288822174072
I0123 14:57:18.817088 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9634909629821777
I0123 14:57:22.119440 140012029288448 ddar.py:60] Depth 7/1000 time = 3.302164316177368
I0123 14:57:22.128600 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:57:22.128670 140012029288448 alphageometry.py:566] LM output (score=-2.880517): "n : T f h f n 17 ;"
I0123 14:57:22.128714 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f f h"

I0123 14:57:22.128752 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n f f h ? coll l d e"
I0123 14:57:22.128913 140012029288448 graph.py:498] 
I0123 14:57:22.128968 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_tline n f f h ? coll l d e
I0123 14:57:23.087341 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9252591133117676
I0123 14:57:24.551434 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4639177322387695
I0123 14:57:26.170547 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6189420223236084
I0123 14:57:27.878679 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7079343795776367
I0123 14:57:31.482150 140012029288448 ddar.py:60] Depth 5/1000 time = 3.583777666091919
I0123 14:57:33.426923 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9444770812988281
I0123 14:57:33.436754 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:57:33.436836 140012029288448 alphageometry.py:566] LM output (score=-2.983555): "n : D e i i n 17 ;"
I0123 14:57:33.436874 140012029288448 alphageometry.py:567] Translation: "n = on_circle n i e"

I0123 14:57:33.436926 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_circle n i e ? coll l d e"
I0123 14:57:33.437098 140012029288448 graph.py:498] 
I0123 14:57:33.437156 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m i e; n = on_circle n i e ? coll l d e
I0123 14:57:34.969584 140012029288448 ddar.py:60] Depth 1/1000 time = 1.4944748878479004
I0123 14:57:36.891219 140012029288448 ddar.py:60] Depth 2/1000 time = 1.9214534759521484
I0123 14:57:40.737217 140012029288448 ddar.py:60] Depth 3/1000 time = 3.845810890197754
I0123 14:57:43.141815 140012029288448 ddar.py:60] Depth 4/1000 time = 2.404407262802124
I0123 14:57:46.015989 140012029288448 ddar.py:60] Depth 5/1000 time = 2.853386878967285
I0123 14:57:48.768551 140012029288448 ddar.py:60] Depth 6/1000 time = 2.752387285232544
I0123 14:57:48.777657 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:57:48.777757 140012029288448 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D e g g m 16 ; x00
I0123 14:57:55.961416 140012029288448 alphageometry.py:566] LM output (score=-0.921716): "n : C e i n 17 D e i i n 18 ;"
I0123 14:57:55.961655 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_circle n i e"

I0123 14:57:55.961718 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e i, on_circle n i e ? coll l d e"
I0123 14:57:55.961892 140012029288448 graph.py:498] 
I0123 14:57:55.961961 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e i, on_circle n i e ? coll l d e
I0123 14:57:57.101008 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0993382930755615
I0123 14:58:00.422565 140012029288448 ddar.py:60] Depth 2/1000 time = 3.321354627609253
I0123 14:58:02.701296 140012029288448 ddar.py:60] Depth 3/1000 time = 2.278554916381836
I0123 14:58:05.108272 140012029288448 ddar.py:60] Depth 4/1000 time = 2.4067842960357666
I0123 14:58:08.978823 140012029288448 ddar.py:60] Depth 5/1000 time = 3.8701159954071045
I0123 14:58:11.936138 140012029288448 ddar.py:60] Depth 6/1000 time = 2.9255917072296143
I0123 14:58:14.793340 140012029288448 ddar.py:60] Depth 7/1000 time = 2.8570258617401123
I0123 14:58:14.806128 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:58:14.806195 140012029288448 alphageometry.py:566] LM output (score=-1.512612): "n : C c i n 17 D c n i n 18 ;"
I0123 14:58:14.806231 140012029288448 alphageometry.py:567] Translation: "n = on_line n c i, on_bline n i c"

I0123 14:58:14.806268 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c i, on_bline n i c ? coll l d e"
I0123 14:58:14.806416 140012029288448 graph.py:498] 
I0123 14:58:14.806467 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c i, on_bline n i c ? coll l d e
I0123 14:58:15.707530 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8597395420074463
I0123 14:58:18.494101 140012029288448 ddar.py:60] Depth 2/1000 time = 2.786406993865967
I0123 14:58:20.116857 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6225826740264893
I0123 14:58:21.808759 140012029288448 ddar.py:60] Depth 4/1000 time = 1.691718578338623
I0123 14:58:23.522817 140012029288448 ddar.py:60] Depth 5/1000 time = 1.713634729385376
I0123 14:58:27.057359 140012029288448 ddar.py:60] Depth 6/1000 time = 3.5170810222625732
I0123 14:58:28.973237 140012029288448 ddar.py:60] Depth 7/1000 time = 1.915703296661377
I0123 14:58:28.983146 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:58:28.983218 140012029288448 alphageometry.py:566] LM output (score=-1.666088): "n : C e f n 17 D e n f n 18 ;"
I0123 14:58:28.983255 140012029288448 alphageometry.py:567] Translation: "n = on_line n e f, on_bline n f e"

I0123 14:58:28.983293 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e f, on_bline n f e ? coll l d e"
I0123 14:58:28.983441 140012029288448 graph.py:498] 
I0123 14:58:28.983495 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e f, on_bline n f e ? coll l d e
I0123 14:58:30.005327 140012029288448 ddar.py:60] Depth 1/1000 time = 0.979698896408081
I0123 14:58:31.569370 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5638608932495117
I0123 14:58:35.091721 140012029288448 ddar.py:60] Depth 3/1000 time = 3.522174119949341
I0123 14:58:37.152284 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0603671073913574
I0123 14:58:40.756791 140012029288448 ddar.py:60] Depth 5/1000 time = 3.6041224002838135
I0123 14:58:43.333147 140012029288448 ddar.py:60] Depth 6/1000 time = 2.5515754222869873
I0123 14:58:45.784618 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4512758255004883
I0123 14:58:45.795750 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:58:45.795820 140012029288448 alphageometry.py:566] LM output (score=-1.717711): "n : C e m n 17 D e n m n 18 ;"
I0123 14:58:45.795857 140012029288448 alphageometry.py:567] Translation: "n = on_line n e m, on_bline n m e"

I0123 14:58:45.795902 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e m, on_bline n m e ? coll l d e"
I0123 14:58:45.796069 140012029288448 graph.py:498] 
I0123 14:58:45.796130 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e m, on_bline n m e ? coll l d e
I0123 14:58:46.707616 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8704347610473633
I0123 14:58:49.687992 140012029288448 ddar.py:60] Depth 2/1000 time = 2.9801881313323975
I0123 14:58:51.517180 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8289928436279297
I0123 14:58:53.446989 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9296083450317383
I0123 14:58:55.372435 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9250385761260986
I0123 14:58:59.121801 140012029288448 ddar.py:60] Depth 6/1000 time = 3.727836847305298
I0123 14:59:01.317590 140012029288448 ddar.py:60] Depth 7/1000 time = 2.195617437362671
I0123 14:59:01.328265 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:59:01.328327 140012029288448 alphageometry.py:566] LM output (score=-1.797053): "n : C c m n 17 D c n m n 18 ;"
I0123 14:59:01.328362 140012029288448 alphageometry.py:567] Translation: "n = on_line n c m, on_bline n m c"

I0123 14:59:01.328401 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c m, on_bline n m c ? coll l d e"
I0123 14:59:01.328550 140012029288448 graph.py:498] 
I0123 14:59:01.328601 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c m, on_bline n m c ? coll l d e
I0123 14:59:02.233356 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8636059761047363
I0123 14:59:03.657267 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4237377643585205
I0123 14:59:07.079291 140012029288448 ddar.py:60] Depth 3/1000 time = 3.421841859817505
I0123 14:59:09.000111 140012029288448 ddar.py:60] Depth 4/1000 time = 1.920577049255371
I0123 14:59:10.916358 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9156646728515625
I0123 14:59:13.220932 140012029288448 ddar.py:60] Depth 6/1000 time = 2.282905101776123
I0123 14:59:16.976792 140012029288448 ddar.py:60] Depth 7/1000 time = 3.75569224357605
I0123 14:59:16.987677 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:59:16.987733 140012029288448 alphageometry.py:566] LM output (score=-1.840505): "n : C c f n 17 D c n f n 18 ;"
I0123 14:59:16.987768 140012029288448 alphageometry.py:567] Translation: "n = on_line n c f, on_bline n f c"

I0123 14:59:16.987805 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c f, on_bline n f c ? coll l d e"
I0123 14:59:16.987956 140012029288448 graph.py:498] 
I0123 14:59:16.988012 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c f, on_bline n f c ? coll l d e
I0123 14:59:17.884999 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8556559085845947
I0123 14:59:19.189685 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3045144081115723
I0123 14:59:20.820692 140012029288448 ddar.py:60] Depth 3/1000 time = 1.630828619003296
I0123 14:59:22.524619 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7037339210510254
I0123 14:59:25.724565 140012029288448 ddar.py:60] Depth 5/1000 time = 3.199552536010742
I0123 14:59:27.750976 140012029288448 ddar.py:60] Depth 6/1000 time = 2.0100700855255127
I0123 14:59:29.658664 140012029288448 ddar.py:60] Depth 7/1000 time = 1.9074852466583252
I0123 14:59:29.667946 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:59:29.668026 140012029288448 alphageometry.py:566] LM output (score=-1.879069): "n : C f i n 17 D f i i n 18 ;"
I0123 14:59:29.668065 140012029288448 alphageometry.py:567] Translation: "n = on_line n f i, on_circle n i f"

I0123 14:59:29.668108 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n f i, on_circle n i f ? coll l d e"
I0123 14:59:29.668285 140012029288448 graph.py:498] 
I0123 14:59:29.668349 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n f i, on_circle n i f ? coll l d e
I0123 14:59:30.651443 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9469006061553955
I0123 14:59:32.357020 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7053310871124268
I0123 14:59:36.171883 140012029288448 ddar.py:60] Depth 3/1000 time = 3.8146491050720215
I0123 14:59:38.553281 140012029288448 ddar.py:60] Depth 4/1000 time = 2.381213903427124
I0123 14:59:40.912234 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3585665225982666
I0123 14:59:45.380122 140012029288448 ddar.py:60] Depth 6/1000 time = 4.435853004455566
I0123 14:59:48.243132 140012029288448 ddar.py:60] Depth 7/1000 time = 2.862834930419922
I0123 14:59:48.255566 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:59:48.255632 140012029288448 alphageometry.py:566] LM output (score=-2.190858): "n : C h i n 17 D h n i n 18 ;"
I0123 14:59:48.255667 140012029288448 alphageometry.py:567] Translation: "n = on_line n h i, on_bline n i h"

I0123 14:59:48.255707 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n h i, on_bline n i h ? coll l d e"
I0123 14:59:48.255869 140012029288448 graph.py:498] 
I0123 14:59:48.255923 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n h i, on_bline n i h ? coll l d e
I0123 14:59:49.304322 140012029288448 ddar.py:60] Depth 1/1000 time = 1.007375955581665
I0123 14:59:52.541058 140012029288448 ddar.py:60] Depth 2/1000 time = 3.23652982711792
I0123 14:59:54.564022 140012029288448 ddar.py:60] Depth 3/1000 time = 2.022711992263794
I0123 14:59:56.642347 140012029288448 ddar.py:60] Depth 4/1000 time = 2.078110694885254
I0123 15:00:00.210732 140012029288448 ddar.py:60] Depth 5/1000 time = 3.567981004714966
I0123 15:00:02.617474 140012029288448 ddar.py:60] Depth 6/1000 time = 2.389859199523926
I0123 15:00:06.454899 140012029288448 ddar.py:60] Depth 7/1000 time = 3.8372440338134766
I0123 15:00:06.464899 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:00:06.464960 140012029288448 alphageometry.py:566] LM output (score=-2.213529): "n : C c e n 17 D c n e n 18 ;"
I0123 15:00:06.464995 140012029288448 alphageometry.py:567] Translation: "n = on_line n c e, on_bline n e c"

I0123 15:00:06.465037 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c e, on_bline n e c ? coll l d e"
I0123 15:00:06.465192 140012029288448 graph.py:498] 
I0123 15:00:06.465248 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c e, on_bline n e c ? coll l d e
I0123 15:00:07.464824 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9583466053009033
I0123 15:00:09.032917 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5679302215576172
I0123 15:00:12.635288 140012029288448 ddar.py:60] Depth 3/1000 time = 3.602189302444458
I0123 15:00:14.704457 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0689167976379395
I0123 15:00:16.781740 140012029288448 ddar.py:60] Depth 5/1000 time = 2.076785087585449
I0123 15:00:20.777369 140012029288448 ddar.py:60] Depth 6/1000 time = 3.9738197326660156
I0123 15:00:23.140267 140012029288448 ddar.py:60] Depth 7/1000 time = 2.3627216815948486
I0123 15:00:23.150723 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:00:23.150780 140012029288448 alphageometry.py:566] LM output (score=-2.276155): "n : C d m n 17 D d n m n 18 ;"
I0123 15:00:23.150815 140012029288448 alphageometry.py:567] Translation: "n = on_line n d m, on_bline n m d"

I0123 15:00:23.150852 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n d m, on_bline n m d ? coll l d e"
I0123 15:00:23.151009 140012029288448 graph.py:498] 
I0123 15:00:23.151066 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n d m, on_bline n m d ? coll l d e
I0123 15:00:24.059746 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8671715259552002
I0123 15:00:25.481410 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4215047359466553
I0123 15:00:28.866999 140012029288448 ddar.py:60] Depth 3/1000 time = 3.3854212760925293
I0123 15:00:30.787762 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9205684661865234
I0123 15:00:32.715738 140012029288448 ddar.py:60] Depth 5/1000 time = 1.927581548690796
I0123 15:00:35.022213 140012029288448 ddar.py:60] Depth 6/1000 time = 2.285522222518921
I0123 15:00:38.779795 140012029288448 ddar.py:60] Depth 7/1000 time = 3.7572805881500244
I0123 15:00:38.790820 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:00:38.790878 140012029288448 alphageometry.py:566] LM output (score=-2.298917): "n : C e i n 17 D e n i n 18 ;"
I0123 15:00:38.790914 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_bline n i e"

I0123 15:00:38.790953 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e i, on_bline n i e ? coll l d e"
I0123 15:00:38.791107 140012029288448 graph.py:498] 
I0123 15:00:38.791164 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e i, on_bline n i e ? coll l d e
I0123 15:00:39.679218 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8466136455535889
I0123 15:00:40.963747 140012029288448 ddar.py:60] Depth 2/1000 time = 1.284353494644165
I0123 15:00:42.571622 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6077072620391846
I0123 15:00:44.240015 140012029288448 ddar.py:60] Depth 4/1000 time = 1.668201208114624
I0123 15:00:47.355215 140012029288448 ddar.py:60] Depth 5/1000 time = 3.114816665649414
I0123 15:00:49.319803 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9486033916473389
I0123 15:00:51.205104 140012029288448 ddar.py:60] Depth 7/1000 time = 1.8851327896118164
I0123 15:00:51.214920 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:00:51.214985 140012029288448 alphageometry.py:566] LM output (score=-2.340160): "n : C e l n 17 D e n l n 18 ;"
I0123 15:00:51.215021 140012029288448 alphageometry.py:567] Translation: "n = on_line n e l, on_bline n l e"

I0123 15:00:51.215062 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e l, on_bline n l e ? coll l d e"
I0123 15:00:51.215212 140012029288448 graph.py:498] 
I0123 15:00:51.215264 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e l, on_bline n l e ? coll l d e
I0123 15:00:52.108211 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8522884845733643
I0123 15:00:55.024263 140012029288448 ddar.py:60] Depth 2/1000 time = 2.9158804416656494
I0123 15:00:56.640229 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6157245635986328
I0123 15:00:58.311930 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6714141368865967
I0123 15:00:59.996175 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6838009357452393
I0123 15:01:02.002018 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9894654750823975
I0123 15:01:05.463186 140012029288448 ddar.py:60] Depth 7/1000 time = 3.4609789848327637
I0123 15:01:05.472873 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:01:05.472945 140012029288448 alphageometry.py:566] LM output (score=-2.358071): "n : C f i n 17 D f n i n 18 ;"
I0123 15:01:05.472981 140012029288448 alphageometry.py:567] Translation: "n = on_line n f i, on_bline n i f"

I0123 15:01:05.473019 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n f i, on_bline n i f ? coll l d e"
I0123 15:01:05.473174 140012029288448 graph.py:498] 
I0123 15:01:05.473231 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n f i, on_bline n i f ? coll l d e
I0123 15:01:06.360831 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8463220596313477
I0123 15:01:07.650371 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2893781661987305
I0123 15:01:09.247103 140012029288448 ddar.py:60] Depth 3/1000 time = 1.596543550491333
I0123 15:01:10.903134 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6558303833007812
I0123 15:01:14.087018 140012029288448 ddar.py:60] Depth 5/1000 time = 3.183481216430664
I0123 15:01:16.048775 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9455757141113281
I0123 15:01:17.983826 140012029288448 ddar.py:60] Depth 7/1000 time = 1.934805154800415
I0123 15:01:17.994097 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:01:17.994192 140012029288448 alphageometry.py:566] LM output (score=-2.361708): "n : C c g n 17 D c g g n 18 ;"
I0123 15:01:17.994232 140012029288448 alphageometry.py:567] Translation: "n = on_line n c g, on_circle n g c"

I0123 15:01:17.994283 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c g, on_circle n g c ? coll l d e"
I0123 15:01:17.994477 140012029288448 graph.py:498] 
I0123 15:01:17.994541 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c g, on_circle n g c ? coll l d e
I0123 15:01:19.315003 140012029288448 ddar.py:60] Depth 1/1000 time = 1.2810940742492676
I0123 15:01:23.410397 140012029288448 ddar.py:60] Depth 2/1000 time = 4.095208406448364
I0123 15:01:26.250235 140012029288448 ddar.py:60] Depth 3/1000 time = 2.8396620750427246
I0123 15:01:29.297163 140012029288448 ddar.py:60] Depth 4/1000 time = 3.046726942062378
I0123 15:01:32.301123 140012029288448 ddar.py:60] Depth 5/1000 time = 3.003539562225342
I0123 15:01:37.568049 140012029288448 ddar.py:60] Depth 6/1000 time = 5.228463888168335
I0123 15:01:41.121777 140012029288448 ddar.py:60] Depth 7/1000 time = 3.553488254547119
I0123 15:01:41.136444 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:01:41.136526 140012029288448 alphageometry.py:566] LM output (score=-2.377539): "n : C f h n 17 D f h h n 18 ;"
I0123 15:01:41.136562 140012029288448 alphageometry.py:567] Translation: "n = on_line n f h, on_circle n h f"

I0123 15:01:41.136610 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n f h, on_circle n h f ? coll l d e"
I0123 15:01:41.136805 140012029288448 graph.py:498] 
I0123 15:01:41.136885 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n f h, on_circle n h f ? coll l d e
I0123 15:01:42.283932 140012029288448 ddar.py:60] Depth 1/1000 time = 1.1089088916778564
I0123 15:01:44.236372 140012029288448 ddar.py:60] Depth 2/1000 time = 1.952233076095581
I0123 15:01:48.098918 140012029288448 ddar.py:60] Depth 3/1000 time = 3.8623716831207275
I0123 15:01:50.490180 140012029288448 ddar.py:60] Depth 4/1000 time = 2.3910536766052246
I0123 15:01:52.862290 140012029288448 ddar.py:60] Depth 5/1000 time = 2.371710777282715
I0123 15:01:57.440998 140012029288448 ddar.py:60] Depth 6/1000 time = 4.545623779296875
I0123 15:02:00.335033 140012029288448 ddar.py:60] Depth 7/1000 time = 2.8938357830047607
I0123 15:02:00.347753 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:02:00.347820 140012029288448 alphageometry.py:566] LM output (score=-2.412632): "n : C h i n 17 D h i i n 18 ;"
I0123 15:02:00.347856 140012029288448 alphageometry.py:567] Translation: "n = on_line n h i, on_circle n i h"

I0123 15:02:00.347900 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n h i, on_circle n i h ? coll l d e"
I0123 15:02:00.348081 140012029288448 graph.py:498] 
I0123 15:02:00.348144 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n h i, on_circle n i h ? coll l d e
I0123 15:02:01.374563 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9846982955932617
I0123 15:02:04.465558 140012029288448 ddar.py:60] Depth 2/1000 time = 3.0907528400421143
I0123 15:02:06.242386 140012029288448 ddar.py:60] Depth 3/1000 time = 1.776641845703125
I0123 15:02:08.075578 140012029288448 ddar.py:60] Depth 4/1000 time = 1.8330001831054688
I0123 15:02:11.495370 140012029288448 ddar.py:60] Depth 5/1000 time = 3.4193973541259766
I0123 15:02:13.676824 140012029288448 ddar.py:60] Depth 6/1000 time = 2.1652021408081055
I0123 15:02:15.741394 140012029288448 ddar.py:60] Depth 7/1000 time = 2.0644049644470215
I0123 15:02:15.751218 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:02:15.751291 140012029288448 alphageometry.py:566] LM output (score=-2.437302): "n : C d i n 17 D d n i n 18 ;"
I0123 15:02:15.751328 140012029288448 alphageometry.py:567] Translation: "n = on_line n d i, on_bline n i d"

I0123 15:02:15.751368 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n d i, on_bline n i d ? coll l d e"
I0123 15:02:15.751518 140012029288448 graph.py:498] 
I0123 15:02:15.751569 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n d i, on_bline n i d ? coll l d e
I0123 15:02:16.653360 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8609790802001953
I0123 15:02:19.588107 140012029288448 ddar.py:60] Depth 2/1000 time = 2.9345786571502686
I0123 15:02:21.220620 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6323163509368896
I0123 15:02:22.921710 140012029288448 ddar.py:60] Depth 4/1000 time = 1.7008259296417236
I0123 15:02:24.618625 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6963953971862793
I0123 15:02:26.650047 140012029288448 ddar.py:60] Depth 6/1000 time = 2.0151424407958984
I0123 15:02:30.119117 140012029288448 ddar.py:60] Depth 7/1000 time = 3.4688761234283447
I0123 15:02:30.128367 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:02:30.128421 140012029288448 alphageometry.py:566] LM output (score=-2.472919): "n : C l m n 17 D l n m n 18 ;"
I0123 15:02:30.128455 140012029288448 alphageometry.py:567] Translation: "n = on_line n l m, on_bline n m l"

I0123 15:02:30.128491 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n l m, on_bline n m l ? coll l d e"
I0123 15:02:30.128642 140012029288448 graph.py:498] 
I0123 15:02:30.128698 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n l m, on_bline n m l ? coll l d e
I0123 15:02:31.021936 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8522019386291504
I0123 15:02:32.303753 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2816579341888428
I0123 15:02:33.914255 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6103310585021973
I0123 15:02:35.607202 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6927595138549805
I0123 15:02:38.826199 140012029288448 ddar.py:60] Depth 5/1000 time = 3.218595504760742
I0123 15:02:40.834051 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9915874004364014
I0123 15:02:42.724180 140012029288448 ddar.py:60] Depth 7/1000 time = 1.889904499053955
I0123 15:02:42.734099 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:02:42.734181 140012029288448 alphageometry.py:566] LM output (score=-2.497787): "n : C c d n 17 D c n d n 18 ;"
I0123 15:02:42.734216 140012029288448 alphageometry.py:567] Translation: "n = on_line n c d, on_bline n d c"

I0123 15:02:42.734264 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c d, on_bline n d c ? coll l d e"
I0123 15:02:42.734452 140012029288448 graph.py:498] 
I0123 15:02:42.734515 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c d, on_bline n d c ? coll l d e
I0123 15:02:43.725785 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9501667022705078
I0123 15:02:46.899729 140012029288448 ddar.py:60] Depth 2/1000 time = 3.1737582683563232
I0123 15:02:48.886864 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9869468212127686
I0123 15:02:50.949494 140012029288448 ddar.py:60] Depth 4/1000 time = 2.06243896484375
I0123 15:02:54.523435 140012029288448 ddar.py:60] Depth 5/1000 time = 3.5735347270965576
I0123 15:02:57.010513 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4655866622924805
I0123 15:03:01.048383 140012029288448 ddar.py:60] Depth 7/1000 time = 4.037684202194214
I0123 15:03:01.059545 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:03:01.059603 140012029288448 alphageometry.py:566] LM output (score=-2.538222): "n : T e i e n 17 ;"
I0123 15:03:01.059639 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e i"

I0123 15:03:01.059677 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_tline n e e i ? coll l d e"
I0123 15:03:01.059842 140012029288448 graph.py:498] 
I0123 15:03:01.059897 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_tline n e e i ? coll l d e
I0123 15:03:01.871528 140012029288448 ddar.py:60] Depth 1/1000 time = 0.778670072555542
I0123 15:03:03.129713 140012029288448 ddar.py:60] Depth 2/1000 time = 1.2579925060272217
I0123 15:03:04.744635 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6147210597991943
I0123 15:03:06.445510 140012029288448 ddar.py:60] Depth 4/1000 time = 1.700615644454956
I0123 15:03:08.497570 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0322585105895996
I0123 15:03:12.093625 140012029288448 ddar.py:60] Depth 6/1000 time = 3.5958733558654785
I0123 15:03:12.104009 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:03:12.104063 140012029288448 alphageometry.py:566] LM output (score=-2.549908): "n : C e g n 17 D e g g n 18 ;"
I0123 15:03:12.104098 140012029288448 alphageometry.py:567] Translation: "n = on_line n e g, on_circle n g e"

I0123 15:03:12.104135 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e g, on_circle n g e ? coll l d e"
I0123 15:03:12.104286 140012029288448 graph.py:498] 
I0123 15:03:12.104349 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e g, on_circle n g e ? coll l d e
I0123 15:03:13.157595 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0157971382141113
I0123 15:03:15.308231 140012029288448 ddar.py:60] Depth 2/1000 time = 2.1504642963409424
I0123 15:03:18.162088 140012029288448 ddar.py:60] Depth 3/1000 time = 2.8536651134490967
I0123 15:03:22.851660 140012029288448 ddar.py:60] Depth 4/1000 time = 4.689360618591309
I0123 15:03:25.849556 140012029288448 ddar.py:60] Depth 5/1000 time = 2.997403383255005
I0123 15:03:29.536586 140012029288448 ddar.py:60] Depth 6/1000 time = 3.646574020385742
I0123 15:03:34.817176 140012029288448 ddar.py:60] Depth 7/1000 time = 5.280381202697754
I0123 15:03:34.831001 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:03:34.831056 140012029288448 alphageometry.py:566] LM output (score=-2.555016): "n : C h k n 17 D h k k n 18 ;"
I0123 15:03:34.831092 140012029288448 alphageometry.py:567] Translation: "n = on_line n h k, on_circle n k h"

I0123 15:03:34.831129 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n h k, on_circle n k h ? coll l d e"
I0123 15:03:34.831279 140012029288448 graph.py:498] 
I0123 15:03:34.831334 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n h k, on_circle n k h ? coll l d e
I0123 15:03:35.900671 140012029288448 ddar.py:60] Depth 1/1000 time = 1.02713942527771
I0123 15:03:37.807008 140012029288448 ddar.py:60] Depth 2/1000 time = 1.9061603546142578
I0123 15:03:41.816758 140012029288448 ddar.py:60] Depth 3/1000 time = 4.0095789432525635
I0123 15:03:44.222449 140012029288448 ddar.py:60] Depth 4/1000 time = 2.4054746627807617
I0123 15:03:46.621881 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3989486694335938
I0123 15:03:51.056620 140012029288448 ddar.py:60] Depth 6/1000 time = 4.414495944976807
I0123 15:03:53.677498 140012029288448 ddar.py:60] Depth 7/1000 time = 2.620687246322632
I0123 15:03:53.688394 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:03:53.688447 140012029288448 alphageometry.py:566] LM output (score=-2.626376): "n : C c l n 17 D c n l n 18 ;"
I0123 15:03:53.688482 140012029288448 alphageometry.py:567] Translation: "n = on_line n c l, on_bline n l c"

I0123 15:03:53.688520 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c l, on_bline n l c ? coll l d e"
I0123 15:03:53.688669 140012029288448 graph.py:498] 
I0123 15:03:53.688724 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c l, on_bline n l c ? coll l d e
I0123 15:03:54.579673 140012029288448 ddar.py:60] Depth 1/1000 time = 0.848994255065918
I0123 15:03:55.879135 140012029288448 ddar.py:60] Depth 2/1000 time = 1.299288034439087
I0123 15:03:59.033091 140012029288448 ddar.py:60] Depth 3/1000 time = 3.1537868976593018
I0123 15:04:00.714715 140012029288448 ddar.py:60] Depth 4/1000 time = 1.681426763534546
I0123 15:04:02.409905 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6947722434997559
I0123 15:04:04.412364 140012029288448 ddar.py:60] Depth 6/1000 time = 1.985957384109497
I0123 15:04:08.035213 140012029288448 ddar.py:60] Depth 7/1000 time = 3.622612476348877
I0123 15:04:08.045162 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:04:08.045229 140012029288448 alphageometry.py:566] LM output (score=-2.703870): "n : C c i n 17 D c i i n 18 ;"
I0123 15:04:08.045263 140012029288448 alphageometry.py:567] Translation: "n = on_line n c i, on_circle n i c"

I0123 15:04:08.045303 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c i, on_circle n i c ? coll l d e"
I0123 15:04:08.045462 140012029288448 graph.py:498] 
I0123 15:04:08.045520 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n c i, on_circle n i c ? coll l d e
I0123 15:04:08.953766 140012029288448 ddar.py:60] Depth 1/1000 time = 0.866180419921875
I0123 15:04:10.255870 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3019311428070068
I0123 15:04:11.882751 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6267125606536865
I0123 15:04:13.563553 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6806132793426514
I0123 15:04:16.853011 140012029288448 ddar.py:60] Depth 5/1000 time = 3.2890465259552
I0123 15:04:18.830876 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9613001346588135
I0123 15:04:20.715476 140012029288448 ddar.py:60] Depth 7/1000 time = 1.8844020366668701
I0123 15:04:20.725301 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:04:20.725366 140012029288448 alphageometry.py:566] LM output (score=-2.705712): "n : D e g g n 17 ;"
I0123 15:04:20.725415 140012029288448 alphageometry.py:567] Translation: "n = on_circle n g e"

I0123 15:04:20.725456 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_circle n g e ? coll l d e"
I0123 15:04:20.725603 140012029288448 graph.py:498] 
I0123 15:04:20.725673 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_circle n g e ? coll l d e
I0123 15:04:21.738885 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9765336513519287
I0123 15:04:23.649509 140012029288448 ddar.py:60] Depth 2/1000 time = 1.9104433059692383
I0123 15:04:27.701042 140012029288448 ddar.py:60] Depth 3/1000 time = 4.051300287246704
I0123 15:04:30.112098 140012029288448 ddar.py:60] Depth 4/1000 time = 2.410766839981079
I0123 15:04:32.998158 140012029288448 ddar.py:60] Depth 5/1000 time = 2.864593029022217
I0123 15:04:35.878606 140012029288448 ddar.py:60] Depth 6/1000 time = 2.8802683353424072
I0123 15:04:35.889055 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:04:35.889133 140012029288448 alphageometry.py:566] LM output (score=-2.729042): "n : C e i n 17 T e i g n 18 ;"
I0123 15:04:35.889170 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_tline n g e i"

I0123 15:04:35.889221 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e i, on_tline n g e i ? coll l d e"
I0123 15:04:35.889400 140012029288448 graph.py:498] 
I0123 15:04:35.889460 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n e i, on_tline n g e i ? coll l d e
I0123 15:04:36.786798 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8623147010803223
I0123 15:04:39.823586 140012029288448 ddar.py:60] Depth 2/1000 time = 3.036611557006836
I0123 15:04:41.690947 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8671875
I0123 15:04:43.643624 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9524955749511719
I0123 15:04:46.015749 140012029288448 ddar.py:60] Depth 5/1000 time = 2.351233959197998
I0123 15:04:49.977996 140012029288448 ddar.py:60] Depth 6/1000 time = 3.962045669555664
I0123 15:04:49.989174 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:04:49.989238 140012029288448 alphageometry.py:566] LM output (score=-2.739030): "n : C e i n 17 P e i i n 18 ;"
I0123 15:04:49.989275 140012029288448 alphageometry.py:567] Translation: "ERROR: Invalid predicate P e i i n"

I0123 15:04:49.989310 140012029288448 alphageometry.py:566] LM output (score=-2.791788): "n : C h l n 17 D h l l n 18 ;"
I0123 15:04:49.989338 140012029288448 alphageometry.py:567] Translation: "n = on_line n h l, on_circle n l h"

I0123 15:04:49.989370 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n h l, on_circle n l h ? coll l d e"
I0123 15:04:49.989528 140012029288448 graph.py:498] 
I0123 15:04:49.989588 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n h l, on_circle n l h ? coll l d e
I0123 15:04:51.016973 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9853847026824951
I0123 15:04:52.454245 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4370942115783691
I0123 15:04:54.239899 140012029288448 ddar.py:60] Depth 3/1000 time = 1.7854831218719482
I0123 15:04:57.667923 140012029288448 ddar.py:60] Depth 4/1000 time = 3.4278414249420166
I0123 15:04:59.507438 140012029288448 ddar.py:60] Depth 5/1000 time = 1.839134693145752
I0123 15:05:03.338420 140012029288448 ddar.py:60] Depth 6/1000 time = 3.8148305416107178
I0123 15:05:05.395346 140012029288448 ddar.py:60] Depth 7/1000 time = 2.0567495822906494
I0123 15:05:05.404893 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:05:05.404951 140012029288448 alphageometry.py:566] LM output (score=-2.807539): "n : C l o n 17 D l o o n 18 ;"
I0123 15:05:05.404986 140012029288448 alphageometry.py:567] Translation: "ERROR: point o does not exist."

I0123 15:05:05.405021 140012029288448 alphageometry.py:566] LM output (score=-2.865410): "n : T c e e n 17 ;"
I0123 15:05:05.405049 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c e"

I0123 15:05:05.405086 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_tline n e c e ? coll l d e"
I0123 15:05:05.405243 140012029288448 graph.py:498] 
I0123 15:05:05.405299 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_tline n e c e ? coll l d e
I0123 15:05:06.232136 140012029288448 ddar.py:60] Depth 1/1000 time = 0.7940287590026855
I0123 15:05:07.492692 140012029288448 ddar.py:60] Depth 2/1000 time = 1.260375738143921
I0123 15:05:09.101908 140012029288448 ddar.py:60] Depth 3/1000 time = 1.608978033065796
I0123 15:05:12.572452 140012029288448 ddar.py:60] Depth 4/1000 time = 3.4702847003936768
I0123 15:05:14.694165 140012029288448 ddar.py:60] Depth 5/1000 time = 2.1000759601593018
I0123 15:05:16.786971 140012029288448 ddar.py:60] Depth 6/1000 time = 2.0926334857940674
I0123 15:05:16.797047 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:05:16.797100 140012029288448 alphageometry.py:566] LM output (score=-2.912203): "n : C h l n 17 D h n l n 18 ;"
I0123 15:05:16.797135 140012029288448 alphageometry.py:567] Translation: "n = on_line n h l, on_bline n l h"

I0123 15:05:16.797173 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n h l, on_bline n l h ? coll l d e"
I0123 15:05:16.797330 140012029288448 graph.py:498] 
I0123 15:05:16.797387 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_line n h l, on_bline n l h ? coll l d e
I0123 15:05:17.846056 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0056707859039307
I0123 15:05:21.159709 140012029288448 ddar.py:60] Depth 2/1000 time = 3.313488006591797
I0123 15:05:23.186217 140012029288448 ddar.py:60] Depth 3/1000 time = 2.026334762573242
I0123 15:05:25.272384 140012029288448 ddar.py:60] Depth 4/1000 time = 2.085979700088501
I0123 15:05:29.057177 140012029288448 ddar.py:60] Depth 5/1000 time = 3.784363031387329
I0123 15:05:31.462065 140012029288448 ddar.py:60] Depth 6/1000 time = 2.388033390045166
I0123 15:05:33.755886 140012029288448 ddar.py:60] Depth 7/1000 time = 2.2935614585876465
I0123 15:05:33.765979 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:05:33.766069 140012029288448 alphageometry.py:566] LM output (score=-2.945461): "n : T b h b n 17 ;"
I0123 15:05:33.766108 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b h"

I0123 15:05:33.766164 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_tline n b b h ? coll l d e"
I0123 15:05:33.766339 140012029288448 graph.py:498] 
I0123 15:05:33.766401 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m g e; n = on_tline n b b h ? coll l d e
I0123 15:05:34.577814 140012029288448 ddar.py:60] Depth 1/1000 time = 0.77752685546875
I0123 15:05:37.464430 140012029288448 ddar.py:60] Depth 2/1000 time = 2.8864634037017822
I0123 15:05:39.072077 140012029288448 ddar.py:60] Depth 3/1000 time = 1.6074790954589844
I0123 15:05:40.776475 140012029288448 ddar.py:60] Depth 4/1000 time = 1.704200267791748
I0123 15:05:42.852245 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0535430908203125
I0123 15:05:44.824421 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9719927310943604
I0123 15:05:44.835078 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:05:44.835188 140012029288448 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : T c g c m 16 ; x00
I0123 15:05:50.172418 140012029288448 alphageometry.py:566] LM output (score=-1.407165): "n : P c m g n 17 ;"
I0123 15:05:50.172567 140012029288448 alphageometry.py:567] Translation: "n = on_pline n g c m"

I0123 15:05:50.172612 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_pline n g c m ? coll l d e"
I0123 15:05:50.172756 140012029288448 graph.py:498] 
I0123 15:05:50.172806 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_pline n g c m ? coll l d e
I0123 15:05:52.560725 140012029288448 ddar.py:60] Depth 1/1000 time = 2.356362819671631
I0123 15:05:53.507447 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9465546607971191
I0123 15:05:54.747780 140012029288448 ddar.py:60] Depth 3/1000 time = 1.240156650543213
I0123 15:05:56.046565 140012029288448 ddar.py:60] Depth 4/1000 time = 1.2985951900482178
I0123 15:05:57.610289 140012029288448 ddar.py:60] Depth 5/1000 time = 1.5459983348846436
I0123 15:05:59.084971 140012029288448 ddar.py:60] Depth 6/1000 time = 1.4743835926055908
I0123 15:05:59.094382 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:05:59.094468 140012029288448 alphageometry.py:566] LM output (score=-1.569379): "n : T e i e n 17 ;"
I0123 15:05:59.094504 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e i"

I0123 15:05:59.094570 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n e e i ? coll l d e"
I0123 15:05:59.094773 140012029288448 graph.py:498] 
I0123 15:05:59.094837 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n e e i ? coll l d e
I0123 15:06:01.498296 140012029288448 ddar.py:60] Depth 1/1000 time = 2.3709876537323
I0123 15:06:02.490028 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9915668964385986
I0123 15:06:03.830521 140012029288448 ddar.py:60] Depth 3/1000 time = 1.340315341949463
I0123 15:06:05.244430 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4137043952941895
I0123 15:06:06.950115 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6847662925720215
I0123 15:06:08.568768 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6184728145599365
I0123 15:06:08.578416 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:06:08.578472 140012029288448 alphageometry.py:566] LM output (score=-1.736234): "n : T b h b n 17 ;"
I0123 15:06:08.578508 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b h"

I0123 15:06:08.578545 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n b b h ? coll l d e"
I0123 15:06:08.578690 140012029288448 graph.py:498] 
I0123 15:06:08.578740 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n b b h ? coll l d e
I0123 15:06:10.905797 140012029288448 ddar.py:60] Depth 1/1000 time = 2.2958285808563232
I0123 15:06:11.914376 140012029288448 ddar.py:60] Depth 2/1000 time = 1.0084140300750732
I0123 15:06:13.276031 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3614888191223145
I0123 15:06:14.710535 140012029288448 ddar.py:60] Depth 4/1000 time = 1.434330940246582
I0123 15:06:16.395089 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6615221500396729
I0123 15:06:18.024237 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6289629936218262
I0123 15:06:18.034497 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:06:18.034551 140012029288448 alphageometry.py:566] LM output (score=-1.929737): "n : C e i n 17 D e i i n 18 ;"
I0123 15:06:18.034587 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_circle n i e"

I0123 15:06:18.034625 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_line n e i, on_circle n i e ? coll l d e"
I0123 15:06:18.034775 140012029288448 graph.py:498] 
I0123 15:06:18.034826 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_line n e i, on_circle n i e ? coll l d e
I0123 15:06:20.677920 140012029288448 ddar.py:60] Depth 1/1000 time = 2.609769821166992
I0123 15:06:22.087521 140012029288448 ddar.py:60] Depth 2/1000 time = 1.409435749053955
I0123 15:06:24.110745 140012029288448 ddar.py:60] Depth 3/1000 time = 2.0230443477630615
I0123 15:06:26.240785 140012029288448 ddar.py:60] Depth 4/1000 time = 2.1298654079437256
I0123 15:06:30.075913 140012029288448 ddar.py:60] Depth 5/1000 time = 3.834932565689087
I0123 15:06:32.211970 140012029288448 ddar.py:60] Depth 6/1000 time = 2.1356406211853027
I0123 15:06:34.737836 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4916181564331055
I0123 15:06:37.190676 140012029288448 ddar.py:60] Depth 8/1000 time = 2.4526619911193848
I0123 15:06:37.203241 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:06:37.203305 140012029288448 alphageometry.py:566] LM output (score=-2.237878): "n : T e f f n 17 ;"
I0123 15:06:37.203341 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f e f"

I0123 15:06:37.203383 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n f e f ? coll l d e"
I0123 15:06:37.203530 140012029288448 graph.py:498] 
I0123 15:06:37.203582 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n f e f ? coll l d e
I0123 15:06:37.918875 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6840822696685791
I0123 15:06:40.686611 140012029288448 ddar.py:60] Depth 2/1000 time = 2.767569065093994
I0123 15:06:42.023121 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3362882137298584
I0123 15:06:43.428066 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4046673774719238
I0123 15:06:45.283475 140012029288448 ddar.py:60] Depth 5/1000 time = 1.8271458148956299
I0123 15:06:47.043024 140012029288448 ddar.py:60] Depth 6/1000 time = 1.7593393325805664
I0123 15:06:47.052743 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:06:47.052821 140012029288448 alphageometry.py:566] LM output (score=-2.391790): "n : T b f b n 17 ;"
I0123 15:06:47.052857 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b f"

I0123 15:06:47.052910 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n b b f ? coll l d e"
I0123 15:06:47.053093 140012029288448 graph.py:498] 
I0123 15:06:47.053153 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n b b f ? coll l d e
I0123 15:06:47.767965 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6823360919952393
I0123 15:06:50.480360 140012029288448 ddar.py:60] Depth 2/1000 time = 2.712236166000366
I0123 15:06:51.820383 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3398427963256836
I0123 15:06:53.239211 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4186480045318604
I0123 15:06:55.007522 140012029288448 ddar.py:60] Depth 5/1000 time = 1.743966817855835
I0123 15:06:56.685203 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6774976253509521
I0123 15:06:56.695065 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:06:56.695127 140012029288448 alphageometry.py:566] LM output (score=-2.444319): "n : C c i n 17 D c n i n 18 ;"
I0123 15:06:56.695163 140012029288448 alphageometry.py:567] Translation: "n = on_line n c i, on_bline n i c"

I0123 15:06:56.695200 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_line n c i, on_bline n i c ? coll l d e"
I0123 15:06:56.695361 140012029288448 graph.py:498] 
I0123 15:06:56.695412 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_line n c i, on_bline n i c ? coll l d e
I0123 15:06:59.225099 140012029288448 ddar.py:60] Depth 1/1000 time = 2.4927117824554443
I0123 15:07:00.262925 140012029288448 ddar.py:60] Depth 2/1000 time = 1.0376598834991455
I0123 15:07:01.597680 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3345649242401123
I0123 15:07:02.981198 140012029288448 ddar.py:60] Depth 4/1000 time = 1.383270025253296
I0123 15:07:04.372375 140012029288448 ddar.py:60] Depth 5/1000 time = 1.390688180923462
I0123 15:07:06.080072 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6906297206878662
I0123 15:07:09.525557 140012029288448 ddar.py:60] Depth 7/1000 time = 3.445312023162842
I0123 15:07:09.534726 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:07:09.534784 140012029288448 alphageometry.py:566] LM output (score=-2.464173): "n : T c g f n 17 ;"
I0123 15:07:09.534821 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f c g"

I0123 15:07:09.534861 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n f c g ? coll l d e"
I0123 15:07:09.535024 140012029288448 graph.py:498] 
I0123 15:07:09.535089 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n f c g ? coll l d e
I0123 15:07:10.264607 140012029288448 ddar.py:60] Depth 1/1000 time = 0.696016788482666
I0123 15:07:11.249172 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9844086170196533
I0123 15:07:12.477453 140012029288448 ddar.py:60] Depth 3/1000 time = 1.228100061416626
I0123 15:07:13.768072 140012029288448 ddar.py:60] Depth 4/1000 time = 1.2904314994812012
I0123 15:07:15.312980 140012029288448 ddar.py:60] Depth 5/1000 time = 1.5273220539093018
I0123 15:07:18.505692 140012029288448 ddar.py:60] Depth 6/1000 time = 3.192445993423462
I0123 15:07:18.516766 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:07:18.516857 140012029288448 alphageometry.py:566] LM output (score=-2.514478): "n : P c g m n 17 ;"
I0123 15:07:18.516892 140012029288448 alphageometry.py:567] Translation: "n = on_pline n m c g"

I0123 15:07:18.516945 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_pline n m c g ? coll l d e"
I0123 15:07:18.517133 140012029288448 graph.py:498] 
I0123 15:07:18.517195 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_pline n m c g ? coll l d e
I0123 15:07:19.235964 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6849555969238281
I0123 15:07:20.185341 140012029288448 ddar.py:60] Depth 2/1000 time = 0.949129581451416
I0123 15:07:21.423056 140012029288448 ddar.py:60] Depth 3/1000 time = 1.237334966659546
I0123 15:07:22.711925 140012029288448 ddar.py:60] Depth 4/1000 time = 1.2885518074035645
I0123 15:07:24.286757 140012029288448 ddar.py:60] Depth 5/1000 time = 1.5573863983154297
I0123 15:07:27.687318 140012029288448 ddar.py:60] Depth 6/1000 time = 3.4001822471618652
I0123 15:07:27.696465 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:07:27.696551 140012029288448 alphageometry.py:566] LM output (score=-2.554344): "n : T f h f n 17 ;"
I0123 15:07:27.696587 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f f h"

I0123 15:07:27.696638 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n f f h ? coll l d e"
I0123 15:07:27.696820 140012029288448 graph.py:498] 
I0123 15:07:27.696880 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n f f h ? coll l d e
I0123 15:07:28.403973 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6737844944000244
I0123 15:07:29.427333 140012029288448 ddar.py:60] Depth 2/1000 time = 1.023207426071167
I0123 15:07:30.775580 140012029288448 ddar.py:60] Depth 3/1000 time = 1.348020076751709
I0123 15:07:32.209112 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4332220554351807
I0123 15:07:33.956170 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7228026390075684
I0123 15:07:37.485043 140012029288448 ddar.py:60] Depth 6/1000 time = 3.5286712646484375
I0123 15:07:37.494521 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:07:37.494588 140012029288448 alphageometry.py:566] LM output (score=-2.702433): "n : T b h h n 17 ;"
I0123 15:07:37.494623 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h b h"

I0123 15:07:37.494661 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n h b h ? coll l d e"
I0123 15:07:37.494817 140012029288448 graph.py:498] 
I0123 15:07:37.494873 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n h b h ? coll l d e
I0123 15:07:38.196004 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6681110858917236
I0123 15:07:39.185242 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9890825748443604
I0123 15:07:40.485865 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3004038333892822
I0123 15:07:41.882809 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3966560363769531
I0123 15:07:43.589767 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6825578212738037
I0123 15:07:45.217715 140012029288448 ddar.py:60] Depth 6/1000 time = 1.627751350402832
I0123 15:07:45.227421 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:07:45.227502 140012029288448 alphageometry.py:566] LM output (score=-2.735483): "n : C c m n 17 P c m c n 18 ;"
I0123 15:07:45.227540 140012029288448 alphageometry.py:567] Translation: "ERROR: Invalid predicate P c m c n"

I0123 15:07:45.227589 140012029288448 alphageometry.py:566] LM output (score=-2.801917): "n : T e l e n 17 ;"
I0123 15:07:45.227619 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e l"

I0123 15:07:45.227666 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n e e l ? coll l d e"
I0123 15:07:45.227840 140012029288448 graph.py:498] 
I0123 15:07:45.227901 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n e e l ? coll l d e
I0123 15:07:47.728864 140012029288448 ddar.py:60] Depth 1/1000 time = 2.4691381454467773
I0123 15:07:48.737241 140012029288448 ddar.py:60] Depth 2/1000 time = 1.0082025527954102
I0123 15:07:50.087313 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3498921394348145
I0123 15:07:51.524087 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4365859031677246
I0123 15:07:53.272325 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7275676727294922
I0123 15:07:54.898177 140012029288448 ddar.py:60] Depth 6/1000 time = 1.625549554824829
I0123 15:07:54.907866 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:07:54.907953 140012029288448 alphageometry.py:566] LM output (score=-2.807980): "n : T e i h n 17 ;"
I0123 15:07:54.907989 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h e i"

I0123 15:07:54.908041 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n h e i ? coll l d e"
I0123 15:07:54.908229 140012029288448 graph.py:498] 
I0123 15:07:54.908292 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n h e i ? coll l d e
I0123 15:07:57.416880 140012029288448 ddar.py:60] Depth 1/1000 time = 2.4761505126953125
I0123 15:07:58.400661 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9836163520812988
I0123 15:07:59.698352 140012029288448 ddar.py:60] Depth 3/1000 time = 1.2975168228149414
I0123 15:08:01.094177 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3956024646759033
I0123 15:08:02.795463 140012029288448 ddar.py:60] Depth 5/1000 time = 1.679441213607788
I0123 15:08:04.406607 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6109449863433838
I0123 15:08:04.416168 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:08:04.416257 140012029288448 alphageometry.py:566] LM output (score=-2.857993): "n : T b h g n 17 ;"
I0123 15:08:04.416292 140012029288448 alphageometry.py:567] Translation: "n = on_tline n g b h"

I0123 15:08:04.416343 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n g b h ? coll l d e"
I0123 15:08:04.416529 140012029288448 graph.py:498] 
I0123 15:08:04.416591 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n g b h ? coll l d e
I0123 15:08:05.114780 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6661126613616943
I0123 15:08:07.926815 140012029288448 ddar.py:60] Depth 2/1000 time = 2.8118762969970703
I0123 15:08:09.240940 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3139514923095703
I0123 15:08:10.632696 140012029288448 ddar.py:60] Depth 4/1000 time = 1.391568899154663
I0123 15:08:12.383024 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7257208824157715
I0123 15:08:14.024539 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6412200927734375
I0123 15:08:14.034154 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:08:14.034241 140012029288448 alphageometry.py:566] LM output (score=-2.950691): "n : T a n b h 17 ;"
I0123 15:08:14.034277 140012029288448 alphageometry.py:567] Translation: "n = on_tline n a b h"

I0123 15:08:14.034328 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n a b h ? coll l d e"
I0123 15:08:14.034519 140012029288448 graph.py:498] 
I0123 15:08:14.034583 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n a b h ? coll l d e
I0123 15:08:14.731260 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6648740768432617
I0123 15:08:17.500395 140012029288448 ddar.py:60] Depth 2/1000 time = 2.7689831256866455
I0123 15:08:18.803136 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3025765419006348
I0123 15:08:20.196757 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3934452533721924
I0123 15:08:21.910707 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6900811195373535
I0123 15:08:23.546844 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6359548568725586
I0123 15:08:23.556492 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:08:23.556558 140012029288448 alphageometry.py:566] LM output (score=-2.969823): "n : P c g m n 17 P c m g n 18 ;"
I0123 15:08:23.556595 140012029288448 alphageometry.py:567] Translation: "n = on_pline n m c g, on_pline n g c m"

I0123 15:08:23.556632 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_pline n m c g, on_pline n g c m ? coll l d e"
I0123 15:08:23.556793 140012029288448 graph.py:498] 
I0123 15:08:23.556851 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_pline n m c g, on_pline n g c m ? coll l d e
I0123 15:08:24.340977 140012029288448 ddar.py:60] Depth 1/1000 time = 0.7424004077911377
I0123 15:08:27.732321 140012029288448 ddar.py:60] Depth 2/1000 time = 3.3910744190216064
I0123 15:08:29.676376 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9438748359680176
I0123 15:08:31.678702 140012029288448 ddar.py:60] Depth 4/1000 time = 2.002147674560547
I0123 15:08:34.057840 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3584911823272705
I0123 15:08:36.350225 140012029288448 ddar.py:60] Depth 6/1000 time = 2.292207717895508
I0123 15:08:36.364519 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:08:36.364597 140012029288448 alphageometry.py:566] LM output (score=-3.005721): "n : C e i n 17 D e n i n 18 ;"
I0123 15:08:36.364634 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_bline n i e"

I0123 15:08:36.364674 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_line n e i, on_bline n i e ? coll l d e"
I0123 15:08:36.364841 140012029288448 graph.py:498] 
I0123 15:08:36.364899 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_line n e i, on_bline n i e ? coll l d e
I0123 15:08:38.944133 140012029288448 ddar.py:60] Depth 1/1000 time = 2.540759563446045
I0123 15:08:39.968116 140012029288448 ddar.py:60] Depth 2/1000 time = 1.0237009525299072
I0123 15:08:41.273262 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3049354553222656
I0123 15:08:42.644084 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3706459999084473
I0123 15:08:43.995161 140012029288448 ddar.py:60] Depth 5/1000 time = 1.3506743907928467
I0123 15:08:45.647454 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6349239349365234
I0123 15:08:48.946521 140012029288448 ddar.py:60] Depth 7/1000 time = 3.298881769180298
I0123 15:08:48.955803 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:08:48.955882 140012029288448 alphageometry.py:566] LM output (score=-3.010583): "n : T f h h n 17 ;"
I0123 15:08:48.955921 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h f h"

I0123 15:08:48.955960 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n h f h ? coll l d e"
I0123 15:08:48.956115 140012029288448 graph.py:498] 
I0123 15:08:48.956170 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n h f h ? coll l d e
I0123 15:08:49.650316 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6626296043395996
I0123 15:08:50.628621 140012029288448 ddar.py:60] Depth 2/1000 time = 0.978156566619873
I0123 15:08:51.939815 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3110291957855225
I0123 15:08:53.399487 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4595026969909668
I0123 15:08:55.215455 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7901604175567627
I0123 15:08:58.678472 140012029288448 ddar.py:60] Depth 6/1000 time = 3.4628114700317383
I0123 15:08:58.688632 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:08:58.688692 140012029288448 alphageometry.py:566] LM output (score=-3.012516): "n : T e g e n 17 ;"
I0123 15:08:58.688727 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e g"

I0123 15:08:58.688768 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n e e g ? coll l d e"
I0123 15:08:58.688925 140012029288448 graph.py:498] 
I0123 15:08:58.688981 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n e e g ? coll l d e
I0123 15:08:59.416910 140012029288448 ddar.py:60] Depth 1/1000 time = 0.69504714012146
I0123 15:09:00.478219 140012029288448 ddar.py:60] Depth 2/1000 time = 1.0609347820281982
I0123 15:09:01.897925 140012029288448 ddar.py:60] Depth 3/1000 time = 1.4193229675292969
I0123 15:09:03.410962 140012029288448 ddar.py:60] Depth 4/1000 time = 1.5125184059143066
I0123 15:09:05.245762 140012029288448 ddar.py:60] Depth 5/1000 time = 1.8116309642791748
I0123 15:09:09.592354 140012029288448 ddar.py:60] Depth 6/1000 time = 4.345458507537842
I0123 15:09:09.603172 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:09:09.603305 140012029288448 alphageometry.py:566] LM output (score=-3.031197): "n : T c m i n 17 ;"
I0123 15:09:09.603345 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i c m"

I0123 15:09:09.603401 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n i c m ? coll l d e"
I0123 15:09:09.603615 140012029288448 graph.py:498] 
I0123 15:09:09.603695 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n i c m ? coll l d e
I0123 15:09:10.306120 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6659629344940186
I0123 15:09:11.256901 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9505796432495117
I0123 15:09:12.495743 140012029288448 ddar.py:60] Depth 3/1000 time = 1.2385575771331787
I0123 15:09:13.776617 140012029288448 ddar.py:60] Depth 4/1000 time = 1.280491828918457
I0123 15:09:15.360036 140012029288448 ddar.py:60] Depth 5/1000 time = 1.5653314590454102
I0123 15:09:16.852787 140012029288448 ddar.py:60] Depth 6/1000 time = 1.49245285987854
I0123 15:09:16.862455 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:09:16.862628 140012029288448 alphageometry.py:566] LM output (score=-3.036576): "n : T c m c n 17 ;"
I0123 15:09:16.862672 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c m"

I0123 15:09:16.862731 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n c c m ? coll l d e"
I0123 15:09:16.862951 140012029288448 graph.py:498] 
I0123 15:09:16.863024 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n c c m ? coll l d e
I0123 15:09:19.624666 140012029288448 ddar.py:60] Depth 1/1000 time = 2.7298583984375
I0123 15:09:20.614700 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9897720813751221
I0123 15:09:21.895352 140012029288448 ddar.py:60] Depth 3/1000 time = 1.280280351638794
I0123 15:09:23.246120 140012029288448 ddar.py:60] Depth 4/1000 time = 1.350503921508789
I0123 15:09:24.873953 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6111576557159424
I0123 15:09:28.404346 140012029288448 ddar.py:60] Depth 6/1000 time = 3.5300137996673584
I0123 15:09:28.412984 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:09:28.413053 140012029288448 alphageometry.py:566] LM output (score=-3.039528): "n : T e i i n 17 ;"
I0123 15:09:28.413090 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i e i"

I0123 15:09:28.413130 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n i e i ? coll l d e"
I0123 15:09:28.413295 140012029288448 graph.py:498] 
I0123 15:09:28.413359 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n i e i ? coll l d e
I0123 15:09:29.119794 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6731998920440674
I0123 15:09:30.104021 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9840025901794434
I0123 15:09:31.427614 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3233203887939453
I0123 15:09:32.817253 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3892719745635986
I0123 15:09:34.532120 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6931531429290771
I0123 15:09:36.161625 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6292846202850342
I0123 15:09:36.171305 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:09:36.171405 140012029288448 alphageometry.py:566] LM output (score=-3.070961): "n : T h i i n 17 ;"
I0123 15:09:36.171442 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i h i"

I0123 15:09:36.171501 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n i h i ? coll l d e"
I0123 15:09:36.171715 140012029288448 graph.py:498] 
I0123 15:09:36.171787 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n i h i ? coll l d e
I0123 15:09:38.910928 140012029288448 ddar.py:60] Depth 1/1000 time = 2.7062244415283203
I0123 15:09:39.867992 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9567022323608398
I0123 15:09:41.130600 140012029288448 ddar.py:60] Depth 3/1000 time = 1.262359857559204
I0123 15:09:42.449513 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3186566829681396
I0123 15:09:44.040506 140012029288448 ddar.py:60] Depth 5/1000 time = 1.5739011764526367
I0123 15:09:45.543835 140012029288448 ddar.py:60] Depth 6/1000 time = 1.5030882358551025
I0123 15:09:45.553893 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:09:45.553995 140012029288448 alphageometry.py:566] LM output (score=-3.105246): "n : T g i g n 17 ;"
I0123 15:09:45.554032 140012029288448 alphageometry.py:567] Translation: "n = on_tline n g g i"

I0123 15:09:45.554091 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n g g i ? coll l d e"
I0123 15:09:45.554305 140012029288448 graph.py:498] 
I0123 15:09:45.554372 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n g g i ? coll l d e
I0123 15:09:48.225592 140012029288448 ddar.py:60] Depth 1/1000 time = 2.636842727661133
I0123 15:09:49.180210 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9542474746704102
I0123 15:09:50.419792 140012029288448 ddar.py:60] Depth 3/1000 time = 1.2393162250518799
I0123 15:09:51.721000 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3009612560272217
I0123 15:09:53.297983 140012029288448 ddar.py:60] Depth 5/1000 time = 1.5598230361938477
I0123 15:09:54.800721 140012029288448 ddar.py:60] Depth 6/1000 time = 1.5024991035461426
I0123 15:09:54.810456 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:09:54.810583 140012029288448 alphageometry.py:566] LM output (score=-3.143173): "n : D e g g n 17 ;"
I0123 15:09:54.810620 140012029288448 alphageometry.py:567] Translation: "n = on_circle n g e"

I0123 15:09:54.810680 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_circle n g e ? coll l d e"
I0123 15:09:54.810887 140012029288448 graph.py:498] 
I0123 15:09:54.810955 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_circle n g e ? coll l d e
I0123 15:09:55.618513 140012029288448 ddar.py:60] Depth 1/1000 time = 0.7731609344482422
I0123 15:09:58.778415 140012029288448 ddar.py:60] Depth 2/1000 time = 3.1596829891204834
I0123 15:10:00.400751 140012029288448 ddar.py:60] Depth 3/1000 time = 1.622046709060669
I0123 15:10:02.100986 140012029288448 ddar.py:60] Depth 4/1000 time = 1.6998026371002197
I0123 15:10:04.172772 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0503854751586914
I0123 15:10:06.125990 140012029288448 ddar.py:60] Depth 6/1000 time = 1.9529893398284912
I0123 15:10:06.136560 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:10:06.136667 140012029288448 alphageometry.py:566] LM output (score=-3.146293): "n : T d e e n 17 ;"
I0123 15:10:06.136704 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e d e"

I0123 15:10:06.136765 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n e d e ? coll l d e"
I0123 15:10:06.136984 140012029288448 graph.py:498] 
I0123 15:10:06.137051 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n e d e ? coll l d e
I0123 15:10:08.807221 140012029288448 ddar.py:60] Depth 1/1000 time = 2.6372463703155518
I0123 15:10:09.806587 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9991366863250732
I0123 15:10:11.133876 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3270618915557861
I0123 15:10:12.556755 140012029288448 ddar.py:60] Depth 4/1000 time = 1.4225647449493408
I0123 15:10:14.392665 140012029288448 ddar.py:60] Depth 5/1000 time = 1.8098082542419434
I0123 15:10:16.110021 140012029288448 ddar.py:60] Depth 6/1000 time = 1.7171030044555664
I0123 15:10:16.119784 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:10:16.119876 140012029288448 alphageometry.py:566] LM output (score=-3.168803): "n : T c n e i 17 ;"
I0123 15:10:16.119912 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c e i"

I0123 15:10:16.119970 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n c e i ? coll l d e"
I0123 15:10:16.120194 140012029288448 graph.py:498] 
I0123 15:10:16.120266 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n c e i ? coll l d e
I0123 15:10:16.813188 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6598663330078125
I0123 15:10:19.677182 140012029288448 ddar.py:60] Depth 2/1000 time = 2.8637750148773193
I0123 15:10:20.955393 140012029288448 ddar.py:60] Depth 3/1000 time = 1.2779858112335205
I0123 15:10:22.329417 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3737728595733643
I0123 15:10:24.012625 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6618812084197998
I0123 15:10:25.610223 140012029288448 ddar.py:60] Depth 6/1000 time = 1.5973634719848633
I0123 15:10:25.620338 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:10:25.620412 140012029288448 alphageometry.py:566] LM output (score=-3.196208): "n : T b n e i 17 ;"
I0123 15:10:25.620448 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b e i"

I0123 15:10:25.620488 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n b e i ? coll l d e"
I0123 15:10:25.620648 140012029288448 graph.py:498] 
I0123 15:10:25.620698 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n b e i ? coll l d e
I0123 15:10:26.311004 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6585254669189453
I0123 15:10:29.220666 140012029288448 ddar.py:60] Depth 2/1000 time = 2.909396171569824
I0123 15:10:30.524073 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3030424118041992
I0123 15:10:31.893806 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3694343566894531
I0123 15:10:33.579836 140012029288448 ddar.py:60] Depth 5/1000 time = 1.6646430492401123
I0123 15:10:35.179910 140012029288448 ddar.py:60] Depth 6/1000 time = 1.599830150604248
I0123 15:10:35.189519 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:10:35.189605 140012029288448 alphageometry.py:566] LM output (score=-3.204109): "n : T l k l n 17 ;"
I0123 15:10:35.189650 140012029288448 alphageometry.py:567] Translation: "n = on_tline n l l k"

I0123 15:10:35.189711 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n l l k ? coll l d e"
I0123 15:10:35.189903 140012029288448 graph.py:498] 
I0123 15:10:35.189962 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n l l k ? coll l d e
I0123 15:10:35.914412 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6915252208709717
I0123 15:10:36.866464 140012029288448 ddar.py:60] Depth 2/1000 time = 0.951833963394165
I0123 15:10:39.985241 140012029288448 ddar.py:60] Depth 3/1000 time = 3.1185495853424072
I0123 15:10:41.308496 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3229966163635254
I0123 15:10:42.887053 140012029288448 ddar.py:60] Depth 5/1000 time = 1.5604095458984375
I0123 15:10:44.380996 140012029288448 ddar.py:60] Depth 6/1000 time = 1.4937047958374023
I0123 15:10:44.390151 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:10:44.390230 140012029288448 alphageometry.py:566] LM output (score=-3.213425): "n : T e f e n 17 ;"
I0123 15:10:44.390266 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e f"

I0123 15:10:44.390305 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n e e f ? coll l d e"
I0123 15:10:44.390494 140012029288448 graph.py:498] 
I0123 15:10:44.390547 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n e e f ? coll l d e
I0123 15:10:45.094860 140012029288448 ddar.py:60] Depth 1/1000 time = 0.6720542907714844
I0123 15:10:46.102175 140012029288448 ddar.py:60] Depth 2/1000 time = 1.0069005489349365
I0123 15:10:49.432088 140012029288448 ddar.py:60] Depth 3/1000 time = 3.3296685218811035
I0123 15:10:50.827660 140012029288448 ddar.py:60] Depth 4/1000 time = 1.3952839374542236
I0123 15:10:52.651663 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7980525493621826
I0123 15:10:54.371932 140012029288448 ddar.py:60] Depth 6/1000 time = 1.720029592514038
I0123 15:10:54.382088 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:10:54.382155 140012029288448 alphageometry.py:566] LM output (score=-3.308105): "n : T b n c e 17 ;"
I0123 15:10:54.382191 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b c e"

I0123 15:10:54.382232 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n b c e ? coll l d e"
I0123 15:10:54.382396 140012029288448 graph.py:498] 
I0123 15:10:54.382455 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_tline m c c g; n = on_tline n b c e ? coll l d e
I0123 15:10:55.084903 140012029288448 ddar.py:60] Depth 1/1000 time = 0.669391393661499
I0123 15:10:56.071225 140012029288448 ddar.py:60] Depth 2/1000 time = 0.9861171245574951
I0123 15:10:57.407611 140012029288448 ddar.py:60] Depth 3/1000 time = 1.3361623287200928
I0123 15:11:00.668331 140012029288448 ddar.py:60] Depth 4/1000 time = 3.2604682445526123
I0123 15:11:02.413498 140012029288448 ddar.py:60] Depth 5/1000 time = 1.7215626239776611
I0123 15:11:04.074363 140012029288448 ddar.py:60] Depth 6/1000 time = 1.6606056690216064
I0123 15:11:04.084028 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:11:04.084170 140012029288448 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C c g m 16 D c g g m 17 ; x00
I0123 15:11:10.002520 140012029288448 alphageometry.py:566] LM output (score=-1.664291): "n : T c e e n 18 ;"
I0123 15:11:10.002728 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c e"

I0123 15:11:10.002780 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n e c e ? coll l d e"
I0123 15:11:10.002941 140012029288448 graph.py:498] 
I0123 15:11:10.003002 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n e c e ? coll l d e
I0123 15:11:11.022531 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9855408668518066
I0123 15:11:12.736251 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7134974002838135
I0123 15:11:16.710816 140012029288448 ddar.py:60] Depth 3/1000 time = 3.9742565155029297
I0123 15:11:18.752573 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0413427352905273
I0123 15:11:20.766121 140012029288448 ddar.py:60] Depth 5/1000 time = 2.01300311088562
I0123 15:11:23.242759 140012029288448 ddar.py:60] Depth 6/1000 time = 2.450239419937134
I0123 15:11:27.464026 140012029288448 ddar.py:60] Depth 7/1000 time = 4.221017122268677
I0123 15:11:27.475592 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:11:27.475650 140012029288448 alphageometry.py:566] LM output (score=-2.001420): "n : C e i n 18 D e i i n 19 ;"
I0123 15:11:27.475687 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_circle n i e"

I0123 15:11:27.475723 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n e i, on_circle n i e ? coll l d e"
I0123 15:11:27.475896 140012029288448 graph.py:498] 
I0123 15:11:27.475957 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n e i, on_circle n i e ? coll l d e
I0123 15:11:28.827551 140012029288448 ddar.py:60] Depth 1/1000 time = 1.312213659286499
I0123 15:11:30.750664 140012029288448 ddar.py:60] Depth 2/1000 time = 1.922884225845337
I0123 15:11:35.357273 140012029288448 ddar.py:60] Depth 3/1000 time = 4.606375455856323
I0123 15:11:38.186504 140012029288448 ddar.py:60] Depth 4/1000 time = 2.828986167907715
I0123 15:11:41.027103 140012029288448 ddar.py:60] Depth 5/1000 time = 2.840332508087158
I0123 15:11:43.888039 140012029288448 ddar.py:60] Depth 6/1000 time = 2.8604555130004883
I0123 15:11:49.020343 140012029288448 ddar.py:60] Depth 7/1000 time = 5.09297513961792
I0123 15:11:52.233454 140012029288448 ddar.py:60] Depth 8/1000 time = 3.2128584384918213
I0123 15:11:52.248903 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:11:52.248970 140012029288448 alphageometry.py:566] LM output (score=-2.144372): "n : T c e c n 18 ;"
I0123 15:11:52.249007 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c e"

I0123 15:11:52.249052 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n c c e ? coll l d e"
I0123 15:11:52.249404 140012029288448 graph.py:498] 
I0123 15:11:52.249458 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n c c e ? coll l d e
I0123 15:11:53.274019 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9880304336547852
I0123 15:11:54.911098 140012029288448 ddar.py:60] Depth 2/1000 time = 1.636850357055664
I0123 15:11:58.709235 140012029288448 ddar.py:60] Depth 3/1000 time = 3.797896385192871
I0123 15:12:00.699747 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9902434349060059
I0123 15:12:02.661375 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9611449241638184
I0123 15:12:05.068921 140012029288448 ddar.py:60] Depth 6/1000 time = 2.3815040588378906
I0123 15:12:09.323819 140012029288448 ddar.py:60] Depth 7/1000 time = 4.2544848918914795
I0123 15:12:09.335450 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:12:09.335516 140012029288448 alphageometry.py:566] LM output (score=-2.166597): "n : T e i e n 18 ;"
I0123 15:12:09.335551 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e i"

I0123 15:12:09.335591 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n e e i ? coll l d e"
I0123 15:12:09.335759 140012029288448 graph.py:498] 
I0123 15:12:09.335819 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n e e i ? coll l d e
I0123 15:12:10.333844 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9618253707885742
I0123 15:12:11.740373 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4063076972961426
I0123 15:12:13.716737 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9761171340942383
I0123 15:12:15.870643 140012029288448 ddar.py:60] Depth 4/1000 time = 2.1536166667938232
I0123 15:12:19.840131 140012029288448 ddar.py:60] Depth 5/1000 time = 3.9692368507385254
I0123 15:12:21.956912 140012029288448 ddar.py:60] Depth 6/1000 time = 2.116260528564453
I0123 15:12:24.443557 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4556477069854736
I0123 15:12:26.865656 140012029288448 ddar.py:60] Depth 8/1000 time = 2.4216854572296143
I0123 15:12:26.878632 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:12:26.878735 140012029288448 alphageometry.py:566] LM output (score=-2.304559): "n : T c m c n 18 ;"
I0123 15:12:26.878772 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c m"

I0123 15:12:26.878833 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n c c m ? coll l d e"
I0123 15:12:26.879063 140012029288448 graph.py:498] 
I0123 15:12:26.879138 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n c c m ? coll l d e
I0123 15:12:29.861610 140012029288448 ddar.py:60] Depth 1/1000 time = 2.947054624557495
I0123 15:12:31.519659 140012029288448 ddar.py:60] Depth 2/1000 time = 1.657792568206787
I0123 15:12:33.493326 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9734303951263428
I0123 15:12:35.559132 140012029288448 ddar.py:60] Depth 4/1000 time = 2.065521001815796
I0123 15:12:37.617807 140012029288448 ddar.py:60] Depth 5/1000 time = 2.058143138885498
I0123 15:12:42.061403 140012029288448 ddar.py:60] Depth 6/1000 time = 4.411703109741211
I0123 15:12:44.472248 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4105682373046875
I0123 15:12:44.484739 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:12:44.484832 140012029288448 alphageometry.py:566] LM output (score=-2.313992): "n : T b h b n 18 ;"
I0123 15:12:44.484874 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b h"

I0123 15:12:44.484915 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n b b h ? coll l d e"
I0123 15:12:44.485118 140012029288448 graph.py:498] 
I0123 15:12:44.485184 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n b b h ? coll l d e
I0123 15:12:45.486543 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9668314456939697
I0123 15:12:47.090287 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6033687591552734
I0123 15:12:49.093823 140012029288448 ddar.py:60] Depth 3/1000 time = 2.0032553672790527
I0123 15:12:53.112040 140012029288448 ddar.py:60] Depth 4/1000 time = 4.017975330352783
I0123 15:12:55.242460 140012029288448 ddar.py:60] Depth 5/1000 time = 2.1301815509796143
I0123 15:12:57.352139 140012029288448 ddar.py:60] Depth 6/1000 time = 2.10915207862854
I0123 15:12:59.871904 140012029288448 ddar.py:60] Depth 7/1000 time = 2.488494873046875
I0123 15:13:04.248440 140012029288448 ddar.py:60] Depth 8/1000 time = 4.376266241073608
I0123 15:13:04.261483 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:13:04.261554 140012029288448 alphageometry.py:566] LM output (score=-2.465105): "n : T c m h n 18 ;"
I0123 15:13:04.261593 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h c m"

I0123 15:13:04.261634 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n h c m ? coll l d e"
I0123 15:13:04.261824 140012029288448 graph.py:498] 
I0123 15:13:04.261894 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n h c m ? coll l d e
I0123 15:13:05.271287 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9743325710296631
I0123 15:13:06.875150 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6035609245300293
I0123 15:13:08.809745 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9341847896575928
I0123 15:13:10.854616 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0445311069488525
I0123 15:13:14.850687 140012029288448 ddar.py:60] Depth 5/1000 time = 3.995507001876831
I0123 15:13:17.321916 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4373254776000977
I0123 15:13:19.700569 140012029288448 ddar.py:60] Depth 7/1000 time = 2.378384828567505
I0123 15:13:19.713747 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:13:19.713823 140012029288448 alphageometry.py:566] LM output (score=-2.568962): "n : C c i n 18 D c n i n 19 ;"
I0123 15:13:19.713862 140012029288448 alphageometry.py:567] Translation: "n = on_line n c i, on_bline n i c"

I0123 15:13:19.713904 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n c i, on_bline n i c ? coll l d e"
I0123 15:13:19.714085 140012029288448 graph.py:498] 
I0123 15:13:19.714151 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n c i, on_bline n i c ? coll l d e
I0123 15:13:20.846026 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0884754657745361
I0123 15:13:22.596650 140012029288448 ddar.py:60] Depth 2/1000 time = 1.75038743019104
I0123 15:13:26.629387 140012029288448 ddar.py:60] Depth 3/1000 time = 4.032469034194946
I0123 15:13:28.751351 140012029288448 ddar.py:60] Depth 4/1000 time = 2.121582508087158
I0123 15:13:30.883881 140012029288448 ddar.py:60] Depth 5/1000 time = 2.131821632385254
I0123 15:13:33.493853 140012029288448 ddar.py:60] Depth 6/1000 time = 2.583723783493042
I0123 15:13:37.981156 140012029288448 ddar.py:60] Depth 7/1000 time = 4.487035751342773
I0123 15:13:37.997427 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:13:37.997563 140012029288448 alphageometry.py:566] LM output (score=-2.592654): "n : T c m j n 18 ;"
I0123 15:13:37.997610 140012029288448 alphageometry.py:567] Translation: "n = on_tline n j c m"

I0123 15:13:37.997661 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n j c m ? coll l d e"
I0123 15:13:37.997839 140012029288448 graph.py:498] 
I0123 15:13:37.997904 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n j c m ? coll l d e
I0123 15:13:39.001155 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9677093029022217
I0123 15:13:40.601398 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5999982357025146
I0123 15:13:42.495513 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8938567638397217
I0123 15:13:44.523163 140012029288448 ddar.py:60] Depth 4/1000 time = 2.027352809906006
I0123 15:13:48.516891 140012029288448 ddar.py:60] Depth 5/1000 time = 3.9931349754333496
I0123 15:13:50.969791 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4203572273254395
I0123 15:13:53.351197 140012029288448 ddar.py:60] Depth 7/1000 time = 2.3811089992523193
I0123 15:13:53.363500 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:13:53.363608 140012029288448 alphageometry.py:566] LM output (score=-2.611213): "n : T c m i n 18 ;"
I0123 15:13:53.363648 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i c m"

I0123 15:13:53.363713 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n i c m ? coll l d e"
I0123 15:13:53.363933 140012029288448 graph.py:498] 
I0123 15:13:53.364012 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n i c m ? coll l d e
I0123 15:13:54.378806 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9786009788513184
I0123 15:13:55.773498 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3944568634033203
I0123 15:13:59.629396 140012029288448 ddar.py:60] Depth 3/1000 time = 3.8556461334228516
I0123 15:14:01.663536 140012029288448 ddar.py:60] Depth 4/1000 time = 2.033827781677246
I0123 15:14:03.671718 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0076498985290527
I0123 15:14:06.235248 140012029288448 ddar.py:60] Depth 6/1000 time = 2.5313720703125
I0123 15:14:10.660073 140012029288448 ddar.py:60] Depth 7/1000 time = 4.424320459365845
I0123 15:14:10.672975 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:14:10.673098 140012029288448 alphageometry.py:566] LM output (score=-2.670591): "n : T e f f n 18 ;"
I0123 15:14:10.673139 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f e f"

I0123 15:14:10.673202 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n f e f ? coll l d e"
I0123 15:14:10.673391 140012029288448 graph.py:498] 
I0123 15:14:10.673457 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n f e f ? coll l d e
I0123 15:14:11.684860 140012029288448 ddar.py:60] Depth 1/1000 time = 0.975881814956665
I0123 15:14:13.285704 140012029288448 ddar.py:60] Depth 2/1000 time = 1.600611925125122
I0123 15:14:15.241617 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9556665420532227
I0123 15:14:17.308874 140012029288448 ddar.py:60] Depth 4/1000 time = 2.066970109939575
I0123 15:14:21.281479 140012029288448 ddar.py:60] Depth 5/1000 time = 3.972059488296509
I0123 15:14:23.912910 140012029288448 ddar.py:60] Depth 6/1000 time = 2.5978758335113525
I0123 15:14:26.438293 140012029288448 ddar.py:60] Depth 7/1000 time = 2.5251266956329346
I0123 15:14:26.451140 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:14:26.451219 140012029288448 alphageometry.py:566] LM output (score=-2.710798): "n : T c d c n 18 ;"
I0123 15:14:26.451259 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c d"

I0123 15:14:26.451304 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n c c d ? coll l d e"
I0123 15:14:26.451466 140012029288448 graph.py:498] 
I0123 15:14:26.451525 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n c c d ? coll l d e
I0123 15:14:27.466753 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9808049201965332
I0123 15:14:28.930913 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4639153480529785
I0123 15:14:32.876946 140012029288448 ddar.py:60] Depth 3/1000 time = 3.9457480907440186
I0123 15:14:34.847533 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9702365398406982
I0123 15:14:36.787155 140012029288448 ddar.py:60] Depth 5/1000 time = 1.939056396484375
I0123 15:14:39.193989 140012029288448 ddar.py:60] Depth 6/1000 time = 2.380500555038452
I0123 15:14:43.464320 140012029288448 ddar.py:60] Depth 7/1000 time = 4.270070791244507
I0123 15:14:43.475973 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:14:43.476052 140012029288448 alphageometry.py:566] LM output (score=-2.713413): "n : T c e h n 18 ;"
I0123 15:14:43.476092 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h c e"

I0123 15:14:43.476136 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n h c e ? coll l d e"
I0123 15:14:43.476308 140012029288448 graph.py:498] 
I0123 15:14:43.476371 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n h c e ? coll l d e
I0123 15:14:44.482345 140012029288448 ddar.py:60] Depth 1/1000 time = 0.971121072769165
I0123 15:14:46.117888 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6353046894073486
I0123 15:14:47.994616 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8764784336090088
I0123 15:14:49.975998 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9810802936553955
I0123 15:14:54.057834 140012029288448 ddar.py:60] Depth 5/1000 time = 4.081273078918457
I0123 15:14:56.429158 140012029288448 ddar.py:60] Depth 6/1000 time = 2.345089912414551
I0123 15:14:58.733822 140012029288448 ddar.py:60] Depth 7/1000 time = 2.3044021129608154
I0123 15:14:58.746216 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:14:58.746289 140012029288448 alphageometry.py:566] LM output (score=-2.782944): "n : C f i n 18 D f i i n 19 ;"
I0123 15:14:58.746328 140012029288448 alphageometry.py:567] Translation: "n = on_line n f i, on_circle n i f"

I0123 15:14:58.746374 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n f i, on_circle n i f ? coll l d e"
I0123 15:14:58.746548 140012029288448 graph.py:498] 
I0123 15:14:58.746613 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n f i, on_circle n i f ? coll l d e
I0123 15:14:59.943321 140012029288448 ddar.py:60] Depth 1/1000 time = 1.1567740440368652
I0123 15:15:01.897361 140012029288448 ddar.py:60] Depth 2/1000 time = 1.953791856765747
I0123 15:15:06.752670 140012029288448 ddar.py:60] Depth 3/1000 time = 4.855020523071289
I0123 15:15:09.789179 140012029288448 ddar.py:60] Depth 4/1000 time = 3.0361995697021484
I0123 15:15:12.836349 140012029288448 ddar.py:60] Depth 5/1000 time = 3.0466370582580566
I0123 15:15:18.561588 140012029288448 ddar.py:60] Depth 6/1000 time = 5.67851185798645
I0123 15:15:22.097148 140012029288448 ddar.py:60] Depth 7/1000 time = 3.5352275371551514
I0123 15:15:22.114790 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:15:22.114870 140012029288448 alphageometry.py:566] LM output (score=-2.829034): "n : C e i n 18 D e n i n 19 ;"
I0123 15:15:22.114909 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_bline n i e"

I0123 15:15:22.114956 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n e i, on_bline n i e ? coll l d e"
I0123 15:15:22.115135 140012029288448 graph.py:498] 
I0123 15:15:22.115200 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n e i, on_bline n i e ? coll l d e
I0123 15:15:23.209683 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0499162673950195
I0123 15:15:24.629738 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4198060035705566
I0123 15:15:28.480454 140012029288448 ddar.py:60] Depth 3/1000 time = 3.850461006164551
I0123 15:15:30.406448 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9256932735443115
I0123 15:15:32.332067 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9251222610473633
I0123 15:15:34.714172 140012029288448 ddar.py:60] Depth 6/1000 time = 2.357429265975952
I0123 15:15:37.072323 140012029288448 ddar.py:60] Depth 7/1000 time = 2.3578288555145264
I0123 15:15:37.084535 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:15:37.084643 140012029288448 alphageometry.py:566] LM output (score=-2.838417): "n : T c e i n 18 ;"
I0123 15:15:37.084683 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i c e"

I0123 15:15:37.084744 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n i c e ? coll l d e"
I0123 15:15:37.084965 140012029288448 graph.py:498] 
I0123 15:15:37.085045 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n i c e ? coll l d e
I0123 15:15:40.154163 140012029288448 ddar.py:60] Depth 1/1000 time = 3.034111976623535
I0123 15:15:41.792098 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6376440525054932
I0123 15:15:43.677264 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8849077224731445
I0123 15:15:45.647895 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9703257083892822
I0123 15:15:47.583527 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9351019859313965
I0123 15:15:51.969675 140012029288448 ddar.py:60] Depth 6/1000 time = 4.3593549728393555
I0123 15:15:54.548096 140012029288448 ddar.py:60] Depth 7/1000 time = 2.578153610229492
I0123 15:15:57.124057 140012029288448 ddar.py:60] Depth 8/1000 time = 2.5756614208221436
I0123 15:15:59.723988 140012029288448 ddar.py:60] Depth 9/1000 time = 2.5829200744628906
I0123 15:15:59.724446 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:15:59.724572 140012029288448 alphageometry.py:566] LM output (score=-2.857047): "n : C h i n 18 D h i i n 19 ;"
I0123 15:15:59.724613 140012029288448 alphageometry.py:567] Translation: "n = on_line n h i, on_circle n i h"

I0123 15:15:59.724673 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n h i, on_circle n i h ? coll l d e"
I0123 15:15:59.724908 140012029288448 graph.py:498] 
I0123 15:15:59.724986 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n h i, on_circle n i h ? coll l d e
I0123 15:16:03.039530 140012029288448 ddar.py:60] Depth 1/1000 time = 3.2703003883361816
I0123 15:16:04.865907 140012029288448 ddar.py:60] Depth 2/1000 time = 1.826097011566162
I0123 15:16:06.932268 140012029288448 ddar.py:60] Depth 3/1000 time = 2.0660951137542725
I0123 15:16:11.060372 140012029288448 ddar.py:60] Depth 4/1000 time = 4.127820253372192
I0123 15:16:13.222226 140012029288448 ddar.py:60] Depth 5/1000 time = 2.161391496658325
I0123 15:16:15.820626 140012029288448 ddar.py:60] Depth 6/1000 time = 2.572603464126587
I0123 15:16:20.250997 140012029288448 ddar.py:60] Depth 7/1000 time = 4.4301018714904785
I0123 15:16:20.263361 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:16:20.263441 140012029288448 alphageometry.py:566] LM output (score=-2.870071): "n : C h i n 18 D h n i n 19 ;"
I0123 15:16:20.263505 140012029288448 alphageometry.py:567] Translation: "n = on_line n h i, on_bline n i h"

I0123 15:16:20.263548 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n h i, on_bline n i h ? coll l d e"
I0123 15:16:20.263728 140012029288448 graph.py:498] 
I0123 15:16:20.263793 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n h i, on_bline n i h ? coll l d e
I0123 15:16:21.526499 140012029288448 ddar.py:60] Depth 1/1000 time = 1.2191965579986572
I0123 15:16:23.260151 140012029288448 ddar.py:60] Depth 2/1000 time = 1.733278512954712
I0123 15:16:27.565621 140012029288448 ddar.py:60] Depth 3/1000 time = 4.305192947387695
I0123 15:16:29.953285 140012029288448 ddar.py:60] Depth 4/1000 time = 2.3873445987701416
I0123 15:16:34.305969 140012029288448 ddar.py:60] Depth 5/1000 time = 4.352203130722046
I0123 15:16:37.155488 140012029288448 ddar.py:60] Depth 6/1000 time = 2.8243560791015625
I0123 15:16:39.909414 140012029288448 ddar.py:60] Depth 7/1000 time = 2.753673553466797
I0123 15:16:39.922018 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:16:39.922098 140012029288448 alphageometry.py:566] LM output (score=-2.881832): "n : C f i n 18 D f n i n 19 ;"
I0123 15:16:39.922140 140012029288448 alphageometry.py:567] Translation: "n = on_line n f i, on_bline n i f"

I0123 15:16:39.922182 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n f i, on_bline n i f ? coll l d e"
I0123 15:16:39.922362 140012029288448 graph.py:498] 
I0123 15:16:39.922426 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_line n f i, on_bline n i f ? coll l d e
I0123 15:16:43.047917 140012029288448 ddar.py:60] Depth 1/1000 time = 3.081819534301758
I0123 15:16:44.466451 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4182543754577637
I0123 15:16:46.308727 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8419146537780762
I0123 15:16:48.222918 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9139022827148438
I0123 15:16:50.144767 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9213216304779053
I0123 15:16:54.510751 140012029288448 ddar.py:60] Depth 6/1000 time = 4.341014862060547
I0123 15:16:56.808310 140012029288448 ddar.py:60] Depth 7/1000 time = 2.2973201274871826
I0123 15:16:56.819983 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:16:56.820040 140012029288448 alphageometry.py:566] LM output (score=-2.890368): "n : T f h f n 18 ;"
I0123 15:16:56.820075 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f f h"

I0123 15:16:56.820114 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n f f h ? coll l d e"
I0123 15:16:56.820289 140012029288448 graph.py:498] 
I0123 15:16:56.820350 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n f f h ? coll l d e
I0123 15:16:57.821813 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9644303321838379
I0123 15:16:59.233706 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4116463661193848
I0123 15:17:01.237909 140012029288448 ddar.py:60] Depth 3/1000 time = 2.0039684772491455
I0123 15:17:05.365703 140012029288448 ddar.py:60] Depth 4/1000 time = 4.127547740936279
I0123 15:17:07.497330 140012029288448 ddar.py:60] Depth 5/1000 time = 2.131284236907959
I0123 15:17:09.625513 140012029288448 ddar.py:60] Depth 6/1000 time = 2.1274614334106445
I0123 15:17:12.084125 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4275310039520264
I0123 15:17:16.513831 140012029288448 ddar.py:60] Depth 8/1000 time = 4.429475545883179
I0123 15:17:16.526761 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:17:16.526821 140012029288448 alphageometry.py:566] LM output (score=-2.903246): "n : T b f b n 18 ;"
I0123 15:17:16.526859 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b f"

I0123 15:17:16.526897 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n b b f ? coll l d e"
I0123 15:17:16.527069 140012029288448 graph.py:498] 
I0123 15:17:16.527129 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n b b f ? coll l d e
I0123 15:17:17.534464 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9722318649291992
I0123 15:17:18.931160 140012029288448 ddar.py:60] Depth 2/1000 time = 1.396472454071045
I0123 15:17:20.867503 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9361023902893066
I0123 15:17:22.927025 140012029288448 ddar.py:60] Depth 4/1000 time = 2.059252977371216
I0123 15:17:24.950030 140012029288448 ddar.py:60] Depth 5/1000 time = 2.022505044937134
I0123 15:17:29.574146 140012029288448 ddar.py:60] Depth 6/1000 time = 4.590750455856323
I0123 15:17:31.977746 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4032156467437744
I0123 15:17:31.990732 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:17:31.990821 140012029288448 alphageometry.py:566] LM output (score=-2.904056): "n : T c g c n 18 ;"
I0123 15:17:31.990857 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c g"

I0123 15:17:31.990920 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n c c g ? coll l d e"
I0123 15:17:31.991134 140012029288448 graph.py:498] 
I0123 15:17:31.991196 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n c c g ? coll l d e
I0123 15:17:33.010471 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9841594696044922
I0123 15:17:34.655961 140012029288448 ddar.py:60] Depth 2/1000 time = 1.6452765464782715
I0123 15:17:36.598175 140012029288448 ddar.py:60] Depth 3/1000 time = 1.941969633102417
I0123 15:17:40.622295 140012029288448 ddar.py:60] Depth 4/1000 time = 4.023850202560425
I0123 15:17:42.624582 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0017809867858887
I0123 15:17:45.121217 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4651784896850586
I0123 15:17:47.502297 140012029288448 ddar.py:60] Depth 7/1000 time = 2.380833387374878
I0123 15:17:47.514583 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:17:47.514661 140012029288448 alphageometry.py:566] LM output (score=-2.932706): "n : T c m f n 18 ;"
I0123 15:17:47.514697 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f c m"

I0123 15:17:47.514737 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n f c m ? coll l d e"
I0123 15:17:47.514899 140012029288448 graph.py:498] 
I0123 15:17:47.514951 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n f c m ? coll l d e
I0123 15:17:48.523170 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9739243984222412
I0123 15:17:52.181356 140012029288448 ddar.py:60] Depth 2/1000 time = 3.657918930053711
I0123 15:17:54.104575 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9228448867797852
I0123 15:17:56.131836 140012029288448 ddar.py:60] Depth 4/1000 time = 2.026949405670166
I0123 15:17:58.124316 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9919250011444092
I0123 15:18:02.667745 140012029288448 ddar.py:60] Depth 6/1000 time = 4.51017951965332
I0123 15:18:05.014574 140012029288448 ddar.py:60] Depth 7/1000 time = 2.34658145904541
I0123 15:18:05.027611 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:18:05.027670 140012029288448 alphageometry.py:566] LM output (score=-2.991096): "n : D c g g n 18 ;"
I0123 15:18:05.027706 140012029288448 alphageometry.py:567] Translation: "n = on_circle n g c"

I0123 15:18:05.027747 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_circle n g c ? coll l d e"
I0123 15:18:05.027920 140012029288448 graph.py:498] 
I0123 15:18:05.027981 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_circle n g c ? coll l d e
I0123 15:18:06.602753 140012029288448 ddar.py:60] Depth 1/1000 time = 1.5360944271087646
I0123 15:18:09.135214 140012029288448 ddar.py:60] Depth 2/1000 time = 2.532229423522949
I0123 15:18:12.020500 140012029288448 ddar.py:60] Depth 3/1000 time = 2.8850440979003906
I0123 15:18:17.262455 140012029288448 ddar.py:60] Depth 4/1000 time = 5.241661310195923
I0123 15:18:20.237782 140012029288448 ddar.py:60] Depth 5/1000 time = 2.9747509956359863
I0123 15:18:23.968774 140012029288448 ddar.py:60] Depth 6/1000 time = 3.694315195083618
I0123 15:18:27.557977 140012029288448 ddar.py:60] Depth 7/1000 time = 3.5889480113983154
I0123 15:18:27.572042 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:18:27.572121 140012029288448 alphageometry.py:566] LM output (score=-3.020650): "n : T e m h n 18 ;"
I0123 15:18:27.572160 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h e m"

I0123 15:18:27.572207 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n h e m ? coll l d e"
I0123 15:18:27.572400 140012029288448 graph.py:498] 
I0123 15:18:27.572461 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n h e m ? coll l d e
I0123 15:18:28.592428 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9845294952392578
I0123 15:18:32.100484 140012029288448 ddar.py:60] Depth 2/1000 time = 3.5078163146972656
I0123 15:18:33.939589 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8388521671295166
I0123 15:18:35.893173 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9533004760742188
I0123 15:18:37.831758 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9380362033843994
I0123 15:18:40.208572 140012029288448 ddar.py:60] Depth 6/1000 time = 2.349393844604492
I0123 15:18:44.591686 140012029288448 ddar.py:60] Depth 7/1000 time = 4.382846117019653
I0123 15:18:44.603462 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:18:44.603537 140012029288448 alphageometry.py:566] LM output (score=-3.031321): "n : T c e f n 18 ;"
I0123 15:18:44.603574 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f c e"

I0123 15:18:44.603613 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n f c e ? coll l d e"
I0123 15:18:44.603778 140012029288448 graph.py:498] 
I0123 15:18:44.603837 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n f c e ? coll l d e
I0123 15:18:45.610437 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9711494445800781
I0123 15:18:47.254404 140012029288448 ddar.py:60] Depth 2/1000 time = 1.643761396408081
I0123 15:18:49.120621 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8659894466400146
I0123 15:18:51.094639 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9737443923950195
I0123 15:18:55.072503 140012029288448 ddar.py:60] Depth 5/1000 time = 3.9773571491241455
I0123 15:18:57.471439 140012029288448 ddar.py:60] Depth 6/1000 time = 2.3710343837738037
I0123 15:18:59.787986 140012029288448 ddar.py:60] Depth 7/1000 time = 2.316288948059082
I0123 15:18:59.800302 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:18:59.800391 140012029288448 alphageometry.py:566] LM output (score=-3.064984): "n : T c m m n 18 ;"
I0123 15:18:59.800428 140012029288448 alphageometry.py:567] Translation: "n = on_tline n m c m"

I0123 15:18:59.800477 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n m c m ? coll l d e"
I0123 15:18:59.800686 140012029288448 graph.py:498] 
I0123 15:18:59.800755 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n m c m ? coll l d e
I0123 15:19:00.816336 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9805817604064941
I0123 15:19:02.247848 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4312121868133545
I0123 15:19:06.279106 140012029288448 ddar.py:60] Depth 3/1000 time = 4.030972480773926
I0123 15:19:08.309275 140012029288448 ddar.py:60] Depth 4/1000 time = 2.029884099960327
I0123 15:19:10.311088 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0013136863708496
I0123 15:19:12.782309 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4385619163513184
I0123 15:19:17.279700 140012029288448 ddar.py:60] Depth 7/1000 time = 4.497147560119629
I0123 15:19:17.292519 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:19:17.292581 140012029288448 alphageometry.py:566] LM output (score=-3.070962): "n : T e i h n 18 ;"
I0123 15:19:17.292617 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h e i"

I0123 15:19:17.292657 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n h e i ? coll l d e"
I0123 15:19:17.292820 140012029288448 graph.py:498] 
I0123 15:19:17.292871 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n h e i ? coll l d e
I0123 15:19:18.291830 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9642260074615479
I0123 15:19:19.663953 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3719003200531006
I0123 15:19:21.566224 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9020068645477295
I0123 15:19:23.626881 140012029288448 ddar.py:60] Depth 4/1000 time = 2.060293436050415
I0123 15:19:25.625833 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9983150959014893
I0123 15:19:30.227566 140012029288448 ddar.py:60] Depth 6/1000 time = 4.571259021759033
I0123 15:19:32.669242 140012029288448 ddar.py:60] Depth 7/1000 time = 2.441427707672119
I0123 15:19:32.682926 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:19:32.682987 140012029288448 alphageometry.py:566] LM output (score=-3.116709): "n : D c n e n 18 ;"
I0123 15:19:32.683025 140012029288448 alphageometry.py:567] Translation: "n = on_bline n e c"

I0123 15:19:32.683065 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_bline n e c ? coll l d e"
I0123 15:19:32.683238 140012029288448 graph.py:498] 
I0123 15:19:32.683300 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_bline n e c ? coll l d e
I0123 15:19:33.820330 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0909092426300049
I0123 15:19:35.580036 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7594785690307617
I0123 15:19:37.670589 140012029288448 ddar.py:60] Depth 3/1000 time = 2.090348958969116
I0123 15:19:41.844341 140012029288448 ddar.py:60] Depth 4/1000 time = 4.173497676849365
I0123 15:19:43.978124 140012029288448 ddar.py:60] Depth 5/1000 time = 2.1333277225494385
I0123 15:19:46.552422 140012029288448 ddar.py:60] Depth 6/1000 time = 2.543365478515625
I0123 15:19:49.044255 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4915237426757812
I0123 15:19:49.056132 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:19:49.056229 140012029288448 alphageometry.py:566] LM output (score=-3.172151): "n : T b n c m 18 ;"
I0123 15:19:49.056266 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b c m"

I0123 15:19:49.056348 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n b c m ? coll l d e"
I0123 15:19:49.056572 140012029288448 graph.py:498] 
I0123 15:19:49.056645 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n b c m ? coll l d e
I0123 15:19:52.192073 140012029288448 ddar.py:60] Depth 1/1000 time = 3.0991854667663574
I0123 15:19:53.585661 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3933491706848145
I0123 15:19:55.509516 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9236156940460205
I0123 15:19:57.567347 140012029288448 ddar.py:60] Depth 4/1000 time = 2.057537794113159
I0123 15:19:59.600040 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0321803092956543
I0123 15:20:04.223565 140012029288448 ddar.py:60] Depth 6/1000 time = 4.589062452316284
I0123 15:20:06.625796 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4019551277160645
I0123 15:20:06.638900 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:20:06.638995 140012029288448 alphageometry.py:566] LM output (score=-3.217843): "n : P f n g m 18 ;"
I0123 15:20:06.639034 140012029288448 alphageometry.py:567] Translation: "n = on_pline n f g m"

I0123 15:20:06.639081 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_pline n f g m ? coll l d e"
I0123 15:20:06.639283 140012029288448 graph.py:498] 
I0123 15:20:06.639353 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_pline n f g m ? coll l d e
I0123 15:20:07.670729 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9953505992889404
I0123 15:20:09.196101 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5251104831695557
I0123 15:20:10.974613 140012029288448 ddar.py:60] Depth 3/1000 time = 1.7781951427459717
I0123 15:20:12.824569 140012029288448 ddar.py:60] Depth 4/1000 time = 1.8496549129486084
I0123 15:20:16.707729 140012029288448 ddar.py:60] Depth 5/1000 time = 3.8826515674591064
I0123 15:20:18.949457 140012029288448 ddar.py:60] Depth 6/1000 time = 2.2162234783172607
I0123 15:20:21.123995 140012029288448 ddar.py:60] Depth 7/1000 time = 2.1742842197418213
I0123 15:20:21.134925 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:20:21.135005 140012029288448 alphageometry.py:566] LM output (score=-3.234614): "n : T b n e i 18 ;"
I0123 15:20:21.135044 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b e i"

I0123 15:20:21.135087 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n b e i ? coll l d e"
I0123 15:20:21.135251 140012029288448 graph.py:498] 
I0123 15:20:21.135302 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m c g, on_circle m g c; n = on_tline n b e i ? coll l d e
I0123 15:20:22.135425 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9637231826782227
I0123 15:20:23.709973 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5743157863616943
I0123 15:20:27.757169 140012029288448 ddar.py:60] Depth 3/1000 time = 4.046958684921265
I0123 15:20:29.770894 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0134196281433105
I0123 15:20:31.756855 140012029288448 ddar.py:60] Depth 5/1000 time = 1.985320806503296
I0123 15:20:34.249717 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4620532989501953
I0123 15:20:36.638449 140012029288448 ddar.py:60] Depth 7/1000 time = 2.3884661197662354
I0123 15:20:36.651371 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:20:36.651519 140012029288448 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : C e g m 16 D e g g m 17 ; x00
I0123 15:20:42.879408 140012029288448 alphageometry.py:566] LM output (score=-2.007576): "n : D e g g n 18 ;"
I0123 15:20:42.879628 140012029288448 alphageometry.py:567] Translation: "n = on_circle n g e"

I0123 15:20:42.879673 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_circle n g e ? coll l d e"
I0123 15:20:42.879851 140012029288448 graph.py:498] 
I0123 15:20:42.879918 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_circle n g e ? coll l d e
I0123 15:20:46.115864 140012029288448 ddar.py:60] Depth 1/1000 time = 3.1959288120269775
I0123 15:20:48.277865 140012029288448 ddar.py:60] Depth 2/1000 time = 2.1617681980133057
I0123 15:20:51.152604 140012029288448 ddar.py:60] Depth 3/1000 time = 2.8745007514953613
I0123 15:20:54.211539 140012029288448 ddar.py:60] Depth 4/1000 time = 3.058666706085205
I0123 15:20:57.225378 140012029288448 ddar.py:60] Depth 5/1000 time = 3.0133001804351807
I0123 15:21:02.897098 140012029288448 ddar.py:60] Depth 6/1000 time = 5.631678581237793
I0123 15:21:06.527391 140012029288448 ddar.py:60] Depth 7/1000 time = 3.6300323009490967
I0123 15:21:06.541530 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:21:06.541594 140012029288448 alphageometry.py:566] LM output (score=-2.112770): "n : T e f f n 18 ;"
I0123 15:21:06.541632 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f e f"

I0123 15:21:06.541682 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n f e f ? coll l d e"
I0123 15:21:06.541848 140012029288448 graph.py:498] 
I0123 15:21:06.541903 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n f e f ? coll l d e
I0123 15:21:07.417489 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8415272235870361
I0123 15:21:08.873173 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4554369449615479
I0123 15:21:10.759371 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8859496116638184
I0123 15:21:14.820653 140012029288448 ddar.py:60] Depth 4/1000 time = 4.060981035232544
I0123 15:21:16.766002 140012029288448 ddar.py:60] Depth 5/1000 time = 1.944852590560913
I0123 15:21:19.226871 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4317667484283447
I0123 15:21:21.585258 140012029288448 ddar.py:60] Depth 7/1000 time = 2.3581206798553467
I0123 15:21:21.596737 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:21:21.596828 140012029288448 alphageometry.py:566] LM output (score=-2.200100): "n : D e i i n 18 ;"
I0123 15:21:21.596869 140012029288448 alphageometry.py:567] Translation: "n = on_circle n i e"

I0123 15:21:21.596911 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_circle n i e ? coll l d e"
I0123 15:21:21.597083 140012029288448 graph.py:498] 
I0123 15:21:21.597147 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_circle n i e ? coll l d e
I0123 15:21:22.728355 140012029288448 ddar.py:60] Depth 1/1000 time = 1.093416452407837
I0123 15:21:26.666768 140012029288448 ddar.py:60] Depth 2/1000 time = 3.9381136894226074
I0123 15:21:28.942299 140012029288448 ddar.py:60] Depth 3/1000 time = 2.2751355171203613
I0123 15:21:31.334542 140012029288448 ddar.py:60] Depth 4/1000 time = 2.391951084136963
I0123 15:21:33.701282 140012029288448 ddar.py:60] Depth 5/1000 time = 2.366208791732788
I0123 15:21:38.714423 140012029288448 ddar.py:60] Depth 6/1000 time = 4.9803245067596436
I0123 15:21:41.583861 140012029288448 ddar.py:60] Depth 7/1000 time = 2.869182586669922
I0123 15:21:41.596534 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:21:41.596602 140012029288448 alphageometry.py:566] LM output (score=-2.388582): "n : T b h b n 18 ;"
I0123 15:21:41.596638 140012029288448 alphageometry.py:567] Translation: "n = on_tline n b b h"

I0123 15:21:41.596680 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n b b h ? coll l d e"
I0123 15:21:41.596855 140012029288448 graph.py:498] 
I0123 15:21:41.596914 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n b b h ? coll l d e
I0123 15:21:42.449985 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8183913230895996
I0123 15:21:43.848392 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3981730937957764
I0123 15:21:45.834482 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9858424663543701
I0123 15:21:47.952013 140012029288448 ddar.py:60] Depth 4/1000 time = 2.1172502040863037
I0123 15:21:52.196320 140012029288448 ddar.py:60] Depth 5/1000 time = 4.2439494132995605
I0123 15:21:54.322350 140012029288448 ddar.py:60] Depth 6/1000 time = 2.1254892349243164
I0123 15:21:56.838383 140012029288448 ddar.py:60] Depth 7/1000 time = 2.482088088989258
I0123 15:21:59.271847 140012029288448 ddar.py:60] Depth 8/1000 time = 2.4332103729248047
I0123 15:21:59.284799 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:21:59.284863 140012029288448 alphageometry.py:566] LM output (score=-2.408662): "n : C c i n 18 D c n i n 19 ;"
I0123 15:21:59.284927 140012029288448 alphageometry.py:567] Translation: "n = on_line n c i, on_bline n i c"

I0123 15:21:59.284974 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_line n c i, on_bline n i c ? coll l d e"
I0123 15:21:59.285161 140012029288448 graph.py:498] 
I0123 15:21:59.285221 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_line n c i, on_bline n i c ? coll l d e
I0123 15:22:00.251849 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9217529296875
I0123 15:22:03.741975 140012029288448 ddar.py:60] Depth 2/1000 time = 3.4898924827575684
I0123 15:22:05.631953 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8897318840026855
I0123 15:22:07.623583 140012029288448 ddar.py:60] Depth 4/1000 time = 1.991339921951294
I0123 15:22:09.615626 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9915711879730225
I0123 15:22:12.133861 140012029288448 ddar.py:60] Depth 6/1000 time = 2.491455316543579
I0123 15:22:16.643527 140012029288448 ddar.py:60] Depth 7/1000 time = 4.509335517883301
I0123 15:22:16.655915 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:22:16.655983 140012029288448 alphageometry.py:566] LM output (score=-2.415567): "n : C e f n 18 D e n f n 19 ;"
I0123 15:22:16.656019 140012029288448 alphageometry.py:567] Translation: "n = on_line n e f, on_bline n f e"

I0123 15:22:16.656062 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_line n e f, on_bline n f e ? coll l d e"
I0123 15:22:16.656240 140012029288448 graph.py:498] 
I0123 15:22:16.656301 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_line n e f, on_bline n f e ? coll l d e
I0123 15:22:17.748526 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0474522113800049
I0123 15:22:19.675338 140012029288448 ddar.py:60] Depth 2/1000 time = 1.9265785217285156
I0123 15:22:24.278665 140012029288448 ddar.py:60] Depth 3/1000 time = 4.603082656860352
I0123 15:22:26.911011 140012029288448 ddar.py:60] Depth 4/1000 time = 2.632089614868164
I0123 15:22:29.552131 140012029288448 ddar.py:60] Depth 5/1000 time = 2.6405768394470215
I0123 15:22:34.745470 140012029288448 ddar.py:60] Depth 6/1000 time = 5.164053440093994
I0123 15:22:37.728702 140012029288448 ddar.py:60] Depth 7/1000 time = 2.9828572273254395
I0123 15:22:37.743178 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:22:37.743273 140012029288448 alphageometry.py:566] LM output (score=-2.426311): "n : T c e c n 18 ;"
I0123 15:22:37.743309 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c e"

I0123 15:22:37.743370 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c c e ? coll l d e"
I0123 15:22:37.743590 140012029288448 graph.py:498] 
I0123 15:22:37.743657 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c c e ? coll l d e
I0123 15:22:38.618987 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8397665023803711
I0123 15:22:40.140267 140012029288448 ddar.py:60] Depth 2/1000 time = 1.5210402011871338
I0123 15:22:44.128788 140012029288448 ddar.py:60] Depth 3/1000 time = 3.9882748126983643
I0123 15:22:46.190553 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0614802837371826
I0123 15:22:48.222212 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0311384201049805
I0123 15:22:50.739292 140012029288448 ddar.py:60] Depth 6/1000 time = 2.489980459213257
I0123 15:22:55.248977 140012029288448 ddar.py:60] Depth 7/1000 time = 4.509426832199097
I0123 15:22:55.261089 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:22:55.261153 140012029288448 alphageometry.py:566] LM output (score=-2.437285): "n : T c e e n 18 ;"
I0123 15:22:55.261192 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e c e"

I0123 15:22:55.261232 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n e c e ? coll l d e"
I0123 15:22:55.261405 140012029288448 graph.py:498] 
I0123 15:22:55.261467 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n e c e ? coll l d e
I0123 15:22:56.143172 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8458962440490723
I0123 15:22:57.588429 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4449248313903809
I0123 15:22:59.473883 140012029288448 ddar.py:60] Depth 3/1000 time = 1.885129451751709
I0123 15:23:01.463752 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9895706176757812
I0123 15:23:05.498181 140012029288448 ddar.py:60] Depth 5/1000 time = 4.0338945388793945
I0123 15:23:07.936550 140012029288448 ddar.py:60] Depth 6/1000 time = 2.410081624984741
I0123 15:23:10.282166 140012029288448 ddar.py:60] Depth 7/1000 time = 2.3453502655029297
I0123 15:23:10.293079 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:23:10.293149 140012029288448 alphageometry.py:566] LM output (score=-2.508838): "n : T c e h n 18 ;"
I0123 15:23:10.293184 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h c e"

I0123 15:23:10.293229 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n h c e ? coll l d e"
I0123 15:23:10.293405 140012029288448 graph.py:498] 
I0123 15:23:10.293465 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n h c e ? coll l d e
I0123 15:23:11.175342 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8464112281799316
I0123 15:23:12.635797 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4602184295654297
I0123 15:23:16.619295 140012029288448 ddar.py:60] Depth 3/1000 time = 3.9832522869110107
I0123 15:23:18.591853 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9722604751586914
I0123 15:23:20.535189 140012029288448 ddar.py:60] Depth 5/1000 time = 1.942690372467041
I0123 15:23:22.964364 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4014172554016113
I0123 15:23:27.472284 140012029288448 ddar.py:60] Depth 7/1000 time = 4.5076518058776855
I0123 15:23:27.484464 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:23:27.484521 140012029288448 alphageometry.py:566] LM output (score=-2.553994): "n : C f i n 18 D f n i n 19 ;"
I0123 15:23:27.484557 140012029288448 alphageometry.py:567] Translation: "n = on_line n f i, on_bline n i f"

I0123 15:23:27.484595 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_line n f i, on_bline n i f ? coll l d e"
I0123 15:23:27.484770 140012029288448 graph.py:498] 
I0123 15:23:27.484832 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_line n f i, on_bline n i f ? coll l d e
I0123 15:23:28.435264 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9070427417755127
I0123 15:23:29.859677 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4241931438446045
I0123 15:23:31.709548 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8496427536010742
I0123 15:23:33.637759 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9279155731201172
I0123 15:23:35.575224 140012029288448 ddar.py:60] Depth 5/1000 time = 1.937021017074585
I0123 15:23:40.235743 140012029288448 ddar.py:60] Depth 6/1000 time = 4.634812831878662
I0123 15:23:42.616902 140012029288448 ddar.py:60] Depth 7/1000 time = 2.3808095455169678
I0123 15:23:42.629276 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:23:42.629371 140012029288448 alphageometry.py:566] LM output (score=-2.581149): "n : C f i n 18 D f i i n 19 ;"
I0123 15:23:42.629408 140012029288448 alphageometry.py:567] Translation: "n = on_line n f i, on_circle n i f"

I0123 15:23:42.629469 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_line n f i, on_circle n i f ? coll l d e"
I0123 15:23:42.629697 140012029288448 graph.py:498] 
I0123 15:23:42.629765 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_line n f i, on_circle n i f ? coll l d e
I0123 15:23:43.695481 140012029288448 ddar.py:60] Depth 1/1000 time = 1.026188611984253
I0123 15:23:45.644467 140012029288448 ddar.py:60] Depth 2/1000 time = 1.948761224746704
I0123 15:23:50.464064 140012029288448 ddar.py:60] Depth 3/1000 time = 4.819371700286865
I0123 15:23:53.334853 140012029288448 ddar.py:60] Depth 4/1000 time = 2.87054181098938
I0123 15:23:56.238680 140012029288448 ddar.py:60] Depth 5/1000 time = 2.9035675525665283
I0123 15:23:59.127358 140012029288448 ddar.py:60] Depth 6/1000 time = 2.8882081508636475
I0123 15:24:04.749325 140012029288448 ddar.py:60] Depth 7/1000 time = 5.582946062088013
I0123 15:24:08.037514 140012029288448 ddar.py:60] Depth 8/1000 time = 3.28779935836792
I0123 15:24:08.051497 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:24:08.051585 140012029288448 alphageometry.py:566] LM output (score=-2.609663): "n : T c d c n 18 ;"
I0123 15:24:08.051623 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c d"

I0123 15:24:08.051678 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c c d ? coll l d e"
I0123 15:24:08.051891 140012029288448 graph.py:498] 
I0123 15:24:08.051949 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c c d ? coll l d e
I0123 15:24:08.915935 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8283276557922363
I0123 15:24:10.304800 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3886315822601318
I0123 15:24:12.266079 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9610376358032227
I0123 15:24:16.381406 140012029288448 ddar.py:60] Depth 4/1000 time = 4.115055799484253
I0123 15:24:18.416902 140012029288448 ddar.py:60] Depth 5/1000 time = 2.035000801086426
I0123 15:24:21.030754 140012029288448 ddar.py:60] Depth 6/1000 time = 2.579317092895508
I0123 15:24:23.535660 140012029288448 ddar.py:60] Depth 7/1000 time = 2.5046451091766357
I0123 15:24:23.548607 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:24:23.548702 140012029288448 alphageometry.py:566] LM output (score=-2.642257): "n : D d h h n 18 ;"
I0123 15:24:23.548740 140012029288448 alphageometry.py:567] Translation: "n = on_circle n h d"

I0123 15:24:23.548792 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_circle n h d ? coll l d e"
I0123 15:24:23.548978 140012029288448 graph.py:498] 
I0123 15:24:23.549046 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_circle n h d ? coll l d e
I0123 15:24:24.544904 140012029288448 ddar.py:60] Depth 1/1000 time = 0.9578227996826172
I0123 15:24:28.488434 140012029288448 ddar.py:60] Depth 2/1000 time = 3.943290948867798
I0123 15:24:30.755510 140012029288448 ddar.py:60] Depth 3/1000 time = 2.2668299674987793
I0123 15:24:33.163057 140012029288448 ddar.py:60] Depth 4/1000 time = 2.407280206680298
I0123 15:24:35.552295 140012029288448 ddar.py:60] Depth 5/1000 time = 2.388759136199951
I0123 15:24:38.547485 140012029288448 ddar.py:60] Depth 6/1000 time = 2.9618396759033203
I0123 15:24:43.506702 140012029288448 ddar.py:60] Depth 7/1000 time = 4.95896577835083
I0123 15:24:43.519959 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:24:43.520021 140012029288448 alphageometry.py:566] LM output (score=-2.646424): "n : C e i n 18 D e i i n 19 ;"
I0123 15:24:43.520056 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_circle n i e"

I0123 15:24:43.520094 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_line n e i, on_circle n i e ? coll l d e"
I0123 15:24:43.520278 140012029288448 graph.py:498] 
I0123 15:24:43.520339 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_line n e i, on_circle n i e ? coll l d e
I0123 15:24:44.735698 140012029288448 ddar.py:60] Depth 1/1000 time = 1.1771535873413086
I0123 15:24:46.724273 140012029288448 ddar.py:60] Depth 2/1000 time = 1.988281488418579
I0123 15:24:49.354477 140012029288448 ddar.py:60] Depth 3/1000 time = 2.6298389434814453
I0123 15:24:54.297876 140012029288448 ddar.py:60] Depth 4/1000 time = 4.943126916885376
I0123 15:24:57.050383 140012029288448 ddar.py:60] Depth 5/1000 time = 2.752216100692749
I0123 15:24:59.816089 140012029288448 ddar.py:60] Depth 6/1000 time = 2.7652058601379395
I0123 15:25:05.239950 140012029288448 ddar.py:60] Depth 7/1000 time = 5.392044305801392
I0123 15:25:08.350519 140012029288448 ddar.py:60] Depth 8/1000 time = 3.11029314994812
I0123 15:25:08.367464 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:25:08.367549 140012029288448 alphageometry.py:566] LM output (score=-2.701369): "n : T e i e n 18 ;"
I0123 15:25:08.367586 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e i"

I0123 15:25:08.367633 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n e e i ? coll l d e"
I0123 15:25:08.367834 140012029288448 graph.py:498] 
I0123 15:25:08.367904 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n e e i ? coll l d e
I0123 15:25:09.232460 140012029288448 ddar.py:60] Depth 1/1000 time = 0.829918622970581
I0123 15:25:10.647982 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4152145385742188
I0123 15:25:12.622959 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9746980667114258
I0123 15:25:17.018604 140012029288448 ddar.py:60] Depth 4/1000 time = 4.395367622375488
I0123 15:25:19.106723 140012029288448 ddar.py:60] Depth 5/1000 time = 2.087883234024048
I0123 15:25:21.224950 140012029288448 ddar.py:60] Depth 6/1000 time = 2.11772084236145
I0123 15:25:23.757468 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4995627403259277
I0123 15:25:26.259821 140012029288448 ddar.py:60] Depth 8/1000 time = 2.502106189727783
I0123 15:25:26.272655 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:25:26.272737 140012029288448 alphageometry.py:566] LM output (score=-2.789582): "n : T c g c n 18 ;"
I0123 15:25:26.272774 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c g"

I0123 15:25:26.272817 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c c g ? coll l d e"
I0123 15:25:26.272980 140012029288448 graph.py:498] 
I0123 15:25:26.273039 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c c g ? coll l d e
I0123 15:25:29.407410 140012029288448 ddar.py:60] Depth 1/1000 time = 3.099315881729126
I0123 15:25:30.822489 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4148077964782715
I0123 15:25:32.739973 140012029288448 ddar.py:60] Depth 3/1000 time = 1.917160987854004
I0123 15:25:34.789281 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0488030910491943
I0123 15:25:36.802881 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0130715370178223
I0123 15:25:39.356119 140012029288448 ddar.py:60] Depth 6/1000 time = 2.520139217376709
I0123 15:25:43.910850 140012029288448 ddar.py:60] Depth 7/1000 time = 4.554457187652588
I0123 15:25:43.923833 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:25:43.923900 140012029288448 alphageometry.py:566] LM output (score=-2.793142): "n : T c g g n 18 ;"
I0123 15:25:43.923937 140012029288448 alphageometry.py:567] Translation: "n = on_tline n g c g"

I0123 15:25:43.923980 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n g c g ? coll l d e"
I0123 15:25:43.924145 140012029288448 graph.py:498] 
I0123 15:25:43.924203 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n g c g ? coll l d e
I0123 15:25:44.792952 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8322257995605469
I0123 15:25:46.176111 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3829398155212402
I0123 15:25:48.099141 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9227995872497559
I0123 15:25:50.143282 140012029288448 ddar.py:60] Depth 4/1000 time = 2.043874740600586
I0123 15:25:54.444980 140012029288448 ddar.py:60] Depth 5/1000 time = 4.3011555671691895
I0123 15:25:56.970261 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4924135208129883
I0123 15:25:59.398790 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4283053874969482
I0123 15:25:59.411121 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:25:59.411214 140012029288448 alphageometry.py:566] LM output (score=-2.796199): "n : T c n e g 18 ;"
I0123 15:25:59.411249 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c e g"

I0123 15:25:59.411299 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c e g ? coll l d e"
I0123 15:25:59.411482 140012029288448 graph.py:498] 
I0123 15:25:59.411540 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c e g ? coll l d e
I0123 15:26:00.281566 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8346648216247559
I0123 15:26:01.674023 140012029288448 ddar.py:60] Depth 2/1000 time = 1.392225742340088
I0123 15:26:03.589945 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9156832695007324
I0123 15:26:07.769847 140012029288448 ddar.py:60] Depth 4/1000 time = 4.179637432098389
I0123 15:26:09.790514 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0201895236968994
I0123 15:26:12.362828 140012029288448 ddar.py:60] Depth 6/1000 time = 2.535511016845703
I0123 15:26:14.798844 140012029288448 ddar.py:60] Depth 7/1000 time = 2.4357125759124756
I0123 15:26:14.811744 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:26:14.811861 140012029288448 alphageometry.py:566] LM output (score=-2.811692): "n : T c e i n 18 ;"
I0123 15:26:14.811902 140012029288448 alphageometry.py:567] Translation: "n = on_tline n i c e"

I0123 15:26:14.811960 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n i c e ? coll l d e"
I0123 15:26:14.812194 140012029288448 graph.py:498] 
I0123 15:26:14.812268 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n i c e ? coll l d e
I0123 15:26:15.680797 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8334474563598633
I0123 15:26:19.399729 140012029288448 ddar.py:60] Depth 2/1000 time = 3.7186830043792725
I0123 15:26:21.273164 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8731870651245117
I0123 15:26:23.243280 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9698495864868164
I0123 15:26:25.181990 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9382095336914062
I0123 15:26:27.666771 140012029288448 ddar.py:60] Depth 6/1000 time = 2.4568259716033936
I0123 15:26:32.450629 140012029288448 ddar.py:60] Depth 7/1000 time = 4.783627986907959
I0123 15:26:35.076641 140012029288448 ddar.py:60] Depth 8/1000 time = 2.625723361968994
I0123 15:26:37.729733 140012029288448 ddar.py:60] Depth 9/1000 time = 2.635350465774536
I0123 15:26:37.730115 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:26:37.730216 140012029288448 alphageometry.py:566] LM output (score=-2.846179): "n : T c n e i 18 ;"
I0123 15:26:37.730251 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c e i"

I0123 15:26:37.730310 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c e i ? coll l d e"
I0123 15:26:37.730533 140012029288448 graph.py:498] 
I0123 15:26:37.730605 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c e i ? coll l d e
I0123 15:26:38.598159 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8326854705810547
I0123 15:26:39.974099 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3756892681121826
I0123 15:26:44.137068 140012029288448 ddar.py:60] Depth 3/1000 time = 4.1627421379089355
I0123 15:26:46.158816 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0214662551879883
I0123 15:26:48.149972 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9906764030456543
I0123 15:26:50.731427 140012029288448 ddar.py:60] Depth 6/1000 time = 2.550088882446289
I0123 15:26:53.222697 140012029288448 ddar.py:60] Depth 7/1000 time = 2.491034507751465
I0123 15:26:53.234967 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:26:53.235036 140012029288448 alphageometry.py:566] LM output (score=-2.870455): "n : T c m c n 18 ;"
I0123 15:26:53.235071 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c c m"

I0123 15:26:53.235114 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c c m ? coll l d e"
I0123 15:26:53.235275 140012029288448 graph.py:498] 
I0123 15:26:53.235326 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c c m ? coll l d e
I0123 15:26:54.107674 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8381898403167725
I0123 15:26:57.948555 140012029288448 ddar.py:60] Depth 2/1000 time = 3.840616464614868
I0123 15:26:59.983694 140012029288448 ddar.py:60] Depth 3/1000 time = 2.034816026687622
I0123 15:27:02.117412 140012029288448 ddar.py:60] Depth 4/1000 time = 2.1333603858947754
I0123 15:27:06.385081 140012029288448 ddar.py:60] Depth 5/1000 time = 4.267113208770752
I0123 15:27:09.034659 140012029288448 ddar.py:60] Depth 6/1000 time = 2.6228108406066895
I0123 15:27:11.555808 140012029288448 ddar.py:60] Depth 7/1000 time = 2.5209128856658936
I0123 15:27:11.567480 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:27:11.567549 140012029288448 alphageometry.py:566] LM output (score=-2.870754): "n : D c n e n 18 ;"
I0123 15:27:11.567587 140012029288448 alphageometry.py:567] Translation: "n = on_bline n e c"

I0123 15:27:11.567628 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_bline n e c ? coll l d e"
I0123 15:27:11.567792 140012029288448 graph.py:498] 
I0123 15:27:11.567852 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_bline n e c ? coll l d e
I0123 15:27:12.507349 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8964028358459473
I0123 15:27:16.223823 140012029288448 ddar.py:60] Depth 2/1000 time = 3.716247320175171
I0123 15:27:18.236647 140012029288448 ddar.py:60] Depth 3/1000 time = 2.012587785720825
I0123 15:27:20.376520 140012029288448 ddar.py:60] Depth 4/1000 time = 2.1396186351776123
I0123 15:27:22.499068 140012029288448 ddar.py:60] Depth 5/1000 time = 2.121971845626831
I0123 15:27:27.271181 140012029288448 ddar.py:60] Depth 6/1000 time = 4.741085052490234
I0123 15:27:29.781562 140012029288448 ddar.py:60] Depth 7/1000 time = 2.510133743286133
I0123 15:27:29.793341 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:27:29.793398 140012029288448 alphageometry.py:566] LM output (score=-2.909760): "n : D e g g n 18 ^ e g e n n e n g 19 ;"
I0123 15:27:29.793435 140012029288448 alphageometry.py:567] Translation: "ERROR: Invalid predicate ^ e g e n n e n g"

I0123 15:27:29.793471 140012029288448 alphageometry.py:566] LM output (score=-2.923691): "n : T c m h n 18 ;"
I0123 15:27:29.793499 140012029288448 alphageometry.py:567] Translation: "n = on_tline n h c m"

I0123 15:27:29.793529 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n h c m ? coll l d e"
I0123 15:27:29.793711 140012029288448 graph.py:498] 
I0123 15:27:29.793772 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n h c m ? coll l d e
I0123 15:27:30.670916 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8393182754516602
I0123 15:27:32.107367 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4362261295318604
I0123 15:27:33.971438 140012029288448 ddar.py:60] Depth 3/1000 time = 1.863839864730835
I0123 15:27:35.948805 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9770820140838623
I0123 15:27:40.129199 140012029288448 ddar.py:60] Depth 5/1000 time = 4.179898262023926
I0123 15:27:42.580009 140012029288448 ddar.py:60] Depth 6/1000 time = 2.421241283416748
I0123 15:27:44.920453 140012029288448 ddar.py:60] Depth 7/1000 time = 2.3400559425354004
I0123 15:27:44.932283 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:27:44.932381 140012029288448 alphageometry.py:566] LM output (score=-2.944931): "n : P c e f n 18 ;"
I0123 15:27:44.932418 140012029288448 alphageometry.py:567] Translation: "n = on_pline n f c e"

I0123 15:27:44.932477 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_pline n f c e ? coll l d e"
I0123 15:27:44.932699 140012029288448 graph.py:498] 
I0123 15:27:44.932767 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_pline n f c e ? coll l d e
I0123 15:27:45.819513 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8516886234283447
I0123 15:27:47.150576 140012029288448 ddar.py:60] Depth 2/1000 time = 1.3308358192443848
I0123 15:27:51.197164 140012029288448 ddar.py:60] Depth 3/1000 time = 4.046346664428711
I0123 15:27:53.074975 140012029288448 ddar.py:60] Depth 4/1000 time = 1.8775389194488525
I0123 15:27:54.942995 140012029288448 ddar.py:60] Depth 5/1000 time = 1.867530107498169
I0123 15:27:57.329084 140012029288448 ddar.py:60] Depth 6/1000 time = 2.359051465988159
I0123 15:27:59.617790 140012029288448 ddar.py:60] Depth 7/1000 time = 2.288464069366455
I0123 15:27:59.628717 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:27:59.628788 140012029288448 alphageometry.py:566] LM output (score=-2.950499): "n : T c m f n 18 ;"
I0123 15:27:59.628825 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f c m"

I0123 15:27:59.628870 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n f c m ? coll l d e"
I0123 15:27:59.629031 140012029288448 graph.py:498] 
I0123 15:27:59.629083 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n f c m ? coll l d e
I0123 15:28:00.502323 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8381407260894775
I0123 15:28:04.212164 140012029288448 ddar.py:60] Depth 2/1000 time = 3.7096049785614014
I0123 15:28:06.077760 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8652381896972656
I0123 15:28:08.025860 140012029288448 ddar.py:60] Depth 4/1000 time = 1.9477179050445557
I0123 15:28:09.954983 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9286072254180908
I0123 15:28:12.395505 140012029288448 ddar.py:60] Depth 6/1000 time = 2.412593126296997
I0123 15:28:16.898022 140012029288448 ddar.py:60] Depth 7/1000 time = 4.502279758453369
I0123 15:28:16.909726 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:28:16.909813 140012029288448 alphageometry.py:566] LM output (score=-2.957365): "n : D f h h n 18 ;"
I0123 15:28:16.909854 140012029288448 alphageometry.py:567] Translation: "n = on_circle n h f"

I0123 15:28:16.909901 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_circle n h f ? coll l d e"
I0123 15:28:16.910085 140012029288448 graph.py:498] 
I0123 15:28:16.910149 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_circle n h f ? coll l d e
I0123 15:28:18.046746 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0976989269256592
I0123 15:28:19.769616 140012029288448 ddar.py:60] Depth 2/1000 time = 1.7226436138153076
I0123 15:28:22.053399 140012029288448 ddar.py:60] Depth 3/1000 time = 2.2835421562194824
I0123 15:28:24.461739 140012029288448 ddar.py:60] Depth 4/1000 time = 2.4080538749694824
I0123 15:28:26.849440 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3871560096740723
I0123 15:28:32.019519 140012029288448 ddar.py:60] Depth 6/1000 time = 5.135039329528809
I0123 15:28:34.853514 140012029288448 ddar.py:60] Depth 7/1000 time = 2.833763360977173
I0123 15:28:34.866188 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:28:34.866250 140012029288448 alphageometry.py:566] LM output (score=-3.001254): "n : T c n e f 18 ;"
I0123 15:28:34.866286 140012029288448 alphageometry.py:567] Translation: "n = on_tline n c e f"

I0123 15:28:34.866324 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c e f ? coll l d e"
I0123 15:28:34.866493 140012029288448 graph.py:498] 
I0123 15:28:34.866555 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n c e f ? coll l d e
I0123 15:28:35.734021 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8310904502868652
I0123 15:28:37.172960 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4387106895446777
I0123 15:28:39.060795 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8875954151153564
I0123 15:28:43.226169 140012029288448 ddar.py:60] Depth 4/1000 time = 4.165112018585205
I0123 15:28:45.159816 140012029288448 ddar.py:60] Depth 5/1000 time = 1.9331586360931396
I0123 15:28:47.602401 140012029288448 ddar.py:60] Depth 6/1000 time = 2.409843921661377
I0123 15:28:49.949043 140012029288448 ddar.py:60] Depth 7/1000 time = 2.3463337421417236
I0123 15:28:49.961482 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:28:49.961591 140012029288448 alphageometry.py:566] LM output (score=-3.008846): "n : D b h h n 18 ;"
I0123 15:28:49.961629 140012029288448 alphageometry.py:567] Translation: "n = on_circle n h b"

I0123 15:28:49.961694 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_circle n h b ? coll l d e"
I0123 15:28:49.961909 140012029288448 graph.py:498] 
I0123 15:28:49.961979 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_circle n h b ? coll l d e
I0123 15:28:51.096760 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0964808464050293
I0123 15:28:55.100047 140012029288448 ddar.py:60] Depth 2/1000 time = 4.0030317306518555
I0123 15:28:57.368160 140012029288448 ddar.py:60] Depth 3/1000 time = 2.267881393432617
I0123 15:28:59.781719 140012029288448 ddar.py:60] Depth 4/1000 time = 2.413276195526123
I0123 15:29:02.173172 140012029288448 ddar.py:60] Depth 5/1000 time = 2.3909506797790527
I0123 15:29:05.178477 140012029288448 ddar.py:60] Depth 6/1000 time = 2.971229076385498
I0123 15:29:10.381605 140012029288448 ddar.py:60] Depth 7/1000 time = 5.202819585800171
I0123 15:29:10.395169 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:29:10.395282 140012029288448 alphageometry.py:566] LM output (score=-3.022629): "n : C e i n 18 D e n i n 19 ;"
I0123 15:29:10.395323 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_bline n i e"

I0123 15:29:10.395381 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_line n e i, on_bline n i e ? coll l d e"
I0123 15:29:10.395584 140012029288448 graph.py:498] 
I0123 15:29:10.395648 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_line n e i, on_bline n i e ? coll l d e
I0123 15:29:11.351730 140012029288448 ddar.py:60] Depth 1/1000 time = 0.912583589553833
I0123 15:29:12.870150 140012029288448 ddar.py:60] Depth 2/1000 time = 1.518165111541748
I0123 15:29:14.828320 140012029288448 ddar.py:60] Depth 3/1000 time = 1.957914113998413
I0123 15:29:16.883094 140012029288448 ddar.py:60] Depth 4/1000 time = 2.054520606994629
I0123 15:29:18.951425 140012029288448 ddar.py:60] Depth 5/1000 time = 2.067849636077881
I0123 15:29:23.788502 140012029288448 ddar.py:60] Depth 6/1000 time = 4.810863256454468
I0123 15:29:26.323825 140012029288448 ddar.py:60] Depth 7/1000 time = 2.535085916519165
I0123 15:29:26.337470 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:29:26.337545 140012029288448 alphageometry.py:566] LM output (score=-3.075231): "n : T f h f n 18 ;"
I0123 15:29:26.337581 140012029288448 alphageometry.py:567] Translation: "n = on_tline n f f h"

I0123 15:29:26.337621 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n f f h ? coll l d e"
I0123 15:29:26.337795 140012029288448 graph.py:498] 
I0123 15:29:26.337850 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n f f h ? coll l d e
I0123 15:29:27.194689 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8221802711486816
I0123 15:29:28.614866 140012029288448 ddar.py:60] Depth 2/1000 time = 1.419959545135498
I0123 15:29:30.649809 140012029288448 ddar.py:60] Depth 3/1000 time = 2.0347020626068115
I0123 15:29:35.094186 140012029288448 ddar.py:60] Depth 4/1000 time = 4.444087266921997
I0123 15:29:37.222860 140012029288448 ddar.py:60] Depth 5/1000 time = 2.128312349319458
I0123 15:29:39.372930 140012029288448 ddar.py:60] Depth 6/1000 time = 2.149549961090088
I0123 15:29:41.940713 140012029288448 ddar.py:60] Depth 7/1000 time = 2.536045789718628
I0123 15:29:44.432276 140012029288448 ddar.py:60] Depth 8/1000 time = 2.491311550140381
I0123 15:29:44.445433 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:29:44.445503 140012029288448 alphageometry.py:566] LM output (score=-3.079298): "n : T e m e n 18 ;"
I0123 15:29:44.445540 140012029288448 alphageometry.py:567] Translation: "n = on_tline n e e m"

I0123 15:29:44.445613 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n e e m ? coll l d e"
I0123 15:29:44.445803 140012029288448 graph.py:498] 
I0123 15:29:44.445861 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_line m e g, on_circle m g e; n = on_tline n e e m ? coll l d e
I0123 15:29:45.327514 140012029288448 ddar.py:60] Depth 1/1000 time = 0.8462972640991211
I0123 15:29:49.007808 140012029288448 ddar.py:60] Depth 2/1000 time = 3.680062770843506
I0123 15:29:50.935576 140012029288448 ddar.py:60] Depth 3/1000 time = 1.9275140762329102
I0123 15:29:52.993950 140012029288448 ddar.py:60] Depth 4/1000 time = 2.0581066608428955
I0123 15:29:55.010873 140012029288448 ddar.py:60] Depth 5/1000 time = 2.0163795948028564
I0123 15:29:57.548953 140012029288448 ddar.py:60] Depth 6/1000 time = 2.5047645568847656
I0123 15:30:02.258620 140012029288448 ddar.py:60] Depth 7/1000 time = 4.709384918212891
I0123 15:30:02.271322 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:30:02.271394 140012029288448 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : C b c d 00 ; e : C a c e 01 ; f : C a b f 02 C d e f 03 ; g : D c g e g 04 D d g e g 05 ; h : D b h d h 06 D d h f h 07 ; i : D a i f i 08 D e i f i 09 ; j : C h i j 10 T g j h i 11 ; k : C g i k 12 T g i h k 13 ; l : C g j l 14 C h k l 15 ? C l d e {F1} x00 m : D e f f m 16 D e i i m 17 ; x00
I0123 15:30:09.630245 140012029288448 alphageometry.py:566] LM output (score=-0.997420): "n : C e i n 18 D e i i n 19 ;"
I0123 15:30:09.630452 140012029288448 alphageometry.py:567] Translation: "n = on_line n e i, on_circle n i e"

I0123 15:30:09.630503 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n e i, on_circle n i e ? coll l d e"
I0123 15:30:09.630663 140012029288448 graph.py:498] 
I0123 15:30:09.630717 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n e i, on_circle n i e ? coll l d e
I0123 15:30:11.406743 140012029288448 ddar.py:60] Depth 1/1000 time = 1.7259511947631836
I0123 15:30:14.363346 140012029288448 ddar.py:60] Depth 2/1000 time = 2.9563684463500977
I0123 15:30:17.501654 140012029288448 ddar.py:60] Depth 3/1000 time = 3.1380646228790283
I0123 15:30:20.808856 140012029288448 ddar.py:60] Depth 4/1000 time = 3.3069305419921875
I0123 15:30:26.262638 140012029288448 ddar.py:60] Depth 5/1000 time = 5.453265190124512
I0123 15:30:30.378628 140012029288448 ddar.py:60] Depth 6/1000 time = 4.061169862747192
I0123 15:30:34.350514 140012029288448 ddar.py:60] Depth 7/1000 time = 3.9716343879699707
I0123 15:30:34.366957 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:30:34.367015 140012029288448 alphageometry.py:566] LM output (score=-1.383338): "n : C e m n 18 D e n m n 19 ;"
I0123 15:30:34.367050 140012029288448 alphageometry.py:567] Translation: "n = on_line n e m, on_bline n m e"

I0123 15:30:34.367088 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n e m, on_bline n m e ? coll l d e"
I0123 15:30:34.367268 140012029288448 graph.py:498] 
I0123 15:30:34.367321 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n e m, on_bline n m e ? coll l d e
I0123 15:30:35.598208 140012029288448 ddar.py:60] Depth 1/1000 time = 1.178377389907837
I0123 15:30:39.742510 140012029288448 ddar.py:60] Depth 2/1000 time = 4.144070386886597
I0123 15:30:42.130596 140012029288448 ddar.py:60] Depth 3/1000 time = 2.387845516204834
I0123 15:30:44.616647 140012029288448 ddar.py:60] Depth 4/1000 time = 2.4857804775238037
I0123 15:30:47.082943 140012029288448 ddar.py:60] Depth 5/1000 time = 2.4658102989196777
I0123 15:30:52.371121 140012029288448 ddar.py:60] Depth 6/1000 time = 5.255660772323608
I0123 15:30:55.179478 140012029288448 ddar.py:60] Depth 7/1000 time = 2.8081040382385254
I0123 15:30:55.190366 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:30:55.190424 140012029288448 alphageometry.py:566] LM output (score=-1.508340): "n : C e f n 18 D e n f n 19 ;"
I0123 15:30:55.190461 140012029288448 alphageometry.py:567] Translation: "n = on_line n e f, on_bline n f e"

I0123 15:30:55.190499 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n e f, on_bline n f e ? coll l d e"
I0123 15:30:55.190661 140012029288448 graph.py:498] 
I0123 15:30:55.190713 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n e f, on_bline n f e ? coll l d e
I0123 15:30:56.475482 140012029288448 ddar.py:60] Depth 1/1000 time = 1.2318689823150635
I0123 15:30:58.274942 140012029288448 ddar.py:60] Depth 2/1000 time = 1.799224615097046
I0123 15:31:00.604640 140012029288448 ddar.py:60] Depth 3/1000 time = 2.329442024230957
I0123 15:31:05.209464 140012029288448 ddar.py:60] Depth 4/1000 time = 4.604477643966675
I0123 15:31:07.621326 140012029288448 ddar.py:60] Depth 5/1000 time = 2.4112911224365234
I0123 15:31:10.679076 140012029288448 ddar.py:60] Depth 6/1000 time = 3.0224366188049316
I0123 15:31:15.778017 140012029288448 ddar.py:60] Depth 7/1000 time = 5.098690986633301
I0123 15:31:15.790174 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:31:15.790248 140012029288448 alphageometry.py:566] LM output (score=-1.713756): "n : C e g n 18 D e g g n 19 ;"
I0123 15:31:15.790287 140012029288448 alphageometry.py:567] Translation: "n = on_line n e g, on_circle n g e"

I0123 15:31:15.790330 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n e g, on_circle n g e ? coll l d e"
I0123 15:31:15.790504 140012029288448 graph.py:498] 
I0123 15:31:15.790565 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n e g, on_circle n g e ? coll l d e
I0123 15:31:17.055290 140012029288448 ddar.py:60] Depth 1/1000 time = 1.2161340713500977
I0123 15:31:18.984297 140012029288448 ddar.py:60] Depth 2/1000 time = 1.9287593364715576
I0123 15:31:21.664526 140012029288448 ddar.py:60] Depth 3/1000 time = 2.679987668991089
I0123 15:31:24.651630 140012029288448 ddar.py:60] Depth 4/1000 time = 2.9867637157440186
I0123 15:31:29.937510 140012029288448 ddar.py:60] Depth 5/1000 time = 5.285494089126587
I0123 15:31:32.805655 140012029288448 ddar.py:60] Depth 6/1000 time = 2.8675973415374756
I0123 15:31:36.218302 140012029288448 ddar.py:60] Depth 7/1000 time = 3.3654685020446777
I0123 15:31:39.519171 140012029288448 ddar.py:60] Depth 8/1000 time = 3.3006229400634766
I0123 15:31:39.534246 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:31:39.534321 140012029288448 alphageometry.py:566] LM output (score=-1.953844): "n : C c i n 18 D c n i n 19 ;"
I0123 15:31:39.534359 140012029288448 alphageometry.py:567] Translation: "n = on_line n c i, on_bline n i c"

I0123 15:31:39.534403 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n c i, on_bline n i c ? coll l d e"
I0123 15:31:39.534576 140012029288448 graph.py:498] 
I0123 15:31:39.534637 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n c i, on_bline n i c ? coll l d e
I0123 15:31:40.723738 140012029288448 ddar.py:60] Depth 1/1000 time = 1.134023666381836
I0123 15:31:44.572580 140012029288448 ddar.py:60] Depth 2/1000 time = 3.848618507385254
I0123 15:31:46.444454 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8715968132019043
I0123 15:31:48.406438 140012029288448 ddar.py:60] Depth 4/1000 time = 1.961592197418213
I0123 15:31:50.384580 140012029288448 ddar.py:60] Depth 5/1000 time = 1.977567434310913
I0123 15:31:52.814678 140012029288448 ddar.py:60] Depth 6/1000 time = 2.404590606689453
I0123 15:31:55.085515 140012029288448 ddar.py:60] Depth 7/1000 time = 2.270590305328369
I0123 15:31:55.096215 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:31:55.096309 140012029288448 alphageometry.py:566] LM output (score=-2.014471): "n : C c g n 18 D c g g n 19 ;"
I0123 15:31:55.096346 140012029288448 alphageometry.py:567] Translation: "n = on_line n c g, on_circle n g c"

I0123 15:31:55.096410 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n c g, on_circle n g c ? coll l d e"
I0123 15:31:55.096633 140012029288448 graph.py:498] 
I0123 15:31:55.096704 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n c g, on_circle n g c ? coll l d e
I0123 15:31:58.782361 140012029288448 ddar.py:60] Depth 1/1000 time = 3.6370725631713867
I0123 15:32:00.783367 140012029288448 ddar.py:60] Depth 2/1000 time = 2.0007729530334473
I0123 15:32:03.518492 140012029288448 ddar.py:60] Depth 3/1000 time = 2.7348787784576416
I0123 15:32:06.475900 140012029288448 ddar.py:60] Depth 4/1000 time = 2.957148790359497
I0123 15:32:09.381151 140012029288448 ddar.py:60] Depth 5/1000 time = 2.904949188232422
I0123 15:32:14.767776 140012029288448 ddar.py:60] Depth 6/1000 time = 5.385887384414673
I0123 15:32:18.228217 140012029288448 ddar.py:60] Depth 7/1000 time = 3.4147517681121826
I0123 15:32:21.566442 140012029288448 ddar.py:60] Depth 8/1000 time = 3.3379809856414795
I0123 15:32:21.581489 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:32:21.581559 140012029288448 alphageometry.py:566] LM output (score=-2.028415): "n : C e l n 18 D e n l n 19 ;"
I0123 15:32:21.581595 140012029288448 alphageometry.py:567] Translation: "n = on_line n e l, on_bline n l e"

I0123 15:32:21.581646 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n e l, on_bline n l e ? coll l d e"
I0123 15:32:21.581819 140012029288448 graph.py:498] 
I0123 15:32:21.581879 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_line n e l, on_bline n l e ? coll l d e
I0123 15:32:22.752111 140012029288448 ddar.py:60] Depth 1/1000 time = 1.117070198059082
I0123 15:32:24.222863 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4705226421356201
I0123 15:32:26.092019 140012029288448 ddar.py:60] Depth 3/1000 time = 1.8689167499542236
I0123 15:32:30.362699 140012029288448 ddar.py:60] Depth 4/1000 time = 4.270359516143799
I0123 15:32:32.298329 140012029288448 ddar.py:60] Depth 5/1000 time = 1.934941053390503
I0123 15:32:34.662744 140012029288448 ddar.py:60] Depth 6/1000 time = 2.3392961025238037
I0123 15:32:36.897096 140012029288448 ddar.py:60] Depth 7/1000 time = 2.234111785888672
I0123 15:32:36.907263 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:32:36.907361 140012029288448 alphageometry.py:566] LM output (score=-2.200495): "n : T c g g n 18 ;"
I0123 15:32:36.907398 140012029288448 alphageometry.py:567] Translation: "n = on_tline n g c g"

I0123 15:32:36.907463 140012029288448 alphageometry.py:576] Solving: "a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_tline n g c g ? coll l d e"
I0123 15:32:36.907690 140012029288448 graph.py:498] 
I0123 15:32:36.907759 140012029288448 graph.py:499] a b c = triangle a b c; d = on_line d c b; e = on_line e c a; f = on_line f e d, on_line f b a; g = circle g c e d; h = circle h b d f; i = circle i a f e; j = foot j g h i; k = foot k h g i; l = on_line l g j, on_line l h k; m = on_circle m f e, on_circle m i e; n = on_tline n g c g ? coll l d e
I0123 15:32:37.976855 140012029288448 ddar.py:60] Depth 1/1000 time = 1.0253586769104004
I0123 15:32:39.380948 140012029288448 ddar.py:60] Depth 2/1000 time = 1.4038715362548828
I0123 15:32:41.259284 140012029288448 ddar.py:60] Depth 3/1000 time = 1.878105878829956
I0123 15:32:45.561092 140012029288448 ddar.py:60] Depth 4/1000 time = 4.301538944244385
I0123 15:32:45.597207 140012029288448 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 15:32:45.597281 140012029288448 alphageometry.py:585] Timeout.
