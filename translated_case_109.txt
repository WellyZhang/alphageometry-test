I0123 12:32:08.192955 139631609110528 inference_utils.py:69] Parsing gin configuration.
I0123 12:32:08.193056 139631609110528 inference_utils.py:71] Added Gin search path meliad_lib/meliad/transformer/configs
I0123 12:32:08.193257 139631609110528 inference_utils.py:74] Loading Gin config file base_htrans.gin
I0123 12:32:08.193292 139631609110528 inference_utils.py:74] Loading Gin config file size/medium_150M.gin
I0123 12:32:08.193321 139631609110528 inference_utils.py:74] Loading Gin config file options/positions_t5.gin
I0123 12:32:08.193348 139631609110528 inference_utils.py:74] Loading Gin config file options/lr_cosine_decay.gin
I0123 12:32:08.193375 139631609110528 inference_utils.py:74] Loading Gin config file options/seq_1024_nocache.gin
I0123 12:32:08.193401 139631609110528 inference_utils.py:74] Loading Gin config file geometry_150M_generate.gin
I0123 12:32:08.193427 139631609110528 inference_utils.py:76] Overriding Gin param DecoderOnlyLanguageModelGenerate.output_token_losses=True
I0123 12:32:08.193453 139631609110528 inference_utils.py:76] Overriding Gin param TransformerTaskConfig.batch_size=32
I0123 12:32:08.193477 139631609110528 inference_utils.py:76] Overriding Gin param TransformerTaskConfig.sequence_length=128
I0123 12:32:08.193503 139631609110528 inference_utils.py:76] Overriding Gin param Trainer.restore_state_variables=False
I0123 12:32:08.193548 139631609110528 resource_reader.py:50] system_path_file_exists:base_htrans.gin
E0123 12:32:08.193690 139631609110528 resource_reader.py:55] Path not found: base_htrans.gin
I0123 12:32:08.193897 139631609110528 resource_reader.py:50] system_path_file_exists:trainer_configuration.gin
E0123 12:32:08.194003 139631609110528 resource_reader.py:55] Path not found: trainer_configuration.gin
I0123 12:32:08.200375 139631609110528 resource_reader.py:50] system_path_file_exists:size/medium_150M.gin
E0123 12:32:08.200497 139631609110528 resource_reader.py:55] Path not found: size/medium_150M.gin
I0123 12:32:08.200821 139631609110528 resource_reader.py:50] system_path_file_exists:options/positions_t5.gin
E0123 12:32:08.200924 139631609110528 resource_reader.py:55] Path not found: options/positions_t5.gin
I0123 12:32:08.201202 139631609110528 resource_reader.py:50] system_path_file_exists:options/lr_cosine_decay.gin
E0123 12:32:08.201301 139631609110528 resource_reader.py:55] Path not found: options/lr_cosine_decay.gin
I0123 12:32:08.201719 139631609110528 resource_reader.py:50] system_path_file_exists:options/seq_1024_nocache.gin
E0123 12:32:08.201819 139631609110528 resource_reader.py:55] Path not found: options/seq_1024_nocache.gin
I0123 12:32:08.205528 139631609110528 training_loop.py:334] ==== Training loop: initializing model ====
I0123 12:32:08.301655 139631609110528 xla_bridge.py:660] Unable to initialize backend 'rocm': NOT_FOUND: Could not find registered platform with name: "rocm". Available platform names are: CUDA
I0123 12:32:08.302402 139631609110528 xla_bridge.py:660] Unable to initialize backend 'tpu': INTERNAL: Failed to open libtpu.so: libtpu.so: cannot open shared object file: No such file or directory
I0123 12:32:08.309308 139631609110528 training_loop.py:335] Process 0 of 1
I0123 12:32:08.309365 139631609110528 training_loop.py:336] Local device count = 1
I0123 12:32:08.309408 139631609110528 training_loop.py:337] Number of replicas = 1
I0123 12:32:08.309442 139631609110528 training_loop.py:339] Using random number seed 42
I0123 12:32:08.801817 139631609110528 training_loop.py:359] Initializing the model.
I0123 12:32:09.192415 139631609110528 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.192659 139631609110528 decoder_stack.py:316] dstack: scanning over 1 windows.
I0123 12:32:09.192759 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 12:32:09.192837 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 12:32:09.192912 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 12:32:09.192991 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 12:32:09.193062 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 12:32:09.193131 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 12:32:09.193204 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 12:32:09.193274 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 12:32:09.193341 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 12:32:09.193409 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 12:32:09.193477 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 12:32:09.193544 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode init.
I0123 12:32:09.193583 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.193627 139631609110528 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 12:32:09.193750 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.193790 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.193823 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.195903 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.201246 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.212007 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.212284 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.216693 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:09.227348 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.227408 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.227448 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.227483 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.227548 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.228724 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.228802 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.229509 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.232014 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.238249 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.239558 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.239639 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.239675 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.239736 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.239866 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.240199 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.240247 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.242163 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.242262 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.245131 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.245211 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.245725 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.256820 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.266083 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.266190 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.266487 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.266570 139631609110528 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 12:32:09.266681 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.266721 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.266753 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.268644 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.271188 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.276821 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.277093 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.279807 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:09.283697 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.283758 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.283797 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.283829 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.283890 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.284465 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.284541 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.284902 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.285694 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.288223 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.288851 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.288932 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.288967 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.289026 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.289154 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.289476 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.289519 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.291487 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.291583 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.294146 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.294230 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.294666 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.297000 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.298951 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.299051 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.299358 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.299443 139631609110528 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 12:32:09.299557 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.299598 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.299632 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.301918 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.304317 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.309919 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.310185 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.312840 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:09.316674 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.316730 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.316766 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.316798 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.316859 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.317419 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.317495 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.317867 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.318630 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.321132 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.321822 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.321902 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.321937 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.321995 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.322125 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.322453 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.322496 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.324408 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.324504 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.327024 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.327110 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.327594 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.329891 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.331832 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.331926 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.332220 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.332300 139631609110528 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 12:32:09.332410 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.332450 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.332481 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.334418 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.336800 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.342452 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.342719 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.345339 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:09.349114 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.349170 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.349205 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.349236 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.349296 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.349863 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.349939 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.350296 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.351067 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.353594 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.354231 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.354308 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.354342 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.354401 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.354526 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.354852 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.354896 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.356792 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.356887 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.359474 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.359559 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.359983 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.362380 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.364327 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.364423 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.364716 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.364796 139631609110528 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 12:32:09.364907 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.364946 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.364977 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.366911 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.369314 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.374961 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.375227 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.378297 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:09.382082 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.382139 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.382174 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.382205 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.382265 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.382829 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.382906 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.383268 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.384038 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.387104 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.387934 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.388028 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.388072 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.388149 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.388317 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.388762 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.388815 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.391384 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.391500 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.394556 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.394640 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.395093 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.397449 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.399486 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.399589 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.399895 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.399979 139631609110528 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 12:32:09.400094 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.400135 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.400167 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.402123 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.404588 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.410332 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.410600 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.413326 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:09.417089 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.417144 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.417179 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.417210 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.417270 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.417884 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.417962 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.418334 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.419141 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.421659 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.422285 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.422368 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.422404 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.422466 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.422599 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.422932 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.422978 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.424919 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.425015 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.427639 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.427724 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.428160 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.430458 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.432353 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.432448 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.432742 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.432822 139631609110528 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 12:32:09.432931 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.432970 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.433000 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.434843 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.437285 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.442860 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.443122 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.445767 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:09.449502 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.449557 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.449592 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.449623 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.449691 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.450252 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.450328 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.450685 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.451447 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.453935 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.454563 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.454641 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.454676 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.454735 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.454863 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.455185 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.455228 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.457519 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.457613 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.460125 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.460206 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.460640 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.606149 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.608357 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.608510 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.608829 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.608922 139631609110528 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 12:32:09.609041 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.609082 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.609114 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.611209 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.613774 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.619513 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.619797 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.622498 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:09.626402 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.626461 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.626499 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.626531 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.626594 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.627212 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.627295 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.627669 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.628461 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.631081 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.631727 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.631812 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.631849 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.631909 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.632040 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.632373 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.632417 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.634345 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.634439 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.636959 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.637039 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.637527 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.639891 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.641828 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.641930 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.642223 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.642305 139631609110528 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 12:32:09.642415 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.642453 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.642484 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.644421 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.646816 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.652475 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.652740 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.655436 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:09.659220 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.659278 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.659315 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.659347 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.659408 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.659981 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.660059 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.660418 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.661196 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.663769 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.664390 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.664468 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.664503 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.664562 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.664689 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.665017 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.665061 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.667292 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.667386 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.669923 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.670004 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.670439 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.672686 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.674599 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.674693 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.674985 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.675073 139631609110528 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 12:32:09.675188 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.675228 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.675259 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.677164 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.679548 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.685485 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.685758 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.688441 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:09.692131 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.692188 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.692224 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.692254 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.692316 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.692868 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.692946 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.693310 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.694134 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.696628 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.697243 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.697320 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.697355 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.697413 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.697542 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.697874 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.697917 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.699810 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.699903 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.702464 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.702544 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.702981 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.705227 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.707200 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.707295 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.707582 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.707670 139631609110528 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 12:32:09.707783 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.707823 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.707854 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.709712 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.712139 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.717690 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.717959 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.720619 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:09.724303 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.724359 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.724395 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.724426 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.724528 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.725092 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.725167 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.725525 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.726290 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.728767 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.729382 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.729459 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.729494 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.729556 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.729689 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.730014 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.730057 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.731996 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.732091 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.734818 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.734899 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.735336 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.737618 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.739513 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.739607 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.739898 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.739980 139631609110528 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 12:32:09.740097 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.740138 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.740170 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.742010 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.744424 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.749974 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.750229 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.752830 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:09.756914 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.756970 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.757006 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.757037 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.757097 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.757656 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.757736 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.758097 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.758862 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.761313 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.761945 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.762023 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.762058 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.762117 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.762249 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.762567 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.762610 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.764564 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.764657 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.767275 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.767355 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.767785 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.770065 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.771958 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.772051 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.772339 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.772622 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 12:32:09.772691 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 12:32:09.772758 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 12:32:09.772815 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 12:32:09.772870 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 12:32:09.772923 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 12:32:09.772975 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 12:32:09.773028 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 12:32:09.773080 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 12:32:09.773132 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 12:32:09.773182 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 12:32:09.773233 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode init.
I0123 12:32:09.773271 139631609110528 decoder_stack.py:344] dstack: Final layernorm.
I0123 12:32:09.776777 139631609110528 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:09.824415 139631609110528 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.824499 139631609110528 decoder_stack.py:333] dstack: autoregressive generator.
I0123 12:32:09.824553 139631609110528 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 12:32:09.824656 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.824695 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.824725 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.824787 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.827210 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.832687 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.832948 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.835577 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:09.852327 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.852384 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.852419 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.852450 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.852512 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.853631 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.853715 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.854421 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.856415 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.861223 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.862599 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.862689 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.862728 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.862791 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.862931 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.863050 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.863092 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.865021 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.865115 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.867599 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.867682 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.867792 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.870036 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.872045 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.872141 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.872433 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.872515 139631609110528 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 12:32:09.872623 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.872663 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.872694 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.872759 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.875066 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.880643 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.880903 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.883663 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:09.896805 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.896862 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.896897 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.896928 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.896989 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.897540 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.897616 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.897988 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.898694 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.901200 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.901826 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.901904 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.901953 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.902013 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.902140 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.902247 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.902286 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.904255 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.904348 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.910149 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.910274 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.910398 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.912810 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.914822 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.914922 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.915232 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.915320 139631609110528 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 12:32:09.915442 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.915486 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.915519 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.915587 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.917917 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.923530 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.923806 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.926591 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:09.939667 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.939728 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.939769 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.939802 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.939867 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.940454 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.940532 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.940904 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.941793 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.944548 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.945165 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.945241 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.945276 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.945341 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.945467 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.945574 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.945613 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.947615 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.947713 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.950171 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.950258 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.950370 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.952650 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.954622 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.954724 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.955023 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.955107 139631609110528 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 12:32:09.955220 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.955261 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.955293 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.955359 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.957614 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:09.963215 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.963486 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:09.966203 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:09.979015 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:09.979072 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:09.979108 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:09.979139 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.979200 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.979753 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.979833 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.980187 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.980872 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.983373 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.983995 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.984072 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:09.984106 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:09.984169 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.984307 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:09.984416 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:09.984455 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.986700 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.986795 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.989215 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.989294 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:09.989406 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:09.991629 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:09.993483 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.993578 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:09.993872 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.993952 139631609110528 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 12:32:09.994062 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:09.994101 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:09.994131 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:09.994194 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:09.996506 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.001952 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.002217 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.004827 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.017461 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.017517 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.017560 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.017591 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.017660 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.018224 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.018301 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.018661 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.019357 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.021901 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.022526 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.022603 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.022645 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.022704 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.022836 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.022947 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.022985 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.024864 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.024957 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.027390 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.027471 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.027578 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.029848 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.031704 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.031799 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.032082 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.032162 139631609110528 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 12:32:10.032269 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.032308 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.032338 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.032401 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.034666 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.040109 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.040368 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.043214 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.055864 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.055920 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.055955 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.055986 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.056048 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.056607 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.056683 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.057043 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.057757 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.060245 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.060862 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.060939 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.060974 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.061032 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.061163 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.061281 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.061320 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.063254 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.063348 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.065756 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.065837 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.065945 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.068167 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.070023 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.070119 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.070409 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.070490 139631609110528 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 12:32:10.070599 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.070638 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.070669 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.070732 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.072978 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.078704 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.078964 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.081564 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.094554 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.094609 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.094645 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.094676 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.094738 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.095303 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.095380 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.095742 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.096434 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.098953 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.099615 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.099694 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.099730 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.099790 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.099921 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.100031 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.100075 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.101983 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.102077 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.104495 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.104574 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.104680 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.106894 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.108798 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.108893 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.109179 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.109259 139631609110528 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 12:32:10.109367 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.109407 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.109437 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.109500 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.111756 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.117204 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.117480 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.120157 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.132757 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.132814 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.132850 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.132880 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.132943 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.133548 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.133625 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.133992 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.134680 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.137151 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.137781 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.137859 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.137895 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.137954 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.138082 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.138190 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.138234 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.140132 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.140226 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.142702 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.142785 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.142892 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.145079 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.146950 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.147046 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.147334 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.147415 139631609110528 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 12:32:10.147523 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.147563 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.147594 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.147657 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.149909 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.155444 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.155705 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.158328 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.170957 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.171013 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.171050 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.171081 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.171142 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.171703 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.171780 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.172135 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.172823 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.175606 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.176279 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.176358 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.176393 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.176452 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.176580 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.176688 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.176728 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.178615 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.178709 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.181115 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.181197 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.181304 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.183523 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.185452 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.185547 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.185840 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.185922 139631609110528 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 12:32:10.186030 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.186069 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.186100 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.186162 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.188419 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.193835 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.194094 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.197054 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.209479 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.209534 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.209569 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.209600 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.209668 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.210271 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.210348 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.210705 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.211386 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.213834 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.214453 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.214531 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.214566 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.214625 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.214755 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.214865 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.214904 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.216769 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.216868 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.219326 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.219405 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.219511 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.221734 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.223575 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.223670 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.223956 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.224036 139631609110528 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 12:32:10.224142 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.224182 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.224212 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.224273 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.226506 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.231974 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.232233 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.234846 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.247387 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.247443 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.247480 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.247511 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.247574 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.248134 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.248210 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.248565 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.249263 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.251749 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.252418 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.252496 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.252531 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.252590 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.252717 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.252830 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.252869 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.254753 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.254860 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.257257 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.257337 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.257444 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.259634 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.261546 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.261646 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.261937 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.262017 139631609110528 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 12:32:10.262126 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.262166 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.262197 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.262259 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.264486 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.269903 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.270162 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.272794 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.285573 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.285629 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.285680 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.285712 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.285776 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.286348 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.286424 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.286787 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.287480 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.290039 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.290680 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.290760 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.290797 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.290858 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.290992 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.291108 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.291149 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.293039 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.293132 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.295555 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.295635 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.295740 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.298353 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.300232 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.300327 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.300611 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.300699 139631609110528 decoder_stack.py:344] dstack: Final layernorm.
I0123 12:32:10.303561 139631609110528 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:10.358763 139631609110528 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.358849 139631609110528 decoder_stack.py:333] dstack: autoregressive generator.
I0123 12:32:10.358904 139631609110528 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 12:32:10.359010 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.359049 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.359079 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.359142 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.361474 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.366834 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.367091 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.369638 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.382165 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.382222 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.382258 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.382288 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.382349 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.382909 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.382985 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.383336 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.384004 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.386510 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.387128 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.387206 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.387241 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.387299 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.387428 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.387542 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.387580 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.389415 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.389508 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.391891 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.391972 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.392081 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.394326 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.396171 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.396266 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.396548 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.396628 139631609110528 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 12:32:10.396735 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.396775 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.396805 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.396866 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.399099 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.404448 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.404706 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.407347 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.419550 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.419606 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.419641 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.419671 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.419732 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.420280 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.420356 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.420708 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.421381 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.423886 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.424497 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.424575 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.424610 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.424670 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.424799 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.424908 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.424954 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.426801 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.426895 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.429290 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.429369 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.429478 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.431728 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.433557 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.433659 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.433949 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.434030 139631609110528 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 12:32:10.434137 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.434176 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.434207 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.434268 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.436503 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.441860 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.442119 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.444746 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.456990 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.457046 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.457083 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.457113 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.457174 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.457731 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.457809 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.458166 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.458843 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.461794 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.462407 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.462486 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.462521 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.462581 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.462709 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.462817 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.462856 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.464689 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.464785 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.467173 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.467252 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.467362 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.469594 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.471438 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.471533 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.471816 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.471897 139631609110528 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 12:32:10.472004 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.472043 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.472074 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.472135 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.474337 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.479790 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.480051 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.482676 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.494980 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.495038 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.495076 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.495114 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.495176 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.495740 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.495815 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.496170 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.496844 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.499362 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.499976 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.500051 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.500084 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.500143 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.500267 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.500374 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.500413 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.502278 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.502371 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.504761 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.504839 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.504945 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.507239 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.509097 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.509191 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.509477 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.509557 139631609110528 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 12:32:10.509670 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.509709 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.509738 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.509799 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.512036 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.517451 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.517721 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.520389 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.532849 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.532904 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.532938 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.532968 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.533030 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.533587 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.533668 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.534029 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.534704 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.537223 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.537847 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.537924 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.537957 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.538014 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.538141 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.538248 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.538285 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.540145 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.540242 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.542633 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.542710 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.542820 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.545087 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.546993 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.547092 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.547385 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.547467 139631609110528 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 12:32:10.547577 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.547616 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.547647 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.547710 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.549941 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.555398 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.555657 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.558329 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.570661 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.570715 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.570753 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.570784 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.570844 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.571394 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.571470 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.571828 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.572511 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.575455 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.576076 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.576151 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.576184 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.576242 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.576367 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.576472 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.576508 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.578395 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.578492 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.581010 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.581087 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.581193 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.583471 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.585331 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.585425 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.585716 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.585797 139631609110528 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 12:32:10.585903 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.585940 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.585970 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.586030 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.588230 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.593589 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.593848 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.596526 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.608928 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.608983 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.609016 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.609046 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.609107 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.609668 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.609745 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.610110 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.610821 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.613357 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.613995 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.614072 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.614108 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.614165 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.614289 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.614393 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.614430 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.616291 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.616382 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.618813 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.618891 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.618996 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.621246 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.623116 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.623210 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.623494 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.623574 139631609110528 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 12:32:10.623681 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.623719 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.623748 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.623809 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.626047 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.631428 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.631686 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.634353 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.646792 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.646847 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.646881 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.646910 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.646971 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.647531 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.647606 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.647962 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.648648 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.651177 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.651801 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.651876 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.651910 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.651968 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.652093 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.652199 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.652236 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.654104 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.654196 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.656593 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.656676 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.656784 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.659070 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.660906 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.661000 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.661284 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.661364 139631609110528 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 12:32:10.661470 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.661508 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.661538 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.661600 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.663853 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.669259 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.669518 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.672187 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.684649 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.684705 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.684739 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.684769 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.684830 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.685382 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.685457 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.685834 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.686513 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.689408 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.690037 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.690115 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.690149 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.690206 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.690333 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.690440 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.690477 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.692340 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.692432 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.694825 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.694910 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.695019 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.697275 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.699120 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.699214 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.699497 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.699575 139631609110528 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 12:32:10.699681 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.699720 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.699749 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.699812 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.702075 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.707503 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.707760 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.710429 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.722913 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.722967 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.723001 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.723030 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.723096 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.723649 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.723724 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.724084 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.724780 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.727297 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.727914 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.727989 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.728022 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.728077 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.728201 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.728305 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.728342 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.730658 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.730752 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.733120 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.733198 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.733309 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.735553 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.737393 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.737486 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.737777 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.737858 139631609110528 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 12:32:10.737962 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.737999 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.738028 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.738088 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.740288 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.745644 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.745902 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.748564 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.760924 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.760979 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.761012 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.761041 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.761101 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.761660 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.761738 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.762094 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.762780 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.765291 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.765933 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.766010 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.766043 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.766099 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.766224 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.766329 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.766366 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.768217 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.768307 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.770688 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.770767 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.770873 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.773137 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.774980 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.775074 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.775357 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.775436 139631609110528 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 12:32:10.775541 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:10.775578 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:10.775606 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:10.775666 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.777893 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:10.783524 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.783780 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:10.786437 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:10.798785 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:10.798839 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:10.798873 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:10.798902 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.798963 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.799514 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.799589 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.799942 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.800621 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.803490 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.804113 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.804189 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:10.804223 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:10.804278 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.804403 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:10.804509 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:10.804546 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.806407 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.806498 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.808879 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.808956 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:10.809061 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:10.811341 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:10.813168 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.813261 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:10.813544 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:10.813626 139631609110528 decoder_stack.py:344] dstack: Final layernorm.
I0123 12:32:10.816420 139631609110528 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:15.311575 139631609110528 optimizer_config.py:74] Using Flax Adafactor Optimizer. lr=1.000000, b1=0.900000
I0123 12:32:15.814186 139631609110528 training_loop.py:409] No working directory specified.
I0123 12:32:15.814313 139631609110528 training_loop.py:431] Loading pre-trained model from ag_ckpt_vocab:
I0123 12:32:15.815087 139631609110528 checkpoints.py:1062] Restoring legacy Flax checkpoint from ag_ckpt_vocab/checkpoint_10999999
I0123 12:32:19.078399 139631609110528 training_loop.py:447] Only restoring trainable parameters.
I0123 12:32:19.079116 139631609110528 training_loop.py:724] parameter: decoder/embed/embedding, shape (1024, 1024), size 1048576
I0123 12:32:19.079177 139631609110528 training_loop.py:724] parameter: decoder/final_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.079223 139631609110528 training_loop.py:724] parameter: decoder/transformer0/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 12:32:19.079265 139631609110528 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 12:32:19.079305 139631609110528 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.079344 139631609110528 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.079382 139631609110528 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.079420 139631609110528 training_loop.py:724] parameter: decoder/transformer0/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.079457 139631609110528 training_loop.py:724] parameter: decoder/transformer0/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 12:32:19.079494 139631609110528 training_loop.py:724] parameter: decoder/transformer0/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 12:32:19.079531 139631609110528 training_loop.py:724] parameter: decoder/transformer0/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.079567 139631609110528 training_loop.py:724] parameter: decoder/transformer0/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.079604 139631609110528 training_loop.py:724] parameter: decoder/transformer1/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 12:32:19.079640 139631609110528 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 12:32:19.079677 139631609110528 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.079714 139631609110528 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.079751 139631609110528 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.079787 139631609110528 training_loop.py:724] parameter: decoder/transformer1/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.079823 139631609110528 training_loop.py:724] parameter: decoder/transformer1/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 12:32:19.079859 139631609110528 training_loop.py:724] parameter: decoder/transformer1/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 12:32:19.079909 139631609110528 training_loop.py:724] parameter: decoder/transformer1/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.079948 139631609110528 training_loop.py:724] parameter: decoder/transformer1/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.079985 139631609110528 training_loop.py:724] parameter: decoder/transformer10/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 12:32:19.080022 139631609110528 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 12:32:19.080058 139631609110528 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.080094 139631609110528 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.080130 139631609110528 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.080168 139631609110528 training_loop.py:724] parameter: decoder/transformer10/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.080204 139631609110528 training_loop.py:724] parameter: decoder/transformer10/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 12:32:19.080239 139631609110528 training_loop.py:724] parameter: decoder/transformer10/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 12:32:19.080275 139631609110528 training_loop.py:724] parameter: decoder/transformer10/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.080311 139631609110528 training_loop.py:724] parameter: decoder/transformer10/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.080346 139631609110528 training_loop.py:724] parameter: decoder/transformer11/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 12:32:19.080381 139631609110528 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 12:32:19.080416 139631609110528 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.080451 139631609110528 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.080487 139631609110528 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.080522 139631609110528 training_loop.py:724] parameter: decoder/transformer11/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.080557 139631609110528 training_loop.py:724] parameter: decoder/transformer11/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 12:32:19.080593 139631609110528 training_loop.py:724] parameter: decoder/transformer11/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 12:32:19.080628 139631609110528 training_loop.py:724] parameter: decoder/transformer11/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.080663 139631609110528 training_loop.py:724] parameter: decoder/transformer11/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.080698 139631609110528 training_loop.py:724] parameter: decoder/transformer2/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 12:32:19.080734 139631609110528 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 12:32:19.080769 139631609110528 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.080805 139631609110528 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.080846 139631609110528 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.080883 139631609110528 training_loop.py:724] parameter: decoder/transformer2/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.080919 139631609110528 training_loop.py:724] parameter: decoder/transformer2/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 12:32:19.080955 139631609110528 training_loop.py:724] parameter: decoder/transformer2/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 12:32:19.080991 139631609110528 training_loop.py:724] parameter: decoder/transformer2/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.081026 139631609110528 training_loop.py:724] parameter: decoder/transformer2/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.081061 139631609110528 training_loop.py:724] parameter: decoder/transformer3/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 12:32:19.081096 139631609110528 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 12:32:19.081131 139631609110528 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.081167 139631609110528 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.081203 139631609110528 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.081239 139631609110528 training_loop.py:724] parameter: decoder/transformer3/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.081274 139631609110528 training_loop.py:724] parameter: decoder/transformer3/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 12:32:19.081309 139631609110528 training_loop.py:724] parameter: decoder/transformer3/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 12:32:19.081345 139631609110528 training_loop.py:724] parameter: decoder/transformer3/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.081380 139631609110528 training_loop.py:724] parameter: decoder/transformer3/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.081416 139631609110528 training_loop.py:724] parameter: decoder/transformer4/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 12:32:19.081451 139631609110528 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 12:32:19.081486 139631609110528 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.081521 139631609110528 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.081557 139631609110528 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.081592 139631609110528 training_loop.py:724] parameter: decoder/transformer4/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.081627 139631609110528 training_loop.py:724] parameter: decoder/transformer4/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 12:32:19.081678 139631609110528 training_loop.py:724] parameter: decoder/transformer4/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 12:32:19.081716 139631609110528 training_loop.py:724] parameter: decoder/transformer4/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.081752 139631609110528 training_loop.py:724] parameter: decoder/transformer4/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.081787 139631609110528 training_loop.py:724] parameter: decoder/transformer5/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 12:32:19.081829 139631609110528 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 12:32:19.081866 139631609110528 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.081901 139631609110528 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.081937 139631609110528 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.081973 139631609110528 training_loop.py:724] parameter: decoder/transformer5/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.082008 139631609110528 training_loop.py:724] parameter: decoder/transformer5/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 12:32:19.082043 139631609110528 training_loop.py:724] parameter: decoder/transformer5/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 12:32:19.082078 139631609110528 training_loop.py:724] parameter: decoder/transformer5/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.082113 139631609110528 training_loop.py:724] parameter: decoder/transformer5/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.082149 139631609110528 training_loop.py:724] parameter: decoder/transformer6/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 12:32:19.082186 139631609110528 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 12:32:19.082221 139631609110528 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.082256 139631609110528 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.082291 139631609110528 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.082326 139631609110528 training_loop.py:724] parameter: decoder/transformer6/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.082360 139631609110528 training_loop.py:724] parameter: decoder/transformer6/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 12:32:19.082395 139631609110528 training_loop.py:724] parameter: decoder/transformer6/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 12:32:19.082430 139631609110528 training_loop.py:724] parameter: decoder/transformer6/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.082466 139631609110528 training_loop.py:724] parameter: decoder/transformer6/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.082512 139631609110528 training_loop.py:724] parameter: decoder/transformer7/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 12:32:19.082564 139631609110528 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 12:32:19.082606 139631609110528 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.082644 139631609110528 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.082681 139631609110528 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.082717 139631609110528 training_loop.py:724] parameter: decoder/transformer7/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.082752 139631609110528 training_loop.py:724] parameter: decoder/transformer7/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 12:32:19.082788 139631609110528 training_loop.py:724] parameter: decoder/transformer7/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 12:32:19.082828 139631609110528 training_loop.py:724] parameter: decoder/transformer7/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.082865 139631609110528 training_loop.py:724] parameter: decoder/transformer7/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.082901 139631609110528 training_loop.py:724] parameter: decoder/transformer8/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 12:32:19.082935 139631609110528 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 12:32:19.082970 139631609110528 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.083005 139631609110528 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.083040 139631609110528 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.083075 139631609110528 training_loop.py:724] parameter: decoder/transformer8/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.083110 139631609110528 training_loop.py:724] parameter: decoder/transformer8/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 12:32:19.083145 139631609110528 training_loop.py:724] parameter: decoder/transformer8/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 12:32:19.083180 139631609110528 training_loop.py:724] parameter: decoder/transformer8/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.083215 139631609110528 training_loop.py:724] parameter: decoder/transformer8/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.083250 139631609110528 training_loop.py:724] parameter: decoder/transformer9/relative_positions/rel_embedding, shape (8, 32), size 256
I0123 12:32:19.083285 139631609110528 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/attention_scale, shape (8,), size 8
I0123 12:32:19.083320 139631609110528 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/keys_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.083355 139631609110528 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/pre_attn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.083389 139631609110528 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/queries_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.083425 139631609110528 training_loop.py:724] parameter: decoder/transformer9/tbase/_kvq/values_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.083459 139631609110528 training_loop.py:724] parameter: decoder/transformer9/tbase/ffn/hidden0/kernel, shape (1024, 4096), size 4194304
I0123 12:32:19.083494 139631609110528 training_loop.py:724] parameter: decoder/transformer9/tbase/ffn/output_layer/kernel, shape (4096, 1024), size 4194304
I0123 12:32:19.083529 139631609110528 training_loop.py:724] parameter: decoder/transformer9/tbase/post_attn_mlp/output_layer/kernel, shape (1024, 1024), size 1048576
I0123 12:32:19.083564 139631609110528 training_loop.py:724] parameter: decoder/transformer9/tbase/pre_ffn_layernorm/scale, shape (1024,), size 1024
I0123 12:32:19.083592 139631609110528 training_loop.py:725] Total parameters: 152072288
I0123 12:32:19.083801 139631609110528 training_loop.py:739] Total state size: 0
I0123 12:32:19.104342 139631609110528 training_loop.py:492] Training loop: creating task for mode beam_search
I0123 12:32:19.104644 139631609110528 training_loop.py:685] Creating logging writer (train) for mode beam_search
I0123 12:32:19.105022 139631609110528 training_loop.py:652] Compiling mode beam_search with jit.
I0123 12:32:19.105364 139631609110528 training_loop.py:89] registering functions: dict_keys([])
I0123 12:32:19.121765 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i ? perp j b b g
I0123 12:32:19.826584 139631609110528 ddar.py:60] Depth 1/1000 time = 0.6650278568267822
I0123 12:32:21.254051 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4273386001586914
I0123 12:32:22.621479 139631609110528 ddar.py:60] Depth 3/1000 time = 1.3672587871551514
I0123 12:32:24.019848 139631609110528 ddar.py:60] Depth 4/1000 time = 1.3981895446777344
I0123 12:32:25.391432 139631609110528 ddar.py:60] Depth 5/1000 time = 1.3712704181671143
I0123 12:32:26.708214 139631609110528 ddar.py:60] Depth 6/1000 time = 1.3051116466522217
I0123 12:32:28.137705 139631609110528 ddar.py:60] Depth 7/1000 time = 1.4293341636657715
I0123 12:32:29.582040 139631609110528 ddar.py:60] Depth 8/1000 time = 1.4441070556640625
I0123 12:32:29.586563 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:32:29.586647 139631609110528 alphageometry.py:540] Depth 0. There are 1 nodes to expand:
I0123 12:32:29.586682 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00
I0123 12:32:29.586712 139631609110528 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00
I0123 12:32:29.705985 139631609110528 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.706162 139631609110528 decoder_stack.py:316] dstack: scanning over 1 windows.
I0123 12:32:29.706259 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 12:32:29.706333 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 12:32:29.706403 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 12:32:29.706471 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 12:32:29.706540 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 12:32:29.706607 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 12:32:29.706673 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 12:32:29.706740 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 12:32:29.706807 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 12:32:29.706873 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 12:32:29.706939 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 12:32:29.707005 139631609110528 transformer_layer.py:657] tlayer: Skipping XL cache for mode beam_search.
I0123 12:32:29.707044 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:29.707088 139631609110528 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 12:32:29.707192 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:29.707229 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:29.707258 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:29.709121 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.711587 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:29.717323 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.717591 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:29.720164 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:29.724006 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:29.724062 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:29.724097 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:29.724130 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.724190 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.724784 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.724860 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.725395 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.726152 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.728620 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.729232 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.729309 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:29.729341 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:29.729400 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.729524 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:29.729855 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:29.729898 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:29.731849 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.731942 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:29.734369 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.734445 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:29.734869 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:29.737146 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:29.739048 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.739143 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:29.739428 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.739506 139631609110528 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 12:32:29.739612 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:29.739649 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:29.739678 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:29.741554 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.743860 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:29.749413 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.749680 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:29.752270 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:29.755841 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:29.755895 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:29.755928 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:29.755958 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.756019 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.756560 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.756633 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.756982 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.757731 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.760143 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.760806 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.760882 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:29.760916 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:29.760972 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.761099 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:29.761415 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:29.761456 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:29.763356 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.763448 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:29.765908 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.765985 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:29.766407 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:29.768708 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:29.770610 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.770702 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:29.770986 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.771065 139631609110528 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 12:32:29.771169 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:29.771206 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:29.771235 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:29.773047 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.775362 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:29.781391 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.781666 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:29.784214 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:29.787810 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:29.787864 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:29.787898 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:29.787927 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.787986 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.788584 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.788659 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.789013 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.789779 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.792193 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.792795 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.792870 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:29.792904 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:29.792962 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.793089 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:29.793406 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:29.793447 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:29.795403 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.795495 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:29.797938 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.798017 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:29.798441 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:29.800830 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:29.802718 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.802811 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:29.803099 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.803178 139631609110528 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 12:32:29.803284 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:29.803322 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:29.803352 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:29.805238 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.807544 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:29.813141 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.813397 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:29.815962 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:29.819630 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:29.819684 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:29.819717 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:29.819746 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.819805 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.820353 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.820427 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.820780 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.821529 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.823985 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.824605 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.824681 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:29.824714 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:29.824770 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.824894 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:29.825261 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:29.825304 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:29.827216 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.827309 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:29.829754 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.829832 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:29.830253 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:29.832493 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:29.834477 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.834571 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:29.834856 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.834934 139631609110528 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 12:32:29.835042 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:29.835080 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:29.835110 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:29.836923 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.839250 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:29.844860 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.845118 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:29.847678 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:29.851304 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:29.851359 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:29.851393 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:29.851423 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.851531 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.852086 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.852161 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.852517 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.853272 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.855713 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.856320 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.856394 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:29.856428 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:29.856484 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.856611 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:29.856922 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:29.856962 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:29.858922 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.859018 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:29.861542 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.861622 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:29.862067 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:29.864359 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:29.866261 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.866358 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:29.866654 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.866736 139631609110528 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 12:32:29.866848 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:29.866887 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:29.866917 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:29.868824 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.871179 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:29.876803 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.877058 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:29.879705 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:29.883339 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:29.883401 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:29.883437 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:29.883468 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.883531 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.884094 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.884172 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.884538 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.885314 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.887846 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.888875 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.888952 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:29.888986 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:29.889043 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.889190 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:29.889503 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:29.889544 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:29.891502 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.891598 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:29.894058 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:29.894136 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:29.894569 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.053648 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.055939 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.056082 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.056391 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.056482 139631609110528 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 12:32:30.056597 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.056637 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.056667 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.058651 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.061169 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.066810 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.067086 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.069674 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:30.073465 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.073520 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.073569 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.073603 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.073671 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.074275 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.074350 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.074708 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.075468 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.077947 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.078625 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.078702 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.078736 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.078794 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.078922 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.079244 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.079285 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.081192 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.081284 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.083760 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.083838 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.084266 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.086606 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.088509 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.088603 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.088894 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.088976 139631609110528 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 12:32:30.089084 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.089122 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.089152 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.090994 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.093329 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.099055 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.099312 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.101899 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:30.105816 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.105871 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.105905 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.105943 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.106004 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.106565 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.106640 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.106995 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.107758 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.110290 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.110910 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.110986 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.111020 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.111078 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.111207 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.111527 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.111569 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.113564 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.113664 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.116127 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.116205 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.116634 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.118913 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.120850 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.120944 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.121228 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.121308 139631609110528 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 12:32:30.121414 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.121451 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.121481 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.123342 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.125663 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.131215 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.131473 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.134087 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:30.137705 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.137759 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.137793 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.137822 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.137889 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.138446 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.138520 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.138869 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.139620 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.142121 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.142733 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.142810 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.142843 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.142900 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.143028 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.143347 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.143389 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.145278 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.145369 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.147816 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.147895 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.148319 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.150630 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.152531 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.152624 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.152907 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.152988 139631609110528 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 12:32:30.153095 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.153133 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.153163 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.154969 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.157266 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.163254 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.163508 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.166053 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:30.169693 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.169747 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.169781 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.169811 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.169873 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.170437 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.170513 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.170867 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.171624 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.174068 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.174674 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.174749 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.174782 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.174840 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.174968 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.175282 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.175323 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.177260 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.177352 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.179791 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.179871 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.180294 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.182531 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.184442 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.184536 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.184823 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.184902 139631609110528 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 12:32:30.185009 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.185048 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.185078 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.186950 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.189241 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.194775 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.195026 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.197620 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:30.201219 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.201273 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.201307 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.201336 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.201396 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.201954 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.202031 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.202382 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.203125 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.205599 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.206212 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.206289 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.206322 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.206379 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.206504 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.206818 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.206859 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.208747 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.208839 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.211388 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.211467 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.211887 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.214219 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.216125 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.216218 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.216503 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.216583 139631609110528 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 12:32:30.216689 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.216727 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.216757 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.218572 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.220862 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.226502 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.226758 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.229303 139631609110528 transformer_layer.py:213] tlayer: windowed attention.
I0123 12:32:30.232974 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.233029 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.233063 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.233093 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.233153 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.233711 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.233796 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[1,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.234155 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.234916 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.237354 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.237970 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.238047 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.238080 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.238137 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.238261 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.238574 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.238614 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.240564 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.240655 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.243084 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.243163 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.243588 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.245854 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.247760 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.247854 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.248147 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.248397 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 12:32:30.248463 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 12:32:30.248521 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 12:32:30.248574 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 12:32:30.248628 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 12:32:30.248680 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 12:32:30.248732 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 12:32:30.248784 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 12:32:30.248834 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 12:32:30.248885 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 12:32:30.248935 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 12:32:30.248985 139631609110528 transformer_layer.py:673] tlayer: Skipping XL cache update for mode beam_search.
I0123 12:32:30.249020 139631609110528 decoder_stack.py:344] dstack: Final layernorm.
I0123 12:32:30.251964 139631609110528 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=1/0)>
I0123 12:32:30.296228 139631609110528 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.296317 139631609110528 decoder_stack.py:333] dstack: autoregressive generator.
I0123 12:32:30.296370 139631609110528 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 12:32:30.296474 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.296511 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.296540 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.296602 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.298946 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.304261 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.304519 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.307059 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.319677 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.319731 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.319765 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.319794 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.319856 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.320746 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.320823 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.321187 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.321878 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.324320 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.324927 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.325002 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.325035 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.325092 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.325217 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.325323 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.325359 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.327189 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.327280 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.329688 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.329764 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.329871 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.332040 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.333891 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.333986 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.334284 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.334364 139631609110528 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 12:32:30.334470 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.334508 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.334537 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.334597 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.336816 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.342226 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.342485 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.345028 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.357216 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.357270 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.357304 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.357333 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.357394 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.357946 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.358025 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.358380 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.359053 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.361510 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.362126 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.362202 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.362236 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.362293 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.362421 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.362529 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.362566 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.364393 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.364485 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.366862 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.366940 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.367046 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.369261 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.371110 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.371204 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.371490 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.371575 139631609110528 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 12:32:30.371682 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.371719 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.371749 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.371809 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.374021 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.379442 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.379699 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.382272 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.394698 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.394752 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.394787 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.394816 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.394876 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.395423 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.395498 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.395851 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.396521 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.398956 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.399562 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.399637 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.399670 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.399726 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.399849 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.399955 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.399992 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.401882 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.401975 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.404373 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.404450 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.404554 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.406748 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.408589 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.408683 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.408974 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.409059 139631609110528 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 12:32:30.409166 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.409203 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.409232 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.409292 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.411594 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.416933 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.417189 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.419786 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.432438 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.432493 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.432528 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.432557 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.432618 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.433162 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.433236 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.433587 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.434259 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.436726 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.437339 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.437416 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.437450 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.437509 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.437637 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.437754 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.437792 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.439630 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.439722 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.442120 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.442198 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.442304 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.444560 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.446410 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.446504 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.446794 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.446875 139631609110528 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 12:32:30.446988 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.447026 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.447054 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.447114 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.449330 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.454664 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.454924 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.457540 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.469737 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.469791 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.469825 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.469855 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.469915 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.470460 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.470534 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.470884 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.471552 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.473997 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.474608 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.474684 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.474717 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.474774 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.474900 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.475007 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.475043 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.476941 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.477032 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.479421 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.479499 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.479604 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.481766 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.483597 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.483690 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.483983 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.484062 139631609110528 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 12:32:30.484169 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.484215 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.484246 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.484308 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.486537 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.492108 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.492363 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.494930 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.507172 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.507226 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.507261 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.507290 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.507350 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.507889 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.507964 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.508314 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.508997 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.511423 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.512077 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.512153 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.512186 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.512243 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.512368 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.512473 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.512510 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.514378 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.514470 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.516875 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.516952 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.517059 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.519245 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.521520 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.521614 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.521919 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.521999 139631609110528 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 12:32:30.522105 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.522143 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.522180 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.522242 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.524468 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.529983 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.530241 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.532858 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.545097 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.545152 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.545187 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.545216 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.545276 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.545877 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.545953 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.546319 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.547023 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.549492 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.550116 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.550192 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.550228 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.550287 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.550417 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.550527 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.550566 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.552458 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.552548 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.555028 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.555107 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.555213 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.557363 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.559206 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.559300 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.559591 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.559671 139631609110528 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 12:32:30.559777 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.559815 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.559851 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.559914 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.562134 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.567525 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.567788 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.570329 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.582466 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.582520 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.582554 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.582584 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.582644 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.583189 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.583263 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.583616 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.584290 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.586727 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.587382 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.587458 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.587492 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.587549 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.587675 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.587779 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.587816 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.589660 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.589753 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.592144 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.592220 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.592324 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.594479 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.596367 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.596460 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.596748 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.596827 139631609110528 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 12:32:30.596933 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.596972 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.597002 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.597069 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.599289 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.604620 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.604880 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.607494 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.619775 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.619830 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.619865 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.619895 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.619956 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.620502 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.620578 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.620932 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.622018 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.624477 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.625095 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.625298 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.625332 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.625389 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.625517 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.625625 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.625671 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.627521 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.627613 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.630014 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.630093 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.630200 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.632435 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.634274 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.634367 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.634658 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.634737 139631609110528 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 12:32:30.634843 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.634881 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.634911 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.634971 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.637194 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.642560 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.642817 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.645457 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.657601 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.657660 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.657696 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.657724 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.657785 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.658379 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.658454 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.658803 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.659478 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.661935 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.662550 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.662627 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.662662 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.662719 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.662848 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.662956 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.662993 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.664834 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.664925 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.667371 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.667450 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.667558 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.669728 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.671553 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.671645 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.671936 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.672015 139631609110528 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 12:32:30.672122 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.672159 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.672188 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.672248 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.674464 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.679875 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.680130 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.682711 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.694976 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.695030 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.695065 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.695095 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.695157 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.695703 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.695778 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.696130 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.696799 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.699241 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.699904 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.699980 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.700013 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.700070 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.700197 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.700305 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.700342 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.702189 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.702281 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.704660 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.704736 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.704842 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.707023 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.708919 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.709011 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.709299 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.709378 139631609110528 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 12:32:30.709483 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.709521 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.709550 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.709611 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.711834 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.717175 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.717433 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.720017 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.732565 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.732619 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.732653 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.732681 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.732742 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.733285 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.733358 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.733720 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.734402 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.736888 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.737499 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.737575 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.737609 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.737671 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.737802 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.737910 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.737947 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.739774 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.739865 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.742300 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.742377 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.742482 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.744691 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.746631 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.746725 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.747016 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.747099 139631609110528 decoder_stack.py:344] dstack: Final layernorm.
I0123 12:32:30.749881 139631609110528 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=3/0)>
I0123 12:32:30.799234 139631609110528 decoder_stack.py:275] dstack: embeddings = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.799318 139631609110528 decoder_stack.py:333] dstack: autoregressive generator.
I0123 12:32:30.799372 139631609110528 decoder_stack.py:224] dstack: ---- Layer 0 ----
I0123 12:32:30.799474 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.799516 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.799546 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.799608 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.801950 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.807305 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.807560 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.810119 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.822366 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.822421 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.822457 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.822487 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.822550 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.823097 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.823171 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.823522 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.824187 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.826668 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.827271 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.827346 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.827379 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.827436 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.827562 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.827668 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.827705 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.829516 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.829607 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.831978 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.832055 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.832160 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.834370 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.836170 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.836264 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.836550 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.836629 139631609110528 decoder_stack.py:224] dstack: ---- Layer 1 ----
I0123 12:32:30.836735 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.836772 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.836808 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.836870 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.839060 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.844355 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.844611 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.847363 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.859679 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.859736 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.859771 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.859802 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.859864 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.860430 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.860507 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.860873 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.861571 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.864154 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.864761 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.864837 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.864870 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.864927 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.865053 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.865158 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.865195 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.867054 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.867149 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.869592 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.869680 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.869793 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.872087 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.873909 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.874003 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.874294 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.874376 139631609110528 decoder_stack.py:224] dstack: ---- Layer 2 ----
I0123 12:32:30.874485 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.874525 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.874555 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.874624 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.876865 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.882262 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.882516 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.885218 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.897524 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.897579 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.897613 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.897650 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.897712 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.898260 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.898338 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.898704 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.899397 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.902340 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.902968 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.903047 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.903081 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.903141 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.903272 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.903383 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.903421 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.905250 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.905341 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.907771 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.907853 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.907960 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.910171 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.912052 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.912145 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.912430 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.912508 139631609110528 decoder_stack.py:224] dstack: ---- Layer 3 ----
I0123 12:32:30.912612 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.912649 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.912679 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.912745 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.914971 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.920372 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.920627 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.923304 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.935564 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.935620 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.935656 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.935687 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.935750 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.936296 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.936370 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.936722 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.937382 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.939921 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.940519 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.940593 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.940627 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.940684 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.940811 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.940916 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.940953 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.942802 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.942899 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.945303 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.945381 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.945488 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.947903 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.949786 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.949879 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.950163 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.950245 139631609110528 decoder_stack.py:224] dstack: ---- Layer 4 ----
I0123 12:32:30.950355 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.950394 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.950425 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.950488 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.952730 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.958080 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.958343 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.960985 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:30.973194 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:30.973248 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:30.973282 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:30.973310 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.973370 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.973921 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.973995 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.974355 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.975051 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.977555 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.978165 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.978245 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:30.978280 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:30.978338 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.978469 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:30.978579 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:30.978617 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.980476 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.980566 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.982928 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.983007 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:30.983114 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:30.985339 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:30.987177 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.987271 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:30.987555 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.987634 139631609110528 decoder_stack.py:224] dstack: ---- Layer 5 ----
I0123 12:32:30.987739 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:30.987777 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:30.987807 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:30.987867 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.990073 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:30.995369 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:30.995625 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:30.998242 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:31.010293 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:31.010353 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:31.010411 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:31.010446 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.010509 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.011057 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.011132 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.011487 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.012161 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.015107 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.015738 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.015817 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:31.015853 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:31.015911 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.016038 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:31.016146 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:31.016182 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.018023 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.018114 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.020479 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.020557 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:31.020662 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:31.022886 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.024706 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.024800 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.025084 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.025162 139631609110528 decoder_stack.py:224] dstack: ---- Layer 6 ----
I0123 12:32:31.025265 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:31.025303 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:31.025332 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:31.025391 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.027639 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:31.032929 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.033184 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:31.035794 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:31.047810 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:31.047866 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:31.047900 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:31.047930 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.047990 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.048656 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.048731 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.049092 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.049767 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.052254 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.052859 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.052935 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:31.052968 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:31.053026 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.053152 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:31.053259 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:31.053296 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.055137 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.055229 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.057769 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.057847 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:31.057952 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:31.060183 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.062002 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.062095 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.062382 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.062462 139631609110528 decoder_stack.py:224] dstack: ---- Layer 7 ----
I0123 12:32:31.062567 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:31.062604 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:31.062633 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:31.062693 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.064894 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:31.070204 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.070463 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:31.073071 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:31.085174 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:31.085227 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:31.085261 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:31.085290 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.085350 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.085901 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.085980 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.086329 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.086997 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.089470 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.090090 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.090165 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:31.090198 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:31.090255 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.090384 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:31.090490 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:31.090527 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.092332 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.092422 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.094783 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.094859 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:31.094965 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:31.097190 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.099015 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.099107 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.099390 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.099467 139631609110528 decoder_stack.py:224] dstack: ---- Layer 8 ----
I0123 12:32:31.099571 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:31.099608 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:31.099636 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:31.099695 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.101906 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:31.107212 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.107476 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:31.110081 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:31.122184 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:31.122238 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:31.122272 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:31.122300 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.122358 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.122899 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.122973 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.123322 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.123991 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.126816 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.127428 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.127507 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:31.127541 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:31.127596 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.127720 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:31.127827 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:31.127864 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.129692 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.129782 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.132128 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.132204 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:31.132309 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:31.134543 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.136356 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.136447 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.136733 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.136811 139631609110528 decoder_stack.py:224] dstack: ---- Layer 9 ----
I0123 12:32:31.136917 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:31.136954 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:31.136982 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:31.137042 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.139265 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:31.144550 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.144804 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:31.147442 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:31.159664 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:31.159718 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:31.159753 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:31.159782 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.159840 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.160379 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.160452 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.160801 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.161477 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.163952 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.164566 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.164639 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:31.164672 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:31.164728 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.164851 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:31.164958 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:31.164995 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.166804 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.166894 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.169243 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.169319 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:31.169425 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:31.171642 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.173465 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.173556 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.173847 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.173925 139631609110528 decoder_stack.py:224] dstack: ---- Layer 10 ----
I0123 12:32:31.174029 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:31.174066 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:31.174095 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:31.174154 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.176339 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:31.181602 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.181865 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:31.184461 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:31.196504 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:31.196559 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:31.196593 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:31.196623 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.196681 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.197229 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.197303 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.197660 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.198330 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.200793 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.201389 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.201463 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:31.201496 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:31.201552 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.201684 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:31.201791 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:31.201828 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.203639 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.203729 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.206086 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.206162 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:31.206268 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:31.208458 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.210284 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.210376 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.210661 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.210738 139631609110528 decoder_stack.py:224] dstack: ---- Layer 11 ----
I0123 12:32:31.210842 139631609110528 transformer_layer.py:154] tlayer: recurrent = False
I0123 12:32:31.210879 139631609110528 transformer_layer.py:155] tlayer: compute_importance = False
I0123 12:32:31.210908 139631609110528 transformer_layer.py:161] tlayer: compute keys,values,queries.
I0123 12:32:31.210969 139631609110528 transformer_base.py:146] kvq: pre_attn xs = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.213155 139631609110528 transformer_base.py:161] kvq: pre_attn dropout.
I0123 12:32:31.218464 139631609110528 transformer_base.py:173] kvq: queries = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.218720 139631609110528 transformer_base.py:194] kvq: normalize keys, queries.
I0123 12:32:31.221339 139631609110528 transformer_layer.py:169] tlayer: using autoregressive decoder.
I0123 12:32:31.233406 139631609110528 transformer_layer.py:299] tlayer: num_windows = 1.
I0123 12:32:31.233461 139631609110528 attention.py:418] Single window, no scan.
I0123 12:32:31.233495 139631609110528 transformer_layer.py:389] tlayer: self-attention.
I0123 12:32:31.233524 139631609110528 attention.py:133] attn: keys = Traced<ShapedArray(bfloat16[32,1024,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.233583 139631609110528 attention.py:134] attn: queries = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.234133 139631609110528 attention.py:139] attn: content attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.234208 139631609110528 attention.py:143] attn: pbias = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.234559 139631609110528 attention.py:150] attn: learned attention scale: Traced<ShapedArray(bfloat16[8])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.235225 139631609110528 attention.py:161] attn: pre-softmax attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.238067 139631609110528 attention.py:177] attn: final attn = Traced<ShapedArray(bfloat16[32,8,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.238672 139631609110528 attention.py:182] attn: y = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.238748 139631609110528 transformer_layer.py:468] tlayer: End windows.
I0123 12:32:31.238781 139631609110528 transformer_layer.py:472] tlayer: final FFN.
I0123 12:32:31.238839 139631609110528 transformer_base.py:399] tbase: attn_ys = Traced<ShapedArray(bfloat16[32,1,8,128])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.238965 139631609110528 transformer_base.py:410] tbase: post-attention MLP.
I0123 12:32:31.239072 139631609110528 nn_components.py:325] mlp: activation = None
I0123 12:32:31.239109 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.240940 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.241029 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.243387 139631609110528 transformer_base.py:431] tbase: pre-FFN layernorm = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.243465 139631609110528 transformer_base.py:443] tbase: final FFN
I0123 12:32:31.243572 139631609110528 nn_components.py:320] mlp: hidden 4096, relu
I0123 12:32:31.245789 139631609110528 nn_components.py:329] mlp: final activation = None
I0123 12:32:31.247619 139631609110528 nn_components.py:332] mlp: final = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.247710 139631609110528 nn_components.py:261] mlp: residual
I0123 12:32:31.247993 139631609110528 transformer_base.py:450] tbase: ys = Traced<ShapedArray(bfloat16[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:31.248074 139631609110528 decoder_stack.py:344] dstack: Final layernorm.
I0123 12:32:31.250878 139631609110528 decoder_stack.py:365] dstack: logits = Traced<ShapedArray(float32[32,1,1024])>with<DynamicJaxprTrace(level=2/0)>
I0123 12:32:43.317667 139631609110528 alphageometry.py:566] LM output (score=-0.726296): "k : D a k c k 13 T a c b k 14 ;"
I0123 12:32:43.317805 139631609110528 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2637, in add_clause
    raise PointTooFarError()
graph.PointTooFarError
"

I0123 12:32:43.317846 139631609110528 alphageometry.py:566] LM output (score=-0.875645): "k : C a c k 13 D a k c k 14 ;"
I0123 12:32:43.317877 139631609110528 alphageometry.py:567] Translation: "k = on_line k a c, on_bline k c a"

I0123 12:32:43.317909 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a ? perp j b b g"
I0123 12:32:43.318047 139631609110528 graph.py:498] 
I0123 12:32:43.318099 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a ? perp j b b g
I0123 12:32:44.232029 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8672153949737549
I0123 12:32:46.004534 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7723500728607178
I0123 12:32:47.866649 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8619320392608643
I0123 12:32:50.007176 139631609110528 ddar.py:60] Depth 4/1000 time = 2.1403064727783203
I0123 12:32:51.916633 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9090416431427002
I0123 12:32:54.049815 139631609110528 ddar.py:60] Depth 6/1000 time = 2.1140546798706055
I0123 12:32:56.072598 139631609110528 ddar.py:60] Depth 7/1000 time = 2.0226151943206787
I0123 12:32:58.065994 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9932341575622559
I0123 12:32:58.072475 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:32:58.072611 139631609110528 alphageometry.py:566] LM output (score=-1.339995): "k : D a k c k 13 ;"
I0123 12:32:58.072656 139631609110528 alphageometry.py:567] Translation: "k = on_bline k c a"

I0123 12:32:58.072699 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a ? perp j b b g"
I0123 12:32:58.072850 139631609110528 graph.py:498] 
I0123 12:32:58.072904 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a ? perp j b b g
I0123 12:32:58.988258 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8651540279388428
I0123 12:33:00.657389 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6690032482147217
I0123 12:33:02.216357 139631609110528 ddar.py:60] Depth 3/1000 time = 1.5588040351867676
I0123 12:33:03.965281 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7487397193908691
I0123 12:33:05.729460 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7638559341430664
I0123 12:33:07.610893 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8618748188018799
I0123 12:33:09.454293 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8432202339172363
I0123 12:33:11.265635 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8111600875854492
I0123 12:33:11.269925 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:33:11.269998 139631609110528 alphageometry.py:566] LM output (score=-1.682435): "k : C b c k 13 D b k c k 14 ;"
I0123 12:33:11.270035 139631609110528 alphageometry.py:567] Translation: "k = on_line k b c, on_bline k c b"

I0123 12:33:11.270072 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b ? perp j b b g"
I0123 12:33:11.270206 139631609110528 graph.py:498] 
I0123 12:33:11.270262 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b ? perp j b b g
I0123 12:33:12.387284 139631609110528 ddar.py:60] Depth 1/1000 time = 1.069737434387207
I0123 12:33:13.993922 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6064605712890625
I0123 12:33:15.887890 139631609110528 ddar.py:60] Depth 3/1000 time = 1.893723487854004
I0123 12:33:17.776662 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8885185718536377
I0123 12:33:19.663233 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8861620426177979
I0123 12:33:21.596201 139631609110528 ddar.py:60] Depth 6/1000 time = 1.914658784866333
I0123 12:33:23.509516 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9131529331207275
I0123 12:33:25.443518 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9338293075561523
I0123 12:33:25.450714 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:33:25.450798 139631609110528 alphageometry.py:566] LM output (score=-1.715602): "k : C a b k 13 D a k b k 14 ;"
I0123 12:33:25.450837 139631609110528 alphageometry.py:567] Translation: "k = on_line k a b, on_bline k b a"

I0123 12:33:25.450875 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a ? perp j b b g"
I0123 12:33:25.451016 139631609110528 graph.py:498] 
I0123 12:33:25.451071 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a ? perp j b b g
I0123 12:33:26.342010 139631609110528 ddar.py:60] Depth 1/1000 time = 0.842613935470581
I0123 12:33:27.907702 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5655486583709717
I0123 12:33:29.684325 139631609110528 ddar.py:60] Depth 3/1000 time = 1.776404857635498
I0123 12:33:31.490869 139631609110528 ddar.py:60] Depth 4/1000 time = 1.806260347366333
I0123 12:33:33.262611 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7713541984558105
I0123 12:33:35.144112 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8643686771392822
I0123 12:33:36.986943 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8426685333251953
I0123 12:33:38.622193 139631609110528 ddar.py:60] Depth 8/1000 time = 1.635073184967041
I0123 12:33:38.627374 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:33:38.627454 139631609110528 alphageometry.py:566] LM output (score=-1.774600): "k : C a e k 13 D a k e k 14 ;"
I0123 12:33:38.627490 139631609110528 alphageometry.py:567] Translation: "k = on_line k a e, on_bline k e a"

I0123 12:33:38.627529 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a ? perp j b b g"
I0123 12:33:38.627674 139631609110528 graph.py:498] 
I0123 12:33:38.627726 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a ? perp j b b g
I0123 12:33:39.717830 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0418906211853027
I0123 12:33:41.188612 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4706237316131592
I0123 12:33:42.806789 139631609110528 ddar.py:60] Depth 3/1000 time = 1.617999792098999
I0123 12:33:44.449986 139631609110528 ddar.py:60] Depth 4/1000 time = 1.643002986907959
I0123 12:33:45.862337 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4119763374328613
I0123 12:33:47.598315 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7220878601074219
I0123 12:33:49.282267 139631609110528 ddar.py:60] Depth 7/1000 time = 1.68375825881958
I0123 12:33:50.971571 139631609110528 ddar.py:60] Depth 8/1000 time = 1.689117431640625
I0123 12:33:50.977177 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:33:50.977269 139631609110528 alphageometry.py:566] LM output (score=-1.799103): "k : C c d k 13 D c k d k 14 ;"
I0123 12:33:50.977308 139631609110528 alphageometry.py:567] Translation: "k = on_line k c d, on_bline k d c"

I0123 12:33:50.977346 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c ? perp j b b g"
I0123 12:33:50.977494 139631609110528 graph.py:498] 
I0123 12:33:50.977552 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c ? perp j b b g
I0123 12:33:52.060033 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0347671508789062
I0123 12:33:53.331746 139631609110528 ddar.py:60] Depth 2/1000 time = 1.2715480327606201
I0123 12:33:54.873403 139631609110528 ddar.py:60] Depth 3/1000 time = 1.5414962768554688
I0123 12:33:56.450503 139631609110528 ddar.py:60] Depth 4/1000 time = 1.5769338607788086
I0123 12:33:58.042541 139631609110528 ddar.py:60] Depth 5/1000 time = 1.5916776657104492
I0123 12:33:59.735938 139631609110528 ddar.py:60] Depth 6/1000 time = 1.6798760890960693
I0123 12:34:01.402791 139631609110528 ddar.py:60] Depth 7/1000 time = 1.6666982173919678
I0123 12:34:02.845456 139631609110528 ddar.py:60] Depth 8/1000 time = 1.442493200302124
I0123 12:34:02.851280 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:34:02.851357 139631609110528 alphageometry.py:566] LM output (score=-1.974912): "k : P a b c k 13 ;"
I0123 12:34:02.851394 139631609110528 alphageometry.py:567] Translation: "k = on_pline k c a b"

I0123 12:34:02.851430 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b ? perp j b b g"
I0123 12:34:02.851562 139631609110528 graph.py:498] 
I0123 12:34:02.851614 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b ? perp j b b g
I0123 12:34:03.867321 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9761183261871338
I0123 12:34:05.287693 139631609110528 ddar.py:60] Depth 2/1000 time = 1.420196294784546
I0123 12:34:06.539319 139631609110528 ddar.py:60] Depth 3/1000 time = 1.2514517307281494
I0123 12:34:08.019266 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4797272682189941
I0123 12:34:09.525816 139631609110528 ddar.py:60] Depth 5/1000 time = 1.5061120986938477
I0123 12:34:10.871943 139631609110528 ddar.py:60] Depth 6/1000 time = 1.3334012031555176
I0123 12:34:12.406949 139631609110528 ddar.py:60] Depth 7/1000 time = 1.5348496437072754
I0123 12:34:13.944951 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5378282070159912
I0123 12:34:13.948933 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:34:13.949012 139631609110528 alphageometry.py:566] LM output (score=-2.152428): "k : D a k b k 13 ;"
I0123 12:34:13.949049 139631609110528 alphageometry.py:567] Translation: "k = on_bline k b a"

I0123 12:34:13.949084 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a ? perp j b b g"
I0123 12:34:13.949237 139631609110528 graph.py:498] 
I0123 12:34:13.949289 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a ? perp j b b g
I0123 12:34:14.832364 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8343517780303955
I0123 12:34:16.574405 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7419135570526123
I0123 12:34:18.381227 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8066415786743164
I0123 12:34:20.163297 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7818946838378906
I0123 12:34:21.945294 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7816712856292725
I0123 12:34:23.888339 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9245598316192627
I0123 12:34:25.557168 139631609110528 ddar.py:60] Depth 7/1000 time = 1.668663740158081
I0123 12:34:27.443341 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8859961032867432
I0123 12:34:27.448534 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:34:27.448617 139631609110528 alphageometry.py:566] LM output (score=-2.165369): "k : C a i k 13 D a k i k 14 ;"
I0123 12:34:27.448653 139631609110528 alphageometry.py:567] Translation: "k = on_line k a i, on_bline k i a"

I0123 12:34:27.448691 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a ? perp j b b g"
I0123 12:34:27.448827 139631609110528 graph.py:498] 
I0123 12:34:27.448883 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a ? perp j b b g
I0123 12:34:28.581171 139631609110528 ddar.py:60] Depth 1/1000 time = 1.084892749786377
I0123 12:34:30.126149 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5447628498077393
I0123 12:34:31.988433 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8620147705078125
I0123 12:34:33.835070 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8464319705963135
I0123 12:34:35.679832 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8444147109985352
I0123 12:34:37.572760 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8758361339569092
I0123 12:34:39.436722 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8637971878051758
I0123 12:34:41.315943 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8790466785430908
I0123 12:34:41.320708 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:34:41.320793 139631609110528 alphageometry.py:566] LM output (score=-2.504524): "k : D a d d k 13 ;"
I0123 12:34:41.320829 139631609110528 alphageometry.py:567] Translation: "k = on_circle k d a"

I0123 12:34:41.320865 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_circle k d a ? perp j b b g"
I0123 12:34:41.321006 139631609110528 graph.py:498] 
I0123 12:34:41.321058 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_circle k d a ? perp j b b g
I0123 12:34:42.766118 139631609110528 ddar.py:60] Depth 1/1000 time = 1.4002885818481445
I0123 12:34:44.938951 139631609110528 ddar.py:60] Depth 2/1000 time = 2.1726648807525635
I0123 12:34:46.980782 139631609110528 ddar.py:60] Depth 3/1000 time = 2.0416412353515625
I0123 12:34:49.285268 139631609110528 ddar.py:60] Depth 4/1000 time = 2.3043041229248047
I0123 12:34:51.591732 139631609110528 ddar.py:60] Depth 5/1000 time = 2.3060009479522705
I0123 12:34:54.059103 139631609110528 ddar.py:60] Depth 6/1000 time = 2.449556589126587
I0123 12:34:56.466056 139631609110528 ddar.py:60] Depth 7/1000 time = 2.4067718982696533
I0123 12:34:58.875961 139631609110528 ddar.py:60] Depth 8/1000 time = 2.4097163677215576
I0123 12:34:58.881037 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:34:58.881130 139631609110528 alphageometry.py:566] LM output (score=-2.561074): "k : D a c a k 13 D a c c k 14 ;"
I0123 12:34:58.881172 139631609110528 alphageometry.py:567] Translation: "k = on_circle k a c, on_circle k c a"

I0123 12:34:58.881213 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_circle k a c, on_circle k c a ? perp j b b g"
I0123 12:34:58.881362 139631609110528 graph.py:498] 
I0123 12:34:58.881425 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_circle k a c, on_circle k c a ? perp j b b g
I0123 12:35:00.082344 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1460530757904053
I0123 12:35:01.583383 139631609110528 ddar.py:60] Depth 2/1000 time = 1.500868320465088
I0123 12:35:03.525959 139631609110528 ddar.py:60] Depth 3/1000 time = 1.94240140914917
I0123 12:35:05.465130 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9389879703521729
I0123 12:35:07.413723 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9482450485229492
I0123 12:35:09.362446 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9477148056030273
I0123 12:35:11.450396 139631609110528 ddar.py:60] Depth 7/1000 time = 2.069532871246338
I0123 12:35:13.501625 139631609110528 ddar.py:60] Depth 8/1000 time = 2.0509235858917236
I0123 12:35:15.304557 139631609110528 ddar.py:60] Depth 9/1000 time = 1.8027198314666748
I0123 12:35:15.309795 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:35:15.309891 139631609110528 alphageometry.py:566] LM output (score=-2.585710): "k : D a b a k 13 D a b b k 14 ;"
I0123 12:35:15.309931 139631609110528 alphageometry.py:567] Translation: "k = on_circle k a b, on_circle k b a"

I0123 12:35:15.309971 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_circle k a b, on_circle k b a ? perp j b b g"
I0123 12:35:15.310126 139631609110528 graph.py:498] 
I0123 12:35:15.310183 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_circle k a b, on_circle k b a ? perp j b b g
I0123 12:35:16.530059 139631609110528 ddar.py:60] Depth 1/1000 time = 1.161604881286621
I0123 12:35:18.284574 139631609110528 ddar.py:60] Depth 2/1000 time = 1.75435209274292
I0123 12:35:19.975952 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6910231113433838
I0123 12:35:21.915903 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9397811889648438
I0123 12:35:23.868787 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9525060653686523
I0123 12:35:25.845037 139631609110528 ddar.py:60] Depth 6/1000 time = 1.975187063217163
I0123 12:35:27.962995 139631609110528 ddar.py:60] Depth 7/1000 time = 2.0984902381896973
I0123 12:35:30.043035 139631609110528 ddar.py:60] Depth 8/1000 time = 2.079857349395752
I0123 12:35:32.152636 139631609110528 ddar.py:60] Depth 9/1000 time = 2.1094272136688232
I0123 12:35:32.157677 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:35:32.157752 139631609110528 alphageometry.py:566] LM output (score=-2.613817): "k : C c h k 13 D c k h k 14 ;"
I0123 12:35:32.157789 139631609110528 alphageometry.py:567] Translation: "k = on_line k c h, on_bline k h c"

I0123 12:35:32.157825 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c h, on_bline k h c ? perp j b b g"
I0123 12:35:32.157964 139631609110528 graph.py:498] 
I0123 12:35:32.158017 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c h, on_bline k h c ? perp j b b g
I0123 12:35:33.060659 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8539083003997803
I0123 12:35:34.854263 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7933661937713623
I0123 12:35:36.684989 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8305389881134033
I0123 12:35:38.534845 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8496818542480469
I0123 12:35:40.121462 139631609110528 ddar.py:60] Depth 5/1000 time = 1.5863027572631836
I0123 12:35:42.239010 139631609110528 ddar.py:60] Depth 6/1000 time = 2.1029646396636963
I0123 12:35:44.126788 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8876142501831055
I0123 12:35:45.768179 139631609110528 ddar.py:60] Depth 8/1000 time = 1.641218900680542
I0123 12:35:45.774928 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:35:45.775018 139631609110528 alphageometry.py:566] LM output (score=-2.668563): "k : C b e k 13 D b k e k 14 ;"
I0123 12:35:45.775055 139631609110528 alphageometry.py:567] Translation: "k = on_line k b e, on_bline k e b"

I0123 12:35:45.775089 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b e, on_bline k e b ? perp j b b g"
I0123 12:35:45.775227 139631609110528 graph.py:498] 
I0123 12:35:45.775279 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b e, on_bline k e b ? perp j b b g
I0123 12:35:46.932248 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1087989807128906
I0123 12:35:48.615979 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6835699081420898
I0123 12:35:50.328364 139631609110528 ddar.py:60] Depth 3/1000 time = 1.712212085723877
I0123 12:35:52.037107 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7085700035095215
I0123 12:35:53.758543 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7210886478424072
I0123 12:35:55.848940 139631609110528 ddar.py:60] Depth 6/1000 time = 2.0758657455444336
I0123 12:35:57.672204 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8230702877044678
I0123 12:35:59.506864 139631609110528 ddar.py:60] Depth 8/1000 time = 1.834488868713379
I0123 12:35:59.512897 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:35:59.512993 139631609110528 alphageometry.py:566] LM output (score=-2.671607): "k : C a d k 13 D a d d k 14 ;"
I0123 12:35:59.513031 139631609110528 alphageometry.py:567] Translation: "k = on_line k a d, on_circle k d a"

I0123 12:35:59.513067 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a d, on_circle k d a ? perp j b b g"
I0123 12:35:59.513212 139631609110528 graph.py:498] 
I0123 12:35:59.513268 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a d, on_circle k d a ? perp j b b g
I0123 12:36:00.824976 139631609110528 ddar.py:60] Depth 1/1000 time = 1.2672638893127441
I0123 12:36:03.419604 139631609110528 ddar.py:60] Depth 2/1000 time = 2.594480276107788
I0123 12:36:06.242772 139631609110528 ddar.py:60] Depth 3/1000 time = 2.8229942321777344
I0123 12:36:08.836835 139631609110528 ddar.py:60] Depth 4/1000 time = 2.5938854217529297
I0123 12:36:11.928106 139631609110528 ddar.py:60] Depth 5/1000 time = 3.0908823013305664
I0123 12:36:14.848252 139631609110528 ddar.py:60] Depth 6/1000 time = 2.8887031078338623
I0123 12:36:17.749724 139631609110528 ddar.py:60] Depth 7/1000 time = 2.9012746810913086
I0123 12:36:20.347999 139631609110528 ddar.py:60] Depth 8/1000 time = 2.598057985305786
I0123 12:36:20.352822 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:36:20.352934 139631609110528 alphageometry.py:566] LM output (score=-2.747228): "k : D a k d k 13 D c k d k 14 ;"
I0123 12:36:20.352971 139631609110528 alphageometry.py:567] Translation: "k = on_bline k d a, on_bline k d c"

I0123 12:36:20.353013 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k d a, on_bline k d c ? perp j b b g"
I0123 12:36:20.353162 139631609110528 graph.py:498] 
I0123 12:36:20.353218 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k d a, on_bline k d c ? perp j b b g
I0123 12:36:21.664433 139631609110528 ddar.py:60] Depth 1/1000 time = 1.2548563480377197
I0123 12:36:23.384507 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7199139595031738
I0123 12:36:25.076953 139631609110528 ddar.py:60] Depth 3/1000 time = 1.69228196144104
I0123 12:36:27.033939 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9568219184875488
I0123 12:36:29.000263 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9659762382507324
I0123 12:36:30.872987 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8496348857879639
I0123 12:36:32.949776 139631609110528 ddar.py:60] Depth 7/1000 time = 2.076632499694824
I0123 12:36:35.043933 139631609110528 ddar.py:60] Depth 8/1000 time = 2.09397292137146
I0123 12:36:35.048728 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:36:35.048814 139631609110528 alphageometry.py:566] LM output (score=-2.787043): "k : D a k c k 13 D c k d k 14 ;"
I0123 12:36:35.048851 139631609110528 alphageometry.py:567] Translation: "k = on_bline k c a, on_bline k d c"

I0123 12:36:35.048887 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a, on_bline k d c ? perp j b b g"
I0123 12:36:35.049041 139631609110528 graph.py:498] 
I0123 12:36:35.049098 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a, on_bline k d c ? perp j b b g
I0123 12:36:36.369816 139631609110528 ddar.py:60] Depth 1/1000 time = 1.2628726959228516
I0123 12:36:38.041970 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6719563007354736
I0123 12:36:40.019661 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9774229526519775
I0123 12:36:42.025326 139631609110528 ddar.py:60] Depth 4/1000 time = 2.0054638385772705
I0123 12:36:43.742929 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7172362804412842
I0123 12:36:45.877631 139631609110528 ddar.py:60] Depth 6/1000 time = 2.1108241081237793
I0123 12:36:47.986593 139631609110528 ddar.py:60] Depth 7/1000 time = 2.108776092529297
I0123 12:36:50.101631 139631609110528 ddar.py:60] Depth 8/1000 time = 2.1148641109466553
I0123 12:36:50.106389 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:36:50.106475 139631609110528 alphageometry.py:566] LM output (score=-2.831175): "k : D a k d k 13 D b k d k 14 ;"
I0123 12:36:50.106514 139631609110528 alphageometry.py:567] Translation: "k = on_bline k d a, on_bline k d b"

I0123 12:36:50.106551 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k d a, on_bline k d b ? perp j b b g"
I0123 12:36:50.106694 139631609110528 graph.py:498] 
I0123 12:36:50.106749 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k d a, on_bline k d b ? perp j b b g
I0123 12:36:51.138827 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9761972427368164
I0123 12:36:52.933007 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7940335273742676
I0123 12:36:54.931575 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9983866214752197
I0123 12:36:56.952015 139631609110528 ddar.py:60] Depth 4/1000 time = 2.0202488899230957
I0123 12:36:58.672733 139631609110528 ddar.py:60] Depth 5/1000 time = 1.720334768295288
I0123 12:37:00.885493 139631609110528 ddar.py:60] Depth 6/1000 time = 2.188443660736084
I0123 12:37:03.034399 139631609110528 ddar.py:60] Depth 7/1000 time = 2.1487069129943848
I0123 12:37:05.193515 139631609110528 ddar.py:60] Depth 8/1000 time = 2.158935070037842
I0123 12:37:05.198593 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:37:05.198674 139631609110528 alphageometry.py:566] LM output (score=-2.978608): "k : C a j k 13 D a k j k 14 ;"
I0123 12:37:05.198711 139631609110528 alphageometry.py:567] Translation: "k = on_line k a j, on_bline k j a"

I0123 12:37:05.198747 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a j, on_bline k j a ? perp j b b g"
I0123 12:37:05.198896 139631609110528 graph.py:498] 
I0123 12:37:05.198954 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a j, on_bline k j a ? perp j b b g
I0123 12:37:06.074515 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8280718326568604
I0123 12:37:07.575333 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5006849765777588
I0123 12:37:08.912599 139631609110528 ddar.py:60] Depth 3/1000 time = 1.3370871543884277
I0123 12:37:10.526576 139631609110528 ddar.py:60] Depth 4/1000 time = 1.613809585571289
I0123 12:37:12.163104 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6362056732177734
I0123 12:37:13.599668 139631609110528 ddar.py:60] Depth 6/1000 time = 1.4231364727020264
I0123 12:37:15.276734 139631609110528 ddar.py:60] Depth 7/1000 time = 1.676903247833252
I0123 12:37:16.980148 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7032370567321777
I0123 12:37:16.985025 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:37:16.985098 139631609110528 alphageometry.py:566] LM output (score=-2.979882): "k : C g h k 13 D g k h k 14 ;"
I0123 12:37:16.985135 139631609110528 alphageometry.py:567] Translation: "k = on_line k g h, on_bline k h g"

I0123 12:37:16.985169 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k g h, on_bline k h g ? perp j b b g"
I0123 12:37:16.985302 139631609110528 graph.py:498] 
I0123 12:37:16.985366 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k g h, on_bline k h g ? perp j b b g
I0123 12:37:17.944777 139631609110528 ddar.py:60] Depth 1/1000 time = 0.911989688873291
I0123 12:37:20.629168 139631609110528 ddar.py:60] Depth 2/1000 time = 2.684190034866333
I0123 12:37:23.500381 139631609110528 ddar.py:60] Depth 3/1000 time = 2.8709375858306885
I0123 12:37:26.418958 139631609110528 ddar.py:60] Depth 4/1000 time = 2.9184086322784424
I0123 12:37:29.078921 139631609110528 ddar.py:60] Depth 5/1000 time = 2.659783124923706
I0123 12:37:32.025169 139631609110528 ddar.py:60] Depth 6/1000 time = 2.9458460807800293
I0123 12:37:34.862592 139631609110528 ddar.py:60] Depth 7/1000 time = 2.8192882537841797
I0123 12:37:38.105176 139631609110528 ddar.py:60] Depth 8/1000 time = 3.2424051761627197
I0123 12:37:41.433227 139631609110528 ddar.py:60] Depth 9/1000 time = 3.327834367752075
I0123 12:37:44.619818 139631609110528 ddar.py:60] Depth 10/1000 time = 3.186312437057495
I0123 12:37:48.128702 139631609110528 ddar.py:60] Depth 11/1000 time = 3.5086798667907715
I0123 12:37:51.602703 139631609110528 ddar.py:60] Depth 12/1000 time = 3.4557111263275146
I0123 12:37:51.602958 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:37:51.603049 139631609110528 alphageometry.py:566] LM output (score=-3.046995): "k : D a d a k 13 D b d b k 14 ;"
I0123 12:37:51.603087 139631609110528 alphageometry.py:567] Translation: "k = on_circle k a d, on_circle k b d"

I0123 12:37:51.603123 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_circle k a d, on_circle k b d ? perp j b b g"
I0123 12:37:51.603266 139631609110528 graph.py:498] 
I0123 12:37:51.603321 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_circle k a d, on_circle k b d ? perp j b b g
I0123 12:37:53.014913 139631609110528 ddar.py:60] Depth 1/1000 time = 1.3625478744506836
I0123 12:37:55.251573 139631609110528 ddar.py:60] Depth 2/1000 time = 2.236511468887329
I0123 12:37:57.738866 139631609110528 ddar.py:60] Depth 3/1000 time = 2.4871251583099365
I0123 12:38:00.249293 139631609110528 ddar.py:60] Depth 4/1000 time = 2.5102462768554688
I0123 12:38:02.795962 139631609110528 ddar.py:60] Depth 5/1000 time = 2.546281576156616
I0123 12:38:05.193682 139631609110528 ddar.py:60] Depth 6/1000 time = 2.3760008811950684
I0123 12:38:07.825670 139631609110528 ddar.py:60] Depth 7/1000 time = 2.6317923069000244
I0123 12:38:10.454138 139631609110528 ddar.py:60] Depth 8/1000 time = 2.628282308578491
I0123 12:38:10.459118 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:38:10.459211 139631609110528 alphageometry.py:566] LM output (score=-3.047629): "k : P a b c k 13 P a k b c 14 ;"
I0123 12:38:10.459250 139631609110528 alphageometry.py:567] Translation: "k = on_pline k c a b, on_pline k a b c"

I0123 12:38:10.459286 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b, on_pline k a b c ? perp j b b g"
I0123 12:38:10.459433 139631609110528 graph.py:498] 
I0123 12:38:10.459491 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b, on_pline k a b c ? perp j b b g
I0123 12:38:11.619335 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1164941787719727
I0123 12:38:13.084290 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4647889137268066
I0123 12:38:14.769658 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6851866245269775
I0123 12:38:16.475764 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7059340476989746
I0123 12:38:17.881790 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4056994915008545
I0123 12:38:19.664363 139631609110528 ddar.py:60] Depth 6/1000 time = 1.766885757446289
I0123 12:38:21.439229 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7746989727020264
I0123 12:38:22.920457 139631609110528 ddar.py:60] Depth 8/1000 time = 1.4810569286346436
I0123 12:38:22.924893 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:38:22.924982 139631609110528 alphageometry.py:566] LM output (score=-3.085909): "k : C d e k 13 D d k e k 14 ;"
I0123 12:38:22.925020 139631609110528 alphageometry.py:567] Translation: "k = on_line k d e, on_bline k e d"

I0123 12:38:22.925056 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k d e, on_bline k e d ? perp j b b g"
I0123 12:38:22.925194 139631609110528 graph.py:498] 
I0123 12:38:22.925249 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k d e, on_bline k e d ? perp j b b g
I0123 12:38:24.152305 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1783015727996826
I0123 12:38:26.002701 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8501081466674805
I0123 12:38:27.431675 139631609110528 ddar.py:60] Depth 3/1000 time = 1.428792953491211
I0123 12:38:29.166259 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7344110012054443
I0123 12:38:30.904084 139631609110528 ddar.py:60] Depth 5/1000 time = 1.737457275390625
I0123 12:38:32.740733 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8229613304138184
I0123 12:38:34.559228 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8183298110961914
I0123 12:38:36.076777 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5173840522766113
I0123 12:38:36.083833 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:38:36.083920 139631609110528 alphageometry.py:566] LM output (score=-3.086318): "k : C d i k 13 D d k i k 14 ;"
I0123 12:38:36.083969 139631609110528 alphageometry.py:567] Translation: "k = on_line k d i, on_bline k i d"

I0123 12:38:36.084006 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k d i, on_bline k i d ? perp j b b g"
I0123 12:38:36.084144 139631609110528 graph.py:498] 
I0123 12:38:36.084197 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k d i, on_bline k i d ? perp j b b g
I0123 12:38:37.243605 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1080615520477295
I0123 12:38:38.456955 139631609110528 ddar.py:60] Depth 2/1000 time = 1.2129883766174316
I0123 12:38:40.068577 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6114554405212402
I0123 12:38:41.705020 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6362590789794922
I0123 12:38:43.036751 139631609110528 ddar.py:60] Depth 5/1000 time = 1.331420660018921
I0123 12:38:44.774861 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7253031730651855
I0123 12:38:46.167543 139631609110528 ddar.py:60] Depth 7/1000 time = 1.3924782276153564
I0123 12:38:47.887244 139631609110528 ddar.py:60] Depth 8/1000 time = 1.719435691833496
I0123 12:38:47.891843 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:38:47.891941 139631609110528 alphageometry.py:566] LM output (score=-3.118793): "k : D a k c k 13 P b d d k 14 ;"
I0123 12:38:47.891978 139631609110528 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b d d k"

I0123 12:38:47.892017 139631609110528 alphageometry.py:566] LM output (score=-3.134718): "k : C c d k 13 D c d d k 14 ;"
I0123 12:38:47.892045 139631609110528 alphageometry.py:567] Translation: "k = on_line k c d, on_circle k d c"

I0123 12:38:47.892076 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_circle k d c ? perp j b b g"
I0123 12:38:47.892223 139631609110528 graph.py:498] 
I0123 12:38:47.892280 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_circle k d c ? perp j b b g
I0123 12:38:49.192878 139631609110528 ddar.py:60] Depth 1/1000 time = 1.2555913925170898
I0123 12:38:51.984011 139631609110528 ddar.py:60] Depth 2/1000 time = 2.790989398956299
I0123 12:38:54.941127 139631609110528 ddar.py:60] Depth 3/1000 time = 2.956951141357422
I0123 12:38:57.899177 139631609110528 ddar.py:60] Depth 4/1000 time = 2.9578707218170166
I0123 12:39:00.852129 139631609110528 ddar.py:60] Depth 5/1000 time = 2.952568531036377
I0123 12:39:03.889312 139631609110528 ddar.py:60] Depth 6/1000 time = 3.013423442840576
I0123 12:39:06.883481 139631609110528 ddar.py:60] Depth 7/1000 time = 2.9939486980438232
I0123 12:39:09.904325 139631609110528 ddar.py:60] Depth 8/1000 time = 3.020547866821289
I0123 12:39:09.911728 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:39:09.911834 139631609110528 alphageometry.py:566] LM output (score=-3.157454): "k : D a k b k 13 D b k d k 14 ;"
I0123 12:39:09.911872 139631609110528 alphageometry.py:567] Translation: "k = on_bline k b a, on_bline k d b"

I0123 12:39:09.911912 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a, on_bline k d b ? perp j b b g"
I0123 12:39:09.912071 139631609110528 graph.py:498] 
I0123 12:39:09.912128 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a, on_bline k d b ? perp j b b g
I0123 12:39:11.250376 139631609110528 ddar.py:60] Depth 1/1000 time = 1.2816221714019775
I0123 12:39:12.699049 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4485154151916504
I0123 12:39:14.733882 139631609110528 ddar.py:60] Depth 3/1000 time = 2.0346627235412598
I0123 12:39:16.763944 139631609110528 ddar.py:60] Depth 4/1000 time = 2.0298798084259033
I0123 12:39:18.472377 139631609110528 ddar.py:60] Depth 5/1000 time = 1.708099603652954
I0123 12:39:20.683129 139631609110528 ddar.py:60] Depth 6/1000 time = 2.185995578765869
I0123 12:39:22.865675 139631609110528 ddar.py:60] Depth 7/1000 time = 2.182366132736206
I0123 12:39:24.726522 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8606607913970947
I0123 12:39:24.731675 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:39:24.731749 139631609110528 alphageometry.py:566] LM output (score=-3.183009): "k : C a c k 13 C b d k 14 ;"
I0123 12:39:24.731785 139631609110528 alphageometry.py:567] Translation: "k = on_line k a c, on_line k b d"

I0123 12:39:24.731822 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_line k b d ? perp j b b g"
I0123 12:39:24.731956 139631609110528 graph.py:498] 
I0123 12:39:24.732012 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_line k b d ? perp j b b g
I0123 12:39:25.947426 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1756677627563477
I0123 12:39:27.606448 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6588566303253174
I0123 12:39:29.483740 139631609110528 ddar.py:60] Depth 3/1000 time = 1.877101182937622
I0123 12:39:31.295080 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8111512660980225
I0123 12:39:33.105070 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8096513748168945
I0123 12:39:35.009341 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8931057453155518
I0123 12:39:36.882522 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8730063438415527
I0123 12:39:38.774174 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8914837837219238
I0123 12:39:38.778448 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:39:38.778523 139631609110528 alphageometry.py:566] LM output (score=-3.238707): "k : T a c a k 13 ;"
I0123 12:39:38.778559 139631609110528 alphageometry.py:567] Translation: "k = on_tline k a a c"

I0123 12:39:38.778594 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_tline k a a c ? perp j b b g"
I0123 12:39:38.778732 139631609110528 graph.py:498] 
I0123 12:39:38.778784 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_tline k a a c ? perp j b b g
I0123 12:39:39.593153 139631609110528 ddar.py:60] Depth 1/1000 time = 0.7762725353240967
I0123 12:39:41.323014 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7297327518463135
I0123 12:39:42.702008 139631609110528 ddar.py:60] Depth 3/1000 time = 1.3788297176361084
I0123 12:39:44.419285 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7170982360839844
I0123 12:39:45.805952 139631609110528 ddar.py:60] Depth 5/1000 time = 1.386348009109497
I0123 12:39:47.622920 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7992198467254639
I0123 12:39:49.098669 139631609110528 ddar.py:60] Depth 7/1000 time = 1.4755866527557373
I0123 12:39:50.918978 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8201351165771484
I0123 12:39:50.923535 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:39:50.923624 139631609110528 alphageometry.py:566] LM output (score=-3.243624): "k : D a d a k 13 D c d c k 14 ;"
I0123 12:39:50.923662 139631609110528 alphageometry.py:567] Translation: "k = on_circle k a d, on_circle k c d"

I0123 12:39:50.923698 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_circle k a d, on_circle k c d ? perp j b b g"
I0123 12:39:50.923839 139631609110528 graph.py:498] 
I0123 12:39:50.923898 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_circle k a d, on_circle k c d ? perp j b b g
I0123 12:39:52.573603 139631609110528 ddar.py:60] Depth 1/1000 time = 1.6006381511688232
I0123 12:39:54.976455 139631609110528 ddar.py:60] Depth 2/1000 time = 2.402672290802002
I0123 12:39:57.549895 139631609110528 ddar.py:60] Depth 3/1000 time = 2.57327938079834
I0123 12:40:00.121829 139631609110528 ddar.py:60] Depth 4/1000 time = 2.5717644691467285
I0123 12:40:02.367348 139631609110528 ddar.py:60] Depth 5/1000 time = 2.245190143585205
I0123 12:40:05.073832 139631609110528 ddar.py:60] Depth 6/1000 time = 2.6852645874023438
I0123 12:40:07.760462 139631609110528 ddar.py:60] Depth 7/1000 time = 2.68646502494812
I0123 12:40:10.461792 139631609110528 ddar.py:60] Depth 8/1000 time = 2.701162099838257
I0123 12:40:10.467202 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:40:10.467286 139631609110528 alphageometry.py:566] LM output (score=-3.254314): "k : C d i k 13 D d i d k 14 ;"
I0123 12:40:10.467324 139631609110528 alphageometry.py:567] Translation: "k = on_line k d i, on_circle k d i"

I0123 12:40:10.467361 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k d i, on_circle k d i ? perp j b b g"
I0123 12:40:10.467502 139631609110528 graph.py:498] 
I0123 12:40:10.467555 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k d i, on_circle k d i ? perp j b b g
I0123 12:40:11.596534 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0856091976165771
I0123 12:40:14.372709 139631609110528 ddar.py:60] Depth 2/1000 time = 2.7759082317352295
I0123 12:40:17.210235 139631609110528 ddar.py:60] Depth 3/1000 time = 2.837341785430908
I0123 12:40:20.074504 139631609110528 ddar.py:60] Depth 4/1000 time = 2.8640973567962646
I0123 12:40:22.932289 139631609110528 ddar.py:60] Depth 5/1000 time = 2.857454776763916
I0123 12:40:25.857420 139631609110528 ddar.py:60] Depth 6/1000 time = 2.900282382965088
I0123 12:40:28.740278 139631609110528 ddar.py:60] Depth 7/1000 time = 2.882673978805542
I0123 12:40:31.645003 139631609110528 ddar.py:60] Depth 8/1000 time = 2.904545783996582
I0123 12:40:31.649770 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:40:31.649900 139631609110528 alphageometry.py:540] Depth 1. There are 30 nodes to expand:
I0123 12:40:31.649943 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C a c k 13 D a k c k 14 ; x00
I0123 12:40:31.649986 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : D a k c k 13 ; x00
I0123 12:40:31.650016 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C b c k 13 D b k c k 14 ; x00
I0123 12:40:31.650045 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C a b k 13 D a k b k 14 ; x00
I0123 12:40:31.650073 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C a e k 13 D a k e k 14 ; x00
I0123 12:40:31.650103 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C c d k 13 D c k d k 14 ; x00
I0123 12:40:31.650131 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : P a b c k 13 ; x00
I0123 12:40:31.650159 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : D a k b k 13 ; x00
I0123 12:40:31.650187 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C a i k 13 D a k i k 14 ; x00
I0123 12:40:31.650215 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : D a d d k 13 ; x00
I0123 12:40:31.650243 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : D a c a k 13 D a c c k 14 ; x00
I0123 12:40:31.650270 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : D a b a k 13 D a b b k 14 ; x00
I0123 12:40:31.650312 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C c h k 13 D c k h k 14 ; x00
I0123 12:40:31.650342 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C b e k 13 D b k e k 14 ; x00
I0123 12:40:31.650371 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C a d k 13 D a d d k 14 ; x00
I0123 12:40:31.650398 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : D a k d k 13 D c k d k 14 ; x00
I0123 12:40:31.650427 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : D a k c k 13 D c k d k 14 ; x00
I0123 12:40:31.650455 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : D a k d k 13 D b k d k 14 ; x00
I0123 12:40:31.650484 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C a j k 13 D a k j k 14 ; x00
I0123 12:40:31.650512 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C g h k 13 D g k h k 14 ; x00
I0123 12:40:31.650540 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : D a d a k 13 D b d b k 14 ; x00
I0123 12:40:31.650568 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : P a b c k 13 P a k b c 14 ; x00
I0123 12:40:31.650596 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C d e k 13 D d k e k 14 ; x00
I0123 12:40:31.650623 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C d i k 13 D d k i k 14 ; x00
I0123 12:40:31.650655 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C c d k 13 D c d d k 14 ; x00
I0123 12:40:31.650681 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : D a k b k 13 D b k d k 14 ; x00
I0123 12:40:31.650708 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C a c k 13 C b d k 14 ; x00
I0123 12:40:31.650735 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : T a c a k 13 ; x00
I0123 12:40:31.650759 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : D a d a k 13 D c d c k 14 ; x00
I0123 12:40:31.650783 139631609110528 alphageometry.py:544] {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C d i k 13 D d i d k 14 ; x00
I0123 12:40:31.650818 139631609110528 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C a c k 13 D a k c k 14 ; x00
I0123 12:40:37.460655 139631609110528 alphageometry.py:566] LM output (score=-0.562292): "l : C c d l 15 D c l d l 16 ;"
I0123 12:40:37.460942 139631609110528 alphageometry.py:567] Translation: "l = on_line l c d, on_bline l d c"

I0123 12:40:37.461008 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c d, on_bline l d c ? perp j b b g"
I0123 12:40:37.461169 139631609110528 graph.py:498] 
I0123 12:40:37.461230 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c d, on_bline l d c ? perp j b b g
I0123 12:40:38.992719 139631609110528 ddar.py:60] Depth 1/1000 time = 1.4596574306488037
I0123 12:40:40.984235 139631609110528 ddar.py:60] Depth 2/1000 time = 1.9913427829742432
I0123 12:40:43.579765 139631609110528 ddar.py:60] Depth 3/1000 time = 2.5953621864318848
I0123 12:40:46.178519 139631609110528 ddar.py:60] Depth 4/1000 time = 2.5985805988311768
I0123 12:40:48.762235 139631609110528 ddar.py:60] Depth 5/1000 time = 2.583264112472534
I0123 12:40:51.415724 139631609110528 ddar.py:60] Depth 6/1000 time = 2.6309332847595215
I0123 12:40:54.039450 139631609110528 ddar.py:60] Depth 7/1000 time = 2.623542547225952
I0123 12:40:56.693231 139631609110528 ddar.py:60] Depth 8/1000 time = 2.653608560562134
I0123 12:40:56.705167 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:40:56.705220 139631609110528 alphageometry.py:566] LM output (score=-0.839848): "l : C a b l 15 D a l b l 16 ;"
I0123 12:40:56.705255 139631609110528 alphageometry.py:567] Translation: "l = on_line l a b, on_bline l b a"

I0123 12:40:56.705292 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a b, on_bline l b a ? perp j b b g"
I0123 12:40:56.705438 139631609110528 graph.py:498] 
I0123 12:40:56.705489 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a b, on_bline l b a ? perp j b b g
I0123 12:40:58.208100 139631609110528 ddar.py:60] Depth 1/1000 time = 1.439483404159546
I0123 12:41:00.486990 139631609110528 ddar.py:60] Depth 2/1000 time = 2.2787129878997803
I0123 12:41:03.091113 139631609110528 ddar.py:60] Depth 3/1000 time = 2.6039459705352783
I0123 12:41:05.709759 139631609110528 ddar.py:60] Depth 4/1000 time = 2.618448257446289
I0123 12:41:08.386581 139631609110528 ddar.py:60] Depth 5/1000 time = 2.6764163970947266
I0123 12:41:10.814965 139631609110528 ddar.py:60] Depth 6/1000 time = 2.401484489440918
I0123 12:41:13.495665 139631609110528 ddar.py:60] Depth 7/1000 time = 2.6805150508880615
I0123 12:41:16.180385 139631609110528 ddar.py:60] Depth 8/1000 time = 2.6845455169677734
I0123 12:41:16.189302 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:41:16.189353 139631609110528 alphageometry.py:566] LM output (score=-1.163903): "l : C a e l 15 D a l e l 16 ;"
I0123 12:41:16.189389 139631609110528 alphageometry.py:567] Translation: "l = on_line l a e, on_bline l e a"

I0123 12:41:16.189427 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a e, on_bline l e a ? perp j b b g"
I0123 12:41:16.189573 139631609110528 graph.py:498] 
I0123 12:41:16.189636 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a e, on_bline l e a ? perp j b b g
I0123 12:41:17.685253 139631609110528 ddar.py:60] Depth 1/1000 time = 1.4334030151367188
I0123 12:41:19.920575 139631609110528 ddar.py:60] Depth 2/1000 time = 2.235166311264038
I0123 12:41:23.209095 139631609110528 ddar.py:60] Depth 3/1000 time = 3.288299798965454
I0123 12:41:26.656350 139631609110528 ddar.py:60] Depth 4/1000 time = 3.4469685554504395
I0123 12:41:30.117723 139631609110528 ddar.py:60] Depth 5/1000 time = 3.4608607292175293
I0123 12:41:33.612136 139631609110528 ddar.py:60] Depth 6/1000 time = 3.4692628383636475
I0123 12:41:37.047990 139631609110528 ddar.py:60] Depth 7/1000 time = 3.4356822967529297
I0123 12:41:40.516165 139631609110528 ddar.py:60] Depth 8/1000 time = 3.4679903984069824
I0123 12:41:40.525626 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:41:40.525707 139631609110528 alphageometry.py:566] LM output (score=-1.216478): "l : C a j l 15 D a l j l 16 ;"
I0123 12:41:40.525742 139631609110528 alphageometry.py:567] Translation: "l = on_line l a j, on_bline l j a"

I0123 12:41:40.525776 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a j, on_bline l j a ? perp j b b g"
I0123 12:41:40.525927 139631609110528 graph.py:498] 
I0123 12:41:40.525982 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a j, on_bline l j a ? perp j b b g
I0123 12:41:42.010487 139631609110528 ddar.py:60] Depth 1/1000 time = 1.419248342514038
I0123 12:41:44.187161 139631609110528 ddar.py:60] Depth 2/1000 time = 2.1763973236083984
I0123 12:41:46.601057 139631609110528 ddar.py:60] Depth 3/1000 time = 2.4137070178985596
I0123 12:41:48.672796 139631609110528 ddar.py:60] Depth 4/1000 time = 2.0715694427490234
I0123 12:41:51.070907 139631609110528 ddar.py:60] Depth 5/1000 time = 2.3976967334747314
I0123 12:41:53.572279 139631609110528 ddar.py:60] Depth 6/1000 time = 2.4787278175354004
I0123 12:41:56.041419 139631609110528 ddar.py:60] Depth 7/1000 time = 2.468966245651245
I0123 12:41:58.511839 139631609110528 ddar.py:60] Depth 8/1000 time = 2.4702277183532715
I0123 12:41:58.520604 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:41:58.520656 139631609110528 alphageometry.py:566] LM output (score=-1.334267): "l : C a i l 15 D a l i l 16 ;"
I0123 12:41:58.520691 139631609110528 alphageometry.py:567] Translation: "l = on_line l a i, on_bline l i a"

I0123 12:41:58.520727 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a i, on_bline l i a ? perp j b b g"
I0123 12:41:58.520888 139631609110528 graph.py:498] 
I0123 12:41:58.520946 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a i, on_bline l i a ? perp j b b g
I0123 12:41:59.692443 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1090030670166016
I0123 12:42:01.982788 139631609110528 ddar.py:60] Depth 2/1000 time = 2.290130615234375
I0123 12:42:04.689260 139631609110528 ddar.py:60] Depth 3/1000 time = 2.706179618835449
I0123 12:42:07.387543 139631609110528 ddar.py:60] Depth 4/1000 time = 2.6981008052825928
I0123 12:42:10.082123 139631609110528 ddar.py:60] Depth 5/1000 time = 2.694138526916504
I0123 12:42:12.848325 139631609110528 ddar.py:60] Depth 6/1000 time = 2.735975742340088
I0123 12:42:15.585318 139631609110528 ddar.py:60] Depth 7/1000 time = 2.7368242740631104
I0123 12:42:18.346305 139631609110528 ddar.py:60] Depth 8/1000 time = 2.760803461074829
I0123 12:42:18.354489 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:42:18.354550 139631609110528 alphageometry.py:566] LM output (score=-1.670650): "l : C b c l 15 D b l c l 16 ;"
I0123 12:42:18.354585 139631609110528 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 12:42:18.354626 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b c, on_bline l c b ? perp j b b g"
I0123 12:42:18.354794 139631609110528 graph.py:498] 
I0123 12:42:18.354852 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b c, on_bline l c b ? perp j b b g
I0123 12:42:19.537309 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1191565990447998
I0123 12:42:22.107325 139631609110528 ddar.py:60] Depth 2/1000 time = 2.5697357654571533
I0123 12:42:24.896354 139631609110528 ddar.py:60] Depth 3/1000 time = 2.788820505142212
I0123 12:42:27.707593 139631609110528 ddar.py:60] Depth 4/1000 time = 2.811047077178955
I0123 12:42:30.523736 139631609110528 ddar.py:60] Depth 5/1000 time = 2.815685749053955
I0123 12:42:33.398680 139631609110528 ddar.py:60] Depth 6/1000 time = 2.8469395637512207
I0123 12:42:36.250556 139631609110528 ddar.py:60] Depth 7/1000 time = 2.8516898155212402
I0123 12:42:39.137087 139631609110528 ddar.py:60] Depth 8/1000 time = 2.886298656463623
I0123 12:42:39.150237 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:42:39.150312 139631609110528 alphageometry.py:566] LM output (score=-2.016747): "l : C a d l 15 D a l d l 16 ;"
I0123 12:42:39.150348 139631609110528 alphageometry.py:567] Translation: "l = on_line l a d, on_bline l d a"

I0123 12:42:39.150397 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a d, on_bline l d a ? perp j b b g"
I0123 12:42:39.150566 139631609110528 graph.py:498] 
I0123 12:42:39.150806 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a d, on_bline l d a ? perp j b b g
I0123 12:42:40.287358 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0746984481811523
I0123 12:42:42.576945 139631609110528 ddar.py:60] Depth 2/1000 time = 2.289400339126587
I0123 12:42:45.065882 139631609110528 ddar.py:60] Depth 3/1000 time = 2.4887685775756836
I0123 12:42:47.577716 139631609110528 ddar.py:60] Depth 4/1000 time = 2.511660099029541
I0123 12:42:49.730325 139631609110528 ddar.py:60] Depth 5/1000 time = 2.1521971225738525
I0123 12:42:52.329059 139631609110528 ddar.py:60] Depth 6/1000 time = 2.577354669570923
I0123 12:42:54.939107 139631609110528 ddar.py:60] Depth 7/1000 time = 2.609877824783325
I0123 12:42:57.523531 139631609110528 ddar.py:60] Depth 8/1000 time = 2.584193229675293
I0123 12:42:57.531783 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:42:57.531857 139631609110528 alphageometry.py:566] LM output (score=-2.132152): "l : C a g l 15 D a l g l 16 ;"
I0123 12:42:57.531892 139631609110528 alphageometry.py:567] Translation: "l = on_line l a g, on_bline l g a"

I0123 12:42:57.531942 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a g, on_bline l g a ? perp j b b g"
I0123 12:42:57.532109 139631609110528 graph.py:498] 
I0123 12:42:57.532165 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a g, on_bline l g a ? perp j b b g
I0123 12:42:58.672675 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0777976512908936
I0123 12:43:00.954966 139631609110528 ddar.py:60] Depth 2/1000 time = 2.2821240425109863
I0123 12:43:03.385758 139631609110528 ddar.py:60] Depth 3/1000 time = 2.4306254386901855
I0123 12:43:05.885491 139631609110528 ddar.py:60] Depth 4/1000 time = 2.4995408058166504
I0123 12:43:07.995439 139631609110528 ddar.py:60] Depth 5/1000 time = 2.109539270401001
I0123 12:43:10.510304 139631609110528 ddar.py:60] Depth 6/1000 time = 2.4926486015319824
I0123 12:43:12.980268 139631609110528 ddar.py:60] Depth 7/1000 time = 2.4698030948638916
I0123 12:43:15.468679 139631609110528 ddar.py:60] Depth 8/1000 time = 2.4882354736328125
I0123 12:43:15.478220 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:43:15.478284 139631609110528 alphageometry.py:566] LM output (score=-2.155669): "l : C c j l 15 D c l j l 16 ;"
I0123 12:43:15.478324 139631609110528 alphageometry.py:567] Translation: "l = on_line l c j, on_bline l j c"

I0123 12:43:15.478364 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c j, on_bline l j c ? perp j b b g"
I0123 12:43:15.478520 139631609110528 graph.py:498] 
I0123 12:43:15.478573 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c j, on_bline l j c ? perp j b b g
I0123 12:43:16.631615 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0895814895629883
I0123 12:43:19.044697 139631609110528 ddar.py:60] Depth 2/1000 time = 2.41280460357666
I0123 12:43:21.628468 139631609110528 ddar.py:60] Depth 3/1000 time = 2.5835678577423096
I0123 12:43:24.240722 139631609110528 ddar.py:60] Depth 4/1000 time = 2.6120688915252686
I0123 12:43:26.882115 139631609110528 ddar.py:60] Depth 5/1000 time = 2.6409311294555664
I0123 12:43:29.566811 139631609110528 ddar.py:60] Depth 6/1000 time = 2.6636157035827637
I0123 12:43:32.225033 139631609110528 ddar.py:60] Depth 7/1000 time = 2.658048152923584
I0123 12:43:34.943800 139631609110528 ddar.py:60] Depth 8/1000 time = 2.718585729598999
I0123 12:43:34.954804 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:43:34.954857 139631609110528 alphageometry.py:566] LM output (score=-2.250301): "l : C c h l 15 D c l h l 16 ;"
I0123 12:43:34.954891 139631609110528 alphageometry.py:567] Translation: "l = on_line l c h, on_bline l h c"

I0123 12:43:34.954927 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c h, on_bline l h c ? perp j b b g"
I0123 12:43:34.955080 139631609110528 graph.py:498] 
I0123 12:43:34.955138 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c h, on_bline l h c ? perp j b b g
I0123 12:43:36.146749 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1255135536193848
I0123 12:43:38.542222 139631609110528 ddar.py:60] Depth 2/1000 time = 2.395214557647705
I0123 12:43:40.806248 139631609110528 ddar.py:60] Depth 3/1000 time = 2.263845443725586
I0123 12:43:43.480060 139631609110528 ddar.py:60] Depth 4/1000 time = 2.673624038696289
I0123 12:43:46.154494 139631609110528 ddar.py:60] Depth 5/1000 time = 2.6740059852600098
I0123 12:43:49.250682 139631609110528 ddar.py:60] Depth 6/1000 time = 3.073728561401367
I0123 12:43:51.955711 139631609110528 ddar.py:60] Depth 7/1000 time = 2.7048418521881104
I0123 12:43:54.723081 139631609110528 ddar.py:60] Depth 8/1000 time = 2.7671289443969727
I0123 12:43:54.734703 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:43:54.734775 139631609110528 alphageometry.py:566] LM output (score=-2.327963): "l : C c i l 15 D c l i l 16 ;"
I0123 12:43:54.734810 139631609110528 alphageometry.py:567] Translation: "l = on_line l c i, on_bline l i c"

I0123 12:43:54.734859 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c i, on_bline l i c ? perp j b b g"
I0123 12:43:54.735031 139631609110528 graph.py:498] 
I0123 12:43:54.735088 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c i, on_bline l i c ? perp j b b g
I0123 12:43:55.982534 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1816976070404053
I0123 12:43:58.956309 139631609110528 ddar.py:60] Depth 2/1000 time = 2.9735896587371826
I0123 12:44:02.260024 139631609110528 ddar.py:60] Depth 3/1000 time = 3.3035409450531006
I0123 12:44:05.214459 139631609110528 ddar.py:60] Depth 4/1000 time = 2.9542622566223145
I0123 12:44:08.169464 139631609110528 ddar.py:60] Depth 5/1000 time = 2.954577684402466
I0123 12:44:11.183897 139631609110528 ddar.py:60] Depth 6/1000 time = 2.990792989730835
I0123 12:44:14.571525 139631609110528 ddar.py:60] Depth 7/1000 time = 3.387444496154785
I0123 12:44:17.582692 139631609110528 ddar.py:60] Depth 8/1000 time = 3.010927677154541
I0123 12:44:17.593568 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:44:17.593628 139631609110528 alphageometry.py:566] LM output (score=-2.448852): "l : C g h l 15 D g l h l 16 ;"
I0123 12:44:17.593670 139631609110528 alphageometry.py:567] Translation: "l = on_line l g h, on_bline l h g"

I0123 12:44:17.593708 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l g h, on_bline l h g ? perp j b b g"
I0123 12:44:17.593865 139631609110528 graph.py:498] 
I0123 12:44:17.593922 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l g h, on_bline l h g ? perp j b b g
I0123 12:44:18.813604 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1550872325897217
I0123 12:44:22.372422 139631609110528 ddar.py:60] Depth 2/1000 time = 3.5586440563201904
I0123 12:44:25.649608 139631609110528 ddar.py:60] Depth 3/1000 time = 3.277008056640625
I0123 12:44:29.104235 139631609110528 ddar.py:60] Depth 4/1000 time = 3.4544332027435303
I0123 12:44:32.996002 139631609110528 ddar.py:60] Depth 5/1000 time = 3.891542434692383
I0123 12:44:36.537217 139631609110528 ddar.py:60] Depth 6/1000 time = 3.5409364700317383
I0123 12:44:40.629805 139631609110528 ddar.py:60] Depth 7/1000 time = 4.092416763305664
I0123 12:44:44.354866 139631609110528 ddar.py:60] Depth 8/1000 time = 3.724865198135376
I0123 12:44:48.529140 139631609110528 ddar.py:60] Depth 9/1000 time = 4.174086809158325
I0123 12:44:52.316079 139631609110528 ddar.py:60] Depth 10/1000 time = 3.7867093086242676
I0123 12:44:56.099127 139631609110528 ddar.py:60] Depth 11/1000 time = 3.7824645042419434
I0123 12:45:00.262025 139631609110528 ddar.py:60] Depth 12/1000 time = 4.136282682418823
I0123 12:45:04.021520 139631609110528 ddar.py:60] Depth 13/1000 time = 3.7593133449554443
I0123 12:45:08.193370 139631609110528 ddar.py:60] Depth 14/1000 time = 4.151705026626587
I0123 12:45:08.193562 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:45:08.193614 139631609110528 alphageometry.py:566] LM output (score=-2.625818): "l : C a h l 15 D a l h l 16 ;"
I0123 12:45:08.193653 139631609110528 alphageometry.py:567] Translation: "l = on_line l a h, on_bline l h a"

I0123 12:45:08.193693 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a h, on_bline l h a ? perp j b b g"
I0123 12:45:08.193852 139631609110528 graph.py:498] 
I0123 12:45:08.193906 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a h, on_bline l h a ? perp j b b g
I0123 12:45:09.339499 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0792934894561768
I0123 12:45:11.507728 139631609110528 ddar.py:60] Depth 2/1000 time = 2.168046712875366
I0123 12:45:13.936788 139631609110528 ddar.py:60] Depth 3/1000 time = 2.4288151264190674
I0123 12:45:16.380609 139631609110528 ddar.py:60] Depth 4/1000 time = 2.443645715713501
I0123 12:45:18.392331 139631609110528 ddar.py:60] Depth 5/1000 time = 2.0112974643707275
I0123 12:45:20.877088 139631609110528 ddar.py:60] Depth 6/1000 time = 2.462765693664551
I0123 12:45:23.323875 139631609110528 ddar.py:60] Depth 7/1000 time = 2.4466187953948975
I0123 12:45:25.370299 139631609110528 ddar.py:60] Depth 8/1000 time = 2.0462534427642822
I0123 12:45:25.379123 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:45:25.379176 139631609110528 alphageometry.py:566] LM output (score=-2.669140): "l : D a l b l 15 ;"
I0123 12:45:25.379210 139631609110528 alphageometry.py:567] Translation: "l = on_bline l b a"

I0123 12:45:25.379247 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_bline l b a ? perp j b b g"
I0123 12:45:25.379394 139631609110528 graph.py:498] 
I0123 12:45:25.379449 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_bline l b a ? perp j b b g
I0123 12:45:26.906531 139631609110528 ddar.py:60] Depth 1/1000 time = 1.4628946781158447
I0123 12:45:28.795338 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8886382579803467
I0123 12:45:31.507237 139631609110528 ddar.py:60] Depth 3/1000 time = 2.7117011547088623
I0123 12:45:34.204513 139631609110528 ddar.py:60] Depth 4/1000 time = 2.697068214416504
I0123 12:45:36.492500 139631609110528 ddar.py:60] Depth 5/1000 time = 2.2875609397888184
I0123 12:45:39.228402 139631609110528 ddar.py:60] Depth 6/1000 time = 2.7093772888183594
I0123 12:45:41.940006 139631609110528 ddar.py:60] Depth 7/1000 time = 2.7114129066467285
I0123 12:45:44.653571 139631609110528 ddar.py:60] Depth 8/1000 time = 2.713390350341797
I0123 12:45:44.660429 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:45:44.660482 139631609110528 alphageometry.py:566] LM output (score=-2.675275): "l : C b j l 15 D b l j l 16 ;"
I0123 12:45:44.660518 139631609110528 alphageometry.py:567] Translation: "l = on_line l b j, on_bline l j b"

I0123 12:45:44.660552 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b j, on_bline l j b ? perp j b b g"
I0123 12:45:44.660699 139631609110528 graph.py:498] 
I0123 12:45:44.660755 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b j, on_bline l j b ? perp j b b g
I0123 12:45:45.782614 139631609110528 ddar.py:60] Depth 1/1000 time = 1.058943271636963
I0123 12:45:47.880584 139631609110528 ddar.py:60] Depth 2/1000 time = 2.0977351665496826
I0123 12:45:49.829459 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9485266208648682
I0123 12:45:52.219974 139631609110528 ddar.py:60] Depth 4/1000 time = 2.390226364135742
I0123 12:45:54.586765 139631609110528 ddar.py:60] Depth 5/1000 time = 2.366227626800537
I0123 12:45:56.596965 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9899230003356934
I0123 12:45:59.010469 139631609110528 ddar.py:60] Depth 7/1000 time = 2.4132697582244873
I0123 12:46:01.002331 139631609110528 ddar.py:60] Depth 8/1000 time = 1.991614818572998
I0123 12:46:01.009500 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:46:01.009552 139631609110528 alphageometry.py:566] LM output (score=-2.691913): "l : C a f l 15 C e k l 16 ;"
I0123 12:46:01.009588 139631609110528 alphageometry.py:567] Translation: "l = on_line l a f, on_line l e k"

I0123 12:46:01.009625 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a f, on_line l e k ? perp j b b g"
I0123 12:46:01.009796 139631609110528 graph.py:498] 
I0123 12:46:01.009853 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a f, on_line l e k ? perp j b b g
I0123 12:46:02.530239 139631609110528 ddar.py:60] Depth 1/1000 time = 1.4702613353729248
I0123 12:46:04.730931 139631609110528 ddar.py:60] Depth 2/1000 time = 2.2005276679992676
I0123 12:46:06.749415 139631609110528 ddar.py:60] Depth 3/1000 time = 2.018319845199585
I0123 12:46:09.306328 139631609110528 ddar.py:60] Depth 4/1000 time = 2.556706428527832
I0123 12:46:11.846470 139631609110528 ddar.py:60] Depth 5/1000 time = 2.5396785736083984
I0123 12:46:14.451738 139631609110528 ddar.py:60] Depth 6/1000 time = 2.5872535705566406
I0123 12:46:16.599374 139631609110528 ddar.py:60] Depth 7/1000 time = 2.1474688053131104
I0123 12:46:19.174628 139631609110528 ddar.py:60] Depth 8/1000 time = 2.575068950653076
I0123 12:46:19.183972 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:46:19.184035 139631609110528 alphageometry.py:566] LM output (score=-2.851019): "l : C a f l 15 D a l f l 16 ;"
I0123 12:46:19.184072 139631609110528 alphageometry.py:567] Translation: "l = on_line l a f, on_bline l f a"

I0123 12:46:19.184122 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a f, on_bline l f a ? perp j b b g"
I0123 12:46:19.184288 139631609110528 graph.py:498] 
I0123 12:46:19.184348 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a f, on_bline l f a ? perp j b b g
I0123 12:46:20.325654 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0785012245178223
I0123 12:46:22.514134 139631609110528 ddar.py:60] Depth 2/1000 time = 2.1883184909820557
I0123 12:46:24.978910 139631609110528 ddar.py:60] Depth 3/1000 time = 2.4646012783050537
I0123 12:46:27.047268 139631609110528 ddar.py:60] Depth 4/1000 time = 2.068127155303955
I0123 12:46:29.592327 139631609110528 ddar.py:60] Depth 5/1000 time = 2.544447898864746
I0123 12:46:32.163302 139631609110528 ddar.py:60] Depth 6/1000 time = 2.5490686893463135
I0123 12:46:34.716396 139631609110528 ddar.py:60] Depth 7/1000 time = 2.5529255867004395
I0123 12:46:37.279538 139631609110528 ddar.py:60] Depth 8/1000 time = 2.5629589557647705
I0123 12:46:37.289501 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:46:37.289554 139631609110528 alphageometry.py:566] LM output (score=-3.019273): "l : C c k l 15 D c l k l 16 ;"
I0123 12:46:37.289589 139631609110528 alphageometry.py:567] Translation: "l = on_line l c k, on_bline l k c"

I0123 12:46:37.289626 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c k, on_bline l k c ? perp j b b g"
I0123 12:46:37.289792 139631609110528 graph.py:498] 
I0123 12:46:37.289851 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c k, on_bline l k c ? perp j b b g
I0123 12:46:38.477375 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1216392517089844
I0123 12:46:40.794026 139631609110528 ddar.py:60] Depth 2/1000 time = 2.316486120223999
I0123 12:46:43.410267 139631609110528 ddar.py:60] Depth 3/1000 time = 2.616053581237793
I0123 12:46:46.052085 139631609110528 ddar.py:60] Depth 4/1000 time = 2.6415820121765137
I0123 12:46:48.722682 139631609110528 ddar.py:60] Depth 5/1000 time = 2.6694536209106445
I0123 12:46:51.410097 139631609110528 ddar.py:60] Depth 6/1000 time = 2.667863130569458
I0123 12:46:54.069978 139631609110528 ddar.py:60] Depth 7/1000 time = 2.6597137451171875
I0123 12:46:56.276473 139631609110528 ddar.py:60] Depth 8/1000 time = 2.206305742263794
I0123 12:46:56.285915 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:46:56.285969 139631609110528 alphageometry.py:566] LM output (score=-3.050846): "l : C c f l 15 D c l f l 16 ;"
I0123 12:46:56.286004 139631609110528 alphageometry.py:567] Translation: "l = on_line l c f, on_bline l f c"

I0123 12:46:56.286042 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c f, on_bline l f c ? perp j b b g"
I0123 12:46:56.286221 139631609110528 graph.py:498] 
I0123 12:46:56.286282 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c f, on_bline l f c ? perp j b b g
I0123 12:46:57.902368 139631609110528 ddar.py:60] Depth 1/1000 time = 1.550337791442871
I0123 12:47:00.536317 139631609110528 ddar.py:60] Depth 2/1000 time = 2.6337850093841553
I0123 12:47:03.569071 139631609110528 ddar.py:60] Depth 3/1000 time = 3.0325851440429688
I0123 12:47:06.713620 139631609110528 ddar.py:60] Depth 4/1000 time = 3.1443450450897217
I0123 12:47:09.799501 139631609110528 ddar.py:60] Depth 5/1000 time = 3.084813356399536
I0123 12:47:12.965039 139631609110528 ddar.py:60] Depth 6/1000 time = 3.145660638809204
I0123 12:47:16.109178 139631609110528 ddar.py:60] Depth 7/1000 time = 3.143963098526001
I0123 12:47:19.229156 139631609110528 ddar.py:60] Depth 8/1000 time = 3.1197988986968994
I0123 12:47:19.243297 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:47:19.243352 139631609110528 alphageometry.py:566] LM output (score=-3.064646): "l : C b g l 15 D b l g l 16 ;"
I0123 12:47:19.243386 139631609110528 alphageometry.py:567] Translation: "l = on_line l b g, on_bline l g b"

I0123 12:47:19.243422 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b g, on_bline l g b ? perp j b b g"
I0123 12:47:19.243573 139631609110528 graph.py:498] 
I0123 12:47:19.243628 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b g, on_bline l g b ? perp j b b g
I0123 12:47:20.846601 139631609110528 ddar.py:60] Depth 1/1000 time = 1.5405840873718262
I0123 12:47:23.014350 139631609110528 ddar.py:60] Depth 2/1000 time = 2.1675376892089844
I0123 12:47:25.686958 139631609110528 ddar.py:60] Depth 3/1000 time = 2.672314167022705
I0123 12:47:28.364775 139631609110528 ddar.py:60] Depth 4/1000 time = 2.6776015758514404
I0123 12:47:31.061322 139631609110528 ddar.py:60] Depth 5/1000 time = 2.69612455368042
I0123 12:47:33.515061 139631609110528 ddar.py:60] Depth 6/1000 time = 2.426271915435791
I0123 12:47:36.260038 139631609110528 ddar.py:60] Depth 7/1000 time = 2.7448151111602783
I0123 12:47:38.967516 139631609110528 ddar.py:60] Depth 8/1000 time = 2.7073051929473877
I0123 12:47:38.974750 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:47:38.974802 139631609110528 alphageometry.py:566] LM output (score=-3.083117): "l : C b e l 15 D b l e l 16 ;"
I0123 12:47:38.974837 139631609110528 alphageometry.py:567] Translation: "l = on_line l b e, on_bline l e b"

I0123 12:47:38.974872 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b e, on_bline l e b ? perp j b b g"
I0123 12:47:38.975024 139631609110528 graph.py:498] 
I0123 12:47:38.975082 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b e, on_bline l e b ? perp j b b g
I0123 12:47:40.172261 139631609110528 ddar.py:60] Depth 1/1000 time = 1.134810209274292
I0123 12:47:42.545796 139631609110528 ddar.py:60] Depth 2/1000 time = 2.3733150959014893
I0123 12:47:45.064186 139631609110528 ddar.py:60] Depth 3/1000 time = 2.517897129058838
I0123 12:47:47.614396 139631609110528 ddar.py:60] Depth 4/1000 time = 2.5499842166900635
I0123 12:47:50.163362 139631609110528 ddar.py:60] Depth 5/1000 time = 2.5485270023345947
I0123 12:47:52.769949 139631609110528 ddar.py:60] Depth 6/1000 time = 2.585909605026245
I0123 12:47:55.349450 139631609110528 ddar.py:60] Depth 7/1000 time = 2.5793356895446777
I0123 12:47:57.954511 139631609110528 ddar.py:60] Depth 8/1000 time = 2.604886770248413
I0123 12:47:57.963287 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:47:57.963340 139631609110528 alphageometry.py:566] LM output (score=-3.092174): "l : C b k l 15 D b k k l 16 ;"
I0123 12:47:57.963375 139631609110528 alphageometry.py:567] Translation: "l = on_line l b k, on_circle l k b"

I0123 12:47:57.963411 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b k, on_circle l k b ? perp j b b g"
I0123 12:47:57.963569 139631609110528 graph.py:498] 
I0123 12:47:57.963627 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b k, on_circle l k b ? perp j b b g
I0123 12:47:59.169652 139631609110528 ddar.py:60] Depth 1/1000 time = 1.143193244934082
I0123 12:48:01.526231 139631609110528 ddar.py:60] Depth 2/1000 time = 2.3563690185546875
I0123 12:48:04.218024 139631609110528 ddar.py:60] Depth 3/1000 time = 2.6915078163146973
I0123 12:48:06.438337 139631609110528 ddar.py:60] Depth 4/1000 time = 2.220120668411255
I0123 12:48:09.099403 139631609110528 ddar.py:60] Depth 5/1000 time = 2.660615921020508
I0123 12:48:11.826346 139631609110528 ddar.py:60] Depth 6/1000 time = 2.7026216983795166
I0123 12:48:14.045712 139631609110528 ddar.py:60] Depth 7/1000 time = 2.219184398651123
I0123 12:48:16.708181 139631609110528 ddar.py:60] Depth 8/1000 time = 2.662287473678589
I0123 12:48:16.716263 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:48:16.716315 139631609110528 alphageometry.py:566] LM output (score=-3.188475): "l : C g i l 15 D g l i l 16 ;"
I0123 12:48:16.716350 139631609110528 alphageometry.py:567] Translation: "l = on_line l g i, on_bline l i g"

I0123 12:48:16.716388 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l g i, on_bline l i g ? perp j b b g"
I0123 12:48:16.716542 139631609110528 graph.py:498] 
I0123 12:48:16.716598 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l g i, on_bline l i g ? perp j b b g
I0123 12:48:18.371506 139631609110528 ddar.py:60] Depth 1/1000 time = 1.5913608074188232
I0123 12:48:20.694400 139631609110528 ddar.py:60] Depth 2/1000 time = 2.322667121887207
I0123 12:48:22.731601 139631609110528 ddar.py:60] Depth 3/1000 time = 2.0369091033935547
I0123 12:48:25.301842 139631609110528 ddar.py:60] Depth 4/1000 time = 2.5700392723083496
I0123 12:48:27.813531 139631609110528 ddar.py:60] Depth 5/1000 time = 2.511249542236328
I0123 12:48:30.382399 139631609110528 ddar.py:60] Depth 6/1000 time = 2.5494191646575928
I0123 12:48:32.930094 139631609110528 ddar.py:60] Depth 7/1000 time = 2.5475122928619385
I0123 12:48:35.493366 139631609110528 ddar.py:60] Depth 8/1000 time = 2.563091278076172
I0123 12:48:35.499577 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:48:35.499632 139631609110528 alphageometry.py:566] LM output (score=-3.199991): "l : C b i l 15 D b l i l 16 ;"
I0123 12:48:35.499667 139631609110528 alphageometry.py:567] Translation: "l = on_line l b i, on_bline l i b"

I0123 12:48:35.499704 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b i, on_bline l i b ? perp j b b g"
I0123 12:48:35.499867 139631609110528 graph.py:498] 
I0123 12:48:35.499924 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b i, on_bline l i b ? perp j b b g
I0123 12:48:37.138208 139631609110528 ddar.py:60] Depth 1/1000 time = 1.573746681213379
I0123 12:48:38.976118 139631609110528 ddar.py:60] Depth 2/1000 time = 1.83768630027771
I0123 12:48:41.703112 139631609110528 ddar.py:60] Depth 3/1000 time = 2.7266933917999268
I0123 12:48:44.371054 139631609110528 ddar.py:60] Depth 4/1000 time = 2.6677396297454834
I0123 12:48:46.584532 139631609110528 ddar.py:60] Depth 5/1000 time = 2.2130608558654785
I0123 12:48:49.316946 139631609110528 ddar.py:60] Depth 6/1000 time = 2.705077886581421
I0123 12:48:52.019476 139631609110528 ddar.py:60] Depth 7/1000 time = 2.702364683151245
I0123 12:48:54.242879 139631609110528 ddar.py:60] Depth 8/1000 time = 2.2232298851013184
I0123 12:48:54.249498 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:48:54.249552 139631609110528 alphageometry.py:566] LM output (score=-3.333613): "l : C c d l 15 D c d d l 16 ;"
I0123 12:48:54.249588 139631609110528 alphageometry.py:567] Translation: "l = on_line l c d, on_circle l d c"

I0123 12:48:54.249625 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c d, on_circle l d c ? perp j b b g"
I0123 12:48:54.249794 139631609110528 graph.py:498] 
I0123 12:48:54.249852 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c d, on_circle l d c ? perp j b b g
I0123 12:48:56.408150 139631609110528 ddar.py:60] Depth 1/1000 time = 2.100243330001831
I0123 12:49:00.226638 139631609110528 ddar.py:60] Depth 2/1000 time = 3.818305015563965
I0123 12:49:03.506638 139631609110528 ddar.py:60] Depth 3/1000 time = 3.2798051834106445
I0123 12:49:07.273156 139631609110528 ddar.py:60] Depth 4/1000 time = 3.7663369178771973
I0123 12:49:11.048470 139631609110528 ddar.py:60] Depth 5/1000 time = 3.7748172283172607
I0123 12:49:14.938945 139631609110528 ddar.py:60] Depth 6/1000 time = 3.861938953399658
I0123 12:49:18.800536 139631609110528 ddar.py:60] Depth 7/1000 time = 3.861358642578125
I0123 12:49:22.702307 139631609110528 ddar.py:60] Depth 8/1000 time = 3.901454448699951
I0123 12:49:22.713690 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:49:22.713762 139631609110528 alphageometry.py:566] LM output (score=-3.336226): "l : C c k l 15 D a c a l 16 ;"
I0123 12:49:22.713799 139631609110528 alphageometry.py:567] Translation: "l = on_line l c k, on_circle l a c"

I0123 12:49:22.713837 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c k, on_circle l a c ? perp j b b g"
I0123 12:49:22.714003 139631609110528 graph.py:498] 
I0123 12:49:22.714061 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c k, on_circle l a c ? perp j b b g
I0123 12:49:23.904240 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1237974166870117
I0123 12:49:26.234154 139631609110528 ddar.py:60] Depth 2/1000 time = 2.3297605514526367
I0123 12:49:28.841189 139631609110528 ddar.py:60] Depth 3/1000 time = 2.606872320175171
I0123 12:49:31.491268 139631609110528 ddar.py:60] Depth 4/1000 time = 2.64990234375
I0123 12:49:34.156982 139631609110528 ddar.py:60] Depth 5/1000 time = 2.6647331714630127
I0123 12:49:36.905900 139631609110528 ddar.py:60] Depth 6/1000 time = 2.7293014526367188
I0123 12:49:39.648049 139631609110528 ddar.py:60] Depth 7/1000 time = 2.741853952407837
I0123 12:49:42.349868 139631609110528 ddar.py:60] Depth 8/1000 time = 2.7016148567199707
I0123 12:49:42.358237 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:49:42.358290 139631609110528 alphageometry.py:566] LM output (score=-3.383075): "l : C c k l 15 D a k a l 16 ;"
I0123 12:49:42.358325 139631609110528 alphageometry.py:567] Translation: "l = on_line l c k, on_circle l a k"

I0123 12:49:42.358361 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c k, on_circle l a k ? perp j b b g"
I0123 12:49:42.358521 139631609110528 graph.py:498] 
I0123 12:49:42.358583 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l c k, on_circle l a k ? perp j b b g
I0123 12:49:43.538241 139631609110528 ddar.py:60] Depth 1/1000 time = 1.120537519454956
I0123 12:49:45.975223 139631609110528 ddar.py:60] Depth 2/1000 time = 2.4368269443511963
I0123 12:49:48.500365 139631609110528 ddar.py:60] Depth 3/1000 time = 2.5249617099761963
I0123 12:49:51.050605 139631609110528 ddar.py:60] Depth 4/1000 time = 2.5500543117523193
I0123 12:49:53.633700 139631609110528 ddar.py:60] Depth 5/1000 time = 2.5824806690216064
I0123 12:49:56.334637 139631609110528 ddar.py:60] Depth 6/1000 time = 2.6810388565063477
I0123 12:49:58.442754 139631609110528 ddar.py:60] Depth 7/1000 time = 2.1079211235046387
I0123 12:50:01.010373 139631609110528 ddar.py:60] Depth 8/1000 time = 2.5674469470977783
I0123 12:50:01.018059 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:50:01.018111 139631609110528 alphageometry.py:566] LM output (score=-3.443953): "l : C e h l 15 D e l h l 16 ;"
I0123 12:50:01.018146 139631609110528 alphageometry.py:567] Translation: "l = on_line l e h, on_bline l h e"

I0123 12:50:01.018181 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l e h, on_bline l h e ? perp j b b g"
I0123 12:50:01.018351 139631609110528 graph.py:498] 
I0123 12:50:01.018410 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l e h, on_bline l h e ? perp j b b g
I0123 12:50:02.634410 139631609110528 ddar.py:60] Depth 1/1000 time = 1.554147720336914
I0123 12:50:04.482944 139631609110528 ddar.py:60] Depth 2/1000 time = 1.848374843597412
I0123 12:50:07.080176 139631609110528 ddar.py:60] Depth 3/1000 time = 2.5970664024353027
I0123 12:50:09.730695 139631609110528 ddar.py:60] Depth 4/1000 time = 2.6503493785858154
I0123 12:50:11.925759 139631609110528 ddar.py:60] Depth 5/1000 time = 2.1946120262145996
I0123 12:50:14.639464 139631609110528 ddar.py:60] Depth 6/1000 time = 2.6934938430786133
I0123 12:50:17.355013 139631609110528 ddar.py:60] Depth 7/1000 time = 2.715249538421631
I0123 12:50:20.045352 139631609110528 ddar.py:60] Depth 8/1000 time = 2.6901659965515137
I0123 12:50:20.053930 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:50:20.053982 139631609110528 alphageometry.py:566] LM output (score=-3.536423): "l : C a d l 15 D a d d l 16 ;"
I0123 12:50:20.054016 139631609110528 alphageometry.py:567] Translation: "l = on_line l a d, on_circle l d a"

I0123 12:50:20.054052 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a d, on_circle l d a ? perp j b b g"
I0123 12:50:20.054210 139631609110528 graph.py:498] 
I0123 12:50:20.054267 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l a d, on_circle l d a ? perp j b b g
I0123 12:50:21.644715 139631609110528 ddar.py:60] Depth 1/1000 time = 1.5302255153656006
I0123 12:50:25.196296 139631609110528 ddar.py:60] Depth 2/1000 time = 3.551391363143921
I0123 12:50:28.409777 139631609110528 ddar.py:60] Depth 3/1000 time = 3.2133166790008545
I0123 12:50:32.059570 139631609110528 ddar.py:60] Depth 4/1000 time = 3.649615526199341
I0123 12:50:35.776045 139631609110528 ddar.py:60] Depth 5/1000 time = 3.715982675552368
I0123 12:50:39.522467 139631609110528 ddar.py:60] Depth 6/1000 time = 3.7113101482391357
I0123 12:50:43.211848 139631609110528 ddar.py:60] Depth 7/1000 time = 3.689213752746582
I0123 12:50:46.493894 139631609110528 ddar.py:60] Depth 8/1000 time = 3.281869411468506
I0123 12:50:46.502933 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:50:46.502986 139631609110528 alphageometry.py:566] LM output (score=-3.560600): "l : C b d l 15 D b d d l 16 ;"
I0123 12:50:46.503020 139631609110528 alphageometry.py:567] Translation: "l = on_line l b d, on_circle l d b"

I0123 12:50:46.503054 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b d, on_circle l d b ? perp j b b g"
I0123 12:50:46.503203 139631609110528 graph.py:498] 
I0123 12:50:46.503257 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a c, on_bline k c a; l = on_line l b d, on_circle l d b ? perp j b b g
I0123 12:50:48.410935 139631609110528 ddar.py:60] Depth 1/1000 time = 1.850111484527588
I0123 12:50:52.192394 139631609110528 ddar.py:60] Depth 2/1000 time = 3.7812445163726807
I0123 12:50:56.325087 139631609110528 ddar.py:60] Depth 3/1000 time = 4.132417917251587
I0123 12:50:59.943349 139631609110528 ddar.py:60] Depth 4/1000 time = 3.6180808544158936
I0123 12:51:04.497171 139631609110528 ddar.py:60] Depth 5/1000 time = 4.553373336791992
I0123 12:51:08.753779 139631609110528 ddar.py:60] Depth 6/1000 time = 4.213382244110107
I0123 12:51:12.439432 139631609110528 ddar.py:60] Depth 7/1000 time = 3.6854124069213867
I0123 12:51:16.664892 139631609110528 ddar.py:60] Depth 8/1000 time = 4.2251527309417725
I0123 12:51:16.672245 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:51:16.672301 139631609110528 alphageometry.py:566] LM output (score=-3.716472): "l : C c k l 15 P a c k l 16 ;"
I0123 12:51:16.672336 139631609110528 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2570, in add_clause
    raise DepCheckFailError(
graph.DepCheckFailError: ncoll k a c
"

I0123 12:51:16.672372 139631609110528 alphageometry.py:566] LM output (score=-3.956017): "l : C c k l 15 P a c a l 16 ;"
I0123 12:51:16.672400 139631609110528 alphageometry.py:567] Translation: "ERROR: Invalid predicate P a c a l"

I0123 12:51:16.672432 139631609110528 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : D a k c k 13 ; x00
I0123 12:51:22.204494 139631609110528 alphageometry.py:566] LM output (score=-1.028090): "l : C a b l 14 D a l b l 15 ;"
I0123 12:51:22.204621 139631609110528 alphageometry.py:567] Translation: "l = on_line l a b, on_bline l b a"

I0123 12:51:22.204663 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l a b, on_bline l b a ? perp j b b g"
I0123 12:51:22.204805 139631609110528 graph.py:498] 
I0123 12:51:22.204861 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l a b, on_bline l b a ? perp j b b g
I0123 12:51:23.801708 139631609110528 ddar.py:60] Depth 1/1000 time = 1.5358445644378662
I0123 12:51:25.681897 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8800206184387207
I0123 12:51:28.253841 139631609110528 ddar.py:60] Depth 3/1000 time = 2.571780204772949
I0123 12:51:30.357664 139631609110528 ddar.py:60] Depth 4/1000 time = 2.1036479473114014
I0123 12:51:32.950409 139631609110528 ddar.py:60] Depth 5/1000 time = 2.592416524887085
I0123 12:51:35.131620 139631609110528 ddar.py:60] Depth 6/1000 time = 2.1544673442840576
I0123 12:51:37.762855 139631609110528 ddar.py:60] Depth 7/1000 time = 2.63106369972229
I0123 12:51:39.892703 139631609110528 ddar.py:60] Depth 8/1000 time = 2.1296708583831787
I0123 12:51:39.897455 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:51:39.897506 139631609110528 alphageometry.py:566] LM output (score=-1.594877): "l : T d k d l 14 ;"
I0123 12:51:39.897551 139631609110528 alphageometry.py:567] Translation: "l = on_tline l d d k"

I0123 12:51:39.897588 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l d d k ? perp j b b g"
I0123 12:51:39.897733 139631609110528 graph.py:498] 
I0123 12:51:39.897788 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l d d k ? perp j b b g
I0123 12:51:41.400781 139631609110528 ddar.py:60] Depth 1/1000 time = 1.4551761150360107
I0123 12:51:43.063345 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6624045372009277
I0123 12:51:45.266600 139631609110528 ddar.py:60] Depth 3/1000 time = 2.203094244003296
I0123 12:51:46.967939 139631609110528 ddar.py:60] Depth 4/1000 time = 1.701153039932251
I0123 12:51:48.657489 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6892197132110596
I0123 12:51:50.954783 139631609110528 ddar.py:60] Depth 6/1000 time = 2.275296449661255
I0123 12:51:52.751084 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7961392402648926
I0123 12:51:55.063308 139631609110528 ddar.py:60] Depth 8/1000 time = 2.3120336532592773
I0123 12:51:55.068382 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:51:55.068446 139631609110528 alphageometry.py:566] LM output (score=-1.629260): "l : C c k l 14 D c l k l 15 ;"
I0123 12:51:55.068482 139631609110528 alphageometry.py:567] Translation: "l = on_line l c k, on_bline l k c"

I0123 12:51:55.068523 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l c k, on_bline l k c ? perp j b b g"
I0123 12:51:55.068676 139631609110528 graph.py:498] 
I0123 12:51:55.068729 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l c k, on_bline l k c ? perp j b b g
I0123 12:51:56.164449 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0337731838226318
I0123 12:51:58.127743 139631609110528 ddar.py:60] Depth 2/1000 time = 1.9630804061889648
I0123 12:52:00.481287 139631609110528 ddar.py:60] Depth 3/1000 time = 2.353351354598999
I0123 12:52:02.329483 139631609110528 ddar.py:60] Depth 4/1000 time = 1.848026990890503
I0123 12:52:04.642837 139631609110528 ddar.py:60] Depth 5/1000 time = 2.3129756450653076
I0123 12:52:07.101325 139631609110528 ddar.py:60] Depth 6/1000 time = 2.437967538833618
I0123 12:52:09.039155 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9376661777496338
I0123 12:52:11.494021 139631609110528 ddar.py:60] Depth 8/1000 time = 2.4547035694122314
I0123 12:52:11.499973 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:52:11.500023 139631609110528 alphageometry.py:566] LM output (score=-1.744862): "l : C c d l 14 D c l d l 15 ;"
I0123 12:52:11.500056 139631609110528 alphageometry.py:567] Translation: "l = on_line l c d, on_bline l d c"

I0123 12:52:11.500091 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l c d, on_bline l d c ? perp j b b g"
I0123 12:52:11.500237 139631609110528 graph.py:498] 
I0123 12:52:11.500300 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l c d, on_bline l d c ? perp j b b g
I0123 12:52:12.606233 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0443217754364014
I0123 12:52:14.444992 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8386170864105225
I0123 12:52:16.748355 139631609110528 ddar.py:60] Depth 3/1000 time = 2.3032000064849854
I0123 12:52:18.547964 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7994270324707031
I0123 12:52:20.871159 139631609110528 ddar.py:60] Depth 5/1000 time = 2.322803497314453
I0123 12:52:22.808821 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9167964458465576
I0123 12:52:24.713561 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9045629501342773
I0123 12:52:27.139013 139631609110528 ddar.py:60] Depth 8/1000 time = 2.4252126216888428
I0123 12:52:27.145843 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:52:27.145906 139631609110528 alphageometry.py:566] LM output (score=-1.838872): "l : T d k k l 14 ;"
I0123 12:52:27.145941 139631609110528 alphageometry.py:567] Translation: "l = on_tline l k d k"

I0123 12:52:27.145981 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l k d k ? perp j b b g"
I0123 12:52:27.146133 139631609110528 graph.py:498] 
I0123 12:52:27.146192 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l k d k ? perp j b b g
I0123 12:52:28.172057 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9779036045074463
I0123 12:52:30.307732 139631609110528 ddar.py:60] Depth 2/1000 time = 2.1355113983154297
I0123 12:52:31.989322 139631609110528 ddar.py:60] Depth 3/1000 time = 1.681406021118164
I0123 12:52:33.679137 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6896569728851318
I0123 12:52:35.852965 139631609110528 ddar.py:60] Depth 5/1000 time = 2.173492908477783
I0123 12:52:37.655169 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7794983386993408
I0123 12:52:39.917180 139631609110528 ddar.py:60] Depth 7/1000 time = 2.261855125427246
I0123 12:52:41.686584 139631609110528 ddar.py:60] Depth 8/1000 time = 1.769239902496338
I0123 12:52:41.691416 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:52:41.691467 139631609110528 alphageometry.py:566] LM output (score=-1.892632): "l : C b c l 14 D b l c l 15 ;"
I0123 12:52:41.691501 139631609110528 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 12:52:41.691534 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l b c, on_bline l c b ? perp j b b g"
I0123 12:52:41.691672 139631609110528 graph.py:498] 
I0123 12:52:41.691727 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l b c, on_bline l c b ? perp j b b g
I0123 12:52:42.827595 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0761897563934326
I0123 12:52:45.293080 139631609110528 ddar.py:60] Depth 2/1000 time = 2.4653000831604004
I0123 12:52:47.430006 139631609110528 ddar.py:60] Depth 3/1000 time = 2.13662052154541
I0123 12:52:50.135606 139631609110528 ddar.py:60] Depth 4/1000 time = 2.7054131031036377
I0123 12:52:52.818091 139631609110528 ddar.py:60] Depth 5/1000 time = 2.682100296020508
I0123 12:52:55.053600 139631609110528 ddar.py:60] Depth 6/1000 time = 2.2074453830718994
I0123 12:52:57.778362 139631609110528 ddar.py:60] Depth 7/1000 time = 2.7245819568634033
I0123 12:52:59.983211 139631609110528 ddar.py:60] Depth 8/1000 time = 2.2046656608581543
I0123 12:52:59.990871 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:52:59.990922 139631609110528 alphageometry.py:566] LM output (score=-1.917129): "l : C a e l 14 D a l e l 15 ;"
I0123 12:52:59.990956 139631609110528 alphageometry.py:567] Translation: "l = on_line l a e, on_bline l e a"

I0123 12:52:59.990992 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l a e, on_bline l e a ? perp j b b g"
I0123 12:52:59.991135 139631609110528 graph.py:498] 
I0123 12:52:59.991188 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l a e, on_bline l e a ? perp j b b g
I0123 12:53:01.096297 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0437195301055908
I0123 12:53:03.219704 139631609110528 ddar.py:60] Depth 2/1000 time = 2.1232640743255615
I0123 12:53:05.098656 139631609110528 ddar.py:60] Depth 3/1000 time = 1.878739833831787
I0123 12:53:07.522097 139631609110528 ddar.py:60] Depth 4/1000 time = 2.4231338500976562
I0123 12:53:09.358440 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8359744548797607
I0123 12:53:11.878652 139631609110528 ddar.py:60] Depth 6/1000 time = 2.496917963027954
I0123 12:53:13.841722 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9629108905792236
I0123 12:53:16.343969 139631609110528 ddar.py:60] Depth 8/1000 time = 2.5020718574523926
I0123 12:53:16.351069 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:53:16.351122 139631609110528 alphageometry.py:566] LM output (score=-2.003035): "l : T d k g l 14 ;"
I0123 12:53:16.351156 139631609110528 alphageometry.py:567] Translation: "l = on_tline l g d k"

I0123 12:53:16.351193 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l g d k ? perp j b b g"
I0123 12:53:16.351337 139631609110528 graph.py:498] 
I0123 12:53:16.351388 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l g d k ? perp j b b g
I0123 12:53:17.376949 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9753866195678711
I0123 12:53:18.953070 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5759937763214111
I0123 12:53:21.136497 139631609110528 ddar.py:60] Depth 3/1000 time = 2.183272123336792
I0123 12:53:22.802405 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6656765937805176
I0123 12:53:25.063496 139631609110528 ddar.py:60] Depth 5/1000 time = 2.260620355606079
I0123 12:53:26.845751 139631609110528 ddar.py:60] Depth 6/1000 time = 1.760936975479126
I0123 12:53:28.607425 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7615079879760742
I0123 12:53:30.902404 139631609110528 ddar.py:60] Depth 8/1000 time = 2.2948172092437744
I0123 12:53:30.907091 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:53:30.907145 139631609110528 alphageometry.py:566] LM output (score=-2.047724): "l : C a i l 14 D a l i l 15 ;"
I0123 12:53:30.907180 139631609110528 alphageometry.py:567] Translation: "l = on_line l a i, on_bline l i a"

I0123 12:53:30.907218 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l a i, on_bline l i a ? perp j b b g"
I0123 12:53:30.907374 139631609110528 graph.py:498] 
I0123 12:53:30.907434 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l a i, on_bline l i a ? perp j b b g
I0123 12:53:32.026105 139631609110528 ddar.py:60] Depth 1/1000 time = 1.056757926940918
I0123 12:53:33.822011 139631609110528 ddar.py:60] Depth 2/1000 time = 1.795771598815918
I0123 12:53:36.448202 139631609110528 ddar.py:60] Depth 3/1000 time = 2.625840425491333
I0123 12:53:39.115929 139631609110528 ddar.py:60] Depth 4/1000 time = 2.6675612926483154
I0123 12:53:41.254085 139631609110528 ddar.py:60] Depth 5/1000 time = 2.137786626815796
I0123 12:53:44.035645 139631609110528 ddar.py:60] Depth 6/1000 time = 2.7567970752716064
I0123 12:53:46.305297 139631609110528 ddar.py:60] Depth 7/1000 time = 2.269460916519165
I0123 12:53:49.041278 139631609110528 ddar.py:60] Depth 8/1000 time = 2.7358243465423584
I0123 12:53:49.046640 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:53:49.046691 139631609110528 alphageometry.py:566] LM output (score=-2.069673): "l : T d k f l 14 ;"
I0123 12:53:49.046724 139631609110528 alphageometry.py:567] Translation: "l = on_tline l f d k"

I0123 12:53:49.046758 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l f d k ? perp j b b g"
I0123 12:53:49.046899 139631609110528 graph.py:498] 
I0123 12:53:49.046956 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l f d k ? perp j b b g
I0123 12:53:50.091598 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9961750507354736
I0123 12:53:51.760068 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6683156490325928
I0123 12:53:53.979712 139631609110528 ddar.py:60] Depth 3/1000 time = 2.2194888591766357
I0123 12:53:55.693486 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7136080265045166
I0123 12:53:57.412554 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7187442779541016
I0123 12:53:59.786327 139631609110528 ddar.py:60] Depth 6/1000 time = 2.352776288986206
I0123 12:54:01.591191 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8046493530273438
I0123 12:54:04.006317 139631609110528 ddar.py:60] Depth 8/1000 time = 2.4148411750793457
I0123 12:54:04.011219 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:54:04.011277 139631609110528 alphageometry.py:566] LM output (score=-2.249448): "l : T d k h l 14 ;"
I0123 12:54:04.011311 139631609110528 alphageometry.py:567] Translation: "l = on_tline l h d k"

I0123 12:54:04.011345 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l h d k ? perp j b b g"
I0123 12:54:04.011503 139631609110528 graph.py:498] 
I0123 12:54:04.011558 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l h d k ? perp j b b g
I0123 12:54:05.029932 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9663820266723633
I0123 12:54:06.515240 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4851701259613037
I0123 12:54:08.747215 139631609110528 ddar.py:60] Depth 3/1000 time = 2.231812000274658
I0123 12:54:10.432862 139631609110528 ddar.py:60] Depth 4/1000 time = 1.685478687286377
I0123 12:54:12.101073 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6679010391235352
I0123 12:54:14.446547 139631609110528 ddar.py:60] Depth 6/1000 time = 2.323791980743408
I0123 12:54:16.223215 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7765066623687744
I0123 12:54:18.593564 139631609110528 ddar.py:60] Depth 8/1000 time = 2.3701894283294678
I0123 12:54:18.597770 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:54:18.597821 139631609110528 alphageometry.py:566] LM output (score=-2.326214): "l : D a l b l 14 ;"
I0123 12:54:18.597855 139631609110528 alphageometry.py:567] Translation: "l = on_bline l b a"

I0123 12:54:18.597889 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_bline l b a ? perp j b b g"
I0123 12:54:18.598025 139631609110528 graph.py:498] 
I0123 12:54:18.598078 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_bline l b a ? perp j b b g
I0123 12:54:19.700399 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0414328575134277
I0123 12:54:21.549620 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8489534854888916
I0123 12:54:24.217777 139631609110528 ddar.py:60] Depth 3/1000 time = 2.6677658557891846
I0123 12:54:26.299573 139631609110528 ddar.py:60] Depth 4/1000 time = 2.0816256999969482
I0123 12:54:28.382429 139631609110528 ddar.py:60] Depth 5/1000 time = 2.0824968814849854
I0123 12:54:31.179900 139631609110528 ddar.py:60] Depth 6/1000 time = 2.7682862281799316
I0123 12:54:33.409410 139631609110528 ddar.py:60] Depth 7/1000 time = 2.229329824447632
I0123 12:54:36.165244 139631609110528 ddar.py:60] Depth 8/1000 time = 2.75566029548645
I0123 12:54:36.170042 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:54:36.170105 139631609110528 alphageometry.py:566] LM output (score=-2.343015): "l : C a c l 14 D a l c l 15 ;"
I0123 12:54:36.170140 139631609110528 alphageometry.py:567] Translation: "l = on_line l a c, on_bline l c a"

I0123 12:54:36.170176 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l a c, on_bline l c a ? perp j b b g"
I0123 12:54:36.170332 139631609110528 graph.py:498] 
I0123 12:54:36.170387 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l a c, on_bline l c a ? perp j b b g
I0123 12:54:37.339807 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1055426597595215
I0123 12:54:39.328401 139631609110528 ddar.py:60] Depth 2/1000 time = 1.9883887767791748
I0123 12:54:42.027508 139631609110528 ddar.py:60] Depth 3/1000 time = 2.6988232135772705
I0123 12:54:44.729851 139631609110528 ddar.py:60] Depth 4/1000 time = 2.7021615505218506
I0123 12:54:46.875759 139631609110528 ddar.py:60] Depth 5/1000 time = 2.145504951477051
I0123 12:54:49.640769 139631609110528 ddar.py:60] Depth 6/1000 time = 2.7423689365386963
I0123 12:54:51.832141 139631609110528 ddar.py:60] Depth 7/1000 time = 2.1911938190460205
I0123 12:54:54.542894 139631609110528 ddar.py:60] Depth 8/1000 time = 2.71057391166687
I0123 12:54:54.549508 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:54:54.549560 139631609110528 alphageometry.py:566] LM output (score=-2.402282): "l : T a l d k 14 ;"
I0123 12:54:54.549593 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a d k"

I0123 12:54:54.549627 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l a d k ? perp j b b g"
I0123 12:54:54.549790 139631609110528 graph.py:498] 
I0123 12:54:54.549847 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l a d k ? perp j b b g
I0123 12:54:55.577134 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9788973331451416
I0123 12:54:57.689955 139631609110528 ddar.py:60] Depth 2/1000 time = 2.112642526626587
I0123 12:54:59.404735 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7144896984100342
I0123 12:55:01.113128 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7081811428070068
I0123 12:55:03.398492 139631609110528 ddar.py:60] Depth 5/1000 time = 2.285022497177124
I0123 12:55:05.237112 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8163824081420898
I0123 12:55:07.588032 139631609110528 ddar.py:60] Depth 7/1000 time = 2.3507604598999023
I0123 12:55:09.391628 139631609110528 ddar.py:60] Depth 8/1000 time = 1.803429126739502
I0123 12:55:09.396098 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:55:09.396150 139631609110528 alphageometry.py:566] LM output (score=-2.428045): "l : C c h l 14 D c l h l 15 ;"
I0123 12:55:09.396184 139631609110528 alphageometry.py:567] Translation: "l = on_line l c h, on_bline l h c"

I0123 12:55:09.396220 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l c h, on_bline l h c ? perp j b b g"
I0123 12:55:09.396364 139631609110528 graph.py:498] 
I0123 12:55:09.396417 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l c h, on_bline l h c ? perp j b b g
I0123 12:55:10.522196 139631609110528 ddar.py:60] Depth 1/1000 time = 1.064373254776001
I0123 12:55:12.927550 139631609110528 ddar.py:60] Depth 2/1000 time = 2.405208110809326
I0123 12:55:14.877105 139631609110528 ddar.py:60] Depth 3/1000 time = 1.949376106262207
I0123 12:55:17.429157 139631609110528 ddar.py:60] Depth 4/1000 time = 2.551831007003784
I0123 12:55:19.403129 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9734232425689697
I0123 12:55:22.085215 139631609110528 ddar.py:60] Depth 6/1000 time = 2.6610422134399414
I0123 12:55:24.152664 139631609110528 ddar.py:60] Depth 7/1000 time = 2.0672826766967773
I0123 12:55:26.750606 139631609110528 ddar.py:60] Depth 8/1000 time = 2.5977580547332764
I0123 12:55:26.757898 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:55:26.757961 139631609110528 alphageometry.py:566] LM output (score=-2.451221): "l : C g h l 14 D g l h l 15 ;"
I0123 12:55:26.757996 139631609110528 alphageometry.py:567] Translation: "l = on_line l g h, on_bline l h g"

I0123 12:55:26.758032 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l g h, on_bline l h g ? perp j b b g"
I0123 12:55:26.758181 139631609110528 graph.py:498] 
I0123 12:55:26.758238 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l g h, on_bline l h g ? perp j b b g
I0123 12:55:27.937282 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1180996894836426
I0123 12:55:31.231312 139631609110528 ddar.py:60] Depth 2/1000 time = 3.293884754180908
I0123 12:55:34.731711 139631609110528 ddar.py:60] Depth 3/1000 time = 3.500209093093872
I0123 12:55:38.350357 139631609110528 ddar.py:60] Depth 4/1000 time = 3.618443012237549
I0123 12:55:41.935301 139631609110528 ddar.py:60] Depth 5/1000 time = 3.58473539352417
I0123 12:55:45.513022 139631609110528 ddar.py:60] Depth 6/1000 time = 3.5772788524627686
I0123 12:55:49.385322 139631609110528 ddar.py:60] Depth 7/1000 time = 3.847703218460083
I0123 12:55:53.691056 139631609110528 ddar.py:60] Depth 8/1000 time = 4.305547714233398
I0123 12:55:57.534412 139631609110528 ddar.py:60] Depth 9/1000 time = 3.8431525230407715
I0123 12:56:01.514859 139631609110528 ddar.py:60] Depth 10/1000 time = 3.9802513122558594
I0123 12:56:05.561666 139631609110528 ddar.py:60] Depth 11/1000 time = 4.046623468399048
I0123 12:56:09.614696 139631609110528 ddar.py:60] Depth 12/1000 time = 4.032402276992798
I0123 12:56:09.614908 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:56:09.614955 139631609110528 alphageometry.py:566] LM output (score=-2.562244): "l : T a i h l 14 ;"
I0123 12:56:09.614988 139631609110528 alphageometry.py:567] Translation: "l = on_tline l h a i"

I0123 12:56:09.615024 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l h a i ? perp j b b g"
I0123 12:56:09.615170 139631609110528 graph.py:498] 
I0123 12:56:09.615229 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l h a i ? perp j b b g
I0123 12:56:10.624696 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9575612545013428
I0123 12:56:12.153228 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5283949375152588
I0123 12:56:13.984715 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8312761783599854
I0123 12:56:16.408912 139631609110528 ddar.py:60] Depth 4/1000 time = 2.4239041805267334
I0123 12:56:18.242955 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8336763381958008
I0123 12:56:20.838131 139631609110528 ddar.py:60] Depth 6/1000 time = 2.569186210632324
I0123 12:56:22.816891 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9785947799682617
I0123 12:56:24.799630 139631609110528 ddar.py:60] Depth 8/1000 time = 1.982546329498291
I0123 12:56:24.804876 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:56:24.804929 139631609110528 alphageometry.py:566] LM output (score=-2.606668): "l : T a b g l 14 ;"
I0123 12:56:24.804963 139631609110528 alphageometry.py:567] Translation: "l = on_tline l g a b"

I0123 12:56:24.804998 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l g a b ? perp j b b g"
I0123 12:56:24.805149 139631609110528 graph.py:498] 
I0123 12:56:24.805200 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l g a b ? perp j b b g
I0123 12:56:26.378251 139631609110528 ddar.py:60] Depth 1/1000 time = 1.5243806838989258
I0123 12:56:28.035877 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6574666500091553
I0123 12:56:29.859838 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8237879276275635
I0123 12:56:32.276539 139631609110528 ddar.py:60] Depth 4/1000 time = 2.4165351390838623
I0123 12:56:34.104713 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8277225494384766
I0123 12:56:36.727870 139631609110528 ddar.py:60] Depth 6/1000 time = 2.594255208969116
I0123 12:56:38.687360 139631609110528 ddar.py:60] Depth 7/1000 time = 1.959329605102539
I0123 12:56:40.650323 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9627819061279297
I0123 12:56:40.655337 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:56:40.655395 139631609110528 alphageometry.py:566] LM output (score=-2.609992): "l : T a l d e 14 ;"
I0123 12:56:40.655430 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a d e"

I0123 12:56:40.655467 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l a d e ? perp j b b g"
I0123 12:56:40.655609 139631609110528 graph.py:498] 
I0123 12:56:40.655666 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l a d e ? perp j b b g
I0123 12:56:41.662210 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9577846527099609
I0123 12:56:43.750813 139631609110528 ddar.py:60] Depth 2/1000 time = 2.0884647369384766
I0123 12:56:45.595727 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8447318077087402
I0123 12:56:48.029428 139631609110528 ddar.py:60] Depth 4/1000 time = 2.4335262775421143
I0123 12:56:49.865994 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8361670970916748
I0123 12:56:51.864868 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9695837497711182
I0123 12:56:54.427780 139631609110528 ddar.py:60] Depth 7/1000 time = 2.562641143798828
I0123 12:56:56.377224 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9492442607879639
I0123 12:56:56.382198 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:56:56.382267 139631609110528 alphageometry.py:566] LM output (score=-2.635876): "l : D a l c l 14 ;"
I0123 12:56:56.382302 139631609110528 alphageometry.py:567] Translation: "l = on_bline l c a"

I0123 12:56:56.382342 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_bline l c a ? perp j b b g"
I0123 12:56:56.382498 139631609110528 graph.py:498] 
I0123 12:56:56.382554 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_bline l c a ? perp j b b g
I0123 12:56:57.473466 139631609110528 ddar.py:60] Depth 1/1000 time = 1.027843952178955
I0123 12:57:00.061002 139631609110528 ddar.py:60] Depth 2/1000 time = 2.587402105331421
I0123 12:57:02.035670 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9744973182678223
I0123 12:57:04.607533 139631609110528 ddar.py:60] Depth 4/1000 time = 2.571685791015625
I0123 12:57:06.598329 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9904465675354004
I0123 12:57:09.342795 139631609110528 ddar.py:60] Depth 6/1000 time = 2.723184823989868
I0123 12:57:11.450395 139631609110528 ddar.py:60] Depth 7/1000 time = 2.107391357421875
I0123 12:57:13.559546 139631609110528 ddar.py:60] Depth 8/1000 time = 2.108867883682251
I0123 12:57:13.565018 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:57:13.565119 139631609110528 alphageometry.py:566] LM output (score=-2.714412): "l : T a c a l 14 ;"
I0123 12:57:13.565156 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a a c"

I0123 12:57:13.565209 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l a a c ? perp j b b g"
I0123 12:57:13.565391 139631609110528 graph.py:498] 
I0123 12:57:13.565447 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l a a c ? perp j b b g
I0123 12:57:15.200682 139631609110528 ddar.py:60] Depth 1/1000 time = 1.5850985050201416
I0123 12:57:16.663987 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4631497859954834
I0123 12:57:18.322100 139631609110528 ddar.py:60] Depth 3/1000 time = 1.657956600189209
I0123 12:57:20.575108 139631609110528 ddar.py:60] Depth 4/1000 time = 2.252830982208252
I0123 12:57:22.245509 139631609110528 ddar.py:60] Depth 5/1000 time = 1.67006254196167
I0123 12:57:24.030538 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7629108428955078
I0123 12:57:26.333775 139631609110528 ddar.py:60] Depth 7/1000 time = 2.3030753135681152
I0123 12:57:28.091754 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7578091621398926
I0123 12:57:28.096419 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:57:28.096483 139631609110528 alphageometry.py:566] LM output (score=-2.876251): "l : T a c k l 14 ;"
I0123 12:57:28.096519 139631609110528 alphageometry.py:567] Translation: "l = on_tline l k a c"

I0123 12:57:28.096556 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l k a c ? perp j b b g"
I0123 12:57:28.096706 139631609110528 graph.py:498] 
I0123 12:57:28.096760 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l k a c ? perp j b b g
I0123 12:57:29.117603 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9703865051269531
I0123 12:57:31.274114 139631609110528 ddar.py:60] Depth 2/1000 time = 2.156348466873169
I0123 12:57:33.246362 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9720544815063477
I0123 12:57:35.835364 139631609110528 ddar.py:60] Depth 4/1000 time = 2.5888264179229736
I0123 12:57:37.816318 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9805808067321777
I0123 12:57:40.560244 139631609110528 ddar.py:60] Depth 6/1000 time = 2.7210328578948975
I0123 12:57:42.646969 139631609110528 ddar.py:60] Depth 7/1000 time = 2.086564540863037
I0123 12:57:44.741453 139631609110528 ddar.py:60] Depth 8/1000 time = 2.09429931640625
I0123 12:57:44.749174 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:57:44.749227 139631609110528 alphageometry.py:566] LM output (score=-2.884126): "l : T d k i l 14 ;"
I0123 12:57:44.749262 139631609110528 alphageometry.py:567] Translation: "l = on_tline l i d k"

I0123 12:57:44.749299 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l i d k ? perp j b b g"
I0123 12:57:44.749445 139631609110528 graph.py:498] 
I0123 12:57:44.749498 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l i d k ? perp j b b g
I0123 12:57:46.360230 139631609110528 ddar.py:60] Depth 1/1000 time = 1.5627057552337646
I0123 12:57:47.933365 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5729639530181885
I0123 12:57:49.637897 139631609110528 ddar.py:60] Depth 3/1000 time = 1.704317569732666
I0123 12:57:52.037608 139631609110528 ddar.py:60] Depth 4/1000 time = 2.3994109630584717
I0123 12:57:53.762172 139631609110528 ddar.py:60] Depth 5/1000 time = 1.72422194480896
I0123 12:57:55.604700 139631609110528 ddar.py:60] Depth 6/1000 time = 1.819753885269165
I0123 12:57:58.010391 139631609110528 ddar.py:60] Depth 7/1000 time = 2.4055352210998535
I0123 12:57:59.832010 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8214442729949951
I0123 12:57:59.836603 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:57:59.836666 139631609110528 alphageometry.py:566] LM output (score=-2.929872): "l : D a l b l 14 D b l c l 15 ;"
I0123 12:57:59.836703 139631609110528 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2635, in add_clause
    raise PointTooCloseError()
graph.PointTooCloseError
"

I0123 12:57:59.836740 139631609110528 alphageometry.py:566] LM output (score=-2.949841): "l : T a b f l 14 ;"
I0123 12:57:59.836768 139631609110528 alphageometry.py:567] Translation: "l = on_tline l f a b"

I0123 12:57:59.836798 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l f a b ? perp j b b g"
I0123 12:57:59.836946 139631609110528 graph.py:498] 
I0123 12:57:59.836999 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l f a b ? perp j b b g
I0123 12:58:00.858664 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9686346054077148
I0123 12:58:03.233252 139631609110528 ddar.py:60] Depth 2/1000 time = 2.3744235038757324
I0123 12:58:05.074731 139631609110528 ddar.py:60] Depth 3/1000 time = 1.841301679611206
I0123 12:58:06.929794 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8548972606658936
I0123 12:58:09.423254 139631609110528 ddar.py:60] Depth 5/1000 time = 2.4930992126464844
I0123 12:58:11.419857 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9688785076141357
I0123 12:58:13.386392 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9663748741149902
I0123 12:58:15.935863 139631609110528 ddar.py:60] Depth 8/1000 time = 2.5491113662719727
I0123 12:58:15.941037 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:58:15.941089 139631609110528 alphageometry.py:566] LM output (score=-2.988812): "l : T a i i l 14 ;"
I0123 12:58:15.941123 139631609110528 alphageometry.py:567] Translation: "l = on_tline l i a i"

I0123 12:58:15.941157 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l i a i ? perp j b b g"
I0123 12:58:15.941302 139631609110528 graph.py:498] 
I0123 12:58:15.941360 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l i a i ? perp j b b g
I0123 12:58:16.962308 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9690518379211426
I0123 12:58:18.535234 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5727949142456055
I0123 12:58:20.963593 139631609110528 ddar.py:60] Depth 3/1000 time = 2.4281888008117676
I0123 12:58:22.817582 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8538048267364502
I0123 12:58:24.680088 139631609110528 ddar.py:60] Depth 5/1000 time = 1.862135648727417
I0123 12:58:27.356027 139631609110528 ddar.py:60] Depth 6/1000 time = 2.6493124961853027
I0123 12:58:29.360500 139631609110528 ddar.py:60] Depth 7/1000 time = 2.004185676574707
I0123 12:58:32.023033 139631609110528 ddar.py:60] Depth 8/1000 time = 2.6623220443725586
I0123 12:58:32.028165 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:58:32.028218 139631609110528 alphageometry.py:566] LM output (score=-2.996215): "l : T a c g l 14 ;"
I0123 12:58:32.028253 139631609110528 alphageometry.py:567] Translation: "l = on_tline l g a c"

I0123 12:58:32.028288 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l g a c ? perp j b b g"
I0123 12:58:32.028438 139631609110528 graph.py:498] 
I0123 12:58:32.028497 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l g a c ? perp j b b g
I0123 12:58:33.036946 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9587998390197754
I0123 12:58:34.884137 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8470492362976074
I0123 12:58:36.566352 139631609110528 ddar.py:60] Depth 3/1000 time = 1.68204665184021
I0123 12:58:38.866517 139631609110528 ddar.py:60] Depth 4/1000 time = 2.300002336502075
I0123 12:58:40.566936 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7000715732574463
I0123 12:58:42.406666 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8173727989196777
I0123 12:58:44.798655 139631609110528 ddar.py:60] Depth 7/1000 time = 2.3918275833129883
I0123 12:58:46.610933 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8120245933532715
I0123 12:58:46.615906 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:58:46.615995 139631609110528 alphageometry.py:566] LM output (score=-3.014727): "l : T d e e l 14 ;"
I0123 12:58:46.616030 139631609110528 alphageometry.py:567] Translation: "l = on_tline l e d e"

I0123 12:58:46.616075 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l e d e ? perp j b b g"
I0123 12:58:46.616246 139631609110528 graph.py:498] 
I0123 12:58:46.616305 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l e d e ? perp j b b g
I0123 12:58:47.627274 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9605307579040527
I0123 12:58:49.993720 139631609110528 ddar.py:60] Depth 2/1000 time = 2.3662853240966797
I0123 12:58:51.795821 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8019402027130127
I0123 12:58:53.612325 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8163399696350098
I0123 12:58:56.012348 139631609110528 ddar.py:60] Depth 5/1000 time = 2.399661064147949
I0123 12:58:57.993998 139631609110528 ddar.py:60] Depth 6/1000 time = 1.953200101852417
I0123 12:59:00.516504 139631609110528 ddar.py:60] Depth 7/1000 time = 2.5223331451416016
I0123 12:59:02.447208 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9305377006530762
I0123 12:59:02.451583 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:59:02.451647 139631609110528 alphageometry.py:566] LM output (score=-3.036052): "l : C a b l 14 D a b a l 15 ;"
I0123 12:59:02.451681 139631609110528 alphageometry.py:567] Translation: "l = on_line l a b, on_circle l a b"

I0123 12:59:02.451717 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l a b, on_circle l a b ? perp j b b g"
I0123 12:59:02.451873 139631609110528 graph.py:498] 
I0123 12:59:02.451926 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l a b, on_circle l a b ? perp j b b g
I0123 12:59:03.549838 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0361156463623047
I0123 12:59:05.900311 139631609110528 ddar.py:60] Depth 2/1000 time = 2.350309371948242
I0123 12:59:07.620278 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7197678089141846
I0123 12:59:09.381940 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7614834308624268
I0123 12:59:11.768007 139631609110528 ddar.py:60] Depth 5/1000 time = 2.385732412338257
I0123 12:59:13.666725 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8781466484069824
I0123 12:59:15.526319 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8594324588775635
I0123 12:59:17.972295 139631609110528 ddar.py:60] Depth 8/1000 time = 2.4458086490631104
I0123 12:59:17.977200 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:59:17.977253 139631609110528 alphageometry.py:566] LM output (score=-3.045721): "l : T a i b l 14 ;"
I0123 12:59:17.977287 139631609110528 alphageometry.py:567] Translation: "l = on_tline l b a i"

I0123 12:59:17.977323 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l b a i ? perp j b b g"
I0123 12:59:17.977481 139631609110528 graph.py:498] 
I0123 12:59:17.977536 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_tline l b a i ? perp j b b g
I0123 12:59:18.983466 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9580507278442383
I0123 12:59:20.582570 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5989742279052734
I0123 12:59:23.080704 139631609110528 ddar.py:60] Depth 3/1000 time = 2.4979329109191895
I0123 12:59:25.015620 139631609110528 ddar.py:60] Depth 4/1000 time = 1.934624195098877
I0123 12:59:26.894971 139631609110528 ddar.py:60] Depth 5/1000 time = 1.87894606590271
I0123 12:59:29.592556 139631609110528 ddar.py:60] Depth 6/1000 time = 2.670982837677002
I0123 12:59:31.591461 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9987452030181885
I0123 12:59:34.235006 139631609110528 ddar.py:60] Depth 8/1000 time = 2.6433801651000977
I0123 12:59:34.239816 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:59:34.239880 139631609110528 alphageometry.py:566] LM output (score=-3.102153): "l : P a l b e 14 ;"
I0123 12:59:34.239916 139631609110528 alphageometry.py:567] Translation: "l = on_pline l a b e"

I0123 12:59:34.239953 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_pline l a b e ? perp j b b g"
I0123 12:59:34.240106 139631609110528 graph.py:498] 
I0123 12:59:34.240159 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_pline l a b e ? perp j b b g
I0123 12:59:35.272147 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9797587394714355
I0123 12:59:36.959081 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6867873668670654
I0123 12:59:38.610457 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6511752605438232
I0123 12:59:40.904534 139631609110528 ddar.py:60] Depth 4/1000 time = 2.2938952445983887
I0123 12:59:42.563909 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6590049266815186
I0123 12:59:44.341023 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7558939456939697
I0123 12:59:46.769043 139631609110528 ddar.py:60] Depth 7/1000 time = 2.4278368949890137
I0123 12:59:48.514942 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7457098960876465
I0123 12:59:48.520166 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 12:59:48.520219 139631609110528 alphageometry.py:566] LM output (score=-3.278799): "l : C a b l 14 D a b b l 15 ;"
I0123 12:59:48.520254 139631609110528 alphageometry.py:567] Translation: "l = on_line l a b, on_circle l b a"

I0123 12:59:48.520291 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l a b, on_circle l b a ? perp j b b g"
I0123 12:59:48.520447 139631609110528 graph.py:498] 
I0123 12:59:48.520505 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k c a; l = on_line l a b, on_circle l b a ? perp j b b g
I0123 12:59:49.616178 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0343778133392334
I0123 12:59:51.779936 139631609110528 ddar.py:60] Depth 2/1000 time = 2.1636147499084473
I0123 12:59:53.536216 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7561097145080566
I0123 12:59:55.296409 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7600281238555908
I0123 12:59:57.663173 139631609110528 ddar.py:60] Depth 5/1000 time = 2.366424560546875
I0123 12:59:59.584935 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9020705223083496
I0123 13:00:02.133669 139631609110528 ddar.py:60] Depth 7/1000 time = 2.54850172996521
I0123 13:00:03.977888 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8439335823059082
I0123 13:00:03.983375 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:00:03.983471 139631609110528 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C b c k 13 D b k c k 14 ; x00
I0123 13:00:09.774579 139631609110528 alphageometry.py:566] LM output (score=-0.452873): "l : C a b l 15 D a l b l 16 ;"
I0123 13:00:09.774755 139631609110528 alphageometry.py:567] Translation: "l = on_line l a b, on_bline l b a"

I0123 13:00:09.774809 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l a b, on_bline l b a ? perp j b b g"
I0123 13:00:09.775050 139631609110528 graph.py:498] 
I0123 13:00:09.775115 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l a b, on_bline l b a ? perp j b b g
I0123 13:00:10.951575 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1134271621704102
I0123 13:00:13.725192 139631609110528 ddar.py:60] Depth 2/1000 time = 2.7734568119049072
I0123 13:00:16.031355 139631609110528 ddar.py:60] Depth 3/1000 time = 2.3059885501861572
I0123 13:00:19.000736 139631609110528 ddar.py:60] Depth 4/1000 time = 2.9691948890686035
I0123 13:00:21.318862 139631609110528 ddar.py:60] Depth 5/1000 time = 2.317615032196045
I0123 13:00:24.362713 139631609110528 ddar.py:60] Depth 6/1000 time = 3.0079283714294434
I0123 13:00:26.711130 139631609110528 ddar.py:60] Depth 7/1000 time = 2.3482484817504883
I0123 13:00:29.700058 139631609110528 ddar.py:60] Depth 8/1000 time = 2.9887583255767822
I0123 13:00:29.709068 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:00:29.709121 139631609110528 alphageometry.py:566] LM output (score=-0.770717): "l : C b e l 15 D b l e l 16 ;"
I0123 13:00:29.709156 139631609110528 alphageometry.py:567] Translation: "l = on_line l b e, on_bline l e b"

I0123 13:00:29.709192 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b e, on_bline l e b ? perp j b b g"
I0123 13:00:29.709336 139631609110528 graph.py:498] 
I0123 13:00:29.709385 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b e, on_bline l e b ? perp j b b g
I0123 13:00:30.917557 139631609110528 ddar.py:60] Depth 1/1000 time = 1.145798921585083
I0123 13:00:33.461361 139631609110528 ddar.py:60] Depth 2/1000 time = 2.5436313152313232
I0123 13:00:37.095407 139631609110528 ddar.py:60] Depth 3/1000 time = 3.633862257003784
I0123 13:00:40.964899 139631609110528 ddar.py:60] Depth 4/1000 time = 3.8693130016326904
I0123 13:00:44.181758 139631609110528 ddar.py:60] Depth 5/1000 time = 3.216454029083252
I0123 13:00:48.103078 139631609110528 ddar.py:60] Depth 6/1000 time = 3.8966095447540283
I0123 13:00:52.045330 139631609110528 ddar.py:60] Depth 7/1000 time = 3.942021131515503
I0123 13:00:56.064449 139631609110528 ddar.py:60] Depth 8/1000 time = 4.01883864402771
I0123 13:00:56.074084 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:00:56.074142 139631609110528 alphageometry.py:566] LM output (score=-1.352499): "l : C b j l 15 D b l j l 16 ;"
I0123 13:00:56.074177 139631609110528 alphageometry.py:567] Translation: "l = on_line l b j, on_bline l j b"

I0123 13:00:56.074212 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b j, on_bline l j b ? perp j b b g"
I0123 13:00:56.074369 139631609110528 graph.py:498] 
I0123 13:00:56.074425 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b j, on_bline l j b ? perp j b b g
I0123 13:00:57.221822 139631609110528 ddar.py:60] Depth 1/1000 time = 1.084033489227295
I0123 13:00:59.596880 139631609110528 ddar.py:60] Depth 2/1000 time = 2.3748509883880615
I0123 13:01:01.585460 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9883520603179932
I0123 13:01:04.270218 139631609110528 ddar.py:60] Depth 4/1000 time = 2.6845006942749023
I0123 13:01:06.303467 139631609110528 ddar.py:60] Depth 5/1000 time = 2.0326945781707764
I0123 13:01:09.002450 139631609110528 ddar.py:60] Depth 6/1000 time = 2.6749730110168457
I0123 13:01:11.734213 139631609110528 ddar.py:60] Depth 7/1000 time = 2.731518507003784
I0123 13:01:13.814729 139631609110528 ddar.py:60] Depth 8/1000 time = 2.0802435874938965
I0123 13:01:13.824118 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:01:13.824189 139631609110528 alphageometry.py:566] LM output (score=-1.454159): "l : C c d l 15 D c l d l 16 ;"
I0123 13:01:13.824223 139631609110528 alphageometry.py:567] Translation: "l = on_line l c d, on_bline l d c"

I0123 13:01:13.824265 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l c d, on_bline l d c ? perp j b b g"
I0123 13:01:13.824428 139631609110528 graph.py:498] 
I0123 13:01:13.824482 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l c d, on_bline l d c ? perp j b b g
I0123 13:01:14.965485 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0783228874206543
I0123 13:01:17.662688 139631609110528 ddar.py:60] Depth 2/1000 time = 2.6969683170318604
I0123 13:01:19.960792 139631609110528 ddar.py:60] Depth 3/1000 time = 2.2979354858398438
I0123 13:01:22.961302 139631609110528 ddar.py:60] Depth 4/1000 time = 3.0003304481506348
I0123 13:01:25.314069 139631609110528 ddar.py:60] Depth 5/1000 time = 2.3522727489471436
I0123 13:01:28.357827 139631609110528 ddar.py:60] Depth 6/1000 time = 3.0239899158477783
I0123 13:01:31.460323 139631609110528 ddar.py:60] Depth 7/1000 time = 3.102323055267334
I0123 13:01:33.848134 139631609110528 ddar.py:60] Depth 8/1000 time = 2.387586832046509
I0123 13:01:33.861309 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:01:33.861638 139631609110528 alphageometry.py:566] LM output (score=-1.738978): "l : D a l c l 15 ;"
I0123 13:01:33.861703 139631609110528 alphageometry.py:567] Translation: "l = on_bline l c a"

I0123 13:01:33.861771 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_bline l c a ? perp j b b g"
I0123 13:01:33.861991 139631609110528 graph.py:498] 
I0123 13:01:33.862071 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_bline l c a ? perp j b b g
I0123 13:01:35.000151 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0692570209503174
I0123 13:01:37.465929 139631609110528 ddar.py:60] Depth 2/1000 time = 2.4655981063842773
I0123 13:01:39.621437 139631609110528 ddar.py:60] Depth 3/1000 time = 2.155341863632202
I0123 13:01:41.802438 139631609110528 ddar.py:60] Depth 4/1000 time = 2.1808269023895264
I0123 13:01:44.622883 139631609110528 ddar.py:60] Depth 5/1000 time = 2.8200323581695557
I0123 13:01:46.869248 139631609110528 ddar.py:60] Depth 6/1000 time = 2.219475030899048
I0123 13:01:49.737013 139631609110528 ddar.py:60] Depth 7/1000 time = 2.867575168609619
I0123 13:01:51.954816 139631609110528 ddar.py:60] Depth 8/1000 time = 2.2175660133361816
I0123 13:01:51.962721 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:01:51.962805 139631609110528 alphageometry.py:566] LM output (score=-2.241579): "l : C b i l 15 D b l i l 16 ;"
I0123 13:01:51.962840 139631609110528 alphageometry.py:567] Translation: "l = on_line l b i, on_bline l i b"

I0123 13:01:51.962891 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b i, on_bline l i b ? perp j b b g"
I0123 13:01:51.963081 139631609110528 graph.py:498] 
I0123 13:01:51.963140 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b i, on_bline l i b ? perp j b b g
I0123 13:01:53.134058 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1093332767486572
I0123 13:01:55.997606 139631609110528 ddar.py:60] Depth 2/1000 time = 2.8633642196655273
I0123 13:01:59.045862 139631609110528 ddar.py:60] Depth 3/1000 time = 3.048081636428833
I0123 13:02:01.423237 139631609110528 ddar.py:60] Depth 4/1000 time = 2.3771986961364746
I0123 13:02:04.489615 139631609110528 ddar.py:60] Depth 5/1000 time = 3.065972089767456
I0123 13:02:06.953814 139631609110528 ddar.py:60] Depth 6/1000 time = 2.4321205615997314
I0123 13:02:10.092385 139631609110528 ddar.py:60] Depth 7/1000 time = 3.1383519172668457
I0123 13:02:13.253653 139631609110528 ddar.py:60] Depth 8/1000 time = 3.160938262939453
I0123 13:02:15.680657 139631609110528 ddar.py:60] Depth 9/1000 time = 2.426816940307617
I0123 13:02:15.689214 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:02:15.689284 139631609110528 alphageometry.py:566] LM output (score=-2.261056): "l : C b d l 15 D b l d l 16 ;"
I0123 13:02:15.689319 139631609110528 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2635, in add_clause
    raise PointTooCloseError()
graph.PointTooCloseError
"

I0123 13:02:15.689368 139631609110528 alphageometry.py:566] LM output (score=-2.710776): "l : C c j l 15 D c l j l 16 ;"
I0123 13:02:15.689394 139631609110528 alphageometry.py:567] Translation: "l = on_line l c j, on_bline l j c"

I0123 13:02:15.689424 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l c j, on_bline l j c ? perp j b b g"
I0123 13:02:15.689575 139631609110528 graph.py:498] 
I0123 13:02:15.689635 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l c j, on_bline l j c ? perp j b b g
I0123 13:02:16.838639 139631609110528 ddar.py:60] Depth 1/1000 time = 1.086437463760376
I0123 13:02:19.420405 139631609110528 ddar.py:60] Depth 2/1000 time = 2.581573963165283
I0123 13:02:21.601842 139631609110528 ddar.py:60] Depth 3/1000 time = 2.1812002658843994
I0123 13:02:24.465890 139631609110528 ddar.py:60] Depth 4/1000 time = 2.8638031482696533
I0123 13:02:27.404025 139631609110528 ddar.py:60] Depth 5/1000 time = 2.9375195503234863
I0123 13:02:29.704837 139631609110528 ddar.py:60] Depth 6/1000 time = 2.278991222381592
I0123 13:02:32.705430 139631609110528 ddar.py:60] Depth 7/1000 time = 3.0002264976501465
I0123 13:02:34.957962 139631609110528 ddar.py:60] Depth 8/1000 time = 2.2522616386413574
I0123 13:02:34.971704 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:02:34.971759 139631609110528 alphageometry.py:566] LM output (score=-2.758778): "l : C b f l 15 D b l f l 16 ;"
I0123 13:02:34.971793 139631609110528 alphageometry.py:567] Translation: "l = on_line l b f, on_bline l f b"

I0123 13:02:34.971830 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b f, on_bline l f b ? perp j b b g"
I0123 13:02:34.971980 139631609110528 graph.py:498] 
I0123 13:02:34.972035 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b f, on_bline l f b ? perp j b b g
I0123 13:02:36.121980 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0882794857025146
I0123 13:02:38.721849 139631609110528 ddar.py:60] Depth 2/1000 time = 2.5997118949890137
I0123 13:02:40.821300 139631609110528 ddar.py:60] Depth 3/1000 time = 2.099268913269043
I0123 13:02:43.627256 139631609110528 ddar.py:60] Depth 4/1000 time = 2.8057663440704346
I0123 13:02:45.749536 139631609110528 ddar.py:60] Depth 5/1000 time = 2.1218221187591553
I0123 13:02:48.665284 139631609110528 ddar.py:60] Depth 6/1000 time = 2.891817331314087
I0123 13:02:50.801780 139631609110528 ddar.py:60] Depth 7/1000 time = 2.136301040649414
I0123 13:02:53.654444 139631609110528 ddar.py:60] Depth 8/1000 time = 2.8524739742279053
I0123 13:02:53.666049 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:02:53.666103 139631609110528 alphageometry.py:566] LM output (score=-2.841351): "l : C c k l 15 D c l k l 16 ;"
I0123 13:02:53.666137 139631609110528 alphageometry.py:567] Translation: "l = on_line l c k, on_bline l k c"

I0123 13:02:53.666173 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l c k, on_bline l k c ? perp j b b g"
I0123 13:02:53.666326 139631609110528 graph.py:498] 
I0123 13:02:53.666384 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l c k, on_bline l k c ? perp j b b g
I0123 13:02:54.845736 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1145541667938232
I0123 13:02:57.456224 139631609110528 ddar.py:60] Depth 2/1000 time = 2.610330104827881
I0123 13:02:59.655935 139631609110528 ddar.py:60] Depth 3/1000 time = 2.199523687362671
I0123 13:03:02.560306 139631609110528 ddar.py:60] Depth 4/1000 time = 2.904184341430664
I0123 13:03:05.550029 139631609110528 ddar.py:60] Depth 5/1000 time = 2.98864483833313
I0123 13:03:07.843642 139631609110528 ddar.py:60] Depth 6/1000 time = 2.272841691970825
I0123 13:03:10.798406 139631609110528 ddar.py:60] Depth 7/1000 time = 2.954569101333618
I0123 13:03:13.761440 139631609110528 ddar.py:60] Depth 8/1000 time = 2.962843179702759
I0123 13:03:13.771494 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:03:13.771547 139631609110528 alphageometry.py:566] LM output (score=-2.845592): "l : C c h l 15 D c l h l 16 ;"
I0123 13:03:13.771582 139631609110528 alphageometry.py:567] Translation: "l = on_line l c h, on_bline l h c"

I0123 13:03:13.771619 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l c h, on_bline l h c ? perp j b b g"
I0123 13:03:13.771775 139631609110528 graph.py:498] 
I0123 13:03:13.771835 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l c h, on_bline l h c ? perp j b b g
I0123 13:03:14.948711 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1123325824737549
I0123 13:03:16.790672 139631609110528 ddar.py:60] Depth 2/1000 time = 1.84181547164917
I0123 13:03:19.712227 139631609110528 ddar.py:60] Depth 3/1000 time = 2.921393871307373
I0123 13:03:22.736340 139631609110528 ddar.py:60] Depth 4/1000 time = 3.0239315032958984
I0123 13:03:25.043492 139631609110528 ddar.py:60] Depth 5/1000 time = 2.3066110610961914
I0123 13:03:28.200799 139631609110528 ddar.py:60] Depth 6/1000 time = 3.1338722705841064
I0123 13:03:30.534566 139631609110528 ddar.py:60] Depth 7/1000 time = 2.3335976600646973
I0123 13:03:33.585577 139631609110528 ddar.py:60] Depth 8/1000 time = 3.0508201122283936
I0123 13:03:33.597840 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:03:33.597905 139631609110528 alphageometry.py:566] LM output (score=-2.871114): "l : D a l b l 15 ;"
I0123 13:03:33.597940 139631609110528 alphageometry.py:567] Translation: "l = on_bline l b a"

I0123 13:03:33.597975 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_bline l b a ? perp j b b g"
I0123 13:03:33.598143 139631609110528 graph.py:498] 
I0123 13:03:33.598202 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_bline l b a ? perp j b b g
I0123 13:03:34.726396 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0657925605773926
I0123 13:03:36.585381 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8588345050811768
I0123 13:03:39.499448 139631609110528 ddar.py:60] Depth 3/1000 time = 2.913898229598999
I0123 13:03:41.746109 139631609110528 ddar.py:60] Depth 4/1000 time = 2.246445655822754
I0123 13:03:44.741291 139631609110528 ddar.py:60] Depth 5/1000 time = 2.994656562805176
I0123 13:03:47.028445 139631609110528 ddar.py:60] Depth 6/1000 time = 2.2579076290130615
I0123 13:03:50.009213 139631609110528 ddar.py:60] Depth 7/1000 time = 2.9806010723114014
I0123 13:03:52.268844 139631609110528 ddar.py:60] Depth 8/1000 time = 2.2594659328460693
I0123 13:03:52.276691 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:03:52.276743 139631609110528 alphageometry.py:566] LM output (score=-2.894696): "l : C b f l 15 C e k l 16 ;"
I0123 13:03:52.276778 139631609110528 alphageometry.py:567] Translation: "l = on_line l b f, on_line l e k"

I0123 13:03:52.276815 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b f, on_line l e k ? perp j b b g"
I0123 13:03:52.276969 139631609110528 graph.py:498] 
I0123 13:03:52.277028 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b f, on_line l e k ? perp j b b g
I0123 13:03:53.389296 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0623445510864258
I0123 13:03:55.941070 139631609110528 ddar.py:60] Depth 2/1000 time = 2.5516273975372314
I0123 13:03:57.958561 139631609110528 ddar.py:60] Depth 3/1000 time = 2.0173206329345703
I0123 13:04:00.840506 139631609110528 ddar.py:60] Depth 4/1000 time = 2.881700277328491
I0123 13:04:02.956266 139631609110528 ddar.py:60] Depth 5/1000 time = 2.115122079849243
I0123 13:04:05.132926 139631609110528 ddar.py:60] Depth 6/1000 time = 2.1570940017700195
I0123 13:04:07.985046 139631609110528 ddar.py:60] Depth 7/1000 time = 2.851950168609619
I0123 13:04:10.185567 139631609110528 ddar.py:60] Depth 8/1000 time = 2.2003490924835205
I0123 13:04:10.197019 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:04:10.197074 139631609110528 alphageometry.py:566] LM output (score=-2.940650): "l : C a c l 15 D a l c l 16 ;"
I0123 13:04:10.197109 139631609110528 alphageometry.py:567] Translation: "l = on_line l a c, on_bline l c a"

I0123 13:04:10.197157 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l a c, on_bline l c a ? perp j b b g"
I0123 13:04:10.197322 139631609110528 graph.py:498] 
I0123 13:04:10.197382 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l a c, on_bline l c a ? perp j b b g
I0123 13:04:12.067936 139631609110528 ddar.py:60] Depth 1/1000 time = 1.8073804378509521
I0123 13:04:14.120625 139631609110528 ddar.py:60] Depth 2/1000 time = 2.052511692047119
I0123 13:04:17.317193 139631609110528 ddar.py:60] Depth 3/1000 time = 3.1961889266967773
I0123 13:04:19.800990 139631609110528 ddar.py:60] Depth 4/1000 time = 2.483567953109741
I0123 13:04:23.078368 139631609110528 ddar.py:60] Depth 5/1000 time = 3.276747941970825
I0123 13:04:25.642052 139631609110528 ddar.py:60] Depth 6/1000 time = 2.5342462062835693
I0123 13:04:28.894019 139631609110528 ddar.py:60] Depth 7/1000 time = 3.2517924308776855
I0123 13:04:31.458478 139631609110528 ddar.py:60] Depth 8/1000 time = 2.5642759799957275
I0123 13:04:31.471079 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:04:31.471145 139631609110528 alphageometry.py:566] LM output (score=-2.943760): "l : C c i l 15 D c l i l 16 ;"
I0123 13:04:31.471181 139631609110528 alphageometry.py:567] Translation: "l = on_line l c i, on_bline l i c"

I0123 13:04:31.471219 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l c i, on_bline l i c ? perp j b b g"
I0123 13:04:31.471373 139631609110528 graph.py:498] 
I0123 13:04:31.471431 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l c i, on_bline l i c ? perp j b b g
I0123 13:04:33.438351 139631609110528 ddar.py:60] Depth 1/1000 time = 1.9035429954528809
I0123 13:04:35.958011 139631609110528 ddar.py:60] Depth 2/1000 time = 2.5194895267486572
I0123 13:04:39.251729 139631609110528 ddar.py:60] Depth 3/1000 time = 3.293506622314453
I0123 13:04:42.560247 139631609110528 ddar.py:60] Depth 4/1000 time = 3.308258295059204
I0123 13:04:45.861061 139631609110528 ddar.py:60] Depth 5/1000 time = 3.300398826599121
I0123 13:04:48.535525 139631609110528 ddar.py:60] Depth 6/1000 time = 2.6492795944213867
I0123 13:04:51.837855 139631609110528 ddar.py:60] Depth 7/1000 time = 3.3021697998046875
I0123 13:04:55.199932 139631609110528 ddar.py:60] Depth 8/1000 time = 3.361898899078369
I0123 13:04:58.640778 139631609110528 ddar.py:60] Depth 9/1000 time = 3.4406306743621826
I0123 13:04:58.653210 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:04:58.653279 139631609110528 alphageometry.py:566] LM output (score=-2.948519): "l : C b g l 15 D b l g l 16 ;"
I0123 13:04:58.653314 139631609110528 alphageometry.py:567] Translation: "l = on_line l b g, on_bline l g b"

I0123 13:04:58.653353 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b g, on_bline l g b ? perp j b b g"
I0123 13:04:58.653506 139631609110528 graph.py:498] 
I0123 13:04:58.653562 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b g, on_bline l g b ? perp j b b g
I0123 13:04:59.823168 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1034603118896484
I0123 13:05:01.812202 139631609110528 ddar.py:60] Depth 2/1000 time = 1.9888837337493896
I0123 13:05:04.882438 139631609110528 ddar.py:60] Depth 3/1000 time = 3.0700652599334717
I0123 13:05:07.248086 139631609110528 ddar.py:60] Depth 4/1000 time = 2.3654680252075195
I0123 13:05:10.317990 139631609110528 ddar.py:60] Depth 5/1000 time = 3.0695033073425293
I0123 13:05:13.522475 139631609110528 ddar.py:60] Depth 6/1000 time = 3.1740198135375977
I0123 13:05:15.945597 139631609110528 ddar.py:60] Depth 7/1000 time = 2.422884464263916
I0123 13:05:19.150794 139631609110528 ddar.py:60] Depth 8/1000 time = 3.2048559188842773
I0123 13:05:19.160260 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:05:19.160318 139631609110528 alphageometry.py:566] LM output (score=-3.012236): "l : C e h l 15 D e l h l 16 ;"
I0123 13:05:19.160353 139631609110528 alphageometry.py:567] Translation: "l = on_line l e h, on_bline l h e"

I0123 13:05:19.160389 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l e h, on_bline l h e ? perp j b b g"
I0123 13:05:19.160553 139631609110528 graph.py:498] 
I0123 13:05:19.160610 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l e h, on_bline l h e ? perp j b b g
I0123 13:05:20.322769 139631609110528 ddar.py:60] Depth 1/1000 time = 1.096522569656372
I0123 13:05:22.179714 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8568010330200195
I0123 13:05:25.035443 139631609110528 ddar.py:60] Depth 3/1000 time = 2.8555617332458496
I0123 13:05:27.261686 139631609110528 ddar.py:60] Depth 4/1000 time = 2.226052761077881
I0123 13:05:30.221717 139631609110528 ddar.py:60] Depth 5/1000 time = 2.9595985412597656
I0123 13:05:32.522940 139631609110528 ddar.py:60] Depth 6/1000 time = 2.2798006534576416
I0123 13:05:35.598220 139631609110528 ddar.py:60] Depth 7/1000 time = 3.075014591217041
I0123 13:05:37.873485 139631609110528 ddar.py:60] Depth 8/1000 time = 2.275062084197998
I0123 13:05:37.882732 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:05:37.882817 139631609110528 alphageometry.py:566] LM output (score=-3.020027): "l : C g h l 15 D g l h l 16 ;"
I0123 13:05:37.882858 139631609110528 alphageometry.py:567] Translation: "l = on_line l g h, on_bline l h g"

I0123 13:05:37.882901 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l g h, on_bline l h g ? perp j b b g"
I0123 13:05:37.883064 139631609110528 graph.py:498] 
I0123 13:05:37.883127 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l g h, on_bline l h g ? perp j b b g
I0123 13:05:39.821613 139631609110528 ddar.py:60] Depth 1/1000 time = 1.8705310821533203
I0123 13:05:42.596110 139631609110528 ddar.py:60] Depth 2/1000 time = 2.7743194103240967
I0123 13:05:46.477532 139631609110528 ddar.py:60] Depth 3/1000 time = 3.881240129470825
I0123 13:05:50.577737 139631609110528 ddar.py:60] Depth 4/1000 time = 4.100017070770264
I0123 13:05:54.727602 139631609110528 ddar.py:60] Depth 5/1000 time = 4.149668455123901
I0123 13:05:58.861856 139631609110528 ddar.py:60] Depth 6/1000 time = 4.13404393196106
I0123 13:06:03.176066 139631609110528 ddar.py:60] Depth 7/1000 time = 4.314025640487671
I0123 13:06:07.583844 139631609110528 ddar.py:60] Depth 8/1000 time = 4.407585144042969
I0123 13:06:12.023425 139631609110528 ddar.py:60] Depth 9/1000 time = 4.439323902130127
I0123 13:06:17.174678 139631609110528 ddar.py:60] Depth 10/1000 time = 5.15092921257019
I0123 13:06:21.573270 139631609110528 ddar.py:60] Depth 11/1000 time = 4.398061513900757
I0123 13:06:25.342487 139631609110528 ddar.py:60] Depth 12/1000 time = 3.7393863201141357
I0123 13:06:30.547765 139631609110528 ddar.py:60] Depth 13/1000 time = 5.205068349838257
I0123 13:06:34.284313 139631609110528 ddar.py:60] Depth 14/1000 time = 3.7095255851745605
I0123 13:06:34.284507 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:06:34.284564 139631609110528 alphageometry.py:566] LM output (score=-3.054197): "l : C c f l 15 D c l f l 16 ;"
I0123 13:06:34.284597 139631609110528 alphageometry.py:567] Translation: "l = on_line l c f, on_bline l f c"

I0123 13:06:34.284633 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l c f, on_bline l f c ? perp j b b g"
I0123 13:06:34.284784 139631609110528 graph.py:498] 
I0123 13:06:34.284841 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l c f, on_bline l f c ? perp j b b g
I0123 13:06:36.184468 139631609110528 ddar.py:60] Depth 1/1000 time = 1.8336472511291504
I0123 13:06:38.185250 139631609110528 ddar.py:60] Depth 2/1000 time = 2.0006158351898193
I0123 13:06:41.484922 139631609110528 ddar.py:60] Depth 3/1000 time = 3.29949951171875
I0123 13:06:44.913749 139631609110528 ddar.py:60] Depth 4/1000 time = 3.428637981414795
I0123 13:06:47.590118 139631609110528 ddar.py:60] Depth 5/1000 time = 2.6752803325653076
I0123 13:06:51.081048 139631609110528 ddar.py:60] Depth 6/1000 time = 3.470221757888794
I0123 13:06:54.535778 139631609110528 ddar.py:60] Depth 7/1000 time = 3.4545514583587646
I0123 13:06:57.997130 139631609110528 ddar.py:60] Depth 8/1000 time = 3.461177110671997
I0123 13:06:58.011667 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:06:58.011722 139631609110528 alphageometry.py:566] LM output (score=-3.066743): "l : C a i l 15 D a l i l 16 ;"
I0123 13:06:58.011758 139631609110528 alphageometry.py:567] Translation: "l = on_line l a i, on_bline l i a"

I0123 13:06:58.011795 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l a i, on_bline l i a ? perp j b b g"
I0123 13:06:58.011953 139631609110528 graph.py:498] 
I0123 13:06:58.012013 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l a i, on_bline l i a ? perp j b b g
I0123 13:06:59.171716 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0957283973693848
I0123 13:07:01.064142 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8922686576843262
I0123 13:07:04.028129 139631609110528 ddar.py:60] Depth 3/1000 time = 2.9638147354125977
I0123 13:07:06.241477 139631609110528 ddar.py:60] Depth 4/1000 time = 2.212989330291748
I0123 13:07:08.544820 139631609110528 ddar.py:60] Depth 5/1000 time = 2.3019862174987793
I0123 13:07:11.922163 139631609110528 ddar.py:60] Depth 6/1000 time = 3.3475921154022217
I0123 13:07:14.169082 139631609110528 ddar.py:60] Depth 7/1000 time = 2.2465033531188965
I0123 13:07:17.280592 139631609110528 ddar.py:60] Depth 8/1000 time = 3.1110568046569824
I0123 13:07:17.287537 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:07:17.287643 139631609110528 alphageometry.py:566] LM output (score=-3.070882): "l : C e g l 15 D e l g l 16 ;"
I0123 13:07:17.287681 139631609110528 alphageometry.py:567] Translation: "l = on_line l e g, on_bline l g e"

I0123 13:07:17.287737 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l e g, on_bline l g e ? perp j b b g"
I0123 13:07:17.287955 139631609110528 graph.py:498] 
I0123 13:07:17.288033 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l e g, on_bline l g e ? perp j b b g
I0123 13:07:18.476352 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1149821281433105
I0123 13:07:20.507734 139631609110528 ddar.py:60] Depth 2/1000 time = 2.0311121940612793
I0123 13:07:23.540086 139631609110528 ddar.py:60] Depth 3/1000 time = 3.0319302082061768
I0123 13:07:25.824688 139631609110528 ddar.py:60] Depth 4/1000 time = 2.2842094898223877
I0123 13:07:28.954077 139631609110528 ddar.py:60] Depth 5/1000 time = 3.128755807876587
I0123 13:07:32.158785 139631609110528 ddar.py:60] Depth 6/1000 time = 3.179966449737549
I0123 13:07:34.476525 139631609110528 ddar.py:60] Depth 7/1000 time = 2.317448854446411
I0123 13:07:37.614078 139631609110528 ddar.py:60] Depth 8/1000 time = 3.1372017860412598
I0123 13:07:37.623061 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:07:37.623134 139631609110528 alphageometry.py:566] LM output (score=-3.083999): "l : C b d l 15 D b d d l 16 ;"
I0123 13:07:37.623170 139631609110528 alphageometry.py:567] Translation: "l = on_line l b d, on_circle l d b"

I0123 13:07:37.623207 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b d, on_circle l d b ? perp j b b g"
I0123 13:07:37.623381 139631609110528 graph.py:498] 
I0123 13:07:37.623445 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b d, on_circle l d b ? perp j b b g
I0123 13:07:39.111829 139631609110528 ddar.py:60] Depth 1/1000 time = 1.4277265071868896
I0123 13:07:43.052208 139631609110528 ddar.py:60] Depth 2/1000 time = 3.9401395320892334
I0123 13:07:46.480707 139631609110528 ddar.py:60] Depth 3/1000 time = 3.4282662868499756
I0123 13:07:50.798804 139631609110528 ddar.py:60] Depth 4/1000 time = 4.3178017139434814
I0123 13:07:55.053012 139631609110528 ddar.py:60] Depth 5/1000 time = 4.25358510017395
I0123 13:07:58.586629 139631609110528 ddar.py:60] Depth 6/1000 time = 3.4956581592559814
I0123 13:08:02.861953 139631609110528 ddar.py:60] Depth 7/1000 time = 4.2749834060668945
I0123 13:08:07.142532 139631609110528 ddar.py:60] Depth 8/1000 time = 4.280310869216919
I0123 13:08:07.151656 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:08:07.151728 139631609110528 alphageometry.py:566] LM output (score=-3.092332): "l : C b k l 15 D b l k l 16 ;"
I0123 13:08:07.151766 139631609110528 alphageometry.py:567] Translation: "l = on_line l b k, on_bline l k b"

I0123 13:08:07.151806 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b k, on_bline l k b ? perp j b b g"
I0123 13:08:07.151972 139631609110528 graph.py:498] 
I0123 13:08:07.152031 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b k, on_bline l k b ? perp j b b g
I0123 13:08:08.337014 139631609110528 ddar.py:60] Depth 1/1000 time = 1.119408130645752
I0123 13:08:11.133688 139631609110528 ddar.py:60] Depth 2/1000 time = 2.7964189052581787
I0123 13:08:13.152940 139631609110528 ddar.py:60] Depth 3/1000 time = 2.0189895629882812
I0123 13:08:15.997027 139631609110528 ddar.py:60] Depth 4/1000 time = 2.843829870223999
I0123 13:08:18.054486 139631609110528 ddar.py:60] Depth 5/1000 time = 2.0564301013946533
I0123 13:08:20.877327 139631609110528 ddar.py:60] Depth 6/1000 time = 2.8018476963043213
I0123 13:08:23.756252 139631609110528 ddar.py:60] Depth 7/1000 time = 2.878619909286499
I0123 13:08:25.836147 139631609110528 ddar.py:60] Depth 8/1000 time = 2.079500675201416
I0123 13:08:25.843713 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:08:25.843842 139631609110528 alphageometry.py:566] LM output (score=-3.105799): "l : D a l c l 15 P b d d l 16 ;"
I0123 13:08:25.843881 139631609110528 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b d d l"

I0123 13:08:25.843937 139631609110528 alphageometry.py:566] LM output (score=-3.232522): "l : C d i l 15 D d l i l 16 ;"
I0123 13:08:25.843965 139631609110528 alphageometry.py:567] Translation: "l = on_line l d i, on_bline l i d"

I0123 13:08:25.843999 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l d i, on_bline l i d ? perp j b b g"
I0123 13:08:25.844222 139631609110528 graph.py:498] 
I0123 13:08:25.844286 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l d i, on_bline l i d ? perp j b b g
I0123 13:08:26.976707 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0664441585540771
I0123 13:08:29.459764 139631609110528 ddar.py:60] Depth 2/1000 time = 2.4828498363494873
I0123 13:08:31.355418 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8954346179962158
I0123 13:08:33.304202 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9485509395599365
I0123 13:08:36.014619 139631609110528 ddar.py:60] Depth 5/1000 time = 2.7099509239196777
I0123 13:08:38.025882 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9907472133636475
I0123 13:08:40.820950 139631609110528 ddar.py:60] Depth 7/1000 time = 2.794823169708252
I0123 13:08:42.810732 139631609110528 ddar.py:60] Depth 8/1000 time = 1.989454746246338
I0123 13:08:42.817370 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:08:42.817485 139631609110528 alphageometry.py:566] LM output (score=-3.303599): "l : C b f l 15 D b f f l 16 ;"
I0123 13:08:42.817546 139631609110528 alphageometry.py:567] Translation: "l = on_line l b f, on_circle l f b"

I0123 13:08:42.817602 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b f, on_circle l f b ? perp j b b g"
I0123 13:08:42.817829 139631609110528 graph.py:498] 
I0123 13:08:42.817892 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b f, on_circle l f b ? perp j b b g
I0123 13:08:44.022034 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1401259899139404
I0123 13:08:46.846666 139631609110528 ddar.py:60] Depth 2/1000 time = 2.8244271278381348
I0123 13:08:49.240258 139631609110528 ddar.py:60] Depth 3/1000 time = 2.3933537006378174
I0123 13:08:52.429100 139631609110528 ddar.py:60] Depth 4/1000 time = 3.188595771789551
I0123 13:08:54.825649 139631609110528 ddar.py:60] Depth 5/1000 time = 2.3959975242614746
I0123 13:08:58.105806 139631609110528 ddar.py:60] Depth 6/1000 time = 3.2578558921813965
I0123 13:09:00.556324 139631609110528 ddar.py:60] Depth 7/1000 time = 2.450255870819092
I0123 13:09:03.890560 139631609110528 ddar.py:60] Depth 8/1000 time = 3.33386492729187
I0123 13:09:03.900352 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:09:03.900431 139631609110528 alphageometry.py:566] LM output (score=-3.313860): "l : T d k d l 15 ;"
I0123 13:09:03.900467 139631609110528 alphageometry.py:567] Translation: "l = on_tline l d d k"

I0123 13:09:03.900504 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_tline l d d k ? perp j b b g"
I0123 13:09:03.900670 139631609110528 graph.py:498] 
I0123 13:09:03.900731 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_tline l d d k ? perp j b b g
I0123 13:09:04.968452 139631609110528 ddar.py:60] Depth 1/1000 time = 1.012695550918579
I0123 13:09:06.770453 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8018131256103516
I0123 13:09:08.573186 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8025026321411133
I0123 13:09:11.193002 139631609110528 ddar.py:60] Depth 4/1000 time = 2.6195755004882812
I0123 13:09:13.020099 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8265905380249023
I0123 13:09:15.714924 139631609110528 ddar.py:60] Depth 6/1000 time = 2.673917770385742
I0123 13:09:17.571463 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8563086986541748
I0123 13:09:19.445074 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8733093738555908
I0123 13:09:19.452551 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:09:19.452672 139631609110528 alphageometry.py:566] LM output (score=-3.432309): "l : T a c a l 15 ;"
I0123 13:09:19.452709 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a a c"

I0123 13:09:19.452758 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_tline l a a c ? perp j b b g"
I0123 13:09:19.452981 139631609110528 graph.py:498] 
I0123 13:09:19.453051 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_tline l a a c ? perp j b b g
I0123 13:09:20.499971 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9961543083190918
I0123 13:09:22.913707 139631609110528 ddar.py:60] Depth 2/1000 time = 2.4135031700134277
I0123 13:09:24.875822 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9618809223175049
I0123 13:09:26.882922 139631609110528 ddar.py:60] Depth 4/1000 time = 2.0068485736846924
I0123 13:09:29.661145 139631609110528 ddar.py:60] Depth 5/1000 time = 2.777674436569214
I0123 13:09:31.700121 139631609110528 ddar.py:60] Depth 6/1000 time = 2.013359785079956
I0123 13:09:34.542643 139631609110528 ddar.py:60] Depth 7/1000 time = 2.842301368713379
I0123 13:09:36.577075 139631609110528 ddar.py:60] Depth 8/1000 time = 2.0341873168945312
I0123 13:09:36.584590 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:09:36.584671 139631609110528 alphageometry.py:566] LM output (score=-3.469052): "l : C b k l 15 D b k b l 16 ;"
I0123 13:09:36.584708 139631609110528 alphageometry.py:567] Translation: "l = on_line l b k, on_circle l b k"

I0123 13:09:36.584748 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b k, on_circle l b k ? perp j b b g"
I0123 13:09:36.584926 139631609110528 graph.py:498] 
I0123 13:09:36.584990 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b k, on_circle l b k ? perp j b b g
I0123 13:09:37.781319 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1338276863098145
I0123 13:09:40.452103 139631609110528 ddar.py:60] Depth 2/1000 time = 2.6704492568969727
I0123 13:09:42.474775 139631609110528 ddar.py:60] Depth 3/1000 time = 2.0224320888519287
I0123 13:09:45.384999 139631609110528 ddar.py:60] Depth 4/1000 time = 2.9100077152252197
I0123 13:09:47.491100 139631609110528 ddar.py:60] Depth 5/1000 time = 2.105376958847046
I0123 13:09:50.430527 139631609110528 ddar.py:60] Depth 6/1000 time = 2.9196462631225586
I0123 13:09:53.356553 139631609110528 ddar.py:60] Depth 7/1000 time = 2.9257969856262207
I0123 13:09:55.506460 139631609110528 ddar.py:60] Depth 8/1000 time = 2.149648904800415
I0123 13:09:55.514075 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:09:55.514170 139631609110528 alphageometry.py:566] LM output (score=-3.527173): "l : T a i h l 15 ;"
I0123 13:09:55.514208 139631609110528 alphageometry.py:567] Translation: "l = on_tline l h a i"

I0123 13:09:55.514248 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_tline l h a i ? perp j b b g"
I0123 13:09:55.514441 139631609110528 graph.py:498] 
I0123 13:09:55.514514 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_tline l h a i ? perp j b b g
I0123 13:09:56.560583 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9961166381835938
I0123 13:09:59.183366 139631609110528 ddar.py:60] Depth 2/1000 time = 2.6224935054779053
I0123 13:10:01.124533 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9409549236297607
I0123 13:10:03.068920 139631609110528 ddar.py:60] Depth 4/1000 time = 1.944145917892456
I0123 13:10:05.822206 139631609110528 ddar.py:60] Depth 5/1000 time = 2.7527945041656494
I0123 13:10:07.835026 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9864306449890137
I0123 13:10:09.800774 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9655160903930664
I0123 13:10:12.564038 139631609110528 ddar.py:60] Depth 8/1000 time = 2.763010025024414
I0123 13:10:12.570944 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:10:12.571028 139631609110528 alphageometry.py:566] LM output (score=-3.565737): "l : C d i l 15 D d i d l 16 ;"
I0123 13:10:12.571065 139631609110528 alphageometry.py:567] Translation: "l = on_line l d i, on_circle l d i"

I0123 13:10:12.571103 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l d i, on_circle l d i ? perp j b b g"
I0123 13:10:12.571288 139631609110528 graph.py:498] 
I0123 13:10:12.571348 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l d i, on_circle l d i ? perp j b b g
I0123 13:10:13.979083 139631609110528 ddar.py:60] Depth 1/1000 time = 1.3511021137237549
I0123 13:10:18.619055 139631609110528 ddar.py:60] Depth 2/1000 time = 4.639735221862793
I0123 13:10:22.126661 139631609110528 ddar.py:60] Depth 3/1000 time = 3.5073416233062744
I0123 13:10:26.502844 139631609110528 ddar.py:60] Depth 4/1000 time = 4.375939130783081
I0123 13:10:30.042426 139631609110528 ddar.py:60] Depth 5/1000 time = 3.5390238761901855
I0123 13:10:34.519115 139631609110528 ddar.py:60] Depth 6/1000 time = 4.436730861663818
I0123 13:10:38.934781 139631609110528 ddar.py:60] Depth 7/1000 time = 4.41527247428894
I0123 13:10:42.507321 139631609110528 ddar.py:60] Depth 8/1000 time = 3.572265863418579
I0123 13:10:42.514493 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:10:42.514556 139631609110528 alphageometry.py:566] LM output (score=-3.584653): "l : C b e l 15 ;"
I0123 13:10:42.514591 139631609110528 alphageometry.py:567] Translation: "l = on_line l b e"

I0123 13:10:42.514626 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b e ? perp j b b g"
I0123 13:10:42.514791 139631609110528 graph.py:498] 
I0123 13:10:42.514853 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k b c, on_bline k c b; l = on_line l b e ? perp j b b g
I0123 13:10:43.610598 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0465130805969238
I0123 13:10:46.246226 139631609110528 ddar.py:60] Depth 2/1000 time = 2.6354243755340576
I0123 13:10:48.119989 139631609110528 ddar.py:60] Depth 3/1000 time = 1.873528003692627
I0123 13:10:50.820184 139631609110528 ddar.py:60] Depth 4/1000 time = 2.6999118328094482
I0123 13:10:53.574780 139631609110528 ddar.py:60] Depth 5/1000 time = 2.754049301147461
I0123 13:10:55.528907 139631609110528 ddar.py:60] Depth 6/1000 time = 1.93576979637146
I0123 13:10:58.287558 139631609110528 ddar.py:60] Depth 7/1000 time = 2.758413314819336
I0123 13:11:00.218023 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9302129745483398
I0123 13:11:00.225279 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:11:00.225349 139631609110528 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C a b k 13 D a k b k 14 ; x00
I0123 13:11:05.734061 139631609110528 alphageometry.py:566] LM output (score=-1.038988): "l : C b d l 15 D b l d l 16 ;"
I0123 13:11:05.734279 139631609110528 alphageometry.py:567] Translation: "l = on_line l b d, on_bline l d b"

I0123 13:11:05.734323 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b d, on_bline l d b ? perp j b b g"
I0123 13:11:05.734490 139631609110528 graph.py:498] 
I0123 13:11:05.734550 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b d, on_bline l d b ? perp j b b g
I0123 13:11:06.925242 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1291275024414062
I0123 13:11:09.620282 139631609110528 ddar.py:60] Depth 2/1000 time = 2.6948065757751465
I0123 13:11:11.713326 139631609110528 ddar.py:60] Depth 3/1000 time = 2.092803716659546
I0123 13:11:14.655812 139631609110528 ddar.py:60] Depth 4/1000 time = 2.942197561264038
I0123 13:11:16.748657 139631609110528 ddar.py:60] Depth 5/1000 time = 2.0923197269439697
I0123 13:11:19.777489 139631609110528 ddar.py:60] Depth 6/1000 time = 3.007486581802368
I0123 13:11:21.938579 139631609110528 ddar.py:60] Depth 7/1000 time = 2.1608331203460693
I0123 13:11:24.936258 139631609110528 ddar.py:60] Depth 8/1000 time = 2.997403144836426
I0123 13:11:24.943345 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:11:24.943416 139631609110528 alphageometry.py:566] LM output (score=-1.221535): "l : C b i l 15 D b l i l 16 ;"
I0123 13:11:24.943454 139631609110528 alphageometry.py:567] Translation: "l = on_line l b i, on_bline l i b"

I0123 13:11:24.943492 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b i, on_bline l i b ? perp j b b g"
I0123 13:11:24.943651 139631609110528 graph.py:498] 
I0123 13:11:24.943701 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b i, on_bline l i b ? perp j b b g
I0123 13:11:26.115394 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1057510375976562
I0123 13:11:28.116760 139631609110528 ddar.py:60] Depth 2/1000 time = 2.0011496543884277
I0123 13:11:31.206524 139631609110528 ddar.py:60] Depth 3/1000 time = 3.089517116546631
I0123 13:11:33.448854 139631609110528 ddar.py:60] Depth 4/1000 time = 2.2420501708984375
I0123 13:11:35.698241 139631609110528 ddar.py:60] Depth 5/1000 time = 2.248908519744873
I0123 13:11:38.813942 139631609110528 ddar.py:60] Depth 6/1000 time = 3.0878710746765137
I0123 13:11:41.076435 139631609110528 ddar.py:60] Depth 7/1000 time = 2.262223720550537
I0123 13:11:44.207975 139631609110528 ddar.py:60] Depth 8/1000 time = 3.131249189376831
I0123 13:11:44.214485 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:11:44.214623 139631609110528 alphageometry.py:566] LM output (score=-1.282804): "l : C b c l 15 D b l c l 16 ;"
I0123 13:11:44.214668 139631609110528 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 13:11:44.214711 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b c, on_bline l c b ? perp j b b g"
I0123 13:11:44.214887 139631609110528 graph.py:498] 
I0123 13:11:44.214949 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b c, on_bline l c b ? perp j b b g
I0123 13:11:45.388032 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1081945896148682
I0123 13:11:47.270957 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8826189041137695
I0123 13:11:50.511237 139631609110528 ddar.py:60] Depth 3/1000 time = 3.2400169372558594
I0123 13:11:52.824594 139631609110528 ddar.py:60] Depth 4/1000 time = 2.3130838871002197
I0123 13:11:55.143623 139631609110528 ddar.py:60] Depth 5/1000 time = 2.318441390991211
I0123 13:11:58.341472 139631609110528 ddar.py:60] Depth 6/1000 time = 3.168657064437866
I0123 13:12:00.678964 139631609110528 ddar.py:60] Depth 7/1000 time = 2.3372178077697754
I0123 13:12:03.848137 139631609110528 ddar.py:60] Depth 8/1000 time = 3.168914794921875
I0123 13:12:03.857261 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:12:03.857334 139631609110528 alphageometry.py:566] LM output (score=-1.459117): "l : C a i l 15 D a l i l 16 ;"
I0123 13:12:03.857372 139631609110528 alphageometry.py:567] Translation: "l = on_line l a i, on_bline l i a"

I0123 13:12:03.857411 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l a i, on_bline l i a ? perp j b b g"
I0123 13:12:03.857589 139631609110528 graph.py:498] 
I0123 13:12:03.857703 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l a i, on_bline l i a ? perp j b b g
I0123 13:12:05.001120 139631609110528 ddar.py:60] Depth 1/1000 time = 1.079848289489746
I0123 13:12:07.010016 139631609110528 ddar.py:60] Depth 2/1000 time = 2.0086913108825684
I0123 13:12:10.054287 139631609110528 ddar.py:60] Depth 3/1000 time = 3.0440149307250977
I0123 13:12:12.287023 139631609110528 ddar.py:60] Depth 4/1000 time = 2.23241925239563
I0123 13:12:15.443722 139631609110528 ddar.py:60] Depth 5/1000 time = 3.1559863090515137
I0123 13:12:17.719832 139631609110528 ddar.py:60] Depth 6/1000 time = 2.248422145843506
I0123 13:12:19.959212 139631609110528 ddar.py:60] Depth 7/1000 time = 2.239132881164551
I0123 13:12:23.042162 139631609110528 ddar.py:60] Depth 8/1000 time = 3.082674741744995
I0123 13:12:23.048854 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:12:23.048938 139631609110528 alphageometry.py:566] LM output (score=-1.526337): "l : C c d l 15 D c l d l 16 ;"
I0123 13:12:23.048994 139631609110528 alphageometry.py:567] Translation: "l = on_line l c d, on_bline l d c"

I0123 13:12:23.049036 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l c d, on_bline l d c ? perp j b b g"
I0123 13:12:23.049221 139631609110528 graph.py:498] 
I0123 13:12:23.049284 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l c d, on_bline l d c ? perp j b b g
I0123 13:12:24.170038 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0579299926757812
I0123 13:12:25.870881 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7006230354309082
I0123 13:12:28.503677 139631609110528 ddar.py:60] Depth 3/1000 time = 2.6325559616088867
I0123 13:12:30.322606 139631609110528 ddar.py:60] Depth 4/1000 time = 1.818652629852295
I0123 13:12:32.131684 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8084864616394043
I0123 13:12:34.064347 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9117157459259033
I0123 13:12:36.835459 139631609110528 ddar.py:60] Depth 7/1000 time = 2.770829916000366
I0123 13:12:38.725226 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8894882202148438
I0123 13:12:38.731305 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:12:38.731384 139631609110528 alphageometry.py:566] LM output (score=-1.617294): "l : C a d l 15 D a l d l 16 ;"
I0123 13:12:38.731420 139631609110528 alphageometry.py:567] Translation: "l = on_line l a d, on_bline l d a"

I0123 13:12:38.731457 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l a d, on_bline l d a ? perp j b b g"
I0123 13:12:38.731627 139631609110528 graph.py:498] 
I0123 13:12:38.731690 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l a d, on_bline l d a ? perp j b b g
I0123 13:12:39.896275 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1002917289733887
I0123 13:12:42.674892 139631609110528 ddar.py:60] Depth 2/1000 time = 2.7784035205841064
I0123 13:12:44.661851 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9867234230041504
I0123 13:12:46.678021 139631609110528 ddar.py:60] Depth 4/1000 time = 2.0158941745758057
I0123 13:12:49.589192 139631609110528 ddar.py:60] Depth 5/1000 time = 2.9105775356292725
I0123 13:12:51.730113 139631609110528 ddar.py:60] Depth 6/1000 time = 2.120063066482544
I0123 13:12:53.805890 139631609110528 ddar.py:60] Depth 7/1000 time = 2.0755090713500977
I0123 13:12:56.783332 139631609110528 ddar.py:60] Depth 8/1000 time = 2.9771671295166016
I0123 13:12:56.790519 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:12:56.790623 139631609110528 alphageometry.py:566] LM output (score=-1.634197): "l : C b j l 15 D b l j l 16 ;"
I0123 13:12:56.790664 139631609110528 alphageometry.py:567] Translation: "l = on_line l b j, on_bline l j b"

I0123 13:12:56.790704 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b j, on_bline l j b ? perp j b b g"
I0123 13:12:56.790883 139631609110528 graph.py:498] 
I0123 13:12:56.790949 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b j, on_bline l j b ? perp j b b g
I0123 13:12:57.933375 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0754549503326416
I0123 13:12:59.855694 139631609110528 ddar.py:60] Depth 2/1000 time = 1.92203688621521
I0123 13:13:02.544978 139631609110528 ddar.py:60] Depth 3/1000 time = 2.6890013217926025
I0123 13:13:04.444010 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8986811637878418
I0123 13:13:06.364446 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9197266101837158
I0123 13:13:09.287335 139631609110528 ddar.py:60] Depth 6/1000 time = 2.903225898742676
I0123 13:13:11.265629 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9778499603271484
I0123 13:13:13.260587 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9943797588348389
I0123 13:13:13.266894 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:13:13.267000 139631609110528 alphageometry.py:566] LM output (score=-1.728878): "l : C a j l 15 D a l j l 16 ;"
I0123 13:13:13.267040 139631609110528 alphageometry.py:567] Translation: "l = on_line l a j, on_bline l j a"

I0123 13:13:13.267098 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l a j, on_bline l j a ? perp j b b g"
I0123 13:13:13.267299 139631609110528 graph.py:498] 
I0123 13:13:13.267362 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l a j, on_bline l j a ? perp j b b g
I0123 13:13:15.242680 139631609110528 ddar.py:60] Depth 1/1000 time = 1.9115080833435059
I0123 13:13:17.052479 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8095180988311768
I0123 13:13:18.917015 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8642356395721436
I0123 13:13:21.630502 139631609110528 ddar.py:60] Depth 4/1000 time = 2.713146924972534
I0123 13:13:23.500980 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8698525428771973
I0123 13:13:25.500924 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9791672229766846
I0123 13:13:28.333366 139631609110528 ddar.py:60] Depth 7/1000 time = 2.8320631980895996
I0123 13:13:30.275252 139631609110528 ddar.py:60] Depth 8/1000 time = 1.941392183303833
I0123 13:13:30.282159 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:13:30.282278 139631609110528 alphageometry.py:566] LM output (score=-1.901512): "l : C b e l 15 D b l e l 16 ;"
I0123 13:13:30.282317 139631609110528 alphageometry.py:567] Translation: "l = on_line l b e, on_bline l e b"

I0123 13:13:30.282380 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b e, on_bline l e b ? perp j b b g"
I0123 13:13:30.282595 139631609110528 graph.py:498] 
I0123 13:13:30.282658 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b e, on_bline l e b ? perp j b b g
I0123 13:13:31.471561 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1219730377197266
I0123 13:13:34.174331 139631609110528 ddar.py:60] Depth 2/1000 time = 2.7025458812713623
I0123 13:13:36.240331 139631609110528 ddar.py:60] Depth 3/1000 time = 2.0657618045806885
I0123 13:13:39.152619 139631609110528 ddar.py:60] Depth 4/1000 time = 2.9120078086853027
I0123 13:13:41.220355 139631609110528 ddar.py:60] Depth 5/1000 time = 2.06717586517334
I0123 13:13:44.282510 139631609110528 ddar.py:60] Depth 6/1000 time = 3.0396173000335693
I0123 13:13:46.435159 139631609110528 ddar.py:60] Depth 7/1000 time = 2.152350425720215
I0123 13:13:49.535876 139631609110528 ddar.py:60] Depth 8/1000 time = 3.1003174781799316
I0123 13:13:49.544883 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:13:49.544971 139631609110528 alphageometry.py:566] LM output (score=-1.990163): "l : C g h l 15 D g l h l 16 ;"
I0123 13:13:49.545010 139631609110528 alphageometry.py:567] Translation: "l = on_line l g h, on_bline l h g"

I0123 13:13:49.545051 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l g h, on_bline l h g ? perp j b b g"
I0123 13:13:49.545235 139631609110528 graph.py:498] 
I0123 13:13:49.545298 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l g h, on_bline l h g ? perp j b b g
I0123 13:13:50.733260 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1251416206359863
I0123 13:13:54.258047 139631609110528 ddar.py:60] Depth 2/1000 time = 3.524569511413574
I0123 13:13:57.126917 139631609110528 ddar.py:60] Depth 3/1000 time = 2.8686318397521973
I0123 13:14:00.803988 139631609110528 ddar.py:60] Depth 4/1000 time = 3.676821231842041
I0123 13:14:04.546395 139631609110528 ddar.py:60] Depth 5/1000 time = 3.7420825958251953
I0123 13:14:08.376091 139631609110528 ddar.py:60] Depth 6/1000 time = 3.8288822174072266
I0123 13:14:11.481349 139631609110528 ddar.py:60] Depth 7/1000 time = 3.0797998905181885
I0123 13:14:15.422374 139631609110528 ddar.py:60] Depth 8/1000 time = 3.9407899379730225
I0123 13:14:19.450198 139631609110528 ddar.py:60] Depth 9/1000 time = 4.027579307556152
I0123 13:14:23.746092 139631609110528 ddar.py:60] Depth 10/1000 time = 4.2955639362335205
I0123 13:14:28.061732 139631609110528 ddar.py:60] Depth 11/1000 time = 4.3151984214782715
I0123 13:14:31.468458 139631609110528 ddar.py:60] Depth 12/1000 time = 3.3854076862335205
I0123 13:14:31.468746 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:14:31.468823 139631609110528 alphageometry.py:566] LM output (score=-1.999838): "l : C b h l 15 D b l h l 16 ;"
I0123 13:14:31.468858 139631609110528 alphageometry.py:567] Translation: "l = on_line l b h, on_bline l h b"

I0123 13:14:31.468899 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b h, on_bline l h b ? perp j b b g"
I0123 13:14:31.469079 139631609110528 graph.py:498] 
I0123 13:14:31.469139 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b h, on_bline l h b ? perp j b b g
I0123 13:14:33.458829 139631609110528 ddar.py:60] Depth 1/1000 time = 1.9261243343353271
I0123 13:14:35.593100 139631609110528 ddar.py:60] Depth 2/1000 time = 2.1340315341949463
I0123 13:14:37.754104 139631609110528 ddar.py:60] Depth 3/1000 time = 2.1607675552368164
I0123 13:14:40.828557 139631609110528 ddar.py:60] Depth 4/1000 time = 3.0741727352142334
I0123 13:14:43.013147 139631609110528 ddar.py:60] Depth 5/1000 time = 2.1840381622314453
I0123 13:14:45.318097 139631609110528 ddar.py:60] Depth 6/1000 time = 2.278743028640747
I0123 13:14:48.452393 139631609110528 ddar.py:60] Depth 7/1000 time = 3.134023904800415
I0123 13:14:50.699528 139631609110528 ddar.py:60] Depth 8/1000 time = 2.2468574047088623
I0123 13:14:50.706885 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:14:50.706942 139631609110528 alphageometry.py:566] LM output (score=-2.092576): "l : C a c l 15 D a l c l 16 ;"
I0123 13:14:50.706977 139631609110528 alphageometry.py:567] Translation: "l = on_line l a c, on_bline l c a"

I0123 13:14:50.707015 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l a c, on_bline l c a ? perp j b b g"
I0123 13:14:50.707186 139631609110528 graph.py:498] 
I0123 13:14:50.707253 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l a c, on_bline l c a ? perp j b b g
I0123 13:14:51.875610 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1054937839508057
I0123 13:14:54.551296 139631609110528 ddar.py:60] Depth 2/1000 time = 2.6754791736602783
I0123 13:14:56.833878 139631609110528 ddar.py:60] Depth 3/1000 time = 2.2823336124420166
I0123 13:15:00.056802 139631609110528 ddar.py:60] Depth 4/1000 time = 3.2226333618164062
I0123 13:15:02.387792 139631609110528 ddar.py:60] Depth 5/1000 time = 2.3303282260894775
I0123 13:15:04.762244 139631609110528 ddar.py:60] Depth 6/1000 time = 2.3472366333007812
I0123 13:15:08.011443 139631609110528 ddar.py:60] Depth 7/1000 time = 3.2489609718322754
I0123 13:15:10.366981 139631609110528 ddar.py:60] Depth 8/1000 time = 2.3552725315093994
I0123 13:15:10.376143 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:15:10.376231 139631609110528 alphageometry.py:566] LM output (score=-2.246847): "l : C b g l 15 D b l g l 16 ;"
I0123 13:15:10.376267 139631609110528 alphageometry.py:567] Translation: "l = on_line l b g, on_bline l g b"

I0123 13:15:10.376307 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b g, on_bline l g b ? perp j b b g"
I0123 13:15:10.376472 139631609110528 graph.py:498] 
I0123 13:15:10.376537 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b g, on_bline l g b ? perp j b b g
I0123 13:15:11.533753 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0863752365112305
I0123 13:15:14.474276 139631609110528 ddar.py:60] Depth 2/1000 time = 2.940316915512085
I0123 13:15:16.638834 139631609110528 ddar.py:60] Depth 3/1000 time = 2.1643266677856445
I0123 13:15:19.765653 139631609110528 ddar.py:60] Depth 4/1000 time = 3.1265077590942383
I0123 13:15:21.946389 139631609110528 ddar.py:60] Depth 5/1000 time = 2.180067300796509
I0123 13:15:24.265535 139631609110528 ddar.py:60] Depth 6/1000 time = 2.292910099029541
I0123 13:15:27.415969 139631609110528 ddar.py:60] Depth 7/1000 time = 3.150181770324707
I0123 13:15:29.663538 139631609110528 ddar.py:60] Depth 8/1000 time = 2.2472972869873047
I0123 13:15:29.670117 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:15:29.670187 139631609110528 alphageometry.py:566] LM output (score=-2.336231): "l : C b f l 15 D b l f l 16 ;"
I0123 13:15:29.670221 139631609110528 alphageometry.py:567] Translation: "l = on_line l b f, on_bline l f b"

I0123 13:15:29.670258 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b f, on_bline l f b ? perp j b b g"
I0123 13:15:29.670435 139631609110528 graph.py:498] 
I0123 13:15:29.670501 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b f, on_bline l f b ? perp j b b g
I0123 13:15:30.787017 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0538175106048584
I0123 13:15:33.371448 139631609110528 ddar.py:60] Depth 2/1000 time = 2.5842127799987793
I0123 13:15:35.229529 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8578405380249023
I0123 13:15:37.118848 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8890578746795654
I0123 13:15:39.957275 139631609110528 ddar.py:60] Depth 5/1000 time = 2.8378593921661377
I0123 13:15:41.941471 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9650089740753174
I0123 13:15:43.905545 139631609110528 ddar.py:60] Depth 7/1000 time = 1.963834524154663
I0123 13:15:46.770910 139631609110528 ddar.py:60] Depth 8/1000 time = 2.8650989532470703
I0123 13:15:46.778243 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:15:46.778299 139631609110528 alphageometry.py:566] LM output (score=-2.454960): "l : T d k f l 15 ;"
I0123 13:15:46.778335 139631609110528 alphageometry.py:567] Translation: "l = on_tline l f d k"

I0123 13:15:46.778370 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l f d k ? perp j b b g"
I0123 13:15:46.778541 139631609110528 graph.py:498] 
I0123 13:15:46.778611 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l f d k ? perp j b b g
I0123 13:15:47.823096 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9935173988342285
I0123 13:15:49.408517 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5852603912353516
I0123 13:15:51.087135 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6783745288848877
I0123 13:15:53.682681 139631609110528 ddar.py:60] Depth 4/1000 time = 2.5952627658843994
I0123 13:15:55.394102 139631609110528 ddar.py:60] Depth 5/1000 time = 1.710984706878662
I0123 13:15:57.215459 139631609110528 ddar.py:60] Depth 6/1000 time = 1.799278736114502
I0123 13:15:59.980825 139631609110528 ddar.py:60] Depth 7/1000 time = 2.7649738788604736
I0123 13:16:01.753217 139631609110528 ddar.py:60] Depth 8/1000 time = 1.772092580795288
I0123 13:16:01.758247 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:16:01.758337 139631609110528 alphageometry.py:566] LM output (score=-2.466016): "l : D a l b l 15 ;"
I0123 13:16:01.758377 139631609110528 alphageometry.py:567] Translation: "l = on_bline l b a"

I0123 13:16:01.758415 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_bline l b a ? perp j b b g"
I0123 13:16:01.758583 139631609110528 graph.py:498] 
I0123 13:16:01.758651 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_bline l b a ? perp j b b g
I0123 13:16:02.871777 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0501351356506348
I0123 13:16:04.624765 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7528049945831299
I0123 13:16:07.499975 139631609110528 ddar.py:60] Depth 3/1000 time = 2.874985933303833
I0123 13:16:09.527710 139631609110528 ddar.py:60] Depth 4/1000 time = 2.027482748031616
I0123 13:16:11.556598 139631609110528 ddar.py:60] Depth 5/1000 time = 2.0284528732299805
I0123 13:16:14.587552 139631609110528 ddar.py:60] Depth 6/1000 time = 3.0100412368774414
I0123 13:16:16.676063 139631609110528 ddar.py:60] Depth 7/1000 time = 2.088210344314575
I0123 13:16:18.778806 139631609110528 ddar.py:60] Depth 8/1000 time = 2.1023123264312744
I0123 13:16:18.784240 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:16:18.784368 139631609110528 alphageometry.py:566] LM output (score=-2.512269): "l : C a g l 15 D a l g l 16 ;"
I0123 13:16:18.784404 139631609110528 alphageometry.py:567] Translation: "l = on_line l a g, on_bline l g a"

I0123 13:16:18.784463 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l a g, on_bline l g a ? perp j b b g"
I0123 13:16:18.784699 139631609110528 graph.py:498] 
I0123 13:16:18.784763 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l a g, on_bline l g a ? perp j b b g
I0123 13:16:20.834778 139631609110528 ddar.py:60] Depth 1/1000 time = 1.9864263534545898
I0123 13:16:22.462400 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6273887157440186
I0123 13:16:24.303855 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8412344455718994
I0123 13:16:27.052381 139631609110528 ddar.py:60] Depth 4/1000 time = 2.748279094696045
I0123 13:16:28.918260 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8653442859649658
I0123 13:16:30.895954 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9565057754516602
I0123 13:16:33.780485 139631609110528 ddar.py:60] Depth 7/1000 time = 2.8842484951019287
I0123 13:16:35.700000 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9190964698791504
I0123 13:16:35.707198 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:16:35.707317 139631609110528 alphageometry.py:566] LM output (score=-2.585671): "l : C e h l 15 D e l h l 16 ;"
I0123 13:16:35.707355 139631609110528 alphageometry.py:567] Translation: "l = on_line l e h, on_bline l h e"

I0123 13:16:35.707418 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l e h, on_bline l h e ? perp j b b g"
I0123 13:16:35.707646 139631609110528 graph.py:498] 
I0123 13:16:35.707708 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l e h, on_bline l h e ? perp j b b g
I0123 13:16:36.842547 139631609110528 ddar.py:60] Depth 1/1000 time = 1.071791648864746
I0123 13:16:38.719295 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8765606880187988
I0123 13:16:41.620775 139631609110528 ddar.py:60] Depth 3/1000 time = 2.901257276535034
I0123 13:16:43.617700 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9966681003570557
I0123 13:16:46.542685 139631609110528 ddar.py:60] Depth 5/1000 time = 2.924509286880493
I0123 13:16:48.657394 139631609110528 ddar.py:60] Depth 6/1000 time = 2.094130277633667
I0123 13:16:50.729485 139631609110528 ddar.py:60] Depth 7/1000 time = 2.071826934814453
I0123 13:16:53.725411 139631609110528 ddar.py:60] Depth 8/1000 time = 2.9956018924713135
I0123 13:16:53.732377 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:16:53.732517 139631609110528 alphageometry.py:566] LM output (score=-2.589171): "l : T a i h l 15 ;"
I0123 13:16:53.732558 139631609110528 alphageometry.py:567] Translation: "l = on_tline l h a i"

I0123 13:16:53.732609 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l h a i ? perp j b b g"
I0123 13:16:53.732791 139631609110528 graph.py:498] 
I0123 13:16:53.732856 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l h a i ? perp j b b g
I0123 13:16:54.771411 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9888911247253418
I0123 13:16:56.292491 139631609110528 ddar.py:60] Depth 2/1000 time = 1.520810604095459
I0123 13:16:58.105273 139631609110528 ddar.py:60] Depth 3/1000 time = 1.812551736831665
I0123 13:17:00.858844 139631609110528 ddar.py:60] Depth 4/1000 time = 2.7533273696899414
I0123 13:17:02.691757 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8324847221374512
I0123 13:17:04.589618 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8721227645874023
I0123 13:17:07.358320 139631609110528 ddar.py:60] Depth 7/1000 time = 2.7684569358825684
I0123 13:17:09.221019 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8624329566955566
I0123 13:17:09.225945 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:17:09.226025 139631609110528 alphageometry.py:566] LM output (score=-2.621266): "l : C g i l 15 D g l i l 16 ;"
I0123 13:17:09.226064 139631609110528 alphageometry.py:567] Translation: "l = on_line l g i, on_bline l i g"

I0123 13:17:09.226106 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l g i, on_bline l i g ? perp j b b g"
I0123 13:17:09.226283 139631609110528 graph.py:498] 
I0123 13:17:09.226344 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l g i, on_bline l i g ? perp j b b g
I0123 13:17:10.400098 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1096611022949219
I0123 13:17:13.245577 139631609110528 ddar.py:60] Depth 2/1000 time = 2.845248222351074
I0123 13:17:15.097529 139631609110528 ddar.py:60] Depth 3/1000 time = 1.851658821105957
I0123 13:17:17.928541 139631609110528 ddar.py:60] Depth 4/1000 time = 2.8307361602783203
I0123 13:17:19.815110 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8861148357391357
I0123 13:17:21.804416 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9700520038604736
I0123 13:17:24.619497 139631609110528 ddar.py:60] Depth 7/1000 time = 2.8148369789123535
I0123 13:17:26.567601 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9478516578674316
I0123 13:17:26.573216 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:17:26.573292 139631609110528 alphageometry.py:566] LM output (score=-2.626249): "l : D a l c l 15 ;"
I0123 13:17:26.573332 139631609110528 alphageometry.py:567] Translation: "l = on_bline l c a"

I0123 13:17:26.573371 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_bline l c a ? perp j b b g"
I0123 13:17:26.573538 139631609110528 graph.py:498] 
I0123 13:17:26.573601 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_bline l c a ? perp j b b g
I0123 13:17:28.643673 139631609110528 ddar.py:60] Depth 1/1000 time = 2.0061724185943604
I0123 13:17:30.307149 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6631975173950195
I0123 13:17:32.338186 139631609110528 ddar.py:60] Depth 3/1000 time = 2.0306620597839355
I0123 13:17:34.432571 139631609110528 ddar.py:60] Depth 4/1000 time = 2.0940792560577393
I0123 13:17:37.484589 139631609110528 ddar.py:60] Depth 5/1000 time = 3.05153751373291
I0123 13:17:39.646909 139631609110528 ddar.py:60] Depth 6/1000 time = 2.1349685192108154
I0123 13:17:41.742669 139631609110528 ddar.py:60] Depth 7/1000 time = 2.0955395698547363
I0123 13:17:44.776306 139631609110528 ddar.py:60] Depth 8/1000 time = 3.0333707332611084
I0123 13:17:44.781671 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:17:44.781749 139631609110528 alphageometry.py:566] LM output (score=-2.644034): "l : C a h l 15 D a l h l 16 ;"
I0123 13:17:44.781788 139631609110528 alphageometry.py:567] Translation: "l = on_line l a h, on_bline l h a"

I0123 13:17:44.781826 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l a h, on_bline l h a ? perp j b b g"
I0123 13:17:44.781996 139631609110528 graph.py:498] 
I0123 13:17:44.782057 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l a h, on_bline l h a ? perp j b b g
I0123 13:17:45.913180 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0691864490509033
I0123 13:17:47.641098 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7277190685272217
I0123 13:17:49.427108 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7857248783111572
I0123 13:17:52.276734 139631609110528 ddar.py:60] Depth 4/1000 time = 2.849199056625366
I0123 13:17:54.091944 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8146977424621582
I0123 13:17:56.008415 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8964269161224365
I0123 13:17:58.792675 139631609110528 ddar.py:60] Depth 7/1000 time = 2.7840311527252197
I0123 13:18:00.682427 139631609110528 ddar.py:60] Depth 8/1000 time = 1.889481782913208
I0123 13:18:00.688911 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:18:00.688977 139631609110528 alphageometry.py:566] LM output (score=-2.656317): "l : T a c a l 15 ;"
I0123 13:18:00.689013 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a a c"

I0123 13:18:00.689052 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l a a c ? perp j b b g"
I0123 13:18:00.689221 139631609110528 graph.py:498] 
I0123 13:18:00.689277 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l a a c ? perp j b b g
I0123 13:18:01.724783 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9835760593414307
I0123 13:18:03.189810 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4648430347442627
I0123 13:18:05.926408 139631609110528 ddar.py:60] Depth 3/1000 time = 2.7363851070404053
I0123 13:18:07.754630 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8279221057891846
I0123 13:18:09.594252 139631609110528 ddar.py:60] Depth 5/1000 time = 1.839015007019043
I0123 13:18:12.503533 139631609110528 ddar.py:60] Depth 6/1000 time = 2.8828468322753906
I0123 13:18:14.356670 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8528952598571777
I0123 13:18:16.222931 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8659875392913818
I0123 13:18:16.227679 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:18:16.227743 139631609110528 alphageometry.py:566] LM output (score=-2.697737): "l : C e g l 15 D e l g l 16 ;"
I0123 13:18:16.227779 139631609110528 alphageometry.py:567] Translation: "l = on_line l e g, on_bline l g e"

I0123 13:18:16.227818 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l e g, on_bline l g e ? perp j b b g"
I0123 13:18:16.227988 139631609110528 graph.py:498] 
I0123 13:18:16.228058 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l e g, on_bline l g e ? perp j b b g
I0123 13:18:17.370063 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0795872211456299
I0123 13:18:20.268291 139631609110528 ddar.py:60] Depth 2/1000 time = 2.898014783859253
I0123 13:18:22.290190 139631609110528 ddar.py:60] Depth 3/1000 time = 2.021653175354004
I0123 13:18:24.335546 139631609110528 ddar.py:60] Depth 4/1000 time = 2.0450968742370605
I0123 13:18:27.322450 139631609110528 ddar.py:60] Depth 5/1000 time = 2.986330032348633
I0123 13:18:29.497256 139631609110528 ddar.py:60] Depth 6/1000 time = 2.151912212371826
I0123 13:18:32.565379 139631609110528 ddar.py:60] Depth 7/1000 time = 3.067887544631958
I0123 13:18:34.710481 139631609110528 ddar.py:60] Depth 8/1000 time = 2.1448423862457275
I0123 13:18:34.717477 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:18:34.717581 139631609110528 alphageometry.py:566] LM output (score=-2.698956): "l : T d k d l 15 ;"
I0123 13:18:34.717619 139631609110528 alphageometry.py:567] Translation: "l = on_tline l d d k"

I0123 13:18:34.717671 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l d d k ? perp j b b g"
I0123 13:18:34.717837 139631609110528 graph.py:498] 
I0123 13:18:34.717904 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l d d k ? perp j b b g
I0123 13:18:35.760160 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9899485111236572
I0123 13:18:38.374776 139631609110528 ddar.py:60] Depth 2/1000 time = 2.6144399642944336
I0123 13:18:40.075082 139631609110528 ddar.py:60] Depth 3/1000 time = 1.700075626373291
I0123 13:18:41.795382 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7200236320495605
I0123 13:18:43.519354 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7235240936279297
I0123 13:18:46.387810 139631609110528 ddar.py:60] Depth 6/1000 time = 2.84489107131958
I0123 13:18:48.158494 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7704095840454102
I0123 13:18:49.975753 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8169951438903809
I0123 13:18:49.981024 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:18:49.981095 139631609110528 alphageometry.py:566] LM output (score=-2.889206): "l : T a i i l 15 ;"
I0123 13:18:49.981132 139631609110528 alphageometry.py:567] Translation: "l = on_tline l i a i"

I0123 13:18:49.981176 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l i a i ? perp j b b g"
I0123 13:18:49.981343 139631609110528 graph.py:498] 
I0123 13:18:49.981408 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l i a i ? perp j b b g
I0123 13:18:51.005714 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9726500511169434
I0123 13:18:53.596202 139631609110528 ddar.py:60] Depth 2/1000 time = 2.5903120040893555
I0123 13:18:55.392335 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7958950996398926
I0123 13:18:57.214130 139631609110528 ddar.py:60] Depth 4/1000 time = 1.821544885635376
I0123 13:18:59.045772 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8311872482299805
I0123 13:19:01.867895 139631609110528 ddar.py:60] Depth 6/1000 time = 2.796466827392578
I0123 13:19:03.720262 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8520948886871338
I0123 13:19:05.573089 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8524599075317383
I0123 13:19:05.577702 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:19:05.577829 139631609110528 alphageometry.py:566] LM output (score=-2.920720): "l : T d e e l 15 ;"
I0123 13:19:05.577870 139631609110528 alphageometry.py:567] Translation: "l = on_tline l e d e"

I0123 13:19:05.577929 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l e d e ? perp j b b g"
I0123 13:19:05.578185 139631609110528 graph.py:498] 
I0123 13:19:05.578254 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l e d e ? perp j b b g
I0123 13:19:06.605474 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9740152359008789
I0123 13:19:09.123649 139631609110528 ddar.py:60] Depth 2/1000 time = 2.518003225326538
I0123 13:19:10.908236 139631609110528 ddar.py:60] Depth 3/1000 time = 1.784365177154541
I0123 13:19:12.700653 139631609110528 ddar.py:60] Depth 4/1000 time = 1.792160987854004
I0123 13:19:14.500318 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7992215156555176
I0123 13:19:17.356307 139631609110528 ddar.py:60] Depth 6/1000 time = 2.830376148223877
I0123 13:19:19.242825 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8862757682800293
I0123 13:19:21.138830 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8957469463348389
I0123 13:19:21.143865 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:19:21.143952 139631609110528 alphageometry.py:566] LM output (score=-2.955127): "l : T a b a l 15 ;"
I0123 13:19:21.143987 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a a b"

I0123 13:19:21.144024 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l a a b ? perp j b b g"
I0123 13:19:21.144201 139631609110528 graph.py:498] 
I0123 13:19:21.144271 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l a a b ? perp j b b g
I0123 13:19:22.180974 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9842109680175781
I0123 13:19:24.647601 139631609110528 ddar.py:60] Depth 2/1000 time = 2.4663262367248535
I0123 13:19:26.299831 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6519899368286133
I0123 13:19:27.980134 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6800532341003418
I0123 13:19:30.626446 139631609110528 ddar.py:60] Depth 5/1000 time = 2.645883083343506
I0123 13:19:32.411772 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7640306949615479
I0123 13:19:34.146042 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7340505123138428
I0123 13:19:35.890331 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7440423965454102
I0123 13:19:35.895373 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:19:35.895446 139631609110528 alphageometry.py:566] LM output (score=-3.089089): "l : T a l d e 15 ;"
I0123 13:19:35.895484 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a d e"

I0123 13:19:35.895523 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l a d e ? perp j b b g"
I0123 13:19:35.895689 139631609110528 graph.py:498] 
I0123 13:19:35.895748 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_tline l a d e ? perp j b b g
I0123 13:19:37.867622 139631609110528 ddar.py:60] Depth 1/1000 time = 1.9192545413970947
I0123 13:19:39.663792 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7959315776824951
I0123 13:19:41.502408 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8383405208587646
I0123 13:19:43.328567 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8257360458374023
I0123 13:19:46.205420 139631609110528 ddar.py:60] Depth 5/1000 time = 2.8763067722320557
I0123 13:19:48.143621 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9126660823822021
I0123 13:19:50.029759 139631609110528 ddar.py:60] Depth 7/1000 time = 1.885901689529419
I0123 13:19:51.922111 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8920955657958984
I0123 13:19:51.927120 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:19:51.927187 139631609110528 alphageometry.py:566] LM output (score=-3.216843): "l : C b d l 15 P a c k l 16 ;"
I0123 13:19:51.927225 139631609110528 alphageometry.py:567] Translation: "l = on_line l b d, on_pline l k a c"

I0123 13:19:51.927264 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b d, on_pline l k a c ? perp j b b g"
I0123 13:19:51.927436 139631609110528 graph.py:498] 
I0123 13:19:51.927496 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l b d, on_pline l k a c ? perp j b b g
I0123 13:19:54.002174 139631609110528 ddar.py:60] Depth 1/1000 time = 2.0225532054901123
I0123 13:19:55.706900 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7044951915740967
I0123 13:19:58.528047 139631609110528 ddar.py:60] Depth 3/1000 time = 2.8209080696105957
I0123 13:20:00.345035 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8166751861572266
I0123 13:20:02.149892 139631609110528 ddar.py:60] Depth 5/1000 time = 1.804274559020996
I0123 13:20:05.113850 139631609110528 ddar.py:60] Depth 6/1000 time = 2.944455862045288
I0123 13:20:06.998262 139631609110528 ddar.py:60] Depth 7/1000 time = 1.884185791015625
I0123 13:20:08.900852 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9023354053497314
I0123 13:20:08.905389 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:20:08.905451 139631609110528 alphageometry.py:566] LM output (score=-3.392769): "l : D a l b l 15 D b l d l 16 ;"
I0123 13:20:08.905487 139631609110528 alphageometry.py:567] Translation: "l = on_bline l b a, on_bline l d b"

I0123 13:20:08.905525 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_bline l b a, on_bline l d b ? perp j b b g"
I0123 13:20:08.905698 139631609110528 graph.py:498] 
I0123 13:20:08.905761 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_bline l b a, on_bline l d b ? perp j b b g
I0123 13:20:11.188767 139631609110528 ddar.py:60] Depth 1/1000 time = 2.2086737155914307
I0123 13:20:13.429623 139631609110528 ddar.py:60] Depth 2/1000 time = 2.2406370639801025
I0123 13:20:15.767233 139631609110528 ddar.py:60] Depth 3/1000 time = 2.337371826171875
I0123 13:20:19.159423 139631609110528 ddar.py:60] Depth 4/1000 time = 3.391843795776367
I0123 13:20:21.518246 139631609110528 ddar.py:60] Depth 5/1000 time = 2.3580923080444336
I0123 13:20:25.025121 139631609110528 ddar.py:60] Depth 6/1000 time = 3.477006435394287
I0123 13:20:27.458149 139631609110528 ddar.py:60] Depth 7/1000 time = 2.4327902793884277
I0123 13:20:29.906269 139631609110528 ddar.py:60] Depth 8/1000 time = 2.4478418827056885
I0123 13:20:29.911568 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:20:29.911657 139631609110528 alphageometry.py:566] LM output (score=-3.421608): "l : C e h l 15 D e h h l 16 ;"
I0123 13:20:29.911693 139631609110528 alphageometry.py:567] Translation: "l = on_line l e h, on_circle l h e"

I0123 13:20:29.911731 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l e h, on_circle l h e ? perp j b b g"
I0123 13:20:29.911905 139631609110528 graph.py:498] 
I0123 13:20:29.911960 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a b, on_bline k b a; l = on_line l e h, on_circle l h e ? perp j b b g
I0123 13:20:31.182650 139631609110528 ddar.py:60] Depth 1/1000 time = 1.211611270904541
I0123 13:20:34.220452 139631609110528 ddar.py:60] Depth 2/1000 time = 3.0375804901123047
I0123 13:20:36.494709 139631609110528 ddar.py:60] Depth 3/1000 time = 2.273970603942871
I0123 13:20:39.842147 139631609110528 ddar.py:60] Depth 4/1000 time = 3.3468308448791504
I0123 13:20:42.138202 139631609110528 ddar.py:60] Depth 5/1000 time = 2.2955896854400635
I0123 13:20:44.388394 139631609110528 ddar.py:60] Depth 6/1000 time = 2.2297444343566895
I0123 13:20:47.547338 139631609110528 ddar.py:60] Depth 7/1000 time = 3.1587181091308594
I0123 13:20:49.745999 139631609110528 ddar.py:60] Depth 8/1000 time = 2.1983799934387207
I0123 13:20:49.753357 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:20:49.753432 139631609110528 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C a e k 13 D a k e k 14 ; x00
I0123 13:20:55.334213 139631609110528 alphageometry.py:566] LM output (score=-0.150774): "l : C a c l 15 D a l c l 16 ;"
I0123 13:20:55.334410 139631609110528 alphageometry.py:567] Translation: "l = on_line l a c, on_bline l c a"

I0123 13:20:55.334457 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a c, on_bline l c a ? perp j b b g"
I0123 13:20:55.334599 139631609110528 graph.py:498] 
I0123 13:20:55.334655 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a c, on_bline l c a ? perp j b b g
I0123 13:20:56.493474 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0977463722229004
I0123 13:20:59.715173 139631609110528 ddar.py:60] Depth 2/1000 time = 3.221494197845459
I0123 13:21:02.606490 139631609110528 ddar.py:60] Depth 3/1000 time = 2.8910257816314697
I0123 13:21:06.746872 139631609110528 ddar.py:60] Depth 4/1000 time = 4.139998197555542
I0123 13:21:09.840464 139631609110528 ddar.py:60] Depth 5/1000 time = 3.093076229095459
I0123 13:21:13.025663 139631609110528 ddar.py:60] Depth 6/1000 time = 3.161853075027466
I0123 13:21:17.072431 139631609110528 ddar.py:60] Depth 7/1000 time = 4.046523332595825
I0123 13:21:20.199841 139631609110528 ddar.py:60] Depth 8/1000 time = 3.1271400451660156
I0123 13:21:20.209407 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:21:20.209471 139631609110528 alphageometry.py:566] LM output (score=-1.196298): "l : C a i l 15 D a l i l 16 ;"
I0123 13:21:20.209506 139631609110528 alphageometry.py:567] Translation: "l = on_line l a i, on_bline l i a"

I0123 13:21:20.209542 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a i, on_bline l i a ? perp j b b g"
I0123 13:21:20.209718 139631609110528 graph.py:498] 
I0123 13:21:20.209775 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a i, on_bline l i a ? perp j b b g
I0123 13:21:22.322618 139631609110528 ddar.py:60] Depth 1/1000 time = 2.049010753631592
I0123 13:21:24.201099 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8782594203948975
I0123 13:21:26.136987 139631609110528 ddar.py:60] Depth 3/1000 time = 1.935666561126709
I0123 13:21:28.103888 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9666385650634766
I0123 13:21:31.003873 139631609110528 ddar.py:60] Depth 5/1000 time = 2.899501323699951
I0123 13:21:33.052073 139631609110528 ddar.py:60] Depth 6/1000 time = 2.0266473293304443
I0123 13:21:35.985020 139631609110528 ddar.py:60] Depth 7/1000 time = 2.9327008724212646
I0123 13:21:37.975232 139631609110528 ddar.py:60] Depth 8/1000 time = 1.989922046661377
I0123 13:21:37.983430 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:21:37.983496 139631609110528 alphageometry.py:566] LM output (score=-1.499796): "l : C a b l 15 D a l b l 16 ;"
I0123 13:21:37.983532 139631609110528 alphageometry.py:567] Translation: "l = on_line l a b, on_bline l b a"

I0123 13:21:37.983570 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a b, on_bline l b a ? perp j b b g"
I0123 13:21:37.983724 139631609110528 graph.py:498] 
I0123 13:21:37.983775 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a b, on_bline l b a ? perp j b b g
I0123 13:21:39.124626 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0785272121429443
I0123 13:21:40.792869 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6680488586425781
I0123 13:21:43.660386 139631609110528 ddar.py:60] Depth 3/1000 time = 2.8672873973846436
I0123 13:21:45.580552 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9198880195617676
I0123 13:21:47.513780 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9327352046966553
I0123 13:21:50.561582 139631609110528 ddar.py:60] Depth 6/1000 time = 3.0261356830596924
I0123 13:21:52.564132 139631609110528 ddar.py:60] Depth 7/1000 time = 2.002297878265381
I0123 13:21:54.574946 139631609110528 ddar.py:60] Depth 8/1000 time = 2.01051664352417
I0123 13:21:54.583504 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:21:54.583591 139631609110528 alphageometry.py:566] LM output (score=-2.063218): "l : C a d l 15 D a l d l 16 ;"
I0123 13:21:54.583650 139631609110528 alphageometry.py:567] Translation: "l = on_line l a d, on_bline l d a"

I0123 13:21:54.583698 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a d, on_bline l d a ? perp j b b g"
I0123 13:21:54.583900 139631609110528 graph.py:498] 
I0123 13:21:54.583975 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a d, on_bline l d a ? perp j b b g
I0123 13:21:55.679457 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0343413352966309
I0123 13:21:58.504792 139631609110528 ddar.py:60] Depth 2/1000 time = 2.8251428604125977
I0123 13:22:00.168879 139631609110528 ddar.py:60] Depth 3/1000 time = 1.663830280303955
I0123 13:22:01.867611 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6984515190124512
I0123 13:22:03.589563 139631609110528 ddar.py:60] Depth 5/1000 time = 1.72147536277771
I0123 13:22:06.408222 139631609110528 ddar.py:60] Depth 6/1000 time = 2.8015799522399902
I0123 13:22:08.188773 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7803268432617188
I0123 13:22:09.984031 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7950034141540527
I0123 13:22:09.993387 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:22:09.993442 139631609110528 alphageometry.py:566] LM output (score=-2.160274): "l : D a l c l 15 ;"
I0123 13:22:09.993476 139631609110528 alphageometry.py:567] Translation: "l = on_bline l c a"

I0123 13:22:09.993515 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_bline l c a ? perp j b b g"
I0123 13:22:09.993678 139631609110528 graph.py:498] 
I0123 13:22:09.993731 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_bline l c a ? perp j b b g
I0123 13:22:11.114145 139631609110528 ddar.py:60] Depth 1/1000 time = 1.057523250579834
I0123 13:22:13.907003 139631609110528 ddar.py:60] Depth 2/1000 time = 2.7926714420318604
I0123 13:22:15.775194 139631609110528 ddar.py:60] Depth 3/1000 time = 1.867959976196289
I0123 13:22:17.653990 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8785347938537598
I0123 13:22:19.532106 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8776311874389648
I0123 13:22:22.605483 139631609110528 ddar.py:60] Depth 6/1000 time = 3.0499563217163086
I0123 13:22:24.566418 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9606645107269287
I0123 13:22:26.544589 139631609110528 ddar.py:60] Depth 8/1000 time = 1.977912187576294
I0123 13:22:26.552110 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:22:26.552193 139631609110528 alphageometry.py:566] LM output (score=-2.173087): "l : C b e l 15 D b l e l 16 ;"
I0123 13:22:26.552232 139631609110528 alphageometry.py:567] Translation: "l = on_line l b e, on_bline l e b"

I0123 13:22:26.552276 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l b e, on_bline l e b ? perp j b b g"
I0123 13:22:26.552474 139631609110528 graph.py:498] 
I0123 13:22:26.552542 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l b e, on_bline l e b ? perp j b b g
I0123 13:22:27.726618 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1086959838867188
I0123 13:22:30.393208 139631609110528 ddar.py:60] Depth 2/1000 time = 2.666374921798706
I0123 13:22:32.234565 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8411099910736084
I0123 13:22:35.114400 139631609110528 ddar.py:60] Depth 4/1000 time = 2.879568099975586
I0123 13:22:37.014968 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8999850749969482
I0123 13:22:40.086863 139631609110528 ddar.py:60] Depth 6/1000 time = 3.054612398147583
I0123 13:22:42.074483 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9873788356781006
I0123 13:22:44.054794 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9799761772155762
I0123 13:22:44.065548 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:22:44.065706 139631609110528 alphageometry.py:566] LM output (score=-2.294672): "l : C a h l 15 D a l h l 16 ;"
I0123 13:22:44.065749 139631609110528 alphageometry.py:567] Translation: "l = on_line l a h, on_bline l h a"

I0123 13:22:44.065804 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a h, on_bline l h a ? perp j b b g"
I0123 13:22:44.066035 139631609110528 graph.py:498] 
I0123 13:22:44.066105 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a h, on_bline l h a ? perp j b b g
I0123 13:22:45.200937 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0679826736450195
I0123 13:22:48.096937 139631609110528 ddar.py:60] Depth 2/1000 time = 2.89578914642334
I0123 13:22:49.818290 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7210869789123535
I0123 13:22:51.584283 139631609110528 ddar.py:60] Depth 4/1000 time = 1.76572847366333
I0123 13:22:54.366642 139631609110528 ddar.py:60] Depth 5/1000 time = 2.7818500995635986
I0123 13:22:56.247868 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8651251792907715
I0123 13:22:58.079789 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8316891193389893
I0123 13:23:00.948540 139631609110528 ddar.py:60] Depth 8/1000 time = 2.8684897422790527
I0123 13:23:00.957239 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:23:00.957309 139631609110528 alphageometry.py:566] LM output (score=-2.599505): "l : C a j l 15 D a l j l 16 ;"
I0123 13:23:00.957346 139631609110528 alphageometry.py:567] Translation: "l = on_line l a j, on_bline l j a"

I0123 13:23:00.957385 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a j, on_bline l j a ? perp j b b g"
I0123 13:23:00.957545 139631609110528 graph.py:498] 
I0123 13:23:00.957598 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a j, on_bline l j a ? perp j b b g
I0123 13:23:02.081285 139631609110528 ddar.py:60] Depth 1/1000 time = 1.058584451675415
I0123 13:23:03.658038 139631609110528 ddar.py:60] Depth 2/1000 time = 1.576554775238037
I0123 13:23:05.370155 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7118868827819824
I0123 13:23:08.166801 139631609110528 ddar.py:60] Depth 4/1000 time = 2.796367645263672
I0123 13:23:09.877380 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7098994255065918
I0123 13:23:11.717714 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8236401081085205
I0123 13:23:13.500413 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7824501991271973
I0123 13:23:16.346382 139631609110528 ddar.py:60] Depth 8/1000 time = 2.8457086086273193
I0123 13:23:16.354567 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:23:16.354638 139631609110528 alphageometry.py:566] LM output (score=-2.609204): "l : C g h l 15 D g l h l 16 ;"
I0123 13:23:16.354674 139631609110528 alphageometry.py:567] Translation: "l = on_line l g h, on_bline l h g"

I0123 13:23:16.354712 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l g h, on_bline l h g ? perp j b b g"
I0123 13:23:16.354892 139631609110528 graph.py:498] 
I0123 13:23:16.354950 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l g h, on_bline l h g ? perp j b b g
I0123 13:23:17.540800 139631609110528 ddar.py:60] Depth 1/1000 time = 1.122962474822998
I0123 13:23:20.038342 139631609110528 ddar.py:60] Depth 2/1000 time = 2.4973411560058594
I0123 13:23:23.586768 139631609110528 ddar.py:60] Depth 3/1000 time = 3.548201084136963
I0123 13:23:27.280568 139631609110528 ddar.py:60] Depth 4/1000 time = 3.69356369972229
I0123 13:23:29.949805 139631609110528 ddar.py:60] Depth 5/1000 time = 2.6689229011535645
I0123 13:23:33.701028 139631609110528 ddar.py:60] Depth 6/1000 time = 3.7504007816314697
I0123 13:23:36.562437 139631609110528 ddar.py:60] Depth 7/1000 time = 2.8399786949157715
I0123 13:23:40.504026 139631609110528 ddar.py:60] Depth 8/1000 time = 3.9413368701934814
I0123 13:23:44.554069 139631609110528 ddar.py:60] Depth 9/1000 time = 4.049790620803833
I0123 13:23:47.764306 139631609110528 ddar.py:60] Depth 10/1000 time = 3.2099838256835938
I0123 13:23:52.046205 139631609110528 ddar.py:60] Depth 11/1000 time = 4.281550645828247
I0123 13:23:56.471952 139631609110528 ddar.py:60] Depth 12/1000 time = 4.405770778656006
I0123 13:23:56.472265 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:23:56.472328 139631609110528 alphageometry.py:566] LM output (score=-2.941832): "l : C b c l 15 D b l c l 16 ;"
I0123 13:23:56.472365 139631609110528 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 13:23:56.472412 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l b c, on_bline l c b ? perp j b b g"
I0123 13:23:56.472594 139631609110528 graph.py:498] 
I0123 13:23:56.472651 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l b c, on_bline l c b ? perp j b b g
I0123 13:23:57.635606 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0995121002197266
I0123 13:23:59.459709 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8238980770111084
I0123 13:24:01.418272 139631609110528 ddar.py:60] Depth 3/1000 time = 1.958329439163208
I0123 13:24:04.409658 139631609110528 ddar.py:60] Depth 4/1000 time = 2.9911258220672607
I0123 13:24:06.413669 139631609110528 ddar.py:60] Depth 5/1000 time = 2.0034983158111572
I0123 13:24:08.483882 139631609110528 ddar.py:60] Depth 6/1000 time = 2.0490572452545166
I0123 13:24:11.560226 139631609110528 ddar.py:60] Depth 7/1000 time = 3.0760958194732666
I0123 13:24:13.619208 139631609110528 ddar.py:60] Depth 8/1000 time = 2.05867862701416
I0123 13:24:13.629521 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:24:13.629620 139631609110528 alphageometry.py:566] LM output (score=-2.971432): "l : C a g l 15 D a l g l 16 ;"
I0123 13:24:13.629665 139631609110528 alphageometry.py:567] Translation: "l = on_line l a g, on_bline l g a"

I0123 13:24:13.629716 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a g, on_bline l g a ? perp j b b g"
I0123 13:24:13.629938 139631609110528 graph.py:498] 
I0123 13:24:13.630002 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a g, on_bline l g a ? perp j b b g
I0123 13:24:14.752544 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0604689121246338
I0123 13:24:16.462633 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7098684310913086
I0123 13:24:19.322807 139631609110528 ddar.py:60] Depth 3/1000 time = 2.859912395477295
I0123 13:24:21.069198 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7461273670196533
I0123 13:24:22.825242 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7555644512176514
I0123 13:24:24.699684 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8557255268096924
I0123 13:24:27.524321 139631609110528 ddar.py:60] Depth 7/1000 time = 2.8243908882141113
I0123 13:24:29.390858 139631609110528 ddar.py:60] Depth 8/1000 time = 1.866264820098877
I0123 13:24:29.399632 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:24:29.399703 139631609110528 alphageometry.py:566] LM output (score=-3.419070): "l : C j g l 15 D j l g l 16 ;"
I0123 13:24:29.399741 139631609110528 alphageometry.py:567] Translation: "l = on_line l j g, on_bline l g j"

I0123 13:24:29.399781 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l j g, on_bline l g j ? perp j b b g"
I0123 13:24:29.399946 139631609110528 graph.py:498] 
I0123 13:24:29.399997 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l j g, on_bline l g j ? perp j b b g
I0123 13:24:30.519984 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0581982135772705
I0123 13:24:33.338274 139631609110528 ddar.py:60] Depth 2/1000 time = 2.81807541847229
I0123 13:24:35.333390 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9948582649230957
I0123 13:24:37.355930 139631609110528 ddar.py:60] Depth 4/1000 time = 2.022233247756958
I0123 13:24:39.377135 139631609110528 ddar.py:60] Depth 5/1000 time = 2.0205535888671875
I0123 13:24:42.566458 139631609110528 ddar.py:60] Depth 6/1000 time = 3.1722934246063232
I0123 13:24:44.655784 139631609110528 ddar.py:60] Depth 7/1000 time = 2.089087963104248
I0123 13:24:46.760463 139631609110528 ddar.py:60] Depth 8/1000 time = 2.1044163703918457
I0123 13:24:49.879479 139631609110528 ddar.py:60] Depth 9/1000 time = 3.1091315746307373
I0123 13:24:49.880604 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:24:49.880669 139631609110528 alphageometry.py:566] LM output (score=-3.429134): "l : C h i l 15 D h l i l 16 ;"
I0123 13:24:49.880707 139631609110528 alphageometry.py:567] Translation: "l = on_line l h i, on_bline l i h"

I0123 13:24:49.880745 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l h i, on_bline l i h ? perp j b b g"
I0123 13:24:49.880929 139631609110528 graph.py:498] 
I0123 13:24:49.880997 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l h i, on_bline l i h ? perp j b b g
I0123 13:24:51.007826 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0576000213623047
I0123 13:24:52.606466 139631609110528 ddar.py:60] Depth 2/1000 time = 1.598433256149292
I0123 13:24:54.255451 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6487393379211426
I0123 13:24:56.946570 139631609110528 ddar.py:60] Depth 4/1000 time = 2.690843105316162
I0123 13:24:58.628231 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6811416149139404
I0123 13:25:00.411604 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7672555446624756
I0123 13:25:03.265519 139631609110528 ddar.py:60] Depth 7/1000 time = 2.8536462783813477
I0123 13:25:05.005290 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7394917011260986
I0123 13:25:05.012149 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:25:05.012204 139631609110528 alphageometry.py:566] LM output (score=-3.438249): "l : C e g l 15 D e l g l 16 ;"
I0123 13:25:05.012238 139631609110528 alphageometry.py:567] Translation: "l = on_line l e g, on_bline l g e"

I0123 13:25:05.012273 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l e g, on_bline l g e ? perp j b b g"
I0123 13:25:05.012458 139631609110528 graph.py:498] 
I0123 13:25:05.012522 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l e g, on_bline l g e ? perp j b b g
I0123 13:25:06.165303 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0909974575042725
I0123 13:25:08.130043 139631609110528 ddar.py:60] Depth 2/1000 time = 1.96453857421875
I0123 13:25:11.167989 139631609110528 ddar.py:60] Depth 3/1000 time = 3.037710428237915
I0123 13:25:13.194721 139631609110528 ddar.py:60] Depth 4/1000 time = 2.026460886001587
I0123 13:25:15.227256 139631609110528 ddar.py:60] Depth 5/1000 time = 2.0319454669952393
I0123 13:25:18.419361 139631609110528 ddar.py:60] Depth 6/1000 time = 3.17293381690979
I0123 13:25:20.543046 139631609110528 ddar.py:60] Depth 7/1000 time = 2.1233956813812256
I0123 13:25:23.765847 139631609110528 ddar.py:60] Depth 8/1000 time = 3.222397804260254
I0123 13:25:23.777324 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:25:23.777392 139631609110528 alphageometry.py:566] LM output (score=-3.448701): "l : C e h l 15 D e l h l 16 ;"
I0123 13:25:23.777430 139631609110528 alphageometry.py:567] Translation: "l = on_line l e h, on_bline l h e"

I0123 13:25:23.777468 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l e h, on_bline l h e ? perp j b b g"
I0123 13:25:23.777666 139631609110528 graph.py:498] 
I0123 13:25:23.777728 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l e h, on_bline l h e ? perp j b b g
I0123 13:25:24.984150 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1415162086486816
I0123 13:25:26.893204 139631609110528 ddar.py:60] Depth 2/1000 time = 1.908860445022583
I0123 13:25:28.855129 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9617371559143066
I0123 13:25:31.885684 139631609110528 ddar.py:60] Depth 4/1000 time = 3.030327558517456
I0123 13:25:33.913818 139631609110528 ddar.py:60] Depth 5/1000 time = 2.027428388595581
I0123 13:25:36.059112 139631609110528 ddar.py:60] Depth 6/1000 time = 2.1282846927642822
I0123 13:25:39.176681 139631609110528 ddar.py:60] Depth 7/1000 time = 3.117365598678589
I0123 13:25:41.278710 139631609110528 ddar.py:60] Depth 8/1000 time = 2.101755380630493
I0123 13:25:41.288976 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:25:41.289061 139631609110528 alphageometry.py:566] LM output (score=-3.485962): "l : C j k l 15 D j k k l 16 ;"
I0123 13:25:41.289098 139631609110528 alphageometry.py:567] Translation: "l = on_line l j k, on_circle l k j"

I0123 13:25:41.289135 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l j k, on_circle l k j ? perp j b b g"
I0123 13:25:41.289301 139631609110528 graph.py:498] 
I0123 13:25:41.289365 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l j k, on_circle l k j ? perp j b b g
I0123 13:25:42.494383 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1401655673980713
I0123 13:25:45.759880 139631609110528 ddar.py:60] Depth 2/1000 time = 3.2651467323303223
I0123 13:25:47.679691 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9195799827575684
I0123 13:25:49.625790 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9457926750183105
I0123 13:25:51.586350 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9600646495819092
I0123 13:25:54.639106 139631609110528 ddar.py:60] Depth 6/1000 time = 3.0340378284454346
I0123 13:25:56.674788 139631609110528 ddar.py:60] Depth 7/1000 time = 2.035496711730957
I0123 13:25:58.787172 139631609110528 ddar.py:60] Depth 8/1000 time = 2.1121585369110107
I0123 13:25:58.795584 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:25:58.795657 139631609110528 alphageometry.py:566] LM output (score=-3.540582): "l : C d i l 15 D d i d l 16 ;"
I0123 13:25:58.795694 139631609110528 alphageometry.py:567] Translation: "l = on_line l d i, on_circle l d i"

I0123 13:25:58.795736 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l d i, on_circle l d i ? perp j b b g"
I0123 13:25:58.795934 139631609110528 graph.py:498] 
I0123 13:25:58.795994 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l d i, on_circle l d i ? perp j b b g
I0123 13:26:01.185789 139631609110528 ddar.py:60] Depth 1/1000 time = 2.332465410232544
I0123 13:26:03.994575 139631609110528 ddar.py:60] Depth 2/1000 time = 2.808542490005493
I0123 13:26:06.865892 139631609110528 ddar.py:60] Depth 3/1000 time = 2.8709826469421387
I0123 13:26:10.850518 139631609110528 ddar.py:60] Depth 4/1000 time = 3.984187602996826
I0123 13:26:13.749934 139631609110528 ddar.py:60] Depth 5/1000 time = 2.898904800415039
I0123 13:26:17.767565 139631609110528 ddar.py:60] Depth 6/1000 time = 3.988304615020752
I0123 13:26:20.738434 139631609110528 ddar.py:60] Depth 7/1000 time = 2.9706063270568848
I0123 13:26:23.679429 139631609110528 ddar.py:60] Depth 8/1000 time = 2.9406862258911133
I0123 13:26:23.686016 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:26:23.686087 139631609110528 alphageometry.py:566] LM output (score=-3.542202): "l : C d k l 15 D d k k l 16 ;"
I0123 13:26:23.686126 139631609110528 alphageometry.py:567] Translation: "l = on_line l d k, on_circle l k d"

I0123 13:26:23.686164 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l d k, on_circle l k d ? perp j b b g"
I0123 13:26:23.686340 139631609110528 graph.py:498] 
I0123 13:26:23.686401 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l d k, on_circle l k d ? perp j b b g
I0123 13:26:24.871342 139631609110528 ddar.py:60] Depth 1/1000 time = 1.122100591659546
I0123 13:26:28.047300 139631609110528 ddar.py:60] Depth 2/1000 time = 3.1756985187530518
I0123 13:26:30.312737 139631609110528 ddar.py:60] Depth 3/1000 time = 2.2650504112243652
I0123 13:26:32.604879 139631609110528 ddar.py:60] Depth 4/1000 time = 2.29183292388916
I0123 13:26:36.001610 139631609110528 ddar.py:60] Depth 5/1000 time = 3.396206855773926
I0123 13:26:38.438118 139631609110528 ddar.py:60] Depth 6/1000 time = 2.4175195693969727
I0123 13:26:40.824428 139631609110528 ddar.py:60] Depth 7/1000 time = 2.3860585689544678
I0123 13:26:44.228012 139631609110528 ddar.py:60] Depth 8/1000 time = 3.403297185897827
I0123 13:26:44.236462 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:26:44.236537 139631609110528 alphageometry.py:566] LM output (score=-3.555087): "l : ^ d a d l d l d b 15 ;"
I0123 13:26:44.236577 139631609110528 alphageometry.py:567] Translation: "ERROR: Invalid predicate ^ d a d l d l d b"

I0123 13:26:44.236613 139631609110528 alphageometry.py:566] LM output (score=-3.591198): "l : C e i l 15 D e l i l 16 ;"
I0123 13:26:44.236640 139631609110528 alphageometry.py:567] Translation: "l = on_line l e i, on_bline l i e"

I0123 13:26:44.236677 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l e i, on_bline l i e ? perp j b b g"
I0123 13:26:44.236863 139631609110528 graph.py:498] 
I0123 13:26:44.236925 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l e i, on_bline l i e ? perp j b b g
I0123 13:26:45.420208 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1162095069885254
I0123 13:26:47.205377 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7848906517028809
I0123 13:26:50.480309 139631609110528 ddar.py:60] Depth 3/1000 time = 3.2745261192321777
I0123 13:26:52.695297 139631609110528 ddar.py:60] Depth 4/1000 time = 2.214653730392456
I0123 13:26:55.936374 139631609110528 ddar.py:60] Depth 5/1000 time = 3.240445375442505
I0123 13:26:58.368317 139631609110528 ddar.py:60] Depth 6/1000 time = 2.4111990928649902
I0123 13:27:01.874825 139631609110528 ddar.py:60] Depth 7/1000 time = 3.5062429904937744
I0123 13:27:04.374849 139631609110528 ddar.py:60] Depth 8/1000 time = 2.499591588973999
I0123 13:27:06.837152 139631609110528 ddar.py:60] Depth 9/1000 time = 2.447807788848877
I0123 13:27:06.838829 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:27:06.838937 139631609110528 alphageometry.py:566] LM output (score=-3.602829): "l : C d i l 15 D d l i l 16 ;"
I0123 13:27:06.838975 139631609110528 alphageometry.py:567] Translation: "l = on_line l d i, on_bline l i d"

I0123 13:27:06.839041 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l d i, on_bline l i d ? perp j b b g"
I0123 13:27:06.839246 139631609110528 graph.py:498] 
I0123 13:27:06.839307 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l d i, on_bline l i d ? perp j b b g
I0123 13:27:10.436852 139631609110528 ddar.py:60] Depth 1/1000 time = 3.529426097869873
I0123 13:27:12.035466 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5978889465332031
I0123 13:27:13.690627 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6541969776153564
I0123 13:27:15.369842 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6789007186889648
I0123 13:27:19.251449 139631609110528 ddar.py:60] Depth 5/1000 time = 3.8808839321136475
I0123 13:27:20.995811 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7282047271728516
I0123 13:27:22.707885 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7118403911590576
I0123 13:27:24.424182 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7159767150878906
I0123 13:27:24.430948 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:27:24.431088 139631609110528 alphageometry.py:566] LM output (score=-3.620522): "l : C h k l 15 D h k k l 16 ;"
I0123 13:27:24.431128 139631609110528 alphageometry.py:567] Translation: "l = on_line l h k, on_circle l k h"

I0123 13:27:24.431185 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l h k, on_circle l k h ? perp j b b g"
I0123 13:27:24.431443 139631609110528 graph.py:498] 
I0123 13:27:24.431523 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l h k, on_circle l k h ? perp j b b g
I0123 13:27:25.732501 139631609110528 ddar.py:60] Depth 1/1000 time = 1.231602430343628
I0123 13:27:29.047706 139631609110528 ddar.py:60] Depth 2/1000 time = 3.314984083175659
I0123 13:27:31.240195 139631609110528 ddar.py:60] Depth 3/1000 time = 2.192185401916504
I0123 13:27:33.442660 139631609110528 ddar.py:60] Depth 4/1000 time = 2.2020325660705566
I0123 13:27:36.804082 139631609110528 ddar.py:60] Depth 5/1000 time = 3.3608317375183105
I0123 13:27:39.091628 139631609110528 ddar.py:60] Depth 6/1000 time = 2.268824815750122
I0123 13:27:42.514305 139631609110528 ddar.py:60] Depth 7/1000 time = 3.4224133491516113
I0123 13:27:44.796017 139631609110528 ddar.py:60] Depth 8/1000 time = 2.2813916206359863
I0123 13:27:44.804468 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:27:44.804573 139631609110528 alphageometry.py:566] LM output (score=-3.635594): "l : C b k l 15 D b k k l 16 ;"
I0123 13:27:44.804609 139631609110528 alphageometry.py:567] Translation: "l = on_line l b k, on_circle l k b"

I0123 13:27:44.804658 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l b k, on_circle l k b ? perp j b b g"
I0123 13:27:44.804859 139631609110528 graph.py:498] 
I0123 13:27:44.804921 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l b k, on_circle l k b ? perp j b b g
I0123 13:27:45.955278 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0854692459106445
I0123 13:27:47.828701 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8731982707977295
I0123 13:27:50.936252 139631609110528 ddar.py:60] Depth 3/1000 time = 3.107322931289673
I0123 13:27:52.884914 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9484074115753174
I0123 13:27:54.827188 139631609110528 ddar.py:60] Depth 5/1000 time = 1.941781759262085
I0123 13:27:56.888579 139631609110528 ddar.py:60] Depth 6/1000 time = 2.044137954711914
I0123 13:28:00.058799 139631609110528 ddar.py:60] Depth 7/1000 time = 3.1698126792907715
I0123 13:28:02.065982 139631609110528 ddar.py:60] Depth 8/1000 time = 2.0069143772125244
I0123 13:28:02.073500 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:28:02.073571 139631609110528 alphageometry.py:566] LM output (score=-3.649177): "l : C g i l 15 D g l i l 16 ;"
I0123 13:28:02.073607 139631609110528 alphageometry.py:567] Translation: "l = on_line l g i, on_bline l i g"

I0123 13:28:02.073650 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l g i, on_bline l i g ? perp j b b g"
I0123 13:28:02.073827 139631609110528 graph.py:498] 
I0123 13:28:02.073887 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l g i, on_bline l i g ? perp j b b g
I0123 13:28:03.235797 139631609110528 ddar.py:60] Depth 1/1000 time = 1.099076509475708
I0123 13:28:06.073080 139631609110528 ddar.py:60] Depth 2/1000 time = 2.8370766639709473
I0123 13:28:07.839046 139631609110528 ddar.py:60] Depth 3/1000 time = 1.765695333480835
I0123 13:28:09.616362 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7769794464111328
I0123 13:28:12.513106 139631609110528 ddar.py:60] Depth 5/1000 time = 2.8960680961608887
I0123 13:28:14.383710 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8542945384979248
I0123 13:28:17.313832 139631609110528 ddar.py:60] Depth 7/1000 time = 2.929887294769287
I0123 13:28:19.153535 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8394443988800049
I0123 13:28:19.159892 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:28:19.159957 139631609110528 alphageometry.py:566] LM output (score=-3.655461): "l : C b e l 15 D b e e l 16 ;"
I0123 13:28:19.159994 139631609110528 alphageometry.py:567] Translation: "l = on_line l b e, on_circle l e b"

I0123 13:28:19.160032 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l b e, on_circle l e b ? perp j b b g"
I0123 13:28:19.160203 139631609110528 graph.py:498] 
I0123 13:28:19.160269 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l b e, on_circle l e b ? perp j b b g
I0123 13:28:20.395321 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1775715351104736
I0123 13:28:23.541386 139631609110528 ddar.py:60] Depth 2/1000 time = 3.1458489894866943
I0123 13:28:25.945618 139631609110528 ddar.py:60] Depth 3/1000 time = 2.403916358947754
I0123 13:28:28.336224 139631609110528 ddar.py:60] Depth 4/1000 time = 2.389777421951294
I0123 13:28:31.845771 139631609110528 ddar.py:60] Depth 5/1000 time = 3.509308099746704
I0123 13:28:34.256093 139631609110528 ddar.py:60] Depth 6/1000 time = 2.4100611209869385
I0123 13:28:37.897878 139631609110528 ddar.py:60] Depth 7/1000 time = 3.6183433532714844
I0123 13:28:40.411532 139631609110528 ddar.py:60] Depth 8/1000 time = 2.5134143829345703
I0123 13:28:44.087873 139631609110528 ddar.py:60] Depth 9/1000 time = 3.6760094165802
I0123 13:28:44.096371 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:28:44.096465 139631609110528 alphageometry.py:566] LM output (score=-3.675046): "l : C d e l 15 D d l e l 16 ;"
I0123 13:28:44.096500 139631609110528 alphageometry.py:567] Translation: "l = on_line l d e, on_bline l e d"

I0123 13:28:44.096557 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l d e, on_bline l e d ? perp j b b g"
I0123 13:28:44.096745 139631609110528 graph.py:498] 
I0123 13:28:44.096806 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l d e, on_bline l e d ? perp j b b g
I0123 13:28:45.265141 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1035447120666504
I0123 13:28:47.071998 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8066494464874268
I0123 13:28:48.948084 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8758635520935059
I0123 13:28:51.960232 139631609110528 ddar.py:60] Depth 4/1000 time = 3.011894702911377
I0123 13:28:53.867798 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9069781303405762
I0123 13:28:57.012156 139631609110528 ddar.py:60] Depth 6/1000 time = 3.1267647743225098
I0123 13:28:58.998440 139631609110528 ddar.py:60] Depth 7/1000 time = 1.986032485961914
I0123 13:29:01.001088 139631609110528 ddar.py:60] Depth 8/1000 time = 2.0023179054260254
I0123 13:29:01.012949 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:29:01.013069 139631609110528 alphageometry.py:566] LM output (score=-3.695388): "l : C i k l 15 D i k k l 16 ;"
I0123 13:29:01.013108 139631609110528 alphageometry.py:567] Translation: "l = on_line l i k, on_circle l k i"

I0123 13:29:01.013164 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l i k, on_circle l k i ? perp j b b g"
I0123 13:29:01.013373 139631609110528 graph.py:498] 
I0123 13:29:01.013446 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l i k, on_circle l k i ? perp j b b g
I0123 13:29:02.177251 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0996122360229492
I0123 13:29:05.357009 139631609110528 ddar.py:60] Depth 2/1000 time = 3.179530143737793
I0123 13:29:07.244899 139631609110528 ddar.py:60] Depth 3/1000 time = 1.88765287399292
I0123 13:29:09.144261 139631609110528 ddar.py:60] Depth 4/1000 time = 1.899099588394165
I0123 13:29:12.152117 139631609110528 ddar.py:60] Depth 5/1000 time = 3.007375955581665
I0123 13:29:14.175953 139631609110528 ddar.py:60] Depth 6/1000 time = 2.0043060779571533
I0123 13:29:16.156827 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9806456565856934
I0123 13:29:18.159861 139631609110528 ddar.py:60] Depth 8/1000 time = 2.0027670860290527
I0123 13:29:18.167598 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:29:18.167717 139631609110528 alphageometry.py:566] LM output (score=-3.751168): "l : C h g l 15 D h l g l 16 ;"
I0123 13:29:18.167757 139631609110528 alphageometry.py:567] Translation: "l = on_line l h g, on_bline l g h"

I0123 13:29:18.167799 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l h g, on_bline l g h ? perp j b b g"
I0123 13:29:18.167967 139631609110528 graph.py:498] 
I0123 13:29:18.168019 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l h g, on_bline l g h ? perp j b b g
I0123 13:29:20.462508 139631609110528 ddar.py:60] Depth 1/1000 time = 2.230966806411743
I0123 13:29:22.902402 139631609110528 ddar.py:60] Depth 2/1000 time = 2.439601421356201
I0123 13:29:26.596879 139631609110528 ddar.py:60] Depth 3/1000 time = 3.6940836906433105
I0123 13:29:29.185633 139631609110528 ddar.py:60] Depth 4/1000 time = 2.5885019302368164
I0123 13:29:32.927600 139631609110528 ddar.py:60] Depth 5/1000 time = 3.741696357727051
I0123 13:29:35.554171 139631609110528 ddar.py:60] Depth 6/1000 time = 2.626020908355713
I0123 13:29:39.480175 139631609110528 ddar.py:60] Depth 7/1000 time = 3.9049863815307617
I0123 13:29:42.299336 139631609110528 ddar.py:60] Depth 8/1000 time = 2.818917751312256
I0123 13:29:46.322258 139631609110528 ddar.py:60] Depth 9/1000 time = 4.022613525390625
I0123 13:29:50.542041 139631609110528 ddar.py:60] Depth 10/1000 time = 4.219370603561401
I0123 13:29:53.621754 139631609110528 ddar.py:60] Depth 11/1000 time = 3.0794496536254883
I0123 13:29:57.848227 139631609110528 ddar.py:60] Depth 12/1000 time = 4.206852912902832
I0123 13:29:57.848496 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:29:57.848547 139631609110528 alphageometry.py:566] LM output (score=-3.767749): "l : C b i l 15 D b l i l 16 ;"
I0123 13:29:57.848580 139631609110528 alphageometry.py:567] Translation: "l = on_line l b i, on_bline l i b"

I0123 13:29:57.848618 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l b i, on_bline l i b ? perp j b b g"
I0123 13:29:57.848792 139631609110528 graph.py:498] 
I0123 13:29:57.848851 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l b i, on_bline l i b ? perp j b b g
I0123 13:29:58.982489 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0716469287872314
I0123 13:30:00.839481 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8567917346954346
I0123 13:30:02.749599 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9098925590515137
I0123 13:30:05.867566 139631609110528 ddar.py:60] Depth 4/1000 time = 3.1176817417144775
I0123 13:30:07.841287 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9731788635253906
I0123 13:30:09.856810 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9941513538360596
I0123 13:30:11.804547 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9474852085113525
I0123 13:30:14.867732 139631609110528 ddar.py:60] Depth 8/1000 time = 3.062927484512329
I0123 13:30:14.874014 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:30:14.874077 139631609110528 alphageometry.py:566] LM output (score=-3.806872): "l : C c d l 15 D c l d l 16 ;"
I0123 13:30:14.874112 139631609110528 alphageometry.py:567] Translation: "l = on_line l c d, on_bline l d c"

I0123 13:30:14.874151 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l c d, on_bline l d c ? perp j b b g"
I0123 13:30:14.874324 139631609110528 graph.py:498] 
I0123 13:30:14.874390 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l c d, on_bline l d c ? perp j b b g
I0123 13:30:15.975422 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0385832786560059
I0123 13:30:17.575110 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5995004177093506
I0123 13:30:19.251641 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6762959957122803
I0123 13:30:22.096164 139631609110528 ddar.py:60] Depth 4/1000 time = 2.844287395477295
I0123 13:30:23.864633 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7679810523986816
I0123 13:30:25.702491 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8215832710266113
I0123 13:30:27.496520 139631609110528 ddar.py:60] Depth 7/1000 time = 1.793694257736206
I0123 13:30:30.502837 139631609110528 ddar.py:60] Depth 8/1000 time = 3.006057024002075
I0123 13:30:30.511568 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:30:30.511632 139631609110528 alphageometry.py:566] LM output (score=-3.822550): "l : C a f l 15 D a l f l 16 ;"
I0123 13:30:30.511668 139631609110528 alphageometry.py:567] Translation: "l = on_line l a f, on_bline l f a"

I0123 13:30:30.511719 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a f, on_bline l f a ? perp j b b g"
I0123 13:30:30.511887 139631609110528 graph.py:498] 
I0123 13:30:30.511947 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l a f, on_bline l f a ? perp j b b g
I0123 13:30:31.633096 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0571067333221436
I0123 13:30:33.348216 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7149348258972168
I0123 13:30:35.084022 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7355842590332031
I0123 13:30:37.971879 139631609110528 ddar.py:60] Depth 4/1000 time = 2.887599468231201
I0123 13:30:39.752669 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7802438735961914
I0123 13:30:41.637890 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8675084114074707
I0123 13:30:43.484225 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8461101055145264
I0123 13:30:46.526439 139631609110528 ddar.py:60] Depth 8/1000 time = 3.041949510574341
I0123 13:30:46.536911 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:30:46.537004 139631609110528 alphageometry.py:566] LM output (score=-3.843345): "l : C d j l 15 D d l j l 16 ;"
I0123 13:30:46.537042 139631609110528 alphageometry.py:567] Translation: "l = on_line l d j, on_bline l j d"

I0123 13:30:46.537089 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l d j, on_bline l j d ? perp j b b g"
I0123 13:30:46.537287 139631609110528 graph.py:498] 
I0123 13:30:46.537349 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a e, on_bline k e a; l = on_line l d j, on_bline l j d ? perp j b b g
I0123 13:30:47.648587 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0481362342834473
I0123 13:30:49.347335 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6985516548156738
I0123 13:30:50.987210 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6396369934082031
I0123 13:30:52.644739 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6572315692901611
I0123 13:30:55.478726 139631609110528 ddar.py:60] Depth 5/1000 time = 2.833538770675659
I0123 13:30:57.257542 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7633392810821533
I0123 13:30:59.007654 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7498807907104492
I0123 13:31:00.745975 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7380661964416504
I0123 13:31:00.752642 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:31:00.752705 139631609110528 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C c d k 13 D c k d k 14 ; x00
I0123 13:31:06.190196 139631609110528 alphageometry.py:566] LM output (score=-0.602781): "l : C d e l 15 D d l e l 16 ;"
I0123 13:31:06.190386 139631609110528 alphageometry.py:567] Translation: "l = on_line l d e, on_bline l e d"

I0123 13:31:06.190458 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d e, on_bline l e d ? perp j b b g"
I0123 13:31:06.190601 139631609110528 graph.py:498] 
I0123 13:31:06.190655 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d e, on_bline l e d ? perp j b b g
I0123 13:31:08.452542 139631609110528 ddar.py:60] Depth 1/1000 time = 2.196928024291992
I0123 13:31:10.072376 139631609110528 ddar.py:60] Depth 2/1000 time = 1.619605541229248
I0123 13:31:11.955618 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8830440044403076
I0123 13:31:15.673908 139631609110528 ddar.py:60] Depth 4/1000 time = 3.717963933944702
I0123 13:31:18.307678 139631609110528 ddar.py:60] Depth 5/1000 time = 2.633108139038086
I0123 13:31:22.319954 139631609110528 ddar.py:60] Depth 6/1000 time = 3.993265151977539
I0123 13:31:25.149122 139631609110528 ddar.py:60] Depth 7/1000 time = 2.828935384750366
I0123 13:31:29.168323 139631609110528 ddar.py:60] Depth 8/1000 time = 4.018941164016724
I0123 13:31:29.178092 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:31:29.178152 139631609110528 alphageometry.py:566] LM output (score=-0.825608): "l : C a d l 15 D a l d l 16 ;"
I0123 13:31:29.178189 139631609110528 alphageometry.py:567] Translation: "l = on_line l a d, on_bline l d a"

I0123 13:31:29.178229 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a d, on_bline l d a ? perp j b b g"
I0123 13:31:29.178413 139631609110528 graph.py:498] 
I0123 13:31:29.178470 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a d, on_bline l d a ? perp j b b g
I0123 13:31:30.268964 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0277900695800781
I0123 13:31:31.788009 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5188639163970947
I0123 13:31:33.684020 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8957691192626953
I0123 13:31:36.955897 139631609110528 ddar.py:60] Depth 4/1000 time = 3.2716376781463623
I0123 13:31:39.055999 139631609110528 ddar.py:60] Depth 5/1000 time = 2.0996477603912354
I0123 13:31:41.288787 139631609110528 ddar.py:60] Depth 6/1000 time = 2.2144436836242676
I0123 13:31:43.470590 139631609110528 ddar.py:60] Depth 7/1000 time = 2.1815664768218994
I0123 13:31:46.799329 139631609110528 ddar.py:60] Depth 8/1000 time = 3.328456163406372
I0123 13:31:46.810756 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:31:46.810817 139631609110528 alphageometry.py:566] LM output (score=-1.232249): "l : D a l c l 15 ;"
I0123 13:31:46.810852 139631609110528 alphageometry.py:567] Translation: "l = on_bline l c a"

I0123 13:31:46.810889 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_bline l c a ? perp j b b g"
I0123 13:31:46.811040 139631609110528 graph.py:498] 
I0123 13:31:46.811124 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_bline l c a ? perp j b b g
I0123 13:31:47.911394 139631609110528 ddar.py:60] Depth 1/1000 time = 1.038224458694458
I0123 13:31:49.501352 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5897612571716309
I0123 13:31:51.327255 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8256630897521973
I0123 13:31:53.130857 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8033664226531982
I0123 13:31:56.063375 139631609110528 ddar.py:60] Depth 5/1000 time = 2.932056427001953
I0123 13:31:57.997687 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9136483669281006
I0123 13:31:59.895690 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8977556228637695
I0123 13:32:01.808431 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9124031066894531
I0123 13:32:01.815739 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:32:01.815850 139631609110528 alphageometry.py:566] LM output (score=-1.502672): "l : C b c l 15 D b l c l 16 ;"
I0123 13:32:01.815888 139631609110528 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 13:32:01.815942 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l b c, on_bline l c b ? perp j b b g"
I0123 13:32:01.816162 139631609110528 graph.py:498] 
I0123 13:32:01.816240 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l b c, on_bline l c b ? perp j b b g
I0123 13:32:02.953291 139631609110528 ddar.py:60] Depth 1/1000 time = 1.074897289276123
I0123 13:32:05.961596 139631609110528 ddar.py:60] Depth 2/1000 time = 3.008089542388916
I0123 13:32:08.249143 139631609110528 ddar.py:60] Depth 3/1000 time = 2.2872958183288574
I0123 13:32:10.600602 139631609110528 ddar.py:60] Depth 4/1000 time = 2.3511838912963867
I0123 13:32:14.074145 139631609110528 ddar.py:60] Depth 5/1000 time = 3.4729955196380615
I0123 13:32:16.583991 139631609110528 ddar.py:60] Depth 6/1000 time = 2.4894907474517822
I0123 13:32:20.238741 139631609110528 ddar.py:60] Depth 7/1000 time = 3.654453754425049
I0123 13:32:22.641028 139631609110528 ddar.py:60] Depth 8/1000 time = 2.4018421173095703
I0123 13:32:22.653810 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:32:22.653915 139631609110528 alphageometry.py:566] LM output (score=-1.684452): "l : C d i l 15 D d l i l 16 ;"
I0123 13:32:22.653953 139631609110528 alphageometry.py:567] Translation: "l = on_line l d i, on_bline l i d"

I0123 13:32:22.654011 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d i, on_bline l i d ? perp j b b g"
I0123 13:32:22.654238 139631609110528 graph.py:498] 
I0123 13:32:22.654303 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d i, on_bline l i d ? perp j b b g
I0123 13:32:23.750502 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0323424339294434
I0123 13:32:25.343961 139631609110528 ddar.py:60] Depth 2/1000 time = 1.593238353729248
I0123 13:32:28.665784 139631609110528 ddar.py:60] Depth 3/1000 time = 3.3215928077697754
I0123 13:32:31.002420 139631609110528 ddar.py:60] Depth 4/1000 time = 2.336393356323242
I0123 13:32:33.361251 139631609110528 ddar.py:60] Depth 5/1000 time = 2.3583452701568604
I0123 13:32:35.854881 139631609110528 ddar.py:60] Depth 6/1000 time = 2.474686861038208
I0123 13:32:39.494010 139631609110528 ddar.py:60] Depth 7/1000 time = 3.6388237476348877
I0123 13:32:41.947196 139631609110528 ddar.py:60] Depth 8/1000 time = 2.452751398086548
I0123 13:32:45.699015 139631609110528 ddar.py:60] Depth 9/1000 time = 3.74001145362854
I0123 13:32:45.700397 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:32:45.700464 139631609110528 alphageometry.py:566] LM output (score=-1.732477): "l : C a i l 15 D a l i l 16 ;"
I0123 13:32:45.700500 139631609110528 alphageometry.py:567] Translation: "l = on_line l a i, on_bline l i a"

I0123 13:32:45.700539 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a i, on_bline l i a ? perp j b b g"
I0123 13:32:45.700733 139631609110528 graph.py:498] 
I0123 13:32:45.700802 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a i, on_bline l i a ? perp j b b g
I0123 13:32:46.800006 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0360009670257568
I0123 13:32:48.465202 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6650140285491943
I0123 13:32:50.279921 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8144795894622803
I0123 13:32:52.137347 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8571646213531494
I0123 13:32:55.209651 139631609110528 ddar.py:60] Depth 5/1000 time = 3.07179856300354
I0123 13:32:57.117442 139631609110528 ddar.py:60] Depth 6/1000 time = 1.887449026107788
I0123 13:32:58.974255 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8564186096191406
I0123 13:33:00.851757 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8772046566009521
I0123 13:33:00.858522 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:33:00.858641 139631609110528 alphageometry.py:566] LM output (score=-1.779209): "l : C d j l 15 D d l j l 16 ;"
I0123 13:33:00.858680 139631609110528 alphageometry.py:567] Translation: "l = on_line l d j, on_bline l j d"

I0123 13:33:00.858739 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d j, on_bline l j d ? perp j b b g"
I0123 13:33:00.858978 139631609110528 graph.py:498] 
I0123 13:33:00.859050 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d j, on_bline l j d ? perp j b b g
I0123 13:33:01.974571 139631609110528 ddar.py:60] Depth 1/1000 time = 1.050546407699585
I0123 13:33:04.862159 139631609110528 ddar.py:60] Depth 2/1000 time = 2.8873984813690186
I0123 13:33:06.543015 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6806159019470215
I0123 13:33:08.238723 139631609110528 ddar.py:60] Depth 4/1000 time = 1.69545316696167
I0123 13:33:09.946021 139631609110528 ddar.py:60] Depth 5/1000 time = 1.706796407699585
I0123 13:33:12.939831 139631609110528 ddar.py:60] Depth 6/1000 time = 2.9753408432006836
I0123 13:33:14.729078 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7889599800109863
I0123 13:33:16.518986 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7895028591156006
I0123 13:33:16.527446 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:33:16.527568 139631609110528 alphageometry.py:566] LM output (score=-1.899890): "l : C d g l 15 D d l g l 16 ;"
I0123 13:33:16.527607 139631609110528 alphageometry.py:567] Translation: "l = on_line l d g, on_bline l g d"

I0123 13:33:16.527664 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d g, on_bline l g d ? perp j b b g"
I0123 13:33:16.527893 139631609110528 graph.py:498] 
I0123 13:33:16.527962 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d g, on_bline l g d ? perp j b b g
I0123 13:33:17.641646 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0508456230163574
I0123 13:33:20.703998 139631609110528 ddar.py:60] Depth 2/1000 time = 3.0621604919433594
I0123 13:33:22.412157 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7079250812530518
I0123 13:33:24.140164 139631609110528 ddar.py:60] Depth 4/1000 time = 1.727757453918457
I0123 13:33:25.891676 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7510430812835693
I0123 13:33:28.940804 139631609110528 ddar.py:60] Depth 6/1000 time = 3.030081033706665
I0123 13:33:30.780157 139631609110528 ddar.py:60] Depth 7/1000 time = 1.839125394821167
I0123 13:33:32.622953 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8424932956695557
I0123 13:33:32.632341 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:33:32.632448 139631609110528 alphageometry.py:566] LM output (score=-1.929868): "l : C a c l 15 D a l c l 16 ;"
I0123 13:33:32.632488 139631609110528 alphageometry.py:567] Translation: "l = on_line l a c, on_bline l c a"

I0123 13:33:32.632540 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a c, on_bline l c a ? perp j b b g"
I0123 13:33:32.632755 139631609110528 graph.py:498] 
I0123 13:33:32.632828 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a c, on_bline l c a ? perp j b b g
I0123 13:33:33.762454 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0671560764312744
I0123 13:33:35.705361 139631609110528 ddar.py:60] Depth 2/1000 time = 1.9427025318145752
I0123 13:33:39.146760 139631609110528 ddar.py:60] Depth 3/1000 time = 3.4411368370056152
I0123 13:33:41.375918 139631609110528 ddar.py:60] Depth 4/1000 time = 2.228877305984497
I0123 13:33:43.621089 139631609110528 ddar.py:60] Depth 5/1000 time = 2.244626760482788
I0123 13:33:47.120002 139631609110528 ddar.py:60] Depth 6/1000 time = 3.4766159057617188
I0123 13:33:49.371580 139631609110528 ddar.py:60] Depth 7/1000 time = 2.2513396739959717
I0123 13:33:51.637141 139631609110528 ddar.py:60] Depth 8/1000 time = 2.265228748321533
I0123 13:33:51.648696 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:33:51.648841 139631609110528 alphageometry.py:566] LM output (score=-1.957043): "l : C a b l 15 D a l b l 16 ;"
I0123 13:33:51.648881 139631609110528 alphageometry.py:567] Translation: "l = on_line l a b, on_bline l b a"

I0123 13:33:51.648936 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a b, on_bline l b a ? perp j b b g"
I0123 13:33:51.649159 139631609110528 graph.py:498] 
I0123 13:33:51.649233 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a b, on_bline l b a ? perp j b b g
I0123 13:33:52.754293 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0404324531555176
I0123 13:33:55.886298 139631609110528 ddar.py:60] Depth 2/1000 time = 3.131801128387451
I0123 13:33:57.691744 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8052172660827637
I0123 13:33:59.510960 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8189735412597656
I0123 13:34:01.342695 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8312456607818604
I0123 13:34:04.462951 139631609110528 ddar.py:60] Depth 6/1000 time = 3.0995049476623535
I0123 13:34:06.339627 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8764195442199707
I0123 13:34:08.234519 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8946192264556885
I0123 13:34:08.241583 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:34:08.241664 139631609110528 alphageometry.py:566] LM output (score=-2.243887): "l : C b d l 15 D b l d l 16 ;"
I0123 13:34:08.241703 139631609110528 alphageometry.py:567] Translation: "l = on_line l b d, on_bline l d b"

I0123 13:34:08.241741 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l b d, on_bline l d b ? perp j b b g"
I0123 13:34:08.241930 139631609110528 graph.py:498] 
I0123 13:34:08.241991 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l b d, on_bline l d b ? perp j b b g
I0123 13:34:09.387457 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0822629928588867
I0123 13:34:11.248919 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8611290454864502
I0123 13:34:14.521764 139631609110528 ddar.py:60] Depth 3/1000 time = 3.272581100463867
I0123 13:34:16.743100 139631609110528 ddar.py:60] Depth 4/1000 time = 2.2210922241210938
I0123 13:34:20.166943 139631609110528 ddar.py:60] Depth 5/1000 time = 3.4233598709106445
I0123 13:34:22.540138 139631609110528 ddar.py:60] Depth 6/1000 time = 2.356372356414795
I0123 13:34:24.891173 139631609110528 ddar.py:60] Depth 7/1000 time = 2.350799560546875
I0123 13:34:28.472206 139631609110528 ddar.py:60] Depth 8/1000 time = 3.580700159072876
I0123 13:34:28.483644 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:34:28.483756 139631609110528 alphageometry.py:566] LM output (score=-2.575280): "l : C g h l 15 D g l h l 16 ;"
I0123 13:34:28.483797 139631609110528 alphageometry.py:567] Translation: "l = on_line l g h, on_bline l h g"

I0123 13:34:28.483856 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l g h, on_bline l h g ? perp j b b g"
I0123 13:34:28.484066 139631609110528 graph.py:498] 
I0123 13:34:28.484130 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l g h, on_bline l h g ? perp j b b g
I0123 13:34:29.651099 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1038641929626465
I0123 13:34:31.992779 139631609110528 ddar.py:60] Depth 2/1000 time = 2.341491460800171
I0123 13:34:35.795073 139631609110528 ddar.py:60] Depth 3/1000 time = 3.8020613193511963
I0123 13:34:38.328942 139631609110528 ddar.py:60] Depth 4/1000 time = 2.5336246490478516
I0123 13:34:42.048061 139631609110528 ddar.py:60] Depth 5/1000 time = 3.7188541889190674
I0123 13:34:44.622220 139631609110528 ddar.py:60] Depth 6/1000 time = 2.5735318660736084
I0123 13:34:48.562613 139631609110528 ddar.py:60] Depth 7/1000 time = 3.919827699661255
I0123 13:34:52.698212 139631609110528 ddar.py:60] Depth 8/1000 time = 4.135313510894775
I0123 13:34:55.654818 139631609110528 ddar.py:60] Depth 9/1000 time = 2.9563677310943604
I0123 13:35:00.021560 139631609110528 ddar.py:60] Depth 10/1000 time = 4.366485834121704
I0123 13:35:03.186085 139631609110528 ddar.py:60] Depth 11/1000 time = 3.1641767024993896
I0123 13:35:07.709972 139631609110528 ddar.py:60] Depth 12/1000 time = 4.503612756729126
I0123 13:35:07.710252 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:35:07.710310 139631609110528 alphageometry.py:566] LM output (score=-2.582390): "l : D a l c l 15 T a c b l 16 ;"
I0123 13:35:07.710346 139631609110528 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2637, in add_clause
    raise PointTooFarError()
graph.PointTooFarError
"

I0123 13:35:07.710389 139631609110528 alphageometry.py:566] LM output (score=-2.712331): "l : C a d l 15 D a d d l 16 ;"
I0123 13:35:07.710419 139631609110528 alphageometry.py:567] Translation: "l = on_line l a d, on_circle l d a"

I0123 13:35:07.710450 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a d, on_circle l d a ? perp j b b g"
I0123 13:35:07.710617 139631609110528 graph.py:498] 
I0123 13:35:07.710677 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a d, on_circle l d a ? perp j b b g
I0123 13:35:09.230792 139631609110528 ddar.py:60] Depth 1/1000 time = 1.461228609085083
I0123 13:35:11.865479 139631609110528 ddar.py:60] Depth 2/1000 time = 2.6344785690307617
I0123 13:35:14.821109 139631609110528 ddar.py:60] Depth 3/1000 time = 2.9553866386413574
I0123 13:35:18.993436 139631609110528 ddar.py:60] Depth 4/1000 time = 4.172066688537598
I0123 13:35:21.962193 139631609110528 ddar.py:60] Depth 5/1000 time = 2.968022346496582
I0123 13:35:25.008377 139631609110528 ddar.py:60] Depth 6/1000 time = 3.012894868850708
I0123 13:35:29.315324 139631609110528 ddar.py:60] Depth 7/1000 time = 4.306661367416382
I0123 13:35:32.315588 139631609110528 ddar.py:60] Depth 8/1000 time = 2.9999892711639404
I0123 13:35:32.323376 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:35:32.323472 139631609110528 alphageometry.py:566] LM output (score=-2.762525): "l : D a l c l 15 D c l d l 16 ;"
I0123 13:35:32.323510 139631609110528 alphageometry.py:567] Translation: "l = on_bline l c a, on_bline l d c"

I0123 13:35:32.323548 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_bline l c a, on_bline l d c ? perp j b b g"
I0123 13:35:32.323716 139631609110528 graph.py:498] 
I0123 13:35:32.323785 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_bline l c a, on_bline l d c ? perp j b b g
I0123 13:35:33.620984 139631609110528 ddar.py:60] Depth 1/1000 time = 1.2251875400543213
I0123 13:35:35.466083 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8449132442474365
I0123 13:35:37.672415 139631609110528 ddar.py:60] Depth 3/1000 time = 2.206099033355713
I0123 13:35:41.112647 139631609110528 ddar.py:60] Depth 4/1000 time = 3.439908027648926
I0123 13:35:43.328319 139631609110528 ddar.py:60] Depth 5/1000 time = 2.2149455547332764
I0123 13:35:45.813019 139631609110528 ddar.py:60] Depth 6/1000 time = 2.4517786502838135
I0123 13:35:49.446979 139631609110528 ddar.py:60] Depth 7/1000 time = 3.6337039470672607
I0123 13:35:51.863092 139631609110528 ddar.py:60] Depth 8/1000 time = 2.4157917499542236
I0123 13:35:51.870208 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:35:51.870277 139631609110528 alphageometry.py:566] LM output (score=-2.796669): "l : C b i l 15 D b l i l 16 ;"
I0123 13:35:51.870312 139631609110528 alphageometry.py:567] Translation: "l = on_line l b i, on_bline l i b"

I0123 13:35:51.870348 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l b i, on_bline l i b ? perp j b b g"
I0123 13:35:51.870518 139631609110528 graph.py:498] 
I0123 13:35:51.870583 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l b i, on_bline l i b ? perp j b b g
I0123 13:35:52.988997 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0551378726959229
I0123 13:35:54.629862 139631609110528 ddar.py:60] Depth 2/1000 time = 1.640681266784668
I0123 13:35:56.491203 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8611130714416504
I0123 13:35:59.751803 139631609110528 ddar.py:60] Depth 4/1000 time = 3.260319948196411
I0123 13:36:01.660449 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9080417156219482
I0123 13:36:03.634769 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9541587829589844
I0123 13:36:05.566508 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9314959049224854
I0123 13:36:08.743288 139631609110528 ddar.py:60] Depth 8/1000 time = 3.176525115966797
I0123 13:36:08.749723 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:36:08.749780 139631609110528 alphageometry.py:566] LM output (score=-2.802447): "l : C d h l 15 D d l h l 16 ;"
I0123 13:36:08.749816 139631609110528 alphageometry.py:567] Translation: "l = on_line l d h, on_bline l h d"

I0123 13:36:08.749854 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d h, on_bline l h d ? perp j b b g"
I0123 13:36:08.750061 139631609110528 graph.py:498] 
I0123 13:36:08.750128 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d h, on_bline l h d ? perp j b b g
I0123 13:36:09.870415 139631609110528 ddar.py:60] Depth 1/1000 time = 1.052950382232666
I0123 13:36:11.583883 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7132914066314697
I0123 13:36:13.237114 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6530036926269531
I0123 13:36:14.924245 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6868655681610107
I0123 13:36:17.892574 139631609110528 ddar.py:60] Depth 5/1000 time = 2.96779465675354
I0123 13:36:19.684304 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7752013206481934
I0123 13:36:21.430550 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7459945678710938
I0123 13:36:23.207449 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7766451835632324
I0123 13:36:23.215543 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:36:23.215611 139631609110528 alphageometry.py:566] LM output (score=-2.823636): "l : D a l c l 15 P b d d l 16 ;"
I0123 13:36:23.215647 139631609110528 alphageometry.py:567] Translation: "ERROR: Invalid predicate P b d d l"

I0123 13:36:23.215691 139631609110528 alphageometry.py:566] LM output (score=-2.825341): "l : C e h l 15 D e l h l 16 ;"
I0123 13:36:23.215719 139631609110528 alphageometry.py:567] Translation: "l = on_line l e h, on_bline l h e"

I0123 13:36:23.215752 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l e h, on_bline l h e ? perp j b b g"
I0123 13:36:23.215931 139631609110528 graph.py:498] 
I0123 13:36:23.215991 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l e h, on_bline l h e ? perp j b b g
I0123 13:36:25.519423 139631609110528 ddar.py:60] Depth 1/1000 time = 2.239518642425537
I0123 13:36:27.174309 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6546497344970703
I0123 13:36:29.021311 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8467655181884766
I0123 13:36:30.893872 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8722853660583496
I0123 13:36:34.006888 139631609110528 ddar.py:60] Depth 5/1000 time = 3.1124820709228516
I0123 13:36:35.979262 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9562735557556152
I0123 13:36:37.924826 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9452314376831055
I0123 13:36:41.164830 139631609110528 ddar.py:60] Depth 8/1000 time = 3.2396399974823
I0123 13:36:41.174139 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:36:41.174223 139631609110528 alphageometry.py:566] LM output (score=-2.827659): "l : C e g l 15 D e l g l 16 ;"
I0123 13:36:41.174263 139631609110528 alphageometry.py:567] Translation: "l = on_line l e g, on_bline l g e"

I0123 13:36:41.174302 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l e g, on_bline l g e ? perp j b b g"
I0123 13:36:41.174514 139631609110528 graph.py:498] 
I0123 13:36:41.174578 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l e g, on_bline l g e ? perp j b b g
I0123 13:36:42.286859 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0490589141845703
I0123 13:36:44.140957 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8539156913757324
I0123 13:36:46.030869 139631609110528 ddar.py:60] Depth 3/1000 time = 1.889681100845337
I0123 13:36:47.933733 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9026174545288086
I0123 13:36:51.010969 139631609110528 ddar.py:60] Depth 5/1000 time = 3.0767130851745605
I0123 13:36:53.037818 139631609110528 ddar.py:60] Depth 6/1000 time = 2.0092341899871826
I0123 13:36:55.026041 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9879934787750244
I0123 13:36:58.321156 139631609110528 ddar.py:60] Depth 8/1000 time = 3.294806957244873
I0123 13:36:58.329323 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:36:58.329401 139631609110528 alphageometry.py:566] LM output (score=-2.830967): "l : C a j l 15 D a l j l 16 ;"
I0123 13:36:58.329440 139631609110528 alphageometry.py:567] Translation: "l = on_line l a j, on_bline l j a"

I0123 13:36:58.329487 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a j, on_bline l j a ? perp j b b g"
I0123 13:36:58.329668 139631609110528 graph.py:498] 
I0123 13:36:58.329734 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a j, on_bline l j a ? perp j b b g
I0123 13:36:59.418896 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0188143253326416
I0123 13:37:00.838638 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4195225238800049
I0123 13:37:02.387725 139631609110528 ddar.py:60] Depth 3/1000 time = 1.5488629341125488
I0123 13:37:03.956777 139631609110528 ddar.py:60] Depth 4/1000 time = 1.5688073635101318
I0123 13:37:06.724106 139631609110528 ddar.py:60] Depth 5/1000 time = 2.7668933868408203
I0123 13:37:08.408375 139631609110528 ddar.py:60] Depth 6/1000 time = 1.668194055557251
I0123 13:37:10.054658 139631609110528 ddar.py:60] Depth 7/1000 time = 1.6460533142089844
I0123 13:37:11.714671 139631609110528 ddar.py:60] Depth 8/1000 time = 1.6597442626953125
I0123 13:37:11.721005 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:37:11.721107 139631609110528 alphageometry.py:566] LM output (score=-2.834878): "l : D d l e l 15 ^ e d e l d l d e 16 ;"
I0123 13:37:11.721147 139631609110528 alphageometry.py:567] Translation: "ERROR: Invalid predicate ^ e d e l d l d e"

I0123 13:37:11.721184 139631609110528 alphageometry.py:566] LM output (score=-2.927250): "l : C g i l 15 D g l i l 16 ;"
I0123 13:37:11.721212 139631609110528 alphageometry.py:567] Translation: "l = on_line l g i, on_bline l i g"

I0123 13:37:11.721245 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l g i, on_bline l i g ? perp j b b g"
I0123 13:37:11.721403 139631609110528 graph.py:498] 
I0123 13:37:11.721486 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l g i, on_bline l i g ? perp j b b g
I0123 13:37:14.151656 139631609110528 ddar.py:60] Depth 1/1000 time = 2.3682363033294678
I0123 13:37:15.920933 139631609110528 ddar.py:60] Depth 2/1000 time = 1.768998622894287
I0123 13:37:17.631379 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7100732326507568
I0123 13:37:19.356944 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7252647876739502
I0123 13:37:22.377303 139631609110528 ddar.py:60] Depth 5/1000 time = 3.0198428630828857
I0123 13:37:24.211116 139631609110528 ddar.py:60] Depth 6/1000 time = 1.818103313446045
I0123 13:37:27.247862 139631609110528 ddar.py:60] Depth 7/1000 time = 3.0365066528320312
I0123 13:37:29.037881 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7897584438323975
I0123 13:37:29.043974 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:37:29.044051 139631609110528 alphageometry.py:566] LM output (score=-3.158551): "l : C b e l 15 D b l e l 16 ;"
I0123 13:37:29.044090 139631609110528 alphageometry.py:567] Translation: "l = on_line l b e, on_bline l e b"

I0123 13:37:29.044132 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l b e, on_bline l e b ? perp j b b g"
I0123 13:37:29.044302 139631609110528 graph.py:498] 
I0123 13:37:29.044361 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l b e, on_bline l e b ? perp j b b g
I0123 13:37:30.186889 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0762641429901123
I0123 13:37:31.939251 139631609110528 ddar.py:60] Depth 2/1000 time = 1.752152919769287
I0123 13:37:35.041382 139631609110528 ddar.py:60] Depth 3/1000 time = 3.101868152618408
I0123 13:37:36.867226 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8254539966583252
I0123 13:37:38.697742 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8299851417541504
I0123 13:37:41.900236 139631609110528 ddar.py:60] Depth 6/1000 time = 3.185825824737549
I0123 13:37:43.806755 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9062914848327637
I0123 13:37:45.719094 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9120755195617676
I0123 13:37:45.728052 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:37:45.728118 139631609110528 alphageometry.py:566] LM output (score=-3.171398): "l : D d l k l 15 D k l f l 16 ;"
I0123 13:37:45.728157 139631609110528 alphageometry.py:567] Translation: "l = on_bline l k d, on_bline l f k"

I0123 13:37:45.728196 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_bline l k d, on_bline l f k ? perp j b b g"
I0123 13:37:45.728373 139631609110528 graph.py:498] 
I0123 13:37:45.728426 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_bline l k d, on_bline l f k ? perp j b b g
I0123 13:37:46.996400 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1928489208221436
I0123 13:37:50.071385 139631609110528 ddar.py:60] Depth 2/1000 time = 3.0747644901275635
I0123 13:37:51.922768 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8511335849761963
I0123 13:37:53.791852 139631609110528 ddar.py:60] Depth 4/1000 time = 1.868807077407837
I0123 13:37:55.673465 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8810906410217285
I0123 13:37:59.033678 139631609110528 ddar.py:60] Depth 6/1000 time = 3.3422722816467285
I0123 13:38:00.959963 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9260482788085938
I0123 13:38:02.895452 139631609110528 ddar.py:60] Depth 8/1000 time = 1.935218334197998
I0123 13:38:02.902925 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:38:02.902995 139631609110528 alphageometry.py:566] LM output (score=-3.189291): "l : D d l e l 15 D e l k l 16 ;"
I0123 13:38:02.903033 139631609110528 alphageometry.py:567] Translation: "l = on_bline l e d, on_bline l k e"

I0123 13:38:02.903073 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_bline l e d, on_bline l k e ? perp j b b g"
I0123 13:38:02.903251 139631609110528 graph.py:498] 
I0123 13:38:02.903318 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_bline l e d, on_bline l k e ? perp j b b g
I0123 13:38:04.163607 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1858839988708496
I0123 13:38:05.982039 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8182525634765625
I0123 13:38:09.081497 139631609110528 ddar.py:60] Depth 3/1000 time = 3.099224805831909
I0123 13:38:10.935836 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8540678024291992
I0123 13:38:12.789993 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8537375926971436
I0123 13:38:14.781885 139631609110528 ddar.py:60] Depth 6/1000 time = 1.973768949508667
I0123 13:38:16.729502 139631609110528 ddar.py:60] Depth 7/1000 time = 1.947242021560669
I0123 13:38:19.990170 139631609110528 ddar.py:60] Depth 8/1000 time = 3.260390043258667
I0123 13:38:19.996902 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:38:19.996973 139631609110528 alphageometry.py:566] LM output (score=-3.214022): "l : D a l d l 15 D c l d l 16 ;"
I0123 13:38:19.997011 139631609110528 alphageometry.py:567] Translation: "l = on_bline l d a, on_bline l d c"

I0123 13:38:19.997049 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_bline l d a, on_bline l d c ? perp j b b g"
I0123 13:38:19.997224 139631609110528 graph.py:498] 
I0123 13:38:19.997288 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_bline l d a, on_bline l d c ? perp j b b g
I0123 13:38:21.293911 139631609110528 ddar.py:60] Depth 1/1000 time = 1.2245204448699951
I0123 13:38:23.274837 139631609110528 ddar.py:60] Depth 2/1000 time = 1.9807205200195312
I0123 13:38:25.456758 139631609110528 ddar.py:60] Depth 3/1000 time = 2.1816790103912354
I0123 13:38:27.676685 139631609110528 ddar.py:60] Depth 4/1000 time = 2.219654083251953
I0123 13:38:31.170533 139631609110528 ddar.py:60] Depth 5/1000 time = 3.4932632446289062
I0123 13:38:33.642302 139631609110528 ddar.py:60] Depth 6/1000 time = 2.439858913421631
I0123 13:38:36.040524 139631609110528 ddar.py:60] Depth 7/1000 time = 2.397873878479004
I0123 13:38:38.467947 139631609110528 ddar.py:60] Depth 8/1000 time = 2.427046060562134
I0123 13:38:38.475143 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:38:38.475258 139631609110528 alphageometry.py:566] LM output (score=-3.245849): "l : C b g l 15 D b l g l 16 ;"
I0123 13:38:38.475297 139631609110528 alphageometry.py:567] Translation: "l = on_line l b g, on_bline l g b"

I0123 13:38:38.475361 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l b g, on_bline l g b ? perp j b b g"
I0123 13:38:38.475598 139631609110528 graph.py:498] 
I0123 13:38:38.475687 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l b g, on_bline l g b ? perp j b b g
I0123 13:38:40.951941 139631609110528 ddar.py:60] Depth 1/1000 time = 2.411358118057251
I0123 13:38:42.684623 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7324416637420654
I0123 13:38:44.507168 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8223075866699219
I0123 13:38:46.351466 139631609110528 ddar.py:60] Depth 4/1000 time = 1.844019889831543
I0123 13:38:48.212253 139631609110528 ddar.py:60] Depth 5/1000 time = 1.860274314880371
I0123 13:38:51.445733 139631609110528 ddar.py:60] Depth 6/1000 time = 3.2134199142456055
I0123 13:38:53.357686 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9116628170013428
I0123 13:38:55.269761 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9116935729980469
I0123 13:38:55.276974 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:38:55.277092 139631609110528 alphageometry.py:566] LM output (score=-3.278221): "l : C c j l 15 D c l j l 16 ;"
I0123 13:38:55.277129 139631609110528 alphageometry.py:567] Translation: "l = on_line l c j, on_bline l j c"

I0123 13:38:55.277195 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l c j, on_bline l j c ? perp j b b g"
I0123 13:38:55.277421 139631609110528 graph.py:498] 
I0123 13:38:55.277501 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l c j, on_bline l j c ? perp j b b g
I0123 13:38:56.382968 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0422031879425049
I0123 13:38:59.630978 139631609110528 ddar.py:60] Depth 2/1000 time = 3.247797727584839
I0123 13:39:01.481906 139631609110528 ddar.py:60] Depth 3/1000 time = 1.850677490234375
I0123 13:39:03.384204 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9020233154296875
I0123 13:39:05.289170 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9043476581573486
I0123 13:39:08.587721 139631609110528 ddar.py:60] Depth 6/1000 time = 3.281982660293579
I0123 13:39:10.593805 139631609110528 ddar.py:60] Depth 7/1000 time = 2.005826234817505
I0123 13:39:12.615831 139631609110528 ddar.py:60] Depth 8/1000 time = 2.0217177867889404
I0123 13:39:12.626961 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:39:12.627073 139631609110528 alphageometry.py:566] LM output (score=-3.313316): "l : C d f l 15 D d l f l 16 ;"
I0123 13:39:12.627149 139631609110528 alphageometry.py:567] Translation: "l = on_line l d f, on_bline l f d"

I0123 13:39:12.627198 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d f, on_bline l f d ? perp j b b g"
I0123 13:39:12.627404 139631609110528 graph.py:498] 
I0123 13:39:12.627478 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d f, on_bline l f d ? perp j b b g
I0123 13:39:13.736067 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0460805892944336
I0123 13:39:16.868921 139631609110528 ddar.py:60] Depth 2/1000 time = 3.1326470375061035
I0123 13:39:18.617077 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7478811740875244
I0123 13:39:20.381742 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7643890380859375
I0123 13:39:22.142973 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7606985569000244
I0123 13:39:25.332120 139631609110528 ddar.py:60] Depth 6/1000 time = 3.171023368835449
I0123 13:39:27.184784 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8524112701416016
I0123 13:39:29.059923 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8748602867126465
I0123 13:39:29.070093 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:39:29.070166 139631609110528 alphageometry.py:566] LM output (score=-3.340992): "l : C d i l 15 D d i d l 16 ;"
I0123 13:39:29.070205 139631609110528 alphageometry.py:567] Translation: "l = on_line l d i, on_circle l d i"

I0123 13:39:29.070247 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d i, on_circle l d i ? perp j b b g"
I0123 13:39:29.070416 139631609110528 graph.py:498] 
I0123 13:39:29.070476 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l d i, on_circle l d i ? perp j b b g
I0123 13:39:30.426922 139631609110528 ddar.py:60] Depth 1/1000 time = 1.2977395057678223
I0123 13:39:33.162397 139631609110528 ddar.py:60] Depth 2/1000 time = 2.735244035720825
I0123 13:39:37.336445 139631609110528 ddar.py:60] Depth 3/1000 time = 4.1737306118011475
I0123 13:39:40.199953 139631609110528 ddar.py:60] Depth 4/1000 time = 2.8631885051727295
I0123 13:39:44.340541 139631609110528 ddar.py:60] Depth 5/1000 time = 4.139949083328247
I0123 13:39:47.282340 139631609110528 ddar.py:60] Depth 6/1000 time = 2.9149367809295654
I0123 13:39:50.159547 139631609110528 ddar.py:60] Depth 7/1000 time = 2.876951217651367
I0123 13:39:54.438118 139631609110528 ddar.py:60] Depth 8/1000 time = 4.278215408325195
I0123 13:39:54.445091 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:39:54.445193 139631609110528 alphageometry.py:566] LM output (score=-3.415602): "l : C a b l 15 D a b a l 16 ;"
I0123 13:39:54.445233 139631609110528 alphageometry.py:567] Translation: "l = on_line l a b, on_circle l a b"

I0123 13:39:54.445284 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a b, on_circle l a b ? perp j b b g"
I0123 13:39:54.445513 139631609110528 graph.py:498] 
I0123 13:39:54.445584 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k c d, on_bline k d c; l = on_line l a b, on_circle l a b ? perp j b b g
I0123 13:39:55.531488 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0218615531921387
I0123 13:39:56.975574 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4438366889953613
I0123 13:39:58.505046 139631609110528 ddar.py:60] Depth 3/1000 time = 1.529217004776001
I0123 13:40:00.053268 139631609110528 ddar.py:60] Depth 4/1000 time = 1.5479567050933838
I0123 13:40:01.613663 139631609110528 ddar.py:60] Depth 5/1000 time = 1.5599350929260254
I0123 13:40:04.541165 139631609110528 ddar.py:60] Depth 6/1000 time = 2.911809206008911
I0123 13:40:06.152242 139631609110528 ddar.py:60] Depth 7/1000 time = 1.610816240310669
I0123 13:40:07.787384 139631609110528 ddar.py:60] Depth 8/1000 time = 1.6348700523376465
I0123 13:40:07.793826 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:40:07.793921 139631609110528 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : P a b c k 13 ; x00
I0123 13:40:12.147334 139631609110528 alphageometry.py:566] LM output (score=-1.456182): "l : C b c l 14 D b l c l 15 ;"
I0123 13:40:12.147552 139631609110528 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 13:40:12.147604 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_line l b c, on_bline l c b ? perp j b b g"
I0123 13:40:12.147757 139631609110528 graph.py:498] 
I0123 13:40:12.147817 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_line l b c, on_bline l c b ? perp j b b g
I0123 13:40:13.197874 139631609110528 ddar.py:60] Depth 1/1000 time = 1.00099515914917
I0123 13:40:14.723955 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5258862972259521
I0123 13:40:17.819096 139631609110528 ddar.py:60] Depth 3/1000 time = 3.0948944091796875
I0123 13:40:19.630943 139631609110528 ddar.py:60] Depth 4/1000 time = 1.811563491821289
I0123 13:40:21.454858 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8233880996704102
I0123 13:40:23.321163 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8455705642700195
I0123 13:40:25.167675 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8462510108947754
I0123 13:40:28.308844 139631609110528 ddar.py:60] Depth 8/1000 time = 3.140838623046875
I0123 13:40:28.316303 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:40:28.316397 139631609110528 alphageometry.py:566] LM output (score=-1.585996): "l : T a l c k 14 ;"
I0123 13:40:28.316438 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a c k"

I0123 13:40:28.316486 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l a c k ? perp j b b g"
I0123 13:40:28.316687 139631609110528 graph.py:498] 
I0123 13:40:28.316746 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l a c k ? perp j b b g
I0123 13:40:29.243195 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8838341236114502
I0123 13:40:30.597131 139631609110528 ddar.py:60] Depth 2/1000 time = 1.353738784790039
I0123 13:40:32.026268 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4288880825042725
I0123 13:40:33.471410 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4448931217193604
I0123 13:40:34.901458 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4296212196350098
I0123 13:40:37.726529 139631609110528 ddar.py:60] Depth 6/1000 time = 2.8051598072052
I0123 13:40:39.254392 139631609110528 ddar.py:60] Depth 7/1000 time = 1.5276174545288086
I0123 13:40:40.790271 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5356359481811523
I0123 13:40:40.794588 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:40:40.794657 139631609110528 alphageometry.py:566] LM output (score=-1.735633): "l : C a k l 14 D a l k l 15 ;"
I0123 13:40:40.794699 139631609110528 alphageometry.py:567] Translation: "l = on_line l a k, on_bline l k a"

I0123 13:40:40.794739 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_line l a k, on_bline l k a ? perp j b b g"
I0123 13:40:40.794898 139631609110528 graph.py:498] 
I0123 13:40:40.794954 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_line l a k, on_bline l k a ? perp j b b g
I0123 13:40:41.796110 139631609110528 ddar.py:60] Depth 1/1000 time = 0.950249195098877
I0123 13:40:43.296170 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4998619556427002
I0123 13:40:44.750046 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4536452293395996
I0123 13:40:47.499792 139631609110528 ddar.py:60] Depth 4/1000 time = 2.749481201171875
I0123 13:40:48.950497 139631609110528 ddar.py:60] Depth 5/1000 time = 1.450272560119629
I0123 13:40:50.478633 139631609110528 ddar.py:60] Depth 6/1000 time = 1.514571189880371
I0123 13:40:51.972869 139631609110528 ddar.py:60] Depth 7/1000 time = 1.4939985275268555
I0123 13:40:53.484170 139631609110528 ddar.py:60] Depth 8/1000 time = 1.511054515838623
I0123 13:40:53.489405 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:40:53.489473 139631609110528 alphageometry.py:566] LM output (score=-1.787694): "l : T c k g l 14 ;"
I0123 13:40:53.489515 139631609110528 alphageometry.py:567] Translation: "l = on_tline l g c k"

I0123 13:40:53.489556 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l g c k ? perp j b b g"
I0123 13:40:53.489749 139631609110528 graph.py:498] 
I0123 13:40:53.489814 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l g c k ? perp j b b g
I0123 13:40:54.405915 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8757715225219727
I0123 13:40:56.939321 139631609110528 ddar.py:60] Depth 2/1000 time = 2.533207654953003
I0123 13:40:58.372618 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4330592155456543
I0123 13:40:59.801572 139631609110528 ddar.py:60] Depth 4/1000 time = 1.428701639175415
I0123 13:41:01.238569 139631609110528 ddar.py:60] Depth 5/1000 time = 1.436554193496704
I0123 13:41:02.798406 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5388329029083252
I0123 13:41:04.307304 139631609110528 ddar.py:60] Depth 7/1000 time = 1.508660078048706
I0123 13:41:05.824890 139631609110528 ddar.py:60] Depth 8/1000 time = 1.517336130142212
I0123 13:41:05.828727 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:41:05.828804 139631609110528 alphageometry.py:566] LM output (score=-1.891515): "l : C b k l 14 D b l k l 15 ;"
I0123 13:41:05.828843 139631609110528 alphageometry.py:567] Translation: "l = on_line l b k, on_bline l k b"

I0123 13:41:05.828883 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_line l b k, on_bline l k b ? perp j b b g"
I0123 13:41:05.829039 139631609110528 graph.py:498] 
I0123 13:41:05.829101 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_line l b k, on_bline l k b ? perp j b b g
I0123 13:41:08.161678 139631609110528 ddar.py:60] Depth 1/1000 time = 0.951988697052002
I0123 13:41:09.455210 139631609110528 ddar.py:60] Depth 2/1000 time = 1.293243408203125
I0123 13:41:10.875445 139631609110528 ddar.py:60] Depth 3/1000 time = 1.419853687286377
I0123 13:41:12.303733 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4280195236206055
I0123 13:41:13.758193 139631609110528 ddar.py:60] Depth 5/1000 time = 1.45404052734375
I0123 13:41:16.646970 139631609110528 ddar.py:60] Depth 6/1000 time = 2.87453556060791
I0123 13:41:18.137807 139631609110528 ddar.py:60] Depth 7/1000 time = 1.4905879497528076
I0123 13:41:19.637937 139631609110528 ddar.py:60] Depth 8/1000 time = 1.499861240386963
I0123 13:41:19.642531 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:41:19.642601 139631609110528 alphageometry.py:566] LM output (score=-1.954789): "l : C a c l 14 D a l c l 15 ;"
I0123 13:41:19.642641 139631609110528 alphageometry.py:567] Translation: "l = on_line l a c, on_bline l c a"

I0123 13:41:19.642679 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_line l a c, on_bline l c a ? perp j b b g"
I0123 13:41:19.642845 139631609110528 graph.py:498] 
I0123 13:41:19.642906 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_line l a c, on_bline l c a ? perp j b b g
I0123 13:41:20.689972 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9948201179504395
I0123 13:41:22.260173 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5700149536132812
I0123 13:41:24.044061 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7836143970489502
I0123 13:41:27.207947 139631609110528 ddar.py:60] Depth 4/1000 time = 3.163609743118286
I0123 13:41:29.011254 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8027141094207764
I0123 13:41:30.871465 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8401312828063965
I0123 13:41:32.686116 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8143925666809082
I0123 13:41:34.514202 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8278000354766846
I0123 13:41:34.520941 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:41:34.521044 139631609110528 alphageometry.py:566] LM output (score=-1.986111): "l : D a l b l 14 ;"
I0123 13:41:34.521084 139631609110528 alphageometry.py:567] Translation: "l = on_bline l b a"

I0123 13:41:34.521147 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_bline l b a ? perp j b b g"
I0123 13:41:34.521373 139631609110528 graph.py:498] 
I0123 13:41:34.521453 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_bline l b a ? perp j b b g
I0123 13:41:35.510935 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9380347728729248
I0123 13:41:38.375761 139631609110528 ddar.py:60] Depth 2/1000 time = 2.864647388458252
I0123 13:41:40.007933 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6319372653961182
I0123 13:41:41.650601 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6424217224121094
I0123 13:41:43.292409 139631609110528 ddar.py:60] Depth 5/1000 time = 1.641427993774414
I0123 13:41:45.079679 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7672665119171143
I0123 13:41:48.220612 139631609110528 ddar.py:60] Depth 7/1000 time = 3.1406877040863037
I0123 13:41:49.961046 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7400782108306885
I0123 13:41:49.965492 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:41:49.965610 139631609110528 alphageometry.py:566] LM output (score=-2.029402): "l : C a b l 14 D a l b l 15 ;"
I0123 13:41:49.965656 139631609110528 alphageometry.py:567] Translation: "l = on_line l a b, on_bline l b a"

I0123 13:41:49.965716 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_line l a b, on_bline l b a ? perp j b b g"
I0123 13:41:49.965904 139631609110528 graph.py:498] 
I0123 13:41:49.965974 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_line l a b, on_bline l b a ? perp j b b g
I0123 13:41:51.002496 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9868113994598389
I0123 13:41:52.446758 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4440374374389648
I0123 13:41:54.119701 139631609110528 ddar.py:60] Depth 3/1000 time = 1.672703742980957
I0123 13:41:55.812899 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6929287910461426
I0123 13:41:58.827866 139631609110528 ddar.py:60] Depth 5/1000 time = 3.0145375728607178
I0123 13:42:00.626190 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7800705432891846
I0123 13:42:02.388173 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7617459297180176
I0123 13:42:04.165098 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7766575813293457
I0123 13:42:04.170322 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:42:04.170402 139631609110528 alphageometry.py:566] LM output (score=-2.035993): "l : T d l e h 14 ;"
I0123 13:42:04.170444 139631609110528 alphageometry.py:567] Translation: "l = on_tline l d e h"

I0123 13:42:04.170485 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l d e h ? perp j b b g"
I0123 13:42:04.170665 139631609110528 graph.py:498] 
I0123 13:42:04.170726 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l d e h ? perp j b b g
I0123 13:42:05.094588 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8819975852966309
I0123 13:42:07.672945 139631609110528 ddar.py:60] Depth 2/1000 time = 2.5781779289245605
I0123 13:42:09.034518 139631609110528 ddar.py:60] Depth 3/1000 time = 1.3612329959869385
I0123 13:42:10.389406 139631609110528 ddar.py:60] Depth 4/1000 time = 1.354565143585205
I0123 13:42:11.743038 139631609110528 ddar.py:60] Depth 5/1000 time = 1.3531887531280518
I0123 13:42:13.178419 139631609110528 ddar.py:60] Depth 6/1000 time = 1.4209904670715332
I0123 13:42:14.572118 139631609110528 ddar.py:60] Depth 7/1000 time = 1.3934826850891113
I0123 13:42:15.964363 139631609110528 ddar.py:60] Depth 8/1000 time = 1.3920173645019531
I0123 13:42:15.968518 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:42:15.968591 139631609110528 alphageometry.py:566] LM output (score=-2.127829): "l : T a c a l 14 ;"
I0123 13:42:15.968630 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a a c"

I0123 13:42:15.968687 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l a a c ? perp j b b g"
I0123 13:42:15.968874 139631609110528 graph.py:498] 
I0123 13:42:15.968937 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l a a c ? perp j b b g
I0123 13:42:18.189977 139631609110528 ddar.py:60] Depth 1/1000 time = 2.1798553466796875
I0123 13:42:19.568647 139631609110528 ddar.py:60] Depth 2/1000 time = 1.3784315586090088
I0123 13:42:20.991208 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4223315715789795
I0123 13:42:22.438030 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4465653896331787
I0123 13:42:23.879193 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4407603740692139
I0123 13:42:25.443360 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5467801094055176
I0123 13:42:26.969486 139631609110528 ddar.py:60] Depth 7/1000 time = 1.5258800983428955
I0123 13:42:29.870537 139631609110528 ddar.py:60] Depth 8/1000 time = 2.9007039070129395
I0123 13:42:29.875164 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:42:29.875241 139631609110528 alphageometry.py:566] LM output (score=-2.135445): "l : T a i k l 14 ;"
I0123 13:42:29.875279 139631609110528 alphageometry.py:567] Translation: "l = on_tline l k a i"

I0123 13:42:29.875329 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l k a i ? perp j b b g"
I0123 13:42:29.875508 139631609110528 graph.py:498] 
I0123 13:42:29.875578 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l k a i ? perp j b b g
I0123 13:42:30.794218 139631609110528 ddar.py:60] Depth 1/1000 time = 0.878483772277832
I0123 13:42:32.068391 139631609110528 ddar.py:60] Depth 2/1000 time = 1.2739794254302979
I0123 13:42:33.498913 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4303178787231445
I0123 13:42:34.925689 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4265480041503906
I0123 13:42:36.356572 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4305078983306885
I0123 13:42:39.263542 139631609110528 ddar.py:60] Depth 6/1000 time = 2.8885884284973145
I0123 13:42:40.762005 139631609110528 ddar.py:60] Depth 7/1000 time = 1.4982306957244873
I0123 13:42:42.279413 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5171668529510498
I0123 13:42:42.283979 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:42:42.284044 139631609110528 alphageometry.py:566] LM output (score=-2.150846): "l : T d l g h 14 ;"
I0123 13:42:42.284080 139631609110528 alphageometry.py:567] Translation: "l = on_tline l d g h"

I0123 13:42:42.284118 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l d g h ? perp j b b g"
I0123 13:42:42.284272 139631609110528 graph.py:498] 
I0123 13:42:42.284322 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l d g h ? perp j b b g
I0123 13:42:43.215563 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8833153247833252
I0123 13:42:44.533702 139631609110528 ddar.py:60] Depth 2/1000 time = 1.317979097366333
I0123 13:42:45.943042 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4091169834136963
I0123 13:42:47.381892 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4385888576507568
I0123 13:42:50.242568 139631609110528 ddar.py:60] Depth 5/1000 time = 2.8601958751678467
I0123 13:42:51.759788 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5018846988677979
I0123 13:42:53.247682 139631609110528 ddar.py:60] Depth 7/1000 time = 1.4876654148101807
I0123 13:42:54.741633 139631609110528 ddar.py:60] Depth 8/1000 time = 1.4937052726745605
I0123 13:42:54.746459 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:42:54.746523 139631609110528 alphageometry.py:566] LM output (score=-2.181991): "l : T c k c l 14 ;"
I0123 13:42:54.746558 139631609110528 alphageometry.py:567] Translation: "l = on_tline l c c k"

I0123 13:42:54.746600 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l c c k ? perp j b b g"
I0123 13:42:54.746794 139631609110528 graph.py:498] 
I0123 13:42:54.746855 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l c c k ? perp j b b g
I0123 13:42:55.658731 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8697052001953125
I0123 13:42:57.181096 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5222151279449463
I0123 13:42:58.614378 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4330840110778809
I0123 13:43:01.362682 139631609110528 ddar.py:60] Depth 4/1000 time = 2.7480616569519043
I0123 13:43:02.820857 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4577322006225586
I0123 13:43:04.418643 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5779430866241455
I0123 13:43:05.977433 139631609110528 ddar.py:60] Depth 7/1000 time = 1.5585658550262451
I0123 13:43:07.534836 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5571403503417969
I0123 13:43:07.539124 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:43:07.539208 139631609110528 alphageometry.py:566] LM output (score=-2.206672): "l : T a i h l 14 ;"
I0123 13:43:07.539243 139631609110528 alphageometry.py:567] Translation: "l = on_tline l h a i"

I0123 13:43:07.539285 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l h a i ? perp j b b g"
I0123 13:43:07.539474 139631609110528 graph.py:498] 
I0123 13:43:07.539545 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l h a i ? perp j b b g
I0123 13:43:08.455462 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8732864856719971
I0123 13:43:11.335138 139631609110528 ddar.py:60] Depth 2/1000 time = 2.8794472217559814
I0123 13:43:12.731935 139631609110528 ddar.py:60] Depth 3/1000 time = 1.3965542316436768
I0123 13:43:14.150101 139631609110528 ddar.py:60] Depth 4/1000 time = 1.417933464050293
I0123 13:43:15.561573 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4110949039459229
I0123 13:43:17.095258 139631609110528 ddar.py:60] Depth 6/1000 time = 1.515221118927002
I0123 13:43:18.586136 139631609110528 ddar.py:60] Depth 7/1000 time = 1.4906773567199707
I0123 13:43:20.084915 139631609110528 ddar.py:60] Depth 8/1000 time = 1.4985532760620117
I0123 13:43:20.088984 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:43:20.089044 139631609110528 alphageometry.py:566] LM output (score=-2.240337): "l : T d e e l 14 ;"
I0123 13:43:20.089079 139631609110528 alphageometry.py:567] Translation: "l = on_tline l e d e"

I0123 13:43:20.089119 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l e d e ? perp j b b g"
I0123 13:43:20.089271 139631609110528 graph.py:498] 
I0123 13:43:20.089323 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l e d e ? perp j b b g
I0123 13:43:22.366972 139631609110528 ddar.py:60] Depth 1/1000 time = 2.2356374263763428
I0123 13:43:23.882931 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5157291889190674
I0123 13:43:25.362889 139631609110528 ddar.py:60] Depth 3/1000 time = 1.479738712310791
I0123 13:43:26.833250 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4700944423675537
I0123 13:43:28.295064 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4613068103790283
I0123 13:43:29.860341 139631609110528 ddar.py:60] Depth 6/1000 time = 1.547189474105835
I0123 13:43:31.381321 139631609110528 ddar.py:60] Depth 7/1000 time = 1.520737886428833
I0123 13:43:34.324939 139631609110528 ddar.py:60] Depth 8/1000 time = 2.9433999061584473
I0123 13:43:34.329513 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:43:34.329568 139631609110528 alphageometry.py:566] LM output (score=-2.251588): "l : T a b a l 14 ;"
I0123 13:43:34.329603 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a a b"

I0123 13:43:34.329660 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l a a b ? perp j b b g"
I0123 13:43:34.329822 139631609110528 graph.py:498] 
I0123 13:43:34.329880 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l a a b ? perp j b b g
I0123 13:43:35.243164 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8736703395843506
I0123 13:43:36.655113 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4118001461029053
I0123 13:43:38.093446 139631609110528 ddar.py:60] Depth 3/1000 time = 1.438138484954834
I0123 13:43:39.538490 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4448294639587402
I0123 13:43:40.979068 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4401535987854004
I0123 13:43:42.567965 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5628268718719482
I0123 13:43:45.453595 139631609110528 ddar.py:60] Depth 7/1000 time = 2.885406970977783
I0123 13:43:46.992053 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5381693840026855
I0123 13:43:46.996560 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:43:46.996653 139631609110528 alphageometry.py:566] LM output (score=-2.348510): "l : T d l e g 14 ;"
I0123 13:43:46.996691 139631609110528 alphageometry.py:567] Translation: "l = on_tline l d e g"

I0123 13:43:46.996734 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l d e g ? perp j b b g"
I0123 13:43:46.996926 139631609110528 graph.py:498] 
I0123 13:43:46.996998 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l d e g ? perp j b b g
I0123 13:43:47.931232 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8930473327636719
I0123 13:43:49.250168 139631609110528 ddar.py:60] Depth 2/1000 time = 1.3186781406402588
I0123 13:43:50.709524 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4591267108917236
I0123 13:43:52.162399 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4526073932647705
I0123 13:43:55.033128 139631609110528 ddar.py:60] Depth 5/1000 time = 2.870333433151245
I0123 13:43:56.588937 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5391004085540771
I0123 13:43:58.109026 139631609110528 ddar.py:60] Depth 7/1000 time = 1.5198676586151123
I0123 13:43:59.632063 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5228075981140137
I0123 13:43:59.636208 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:43:59.636269 139631609110528 alphageometry.py:566] LM output (score=-2.414639): "l : T b l c k 14 ;"
I0123 13:43:59.636306 139631609110528 alphageometry.py:567] Translation: "l = on_tline l b c k"

I0123 13:43:59.636343 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l b c k ? perp j b b g"
I0123 13:43:59.636494 139631609110528 graph.py:498] 
I0123 13:43:59.636544 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l b c k ? perp j b b g
I0123 13:44:00.555717 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8775289058685303
I0123 13:44:01.869146 139631609110528 ddar.py:60] Depth 2/1000 time = 1.313277006149292
I0123 13:44:03.308683 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4393351078033447
I0123 13:44:06.158771 139631609110528 ddar.py:60] Depth 4/1000 time = 2.8498315811157227
I0123 13:44:07.611077 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4517579078674316
I0123 13:44:09.213654 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5818846225738525
I0123 13:44:10.763138 139631609110528 ddar.py:60] Depth 7/1000 time = 1.549187421798706
I0123 13:44:12.321789 139631609110528 ddar.py:60] Depth 8/1000 time = 1.558387041091919
I0123 13:44:12.325816 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:44:12.325928 139631609110528 alphageometry.py:566] LM output (score=-2.440131): "l : T a i i l 14 ;"
I0123 13:44:12.325968 139631609110528 alphageometry.py:567] Translation: "l = on_tline l i a i"

I0123 13:44:12.326027 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l i a i ? perp j b b g"
I0123 13:44:12.326241 139631609110528 graph.py:498] 
I0123 13:44:12.326305 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l i a i ? perp j b b g
I0123 13:44:13.257788 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8897812366485596
I0123 13:44:14.698555 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4406156539916992
I0123 13:44:17.499635 139631609110528 ddar.py:60] Depth 3/1000 time = 2.800870656967163
I0123 13:44:18.969568 139631609110528 ddar.py:60] Depth 4/1000 time = 1.469682216644287
I0123 13:44:20.442372 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4724230766296387
I0123 13:44:22.026066 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5655853748321533
I0123 13:44:23.567109 139631609110528 ddar.py:60] Depth 7/1000 time = 1.5408260822296143
I0123 13:44:25.117890 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5505437850952148
I0123 13:44:25.122210 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:44:25.122285 139631609110528 alphageometry.py:566] LM output (score=-2.522007): "l : T a b b l 14 ;"
I0123 13:44:25.122323 139631609110528 alphageometry.py:567] Translation: "l = on_tline l b a b"

I0123 13:44:25.122361 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l b a b ? perp j b b g"
I0123 13:44:25.122519 139631609110528 graph.py:498] 
I0123 13:44:25.122579 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l b a b ? perp j b b g
I0123 13:44:26.042136 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8798396587371826
I0123 13:44:28.704039 139631609110528 ddar.py:60] Depth 2/1000 time = 2.6616525650024414
I0123 13:44:30.118297 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4139454364776611
I0123 13:44:31.537396 139631609110528 ddar.py:60] Depth 4/1000 time = 1.418825387954712
I0123 13:44:32.960697 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4227750301361084
I0123 13:44:34.529731 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5482795238494873
I0123 13:44:36.048931 139631609110528 ddar.py:60] Depth 7/1000 time = 1.5190021991729736
I0123 13:44:38.948505 139631609110528 ddar.py:60] Depth 8/1000 time = 2.899325132369995
I0123 13:44:38.952771 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:44:38.952829 139631609110528 alphageometry.py:566] LM output (score=-2.579547): "l : T d l g i 14 ;"
I0123 13:44:38.952864 139631609110528 alphageometry.py:567] Translation: "l = on_tline l d g i"

I0123 13:44:38.952901 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l d g i ? perp j b b g"
I0123 13:44:38.953063 139631609110528 graph.py:498] 
I0123 13:44:38.953120 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l d g i ? perp j b b g
I0123 13:44:39.868642 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8740320205688477
I0123 13:44:41.260385 139631609110528 ddar.py:60] Depth 2/1000 time = 1.3915820121765137
I0123 13:44:42.585424 139631609110528 ddar.py:60] Depth 3/1000 time = 1.3248236179351807
I0123 13:44:43.937448 139631609110528 ddar.py:60] Depth 4/1000 time = 1.351802110671997
I0123 13:44:45.292060 139631609110528 ddar.py:60] Depth 5/1000 time = 1.3541591167449951
I0123 13:44:46.779470 139631609110528 ddar.py:60] Depth 6/1000 time = 1.4720942974090576
I0123 13:44:49.855161 139631609110528 ddar.py:60] Depth 7/1000 time = 3.0753958225250244
I0123 13:44:51.470617 139631609110528 ddar.py:60] Depth 8/1000 time = 1.6151525974273682
I0123 13:44:53.106164 139631609110528 ddar.py:60] Depth 9/1000 time = 1.6270198822021484
I0123 13:44:53.106406 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:44:53.106490 139631609110528 alphageometry.py:566] LM output (score=-2.755148): "l : T a c g l 14 ;"
I0123 13:44:53.106528 139631609110528 alphageometry.py:567] Translation: "l = on_tline l g a c"

I0123 13:44:53.106570 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l g a c ? perp j b b g"
I0123 13:44:53.106750 139631609110528 graph.py:498] 
I0123 13:44:53.106812 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l g a c ? perp j b b g
I0123 13:44:54.040663 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8907737731933594
I0123 13:44:55.394096 139631609110528 ddar.py:60] Depth 2/1000 time = 1.3532826900482178
I0123 13:44:56.801903 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4076168537139893
I0123 13:44:58.220419 139631609110528 ddar.py:60] Depth 4/1000 time = 1.418302297592163
I0123 13:45:00.992290 139631609110528 ddar.py:60] Depth 5/1000 time = 2.771496057510376
I0123 13:45:02.535761 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5250930786132812
I0123 13:45:04.041503 139631609110528 ddar.py:60] Depth 7/1000 time = 1.5055344104766846
I0123 13:45:05.552798 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5110526084899902
I0123 13:45:05.556765 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:45:05.556883 139631609110528 alphageometry.py:566] LM output (score=-2.828255): "l : T d l e f 14 ;"
I0123 13:45:05.556922 139631609110528 alphageometry.py:567] Translation: "l = on_tline l d e f"

I0123 13:45:05.556965 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l d e f ? perp j b b g"
I0123 13:45:05.557142 139631609110528 graph.py:498] 
I0123 13:45:05.557211 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l d e f ? perp j b b g
I0123 13:45:06.483144 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8835568428039551
I0123 13:45:07.906486 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4231603145599365
I0123 13:45:09.330243 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4234740734100342
I0123 13:45:12.218560 139631609110528 ddar.py:60] Depth 4/1000 time = 2.888051986694336
I0123 13:45:13.623221 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4042487144470215
I0123 13:45:15.109591 139631609110528 ddar.py:60] Depth 6/1000 time = 1.470810890197754
I0123 13:45:16.551963 139631609110528 ddar.py:60] Depth 7/1000 time = 1.4421496391296387
I0123 13:45:18.005167 139631609110528 ddar.py:60] Depth 8/1000 time = 1.4529767036437988
I0123 13:45:18.009654 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:45:18.009712 139631609110528 alphageometry.py:566] LM output (score=-2.844759): "l : T d l f i 14 ;"
I0123 13:45:18.009749 139631609110528 alphageometry.py:567] Translation: "l = on_tline l d f i"

I0123 13:45:18.009786 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l d f i ? perp j b b g"
I0123 13:45:18.009934 139631609110528 graph.py:498] 
I0123 13:45:18.009985 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l d f i ? perp j b b g
I0123 13:45:18.944638 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8900611400604248
I0123 13:45:20.369379 139631609110528 ddar.py:60] Depth 2/1000 time = 1.424576997756958
I0123 13:45:23.258522 139631609110528 ddar.py:60] Depth 3/1000 time = 2.888920545578003
I0123 13:45:24.754136 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4953677654266357
I0123 13:45:26.246540 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4919896125793457
I0123 13:45:27.836895 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5743329524993896
I0123 13:45:29.393291 139631609110528 ddar.py:60] Depth 7/1000 time = 1.5561223030090332
I0123 13:45:30.948324 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5547776222229004
I0123 13:45:30.952436 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:45:30.952528 139631609110528 alphageometry.py:566] LM output (score=-2.854558): "l : T d e g l 14 ;"
I0123 13:45:30.952565 139631609110528 alphageometry.py:567] Translation: "l = on_tline l g d e"

I0123 13:45:30.952621 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l g d e ? perp j b b g"
I0123 13:45:30.952861 139631609110528 graph.py:498] 
I0123 13:45:30.952936 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l g d e ? perp j b b g
I0123 13:45:31.872333 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8774104118347168
I0123 13:45:34.626768 139631609110528 ddar.py:60] Depth 2/1000 time = 2.754276752471924
I0123 13:45:36.082994 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4560043811798096
I0123 13:45:37.551990 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4687612056732178
I0123 13:45:39.017621 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4652705192565918
I0123 13:45:40.600761 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5640592575073242
I0123 13:45:42.132303 139631609110528 ddar.py:60] Depth 7/1000 time = 1.5313224792480469
I0123 13:45:43.678351 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5458085536956787
I0123 13:45:43.682588 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:45:43.682654 139631609110528 alphageometry.py:566] LM output (score=-2.909396): "l : T a b g l 14 ;"
I0123 13:45:43.682691 139631609110528 alphageometry.py:567] Translation: "l = on_tline l g a b"

I0123 13:45:43.682727 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l g a b ? perp j b b g"
I0123 13:45:43.682887 139631609110528 graph.py:498] 
I0123 13:45:43.682945 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l g a b ? perp j b b g
I0123 13:45:46.022993 139631609110528 ddar.py:60] Depth 1/1000 time = 2.2996394634246826
I0123 13:45:47.373903 139631609110528 ddar.py:60] Depth 2/1000 time = 1.3506031036376953
I0123 13:45:48.797163 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4229774475097656
I0123 13:45:50.226594 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4291820526123047
I0123 13:45:51.647768 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4207558631896973
I0123 13:45:53.203755 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5359599590301514
I0123 13:45:54.718806 139631609110528 ddar.py:60] Depth 7/1000 time = 1.5148534774780273
I0123 13:45:57.646165 139631609110528 ddar.py:60] Depth 8/1000 time = 2.9271328449249268
I0123 13:45:57.650027 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:45:57.650088 139631609110528 alphageometry.py:566] LM output (score=-2.911446): "l : T a b c l 14 ;"
I0123 13:45:57.650124 139631609110528 alphageometry.py:567] Translation: "l = on_tline l c a b"

I0123 13:45:57.650161 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l c a b ? perp j b b g"
I0123 13:45:57.650326 139631609110528 graph.py:498] 
I0123 13:45:57.650383 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l c a b ? perp j b b g
I0123 13:45:58.564717 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8729486465454102
I0123 13:45:59.913363 139631609110528 ddar.py:60] Depth 2/1000 time = 1.3484861850738525
I0123 13:46:01.341996 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4284074306488037
I0123 13:46:02.788239 139631609110528 ddar.py:60] Depth 4/1000 time = 1.446012258529663
I0123 13:46:04.234409 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4457364082336426
I0123 13:46:05.822633 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5676157474517822
I0123 13:46:08.844669 139631609110528 ddar.py:60] Depth 7/1000 time = 3.0217573642730713
I0123 13:46:10.391895 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5469448566436768
I0123 13:46:10.395785 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:46:10.395859 139631609110528 alphageometry.py:566] LM output (score=-2.925483): "l : T a l b d 14 ;"
I0123 13:46:10.395895 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a b d"

I0123 13:46:10.395936 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l a b d ? perp j b b g"
I0123 13:46:10.396100 139631609110528 graph.py:498] 
I0123 13:46:10.396161 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l a b d ? perp j b b g
I0123 13:46:11.304712 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8673069477081299
I0123 13:46:12.572394 139631609110528 ddar.py:60] Depth 2/1000 time = 1.2675178050994873
I0123 13:46:14.019453 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4468560218811035
I0123 13:46:15.453393 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4337077140808105
I0123 13:46:16.886910 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4331426620483398
I0123 13:46:19.793006 139631609110528 ddar.py:60] Depth 6/1000 time = 2.8876233100891113
I0123 13:46:21.282381 139631609110528 ddar.py:60] Depth 7/1000 time = 1.4891438484191895
I0123 13:46:22.792962 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5103678703308105
I0123 13:46:22.797044 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:46:22.797118 139631609110528 alphageometry.py:566] LM output (score=-2.954616): "l : T a b k l 14 ;"
I0123 13:46:22.797155 139631609110528 alphageometry.py:567] Translation: "l = on_tline l k a b"

I0123 13:46:22.797193 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l k a b ? perp j b b g"
I0123 13:46:22.797339 139631609110528 graph.py:498] 
I0123 13:46:22.797391 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l k a b ? perp j b b g
I0123 13:46:23.720009 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8827164173126221
I0123 13:46:25.113762 139631609110528 ddar.py:60] Depth 2/1000 time = 1.393557071685791
I0123 13:46:26.534919 139631609110528 ddar.py:60] Depth 3/1000 time = 1.420870065689087
I0123 13:46:27.964207 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4290170669555664
I0123 13:46:30.945251 139631609110528 ddar.py:60] Depth 5/1000 time = 2.9805827140808105
I0123 13:46:32.499538 139631609110528 ddar.py:60] Depth 6/1000 time = 1.534243106842041
I0123 13:46:34.016057 139631609110528 ddar.py:60] Depth 7/1000 time = 1.516308069229126
I0123 13:46:35.527756 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5114822387695312
I0123 13:46:35.531826 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:46:35.531881 139631609110528 alphageometry.py:566] LM output (score=-3.012812): "l : T a i b l 14 T a l b i 15 ;"
I0123 13:46:35.531916 139631609110528 alphageometry.py:567] Translation: "l = on_tline l b a i, on_tline l a b i"

I0123 13:46:35.531951 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l b a i, on_tline l a b i ? perp j b b g"
I0123 13:46:35.532114 139631609110528 graph.py:498] 
I0123 13:46:35.532171 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l b a i, on_tline l a b i ? perp j b b g
I0123 13:46:36.501852 139631609110528 ddar.py:60] Depth 1/1000 time = 0.925462007522583
I0123 13:46:37.887251 139631609110528 ddar.py:60] Depth 2/1000 time = 1.3852453231811523
I0123 13:46:39.513431 139631609110528 ddar.py:60] Depth 3/1000 time = 1.625981092453003
I0123 13:46:42.561582 139631609110528 ddar.py:60] Depth 4/1000 time = 3.0478925704956055
I0123 13:46:44.207916 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6458604335784912
I0123 13:46:45.998718 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7658402919769287
I0123 13:46:47.741776 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7427475452423096
I0123 13:46:49.496322 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7542178630828857
I0123 13:46:49.500937 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:46:49.501049 139631609110528 alphageometry.py:566] LM output (score=-3.017099): "l : T c k e l 14 ;"
I0123 13:46:49.501086 139631609110528 alphageometry.py:567] Translation: "l = on_tline l e c k"

I0123 13:46:49.501142 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l e c k ? perp j b b g"
I0123 13:46:49.501371 139631609110528 graph.py:498] 
I0123 13:46:49.501449 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l e c k ? perp j b b g
I0123 13:46:50.417171 139631609110528 ddar.py:60] Depth 1/1000 time = 0.8750202655792236
I0123 13:46:51.868337 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4510047435760498
I0123 13:46:54.783640 139631609110528 ddar.py:60] Depth 3/1000 time = 2.915090560913086
I0123 13:46:56.249762 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4658727645874023
I0123 13:46:57.706270 139631609110528 ddar.py:60] Depth 5/1000 time = 1.4560911655426025
I0123 13:46:59.312738 139631609110528 ddar.py:60] Depth 6/1000 time = 1.586069107055664
I0123 13:47:00.880655 139631609110528 ddar.py:60] Depth 7/1000 time = 1.567708969116211
I0123 13:47:02.446754 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5658671855926514
I0123 13:47:02.451346 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:47:02.451426 139631609110528 alphageometry.py:566] LM output (score=-3.045874): "l : T a i f l 14 ;"
I0123 13:47:02.451461 139631609110528 alphageometry.py:567] Translation: "l = on_tline l f a i"

I0123 13:47:02.451496 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l f a i ? perp j b b g"
I0123 13:47:02.451662 139631609110528 graph.py:498] 
I0123 13:47:02.451716 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_pline k c a b; l = on_tline l f a i ? perp j b b g
I0123 13:47:03.380253 139631609110528 ddar.py:60] Depth 1/1000 time = 0.888770341873169
I0123 13:47:06.151872 139631609110528 ddar.py:60] Depth 2/1000 time = 2.7714273929595947
I0123 13:47:07.583833 139631609110528 ddar.py:60] Depth 3/1000 time = 1.4316551685333252
I0123 13:47:09.018482 139631609110528 ddar.py:60] Depth 4/1000 time = 1.4343249797821045
I0123 13:47:10.451904 139631609110528 ddar.py:60] Depth 5/1000 time = 1.433013916015625
I0123 13:47:12.013187 139631609110528 ddar.py:60] Depth 6/1000 time = 1.5427720546722412
I0123 13:47:13.527698 139631609110528 ddar.py:60] Depth 7/1000 time = 1.5142982006072998
I0123 13:47:15.049405 139631609110528 ddar.py:60] Depth 8/1000 time = 1.5214769840240479
I0123 13:47:15.053989 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:47:15.054074 139631609110528 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : D a k b k 13 ; x00
I0123 13:47:20.559264 139631609110528 alphageometry.py:566] LM output (score=-1.408927): "l : T d k g l 14 ;"
I0123 13:47:20.559453 139631609110528 alphageometry.py:567] Translation: "l = on_tline l g d k"

I0123 13:47:20.559498 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l g d k ? perp j b b g"
I0123 13:47:20.559646 139631609110528 graph.py:498] 
I0123 13:47:20.559702 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l g d k ? perp j b b g
I0123 13:47:21.588173 139631609110528 ddar.py:60] Depth 1/1000 time = 0.979884147644043
I0123 13:47:24.629711 139631609110528 ddar.py:60] Depth 2/1000 time = 3.0413589477539062
I0123 13:47:26.315239 139631609110528 ddar.py:60] Depth 3/1000 time = 1.685288906097412
I0123 13:47:27.992858 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6773593425750732
I0123 13:47:29.667378 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6740992069244385
I0123 13:47:31.471847 139631609110528 ddar.py:60] Depth 6/1000 time = 1.78155517578125
I0123 13:47:33.222439 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7503621578216553
I0123 13:47:36.343931 139631609110528 ddar.py:60] Depth 8/1000 time = 3.1212406158447266
I0123 13:47:36.348623 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:47:36.348694 139631609110528 alphageometry.py:566] LM output (score=-1.486173): "l : T d k k l 14 ;"
I0123 13:47:36.348732 139631609110528 alphageometry.py:567] Translation: "l = on_tline l k d k"

I0123 13:47:36.348770 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l k d k ? perp j b b g"
I0123 13:47:36.349120 139631609110528 graph.py:498] 
I0123 13:47:36.349199 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l k d k ? perp j b b g
I0123 13:47:37.362904 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9611971378326416
I0123 13:47:38.850937 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4878630638122559
I0123 13:47:40.531903 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6807482242584229
I0123 13:47:42.209815 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6776676177978516
I0123 13:47:43.882600 139631609110528 ddar.py:60] Depth 5/1000 time = 1.672408103942871
I0123 13:47:47.161144 139631609110528 ddar.py:60] Depth 6/1000 time = 3.254746198654175
I0123 13:47:48.937323 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7759361267089844
I0123 13:47:50.719399 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7818264961242676
I0123 13:47:50.724572 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:47:50.724626 139631609110528 alphageometry.py:566] LM output (score=-1.523640): "l : C b c l 14 D b l c l 15 ;"
I0123 13:47:50.724662 139631609110528 alphageometry.py:567] Translation: "l = on_line l b c, on_bline l c b"

I0123 13:47:50.724699 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l b c, on_bline l c b ? perp j b b g"
I0123 13:47:50.724852 139631609110528 graph.py:498] 
I0123 13:47:50.724911 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l b c, on_bline l c b ? perp j b b g
I0123 13:47:51.850140 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0620918273925781
I0123 13:47:53.832873 139631609110528 ddar.py:60] Depth 2/1000 time = 1.9825313091278076
I0123 13:47:55.993003 139631609110528 ddar.py:60] Depth 3/1000 time = 2.1598854064941406
I0123 13:47:59.683333 139631609110528 ddar.py:60] Depth 4/1000 time = 3.6899914741516113
I0123 13:48:01.915872 139631609110528 ddar.py:60] Depth 5/1000 time = 2.2318785190582275
I0123 13:48:04.200649 139631609110528 ddar.py:60] Depth 6/1000 time = 2.2556450366973877
I0123 13:48:06.430644 139631609110528 ddar.py:60] Depth 7/1000 time = 2.2297582626342773
I0123 13:48:10.091510 139631609110528 ddar.py:60] Depth 8/1000 time = 3.6606075763702393
I0123 13:48:10.099447 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:48:10.099502 139631609110528 alphageometry.py:566] LM output (score=-1.554703): "l : C a b l 14 D a l b l 15 ;"
I0123 13:48:10.099536 139631609110528 alphageometry.py:567] Translation: "l = on_line l a b, on_bline l b a"

I0123 13:48:10.099573 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l a b, on_bline l b a ? perp j b b g"
I0123 13:48:10.099739 139631609110528 graph.py:498] 
I0123 13:48:10.099796 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l a b, on_bline l b a ? perp j b b g
I0123 13:48:11.247312 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0850145816802979
I0123 13:48:13.121237 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8737406730651855
I0123 13:48:15.167138 139631609110528 ddar.py:60] Depth 3/1000 time = 2.0456442832946777
I0123 13:48:17.184931 139631609110528 ddar.py:60] Depth 4/1000 time = 2.017521381378174
I0123 13:48:20.683080 139631609110528 ddar.py:60] Depth 5/1000 time = 3.4976625442504883
I0123 13:48:22.815991 139631609110528 ddar.py:60] Depth 6/1000 time = 2.111177444458008
I0123 13:48:24.907915 139631609110528 ddar.py:60] Depth 7/1000 time = 2.091602087020874
I0123 13:48:27.013229 139631609110528 ddar.py:60] Depth 8/1000 time = 2.1049609184265137
I0123 13:48:27.018233 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:48:27.018351 139631609110528 alphageometry.py:566] LM output (score=-1.846568): "l : C a c l 14 D a l c l 15 ;"
I0123 13:48:27.018392 139631609110528 alphageometry.py:567] Translation: "l = on_line l a c, on_bline l c a"

I0123 13:48:27.018456 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l a c, on_bline l c a ? perp j b b g"
I0123 13:48:27.018696 139631609110528 graph.py:498] 
I0123 13:48:27.018775 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l a c, on_bline l c a ? perp j b b g
I0123 13:48:28.153621 139631609110528 ddar.py:60] Depth 1/1000 time = 1.069563388824463
I0123 13:48:31.786807 139631609110528 ddar.py:60] Depth 2/1000 time = 3.6329755783081055
I0123 13:48:34.010768 139631609110528 ddar.py:60] Depth 3/1000 time = 2.2237236499786377
I0123 13:48:36.262123 139631609110528 ddar.py:60] Depth 4/1000 time = 2.251089096069336
I0123 13:48:38.542562 139631609110528 ddar.py:60] Depth 5/1000 time = 2.279972791671753
I0123 13:48:40.892233 139631609110528 ddar.py:60] Depth 6/1000 time = 2.3232004642486572
I0123 13:48:44.703479 139631609110528 ddar.py:60] Depth 7/1000 time = 3.810971975326538
I0123 13:48:46.987195 139631609110528 ddar.py:60] Depth 8/1000 time = 2.2833406925201416
I0123 13:48:46.994741 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:48:46.994829 139631609110528 alphageometry.py:566] LM output (score=-1.897210): "l : C a i l 14 D a l i l 15 ;"
I0123 13:48:46.994865 139631609110528 alphageometry.py:567] Translation: "l = on_line l a i, on_bline l i a"

I0123 13:48:46.994915 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l a i, on_bline l i a ? perp j b b g"
I0123 13:48:46.995108 139631609110528 graph.py:498] 
I0123 13:48:46.995171 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l a i, on_bline l i a ? perp j b b g
I0123 13:48:48.106937 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0436766147613525
I0123 13:48:49.820591 139631609110528 ddar.py:60] Depth 2/1000 time = 1.713463544845581
I0123 13:48:51.891742 139631609110528 ddar.py:60] Depth 3/1000 time = 2.0709261894226074
I0123 13:48:53.988338 139631609110528 ddar.py:60] Depth 4/1000 time = 2.096332550048828
I0123 13:48:57.490088 139631609110528 ddar.py:60] Depth 5/1000 time = 3.50130295753479
I0123 13:48:59.656701 139631609110528 ddar.py:60] Depth 6/1000 time = 2.140302896499634
I0123 13:49:01.773085 139631609110528 ddar.py:60] Depth 7/1000 time = 2.1161210536956787
I0123 13:49:03.905079 139631609110528 ddar.py:60] Depth 8/1000 time = 2.1316099166870117
I0123 13:49:03.910268 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:49:03.910378 139631609110528 alphageometry.py:566] LM output (score=-2.093374): "l : T d k d l 14 ;"
I0123 13:49:03.910415 139631609110528 alphageometry.py:567] Translation: "l = on_tline l d d k"

I0123 13:49:03.910472 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l d d k ? perp j b b g"
I0123 13:49:03.910691 139631609110528 graph.py:498] 
I0123 13:49:03.910769 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l d d k ? perp j b b g
I0123 13:49:04.941960 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9779245853424072
I0123 13:49:06.469583 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5274207592010498
I0123 13:49:09.629654 139631609110528 ddar.py:60] Depth 3/1000 time = 3.1598260402679443
I0123 13:49:11.296570 139631609110528 ddar.py:60] Depth 4/1000 time = 1.666658639907837
I0123 13:49:12.949242 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6522941589355469
I0123 13:49:14.760181 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7879953384399414
I0123 13:49:16.520609 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7602221965789795
I0123 13:49:18.278157 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7573151588439941
I0123 13:49:18.282828 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:49:18.282905 139631609110528 alphageometry.py:566] LM output (score=-2.212620): "l : T d k h l 14 ;"
I0123 13:49:18.282942 139631609110528 alphageometry.py:567] Translation: "l = on_tline l h d k"

I0123 13:49:18.282978 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l h d k ? perp j b b g"
I0123 13:49:18.283135 139631609110528 graph.py:498] 
I0123 13:49:18.283189 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l h d k ? perp j b b g
I0123 13:49:20.804862 139631609110528 ddar.py:60] Depth 1/1000 time = 2.4703001976013184
I0123 13:49:22.391033 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5859370231628418
I0123 13:49:24.018415 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6270625591278076
I0123 13:49:25.673112 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6543729305267334
I0123 13:49:27.321837 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6482791900634766
I0123 13:49:29.118571 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7740323543548584
I0123 13:49:32.388216 139631609110528 ddar.py:60] Depth 7/1000 time = 3.2694344520568848
I0123 13:49:34.143934 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7554666996002197
I0123 13:49:34.148338 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:49:34.148404 139631609110528 alphageometry.py:566] LM output (score=-2.231483): "l : T d k f l 14 ;"
I0123 13:49:34.148441 139631609110528 alphageometry.py:567] Translation: "l = on_tline l f d k"

I0123 13:49:34.148481 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l f d k ? perp j b b g"
I0123 13:49:34.148681 139631609110528 graph.py:498] 
I0123 13:49:34.148740 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l f d k ? perp j b b g
I0123 13:49:35.170314 139631609110528 ddar.py:60] Depth 1/1000 time = 0.970219612121582
I0123 13:49:36.671826 139631609110528 ddar.py:60] Depth 2/1000 time = 1.501347541809082
I0123 13:49:38.319485 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6474308967590332
I0123 13:49:39.995946 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6761982440948486
I0123 13:49:41.659429 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6630637645721436
I0123 13:49:45.060511 139631609110528 ddar.py:60] Depth 6/1000 time = 3.3782906532287598
I0123 13:49:46.821477 139631609110528 ddar.py:60] Depth 7/1000 time = 1.760690450668335
I0123 13:49:48.597410 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7754895687103271
I0123 13:49:48.602586 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:49:48.602653 139631609110528 alphageometry.py:566] LM output (score=-2.273304): "l : D a l b l 14 ;"
I0123 13:49:48.602690 139631609110528 alphageometry.py:567] Translation: "l = on_bline l b a"

I0123 13:49:48.602732 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_bline l b a ? perp j b b g"
I0123 13:49:48.602916 139631609110528 graph.py:498] 
I0123 13:49:48.602977 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_bline l b a ? perp j b b g
I0123 13:49:49.689009 139631609110528 ddar.py:60] Depth 1/1000 time = 1.021846055984497
I0123 13:49:51.559842 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8706655502319336
I0123 13:49:53.491587 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9313271045684814
I0123 13:49:55.450994 139631609110528 ddar.py:60] Depth 4/1000 time = 1.959148645401001
I0123 13:49:58.878251 139631609110528 ddar.py:60] Depth 5/1000 time = 3.426831007003784
I0123 13:50:01.010694 139631609110528 ddar.py:60] Depth 6/1000 time = 2.1107897758483887
I0123 13:50:03.102663 139631609110528 ddar.py:60] Depth 7/1000 time = 2.0916476249694824
I0123 13:50:05.192929 139631609110528 ddar.py:60] Depth 8/1000 time = 2.0899131298065186
I0123 13:50:05.197631 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:50:05.197751 139631609110528 alphageometry.py:566] LM output (score=-2.314826): "l : C b e l 14 D b l e l 15 ;"
I0123 13:50:05.197788 139631609110528 alphageometry.py:567] Translation: "l = on_line l b e, on_bline l e b"

I0123 13:50:05.197848 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l b e, on_bline l e b ? perp j b b g"
I0123 13:50:05.198085 139631609110528 graph.py:498] 
I0123 13:50:05.198163 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l b e, on_bline l e b ? perp j b b g
I0123 13:50:06.331659 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0685310363769531
I0123 13:50:09.754233 139631609110528 ddar.py:60] Depth 2/1000 time = 3.422358989715576
I0123 13:50:11.653217 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8987548351287842
I0123 13:50:13.571166 139631609110528 ddar.py:60] Depth 4/1000 time = 1.917694091796875
I0123 13:50:15.494294 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9226548671722412
I0123 13:50:19.082460 139631609110528 ddar.py:60] Depth 6/1000 time = 3.562798261642456
I0123 13:50:21.112219 139631609110528 ddar.py:60] Depth 7/1000 time = 2.0294885635375977
I0123 13:50:23.162053 139631609110528 ddar.py:60] Depth 8/1000 time = 2.049464225769043
I0123 13:50:23.168738 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:50:23.168846 139631609110528 alphageometry.py:566] LM output (score=-2.348979): "l : ^ d b d l d l d c 14 ;"
I0123 13:50:23.168885 139631609110528 alphageometry.py:567] Translation: "ERROR: Invalid predicate ^ d b d l d l d c"

I0123 13:50:23.168937 139631609110528 alphageometry.py:566] LM output (score=-2.389343): "l : P a l b e 14 ;"
I0123 13:50:23.168964 139631609110528 alphageometry.py:567] Translation: "l = on_pline l a b e"

I0123 13:50:23.169002 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_pline l a b e ? perp j b b g"
I0123 13:50:23.169214 139631609110528 graph.py:498] 
I0123 13:50:23.169294 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_pline l a b e ? perp j b b g
I0123 13:50:24.177679 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9547159671783447
I0123 13:50:25.596261 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4183788299560547
I0123 13:50:28.726649 139631609110528 ddar.py:60] Depth 3/1000 time = 3.13017201423645
I0123 13:50:30.358943 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6320438385009766
I0123 13:50:31.987704 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6283869743347168
I0123 13:50:33.756278 139631609110528 ddar.py:60] Depth 6/1000 time = 1.746044397354126
I0123 13:50:35.462952 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7064697742462158
I0123 13:50:37.193252 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7300760746002197
I0123 13:50:37.197487 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:50:37.197550 139631609110528 alphageometry.py:566] LM output (score=-2.421897): "l : T a l d k 14 ;"
I0123 13:50:37.197586 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a d k"

I0123 13:50:37.197623 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l a d k ? perp j b b g"
I0123 13:50:37.197804 139631609110528 graph.py:498] 
I0123 13:50:37.197859 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l a d k ? perp j b b g
I0123 13:50:38.207050 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9592132568359375
I0123 13:50:41.360356 139631609110528 ddar.py:60] Depth 2/1000 time = 3.153125286102295
I0123 13:50:43.004459 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6437742710113525
I0123 13:50:44.694213 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6894006729125977
I0123 13:50:46.372951 139631609110528 ddar.py:60] Depth 5/1000 time = 1.678279161453247
I0123 13:50:48.187647 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7923946380615234
I0123 13:50:51.538782 139631609110528 ddar.py:60] Depth 7/1000 time = 3.3509035110473633
I0123 13:50:53.301618 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7625799179077148
I0123 13:50:53.306047 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:50:53.306117 139631609110528 alphageometry.py:566] LM output (score=-2.462767): "l : T a l d e 14 ;"
I0123 13:50:53.306153 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a d e"

I0123 13:50:53.306191 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l a d e ? perp j b b g"
I0123 13:50:53.306353 139631609110528 graph.py:498] 
I0123 13:50:53.306409 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l a d e ? perp j b b g
I0123 13:50:54.305816 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9454848766326904
I0123 13:50:55.931009 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6250195503234863
I0123 13:50:57.720891 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7896738052368164
I0123 13:50:59.530034 139631609110528 ddar.py:60] Depth 4/1000 time = 1.808908224105835
I0123 13:51:01.336408 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8059229850769043
I0123 13:51:04.899659 139631609110528 ddar.py:60] Depth 6/1000 time = 3.535595178604126
I0123 13:51:06.811267 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9113569259643555
I0123 13:51:08.736127 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9246242046356201
I0123 13:51:08.740638 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:51:08.740703 139631609110528 alphageometry.py:566] LM output (score=-2.561357): "l : T d k i l 14 ;"
I0123 13:51:08.740739 139631609110528 alphageometry.py:567] Translation: "l = on_tline l i d k"

I0123 13:51:08.740781 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l i d k ? perp j b b g"
I0123 13:51:08.740940 139631609110528 graph.py:498] 
I0123 13:51:08.741005 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l i d k ? perp j b b g
I0123 13:51:09.754424 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9618752002716064
I0123 13:51:11.350219 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5956406593322754
I0123 13:51:12.979600 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6291770935058594
I0123 13:51:14.621582 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6417677402496338
I0123 13:51:17.771724 139631609110528 ddar.py:60] Depth 5/1000 time = 3.1497581005096436
I0123 13:51:19.557300 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7637813091278076
I0123 13:51:21.308441 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7508890628814697
I0123 13:51:23.059717 139631609110528 ddar.py:60] Depth 8/1000 time = 1.750934362411499
I0123 13:51:23.064261 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:51:23.064354 139631609110528 alphageometry.py:566] LM output (score=-2.600678): "l : C g h l 14 D g l h l 15 ;"
I0123 13:51:23.064414 139631609110528 alphageometry.py:567] Translation: "l = on_line l g h, on_bline l h g"

I0123 13:51:23.064468 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l g h, on_bline l h g ? perp j b b g"
I0123 13:51:23.064686 139631609110528 graph.py:498] 
I0123 13:51:23.064766 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l g h, on_bline l h g ? perp j b b g
I0123 13:51:24.239617 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1115374565124512
I0123 13:51:26.726799 139631609110528 ddar.py:60] Depth 2/1000 time = 2.4869604110717773
I0123 13:51:30.890659 139631609110528 ddar.py:60] Depth 3/1000 time = 4.16362452507019
I0123 13:51:33.562663 139631609110528 ddar.py:60] Depth 4/1000 time = 2.671767473220825
I0123 13:51:37.780471 139631609110528 ddar.py:60] Depth 5/1000 time = 4.217540502548218
I0123 13:51:40.505367 139631609110528 ddar.py:60] Depth 6/1000 time = 2.7243409156799316
I0123 13:51:43.470226 139631609110528 ddar.py:60] Depth 7/1000 time = 2.938352584838867
I0123 13:51:48.071755 139631609110528 ddar.py:60] Depth 8/1000 time = 4.6012122631073
I0123 13:51:51.197783 139631609110528 ddar.py:60] Depth 9/1000 time = 3.125784158706665
I0123 13:51:55.994172 139631609110528 ddar.py:60] Depth 10/1000 time = 4.7961554527282715
I0123 13:51:59.370131 139631609110528 ddar.py:60] Depth 11/1000 time = 3.3756773471832275
I0123 13:52:04.411810 139631609110528 ddar.py:60] Depth 12/1000 time = 5.0206053256988525
I0123 13:52:04.412234 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:52:04.412296 139631609110528 alphageometry.py:566] LM output (score=-2.603705): "l : P a l d k 14 ;"
I0123 13:52:04.412332 139631609110528 alphageometry.py:567] Translation: "l = on_pline l a d k"

I0123 13:52:04.412372 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_pline l a d k ? perp j b b g"
I0123 13:52:04.412533 139631609110528 graph.py:498] 
I0123 13:52:04.412591 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_pline l a d k ? perp j b b g
I0123 13:52:05.426702 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9548144340515137
I0123 13:52:06.992979 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5661051273345947
I0123 13:52:08.600636 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6074538230895996
I0123 13:52:10.231181 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6303279399871826
I0123 13:52:11.862031 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6304678916931152
I0123 13:52:13.668041 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7833757400512695
I0123 13:52:16.941240 139631609110528 ddar.py:60] Depth 7/1000 time = 3.2729640007019043
I0123 13:52:18.694843 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7533888816833496
I0123 13:52:18.699276 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:52:18.699341 139631609110528 alphageometry.py:566] LM output (score=-2.624954): "l : T a c g l 14 ;"
I0123 13:52:18.699376 139631609110528 alphageometry.py:567] Translation: "l = on_tline l g a c"

I0123 13:52:18.699437 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l g a c ? perp j b b g"
I0123 13:52:18.699592 139631609110528 graph.py:498] 
I0123 13:52:18.699650 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l g a c ? perp j b b g
I0123 13:52:19.708010 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9559319019317627
I0123 13:52:21.311327 139631609110528 ddar.py:60] Depth 2/1000 time = 1.603050947189331
I0123 13:52:23.078765 139631609110528 ddar.py:60] Depth 3/1000 time = 1.767141342163086
I0123 13:52:24.844726 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7656865119934082
I0123 13:52:26.616493 139631609110528 ddar.py:60] Depth 5/1000 time = 1.771324872970581
I0123 13:52:28.565487 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9219942092895508
I0123 13:52:32.028576 139631609110528 ddar.py:60] Depth 7/1000 time = 3.4628732204437256
I0123 13:52:33.922846 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8939955234527588
I0123 13:52:33.927240 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:52:33.927336 139631609110528 alphageometry.py:566] LM output (score=-2.647820): "l : T a c a l 14 ;"
I0123 13:52:33.927375 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a a c"

I0123 13:52:33.927412 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l a a c ? perp j b b g"
I0123 13:52:33.927576 139631609110528 graph.py:498] 
I0123 13:52:33.927634 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l a a c ? perp j b b g
I0123 13:52:34.932040 139631609110528 ddar.py:60] Depth 1/1000 time = 0.953794002532959
I0123 13:52:36.437980 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5057604312896729
I0123 13:52:38.216590 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7784059047698975
I0123 13:52:40.060152 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8433082103729248
I0123 13:52:41.870909 139631609110528 ddar.py:60] Depth 5/1000 time = 1.810236930847168
I0123 13:52:45.521956 139631609110528 ddar.py:60] Depth 6/1000 time = 3.6237874031066895
I0123 13:52:47.454470 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9322800636291504
I0123 13:52:49.403017 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9483156204223633
I0123 13:52:49.407393 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:52:49.407469 139631609110528 alphageometry.py:566] LM output (score=-2.730924): "l : C a d l 14 D a d d l 15 ;"
I0123 13:52:49.407506 139631609110528 alphageometry.py:567] Translation: "l = on_line l a d, on_circle l d a"

I0123 13:52:49.407547 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l a d, on_circle l d a ? perp j b b g"
I0123 13:52:49.407706 139631609110528 graph.py:498] 
I0123 13:52:49.407770 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l a d, on_circle l d a ? perp j b b g
I0123 13:52:50.955272 139631609110528 ddar.py:60] Depth 1/1000 time = 1.487290620803833
I0123 13:52:53.726814 139631609110528 ddar.py:60] Depth 2/1000 time = 2.771346092224121
I0123 13:52:58.303062 139631609110528 ddar.py:60] Depth 3/1000 time = 4.576024055480957
I0123 13:53:01.287419 139631609110528 ddar.py:60] Depth 4/1000 time = 2.9840338230133057
I0123 13:53:04.273626 139631609110528 ddar.py:60] Depth 5/1000 time = 2.9855833053588867
I0123 13:53:07.348971 139631609110528 ddar.py:60] Depth 6/1000 time = 3.039952039718628
I0123 13:53:10.355467 139631609110528 ddar.py:60] Depth 7/1000 time = 3.006263494491577
I0123 13:53:14.973863 139631609110528 ddar.py:60] Depth 8/1000 time = 4.618134498596191
I0123 13:53:14.979400 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:53:14.979464 139631609110528 alphageometry.py:566] LM output (score=-2.875710): "l : T a i h l 14 ;"
I0123 13:53:14.979500 139631609110528 alphageometry.py:567] Translation: "l = on_tline l h a i"

I0123 13:53:14.979537 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l h a i ? perp j b b g"
I0123 13:53:14.979698 139631609110528 graph.py:498] 
I0123 13:53:14.979759 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l h a i ? perp j b b g
I0123 13:53:15.989353 139631609110528 ddar.py:60] Depth 1/1000 time = 0.959716796875
I0123 13:53:17.625962 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6364245414733887
I0123 13:53:19.435864 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8096535205841064
I0123 13:53:21.261024 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8248059749603271
I0123 13:53:23.070456 139631609110528 ddar.py:60] Depth 5/1000 time = 1.8089165687561035
I0123 13:53:25.071314 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9739234447479248
I0123 13:53:28.601747 139631609110528 ddar.py:60] Depth 7/1000 time = 3.530207395553589
I0123 13:53:30.546030 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9440326690673828
I0123 13:53:30.550647 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:53:30.550713 139631609110528 alphageometry.py:566] LM output (score=-2.992934): "l : C a d l 14 D a l d l 15 ;"
I0123 13:53:30.550748 139631609110528 alphageometry.py:567] Translation: "l = on_line l a d, on_bline l d a"

I0123 13:53:30.550787 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l a d, on_bline l d a ? perp j b b g"
I0123 13:53:30.550955 139631609110528 graph.py:498] 
I0123 13:53:30.551016 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_line l a d, on_bline l d a ? perp j b b g
I0123 13:53:31.626289 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0117759704589844
I0123 13:53:33.128299 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5018284320831299
I0123 13:53:34.830713 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7021801471710205
I0123 13:53:36.540667 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7096631526947021
I0123 13:53:38.259109 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7180066108703613
I0123 13:53:41.690454 139631609110528 ddar.py:60] Depth 6/1000 time = 3.411289691925049
I0123 13:53:43.513699 139631609110528 ddar.py:60] Depth 7/1000 time = 1.8229038715362549
I0123 13:53:45.348943 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8349721431732178
I0123 13:53:45.354153 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:53:45.354230 139631609110528 alphageometry.py:566] LM output (score=-3.110167): "l : D a l b l 14 D b l d l 15 ;"
I0123 13:53:45.354271 139631609110528 alphageometry.py:567] Translation: "l = on_bline l b a, on_bline l d b"

I0123 13:53:45.354320 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_bline l b a, on_bline l d b ? perp j b b g"
I0123 13:53:45.354506 139631609110528 graph.py:498] 
I0123 13:53:45.354568 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_bline l b a, on_bline l d b ? perp j b b g
I0123 13:53:46.657080 139631609110528 ddar.py:60] Depth 1/1000 time = 1.2270667552947998
I0123 13:53:48.532197 139631609110528 ddar.py:60] Depth 2/1000 time = 1.874931812286377
I0123 13:53:50.633834 139631609110528 ddar.py:60] Depth 3/1000 time = 2.1014046669006348
I0123 13:53:54.259319 139631609110528 ddar.py:60] Depth 4/1000 time = 3.6252079010009766
I0123 13:53:56.391553 139631609110528 ddar.py:60] Depth 5/1000 time = 2.131793260574341
I0123 13:53:58.776036 139631609110528 ddar.py:60] Depth 6/1000 time = 2.350188970565796
I0123 13:54:01.084424 139631609110528 ddar.py:60] Depth 7/1000 time = 2.3080906867980957
I0123 13:54:05.069851 139631609110528 ddar.py:60] Depth 8/1000 time = 3.9850738048553467
I0123 13:54:05.075091 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:54:05.075161 139631609110528 alphageometry.py:566] LM output (score=-3.112313): "l : T a c h l 14 ;"
I0123 13:54:05.075197 139631609110528 alphageometry.py:567] Translation: "l = on_tline l h a c"

I0123 13:54:05.075242 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l h a c ? perp j b b g"
I0123 13:54:05.075416 139631609110528 graph.py:498] 
I0123 13:54:05.075478 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l h a c ? perp j b b g
I0123 13:54:06.087019 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9589905738830566
I0123 13:54:07.579557 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4923710823059082
I0123 13:54:09.328994 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7492234706878662
I0123 13:54:11.106864 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7776198387145996
I0123 13:54:12.886881 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7795965671539307
I0123 13:54:14.850584 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9366707801818848
I0123 13:54:16.769253 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9184353351593018
I0123 13:54:20.225096 139631609110528 ddar.py:60] Depth 8/1000 time = 3.45554256439209
I0123 13:54:20.229562 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:54:20.229671 139631609110528 alphageometry.py:566] LM output (score=-3.121236): "l : T k d k l 14 ;"
I0123 13:54:20.229711 139631609110528 alphageometry.py:567] Translation: "l = on_tline l k k d"

I0123 13:54:20.229763 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l k k d ? perp j b b g"
I0123 13:54:20.229954 139631609110528 graph.py:498] 
I0123 13:54:20.230014 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l k k d ? perp j b b g
I0123 13:54:21.240071 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9587862491607666
I0123 13:54:22.851368 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6111109256744385
I0123 13:54:24.506182 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6545584201812744
I0123 13:54:26.157731 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6513020992279053
I0123 13:54:27.817867 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6597557067871094
I0123 13:54:29.626297 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7852203845977783
I0123 13:54:32.973618 139631609110528 ddar.py:60] Depth 7/1000 time = 3.3470969200134277
I0123 13:54:34.743382 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7695086002349854
I0123 13:54:34.748512 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:54:34.748591 139631609110528 alphageometry.py:566] LM output (score=-3.127991): "l : T d k j l 14 ;"
I0123 13:54:34.748629 139631609110528 alphageometry.py:567] Translation: "l = on_tline l j d k"

I0123 13:54:34.748665 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l j d k ? perp j b b g"
I0123 13:54:34.748817 139631609110528 graph.py:498] 
I0123 13:54:34.748866 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_tline l j d k ? perp j b b g
I0123 13:54:35.771138 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9705424308776855
I0123 13:54:37.234001 139631609110528 ddar.py:60] Depth 2/1000 time = 1.4626965522766113
I0123 13:54:38.865232 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6309914588928223
I0123 13:54:40.509815 139631609110528 ddar.py:60] Depth 4/1000 time = 1.644242525100708
I0123 13:54:42.153337 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6430094242095947
I0123 13:54:45.573466 139631609110528 ddar.py:60] Depth 6/1000 time = 3.3954412937164307
I0123 13:54:47.312497 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7387990951538086
I0123 13:54:49.059822 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7470879554748535
I0123 13:54:49.064264 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:54:49.064332 139631609110528 alphageometry.py:566] LM output (score=-3.158187): "l : P a b c l 14 ;"
I0123 13:54:49.064371 139631609110528 alphageometry.py:567] Translation: "l = on_pline l c a b"

I0123 13:54:49.064411 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_pline l c a b ? perp j b b g"
I0123 13:54:49.064599 139631609110528 graph.py:498] 
I0123 13:54:49.064666 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_pline l c a b ? perp j b b g
I0123 13:54:50.063809 139631609110528 ddar.py:60] Depth 1/1000 time = 0.946479320526123
I0123 13:54:51.631319 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5673277378082275
I0123 13:54:53.257469 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6259324550628662
I0123 13:54:54.904387 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6466724872589111
I0123 13:54:58.161652 139631609110528 ddar.py:60] Depth 5/1000 time = 3.2568674087524414
I0123 13:54:59.951678 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7696821689605713
I0123 13:55:01.710721 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7587075233459473
I0123 13:55:03.475541 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7644925117492676
I0123 13:55:03.479967 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:55:03.480074 139631609110528 alphageometry.py:566] LM output (score=-3.177256): "l : P a l b d 14 ;"
I0123 13:55:03.480110 139631609110528 alphageometry.py:567] Translation: "l = on_pline l a b d"

I0123 13:55:03.480167 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_pline l a b d ? perp j b b g"
I0123 13:55:03.480396 139631609110528 graph.py:498] 
I0123 13:55:03.480468 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_bline k b a; l = on_pline l a b d ? perp j b b g
I0123 13:55:04.493281 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9598488807678223
I0123 13:55:06.059315 139631609110528 ddar.py:60] Depth 2/1000 time = 1.5658564567565918
I0123 13:55:07.688179 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6286439895629883
I0123 13:55:10.936119 139631609110528 ddar.py:60] Depth 4/1000 time = 3.24770450592041
I0123 13:55:12.595168 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6586494445800781
I0123 13:55:14.415785 139631609110528 ddar.py:60] Depth 6/1000 time = 1.7995882034301758
I0123 13:55:16.189294 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7732698917388916
I0123 13:55:17.964743 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7752094268798828
I0123 13:55:17.969716 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:55:17.969795 139631609110528 alphageometry.py:566] LM output (score=-3.232177): "l : ^ d b d l d l d c 14 P d k d l 15 ;"
I0123 13:55:17.969833 139631609110528 alphageometry.py:567] Translation: "ERROR: Invalid predicate ^ d b d l d l d c"

I0123 13:55:17.969874 139631609110528 alphageometry.py:566] LM output (score=-3.274371): "l : D a l b l 14 D b l b l 15 ;"
I0123 13:55:17.969903 139631609110528 alphageometry.py:567] Translation: "ERROR: Traceback (most recent call last):
  File "/home/chi/alphageometry-test/alphageometry.py", line 438, in try_translate_constrained_to_construct
    g.copy().add_clause(clause, 0, DEFINITIONS)
  File "/home/chi/alphageometry-test/graph.py", line 2570, in add_clause
    raise DepCheckFailError(
graph.DepCheckFailError: diff b b
"

I0123 13:55:17.969939 139631609110528 alphageometry.py:566] LM output (score=-3.339094): "l : D a l b l 14 ^ b a b l a l a b 15 ;"
I0123 13:55:17.969966 139631609110528 alphageometry.py:567] Translation: "ERROR: Invalid predicate ^ b a b l a l a b"

I0123 13:55:17.970034 139631609110528 alphageometry.py:549] Decoding from {S} a : ; b : ; c : ; d : D a d b d 00 D b d c d 01 ; e : C b d e 02 ; f : C c e f 03 D c f e f 04 ; g : D b e e g 05 D c f f g 06 ; h : D b e e h 07 D c f f h 08 ; i : C c g i 09 D c d d i 10 ; j : C e i j 11 T c i c j 12 ? T j b b g {F1} x00 k : C a i k 13 D a k i k 14 ; x00
I0123 13:55:23.666895 139631609110528 alphageometry.py:566] LM output (score=-1.079458): "l : C b i l 15 D b l i l 16 ;"
I0123 13:55:23.667272 139631609110528 alphageometry.py:567] Translation: "l = on_line l b i, on_bline l i b"

I0123 13:55:23.667344 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l b i, on_bline l i b ? perp j b b g"
I0123 13:55:23.667592 139631609110528 graph.py:498] 
I0123 13:55:23.667674 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l b i, on_bline l i b ? perp j b b g
I0123 13:55:24.829391 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0978639125823975
I0123 13:55:28.602885 139631609110528 ddar.py:60] Depth 2/1000 time = 3.7732837200164795
I0123 13:55:30.842771 139631609110528 ddar.py:60] Depth 3/1000 time = 2.2396538257598877
I0123 13:55:33.096388 139631609110528 ddar.py:60] Depth 4/1000 time = 2.2533516883850098
I0123 13:55:35.370040 139631609110528 ddar.py:60] Depth 5/1000 time = 2.2731873989105225
I0123 13:55:37.703222 139631609110528 ddar.py:60] Depth 6/1000 time = 2.307121515274048
I0123 13:55:41.448962 139631609110528 ddar.py:60] Depth 7/1000 time = 3.745495557785034
I0123 13:55:43.732820 139631609110528 ddar.py:60] Depth 8/1000 time = 2.283583879470825
I0123 13:55:43.738720 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:55:43.738777 139631609110528 alphageometry.py:566] LM output (score=-1.097553): "l : C a b l 15 D a l b l 16 ;"
I0123 13:55:43.738812 139631609110528 alphageometry.py:567] Translation: "l = on_line l a b, on_bline l b a"

I0123 13:55:43.738849 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l a b, on_bline l b a ? perp j b b g"
I0123 13:55:43.739005 139631609110528 graph.py:498] 
I0123 13:55:43.739055 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l a b, on_bline l b a ? perp j b b g
I0123 13:55:44.886548 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0829217433929443
I0123 13:55:46.671173 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7844200134277344
I0123 13:55:48.882889 139631609110528 ddar.py:60] Depth 3/1000 time = 2.2114744186401367
I0123 13:55:52.589059 139631609110528 ddar.py:60] Depth 4/1000 time = 3.7058963775634766
I0123 13:55:54.786872 139631609110528 ddar.py:60] Depth 5/1000 time = 2.197340726852417
I0123 13:55:57.049269 139631609110528 ddar.py:60] Depth 6/1000 time = 2.2341296672821045
I0123 13:55:59.256102 139631609110528 ddar.py:60] Depth 7/1000 time = 2.2066023349761963
I0123 13:56:03.041888 139631609110528 ddar.py:60] Depth 8/1000 time = 3.785529375076294
I0123 13:56:03.048544 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:56:03.048609 139631609110528 alphageometry.py:566] LM output (score=-1.143694): "l : C a j l 15 D a l j l 16 ;"
I0123 13:56:03.048675 139631609110528 alphageometry.py:567] Translation: "l = on_line l a j, on_bline l j a"

I0123 13:56:03.048712 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l a j, on_bline l j a ? perp j b b g"
I0123 13:56:03.048868 139631609110528 graph.py:498] 
I0123 13:56:03.048928 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l a j, on_bline l j a ? perp j b b g
I0123 13:56:04.163522 139631609110528 ddar.py:60] Depth 1/1000 time = 1.051931619644165
I0123 13:56:05.805265 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6415345668792725
I0123 13:56:07.651236 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8457379341125488
I0123 13:56:09.556816 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9053244590759277
I0123 13:56:11.495606 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9383199214935303
I0123 13:56:15.033107 139631609110528 ddar.py:60] Depth 6/1000 time = 3.5169103145599365
I0123 13:56:16.934036 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9005804061889648
I0123 13:56:18.854582 139631609110528 ddar.py:60] Depth 8/1000 time = 1.9202594757080078
I0123 13:56:18.860877 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:56:18.860944 139631609110528 alphageometry.py:566] LM output (score=-1.637654): "l : C g i l 15 D g l i l 16 ;"
I0123 13:56:18.860980 139631609110528 alphageometry.py:567] Translation: "l = on_line l g i, on_bline l i g"

I0123 13:56:18.861032 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l g i, on_bline l i g ? perp j b b g"
I0123 13:56:18.861243 139631609110528 graph.py:498] 
I0123 13:56:18.861296 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l g i, on_bline l i g ? perp j b b g
I0123 13:56:20.042002 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1173598766326904
I0123 13:56:23.425392 139631609110528 ddar.py:60] Depth 2/1000 time = 3.383175849914551
I0123 13:56:25.452523 139631609110528 ddar.py:60] Depth 3/1000 time = 2.026886463165283
I0123 13:56:27.529500 139631609110528 ddar.py:60] Depth 4/1000 time = 2.0766916275024414
I0123 13:56:29.615951 139631609110528 ddar.py:60] Depth 5/1000 time = 2.0859482288360596
I0123 13:56:33.353827 139631609110528 ddar.py:60] Depth 6/1000 time = 3.7191996574401855
I0123 13:56:35.456880 139631609110528 ddar.py:60] Depth 7/1000 time = 2.1027143001556396
I0123 13:56:37.578360 139631609110528 ddar.py:60] Depth 8/1000 time = 2.1211211681365967
I0123 13:56:37.584246 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:56:37.584347 139631609110528 alphageometry.py:566] LM output (score=-1.784002): "l : C c d l 15 D c l d l 16 ;"
I0123 13:56:37.584382 139631609110528 alphageometry.py:567] Translation: "l = on_line l c d, on_bline l d c"

I0123 13:56:37.584437 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l c d, on_bline l d c ? perp j b b g"
I0123 13:56:37.584687 139631609110528 graph.py:498] 
I0123 13:56:37.584752 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l c d, on_bline l d c ? perp j b b g
I0123 13:56:38.710777 139631609110528 ddar.py:60] Depth 1/1000 time = 1.061795711517334
I0123 13:56:41.973886 139631609110528 ddar.py:60] Depth 2/1000 time = 3.262908458709717
I0123 13:56:43.848795 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8746747970581055
I0123 13:56:45.769707 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9206409454345703
I0123 13:56:47.683525 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9133543968200684
I0123 13:56:49.642904 139631609110528 ddar.py:60] Depth 6/1000 time = 1.93984055519104
I0123 13:56:51.547970 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9048194885253906
I0123 13:56:55.048917 139631609110528 ddar.py:60] Depth 8/1000 time = 3.500654697418213
I0123 13:56:55.055684 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:56:55.055769 139631609110528 alphageometry.py:566] LM output (score=-1.791497): "l : D a l b l 15 ;"
I0123 13:56:55.055808 139631609110528 alphageometry.py:567] Translation: "l = on_bline l b a"

I0123 13:56:55.055853 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_bline l b a ? perp j b b g"
I0123 13:56:55.056026 139631609110528 graph.py:498] 
I0123 13:56:55.056090 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_bline l b a ? perp j b b g
I0123 13:56:56.175939 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0554172992706299
I0123 13:56:58.061571 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8854179382324219
I0123 13:57:00.125195 139631609110528 ddar.py:60] Depth 3/1000 time = 2.063396692276001
I0123 13:57:02.233484 139631609110528 ddar.py:60] Depth 4/1000 time = 2.1080312728881836
I0123 13:57:05.850404 139631609110528 ddar.py:60] Depth 5/1000 time = 3.616507053375244
I0123 13:57:08.012402 139631609110528 ddar.py:60] Depth 6/1000 time = 2.134909152984619
I0123 13:57:10.117637 139631609110528 ddar.py:60] Depth 7/1000 time = 2.104997158050537
I0123 13:57:12.261035 139631609110528 ddar.py:60] Depth 8/1000 time = 2.1431386470794678
I0123 13:57:12.266356 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:57:12.266433 139631609110528 alphageometry.py:566] LM output (score=-1.884606): "l : C h i l 15 D h l i l 16 ;"
I0123 13:57:12.266471 139631609110528 alphageometry.py:567] Translation: "l = on_line l h i, on_bline l i h"

I0123 13:57:12.266512 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l h i, on_bline l i h ? perp j b b g"
I0123 13:57:12.266681 139631609110528 graph.py:498] 
I0123 13:57:12.266740 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l h i, on_bline l i h ? perp j b b g
I0123 13:57:13.402274 139631609110528 ddar.py:60] Depth 1/1000 time = 1.071357011795044
I0123 13:57:15.338482 139631609110528 ddar.py:60] Depth 2/1000 time = 1.9359111785888672
I0123 13:57:18.979081 139631609110528 ddar.py:60] Depth 3/1000 time = 3.640272617340088
I0123 13:57:20.923599 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9442362785339355
I0123 13:57:22.869131 139631609110528 ddar.py:60] Depth 5/1000 time = 1.945049524307251
I0123 13:57:24.889659 139631609110528 ddar.py:60] Depth 6/1000 time = 2.0011651515960693
I0123 13:57:26.850847 139631609110528 ddar.py:60] Depth 7/1000 time = 1.9609568119049072
I0123 13:57:30.425550 139631609110528 ddar.py:60] Depth 8/1000 time = 3.57444429397583
I0123 13:57:30.432030 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:57:30.432090 139631609110528 alphageometry.py:566] LM output (score=-2.044685): "l : C i h l 15 D i l h l 16 ;"
I0123 13:57:30.432126 139631609110528 alphageometry.py:567] Translation: "l = on_line l i h, on_bline l h i"

I0123 13:57:30.432163 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l i h, on_bline l h i ? perp j b b g"
I0123 13:57:30.432334 139631609110528 graph.py:498] 
I0123 13:57:30.432393 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l i h, on_bline l h i ? perp j b b g
I0123 13:57:31.562263 139631609110528 ddar.py:60] Depth 1/1000 time = 1.067695140838623
I0123 13:57:33.365238 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8027548789978027
I0123 13:57:35.233571 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8679959774017334
I0123 13:57:37.151734 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9177839756011963
I0123 13:57:39.089276 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9369921684265137
I0123 13:57:42.723989 139631609110528 ddar.py:60] Depth 6/1000 time = 3.614471435546875
I0123 13:57:44.672348 139631609110528 ddar.py:60] Depth 7/1000 time = 1.948129415512085
I0123 13:57:46.630496 139631609110528 ddar.py:60] Depth 8/1000 time = 1.957871913909912
I0123 13:57:46.636862 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:57:46.636931 139631609110528 alphageometry.py:566] LM output (score=-2.134082): "l : C g h l 15 D g l h l 16 ;"
I0123 13:57:46.636969 139631609110528 alphageometry.py:567] Translation: "l = on_line l g h, on_bline l h g"

I0123 13:57:46.637007 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l g h, on_bline l h g ? perp j b b g"
I0123 13:57:46.637178 139631609110528 graph.py:498] 
I0123 13:57:46.637237 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l g h, on_bline l h g ? perp j b b g
I0123 13:57:47.818700 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1179225444793701
I0123 13:57:50.594091 139631609110528 ddar.py:60] Depth 2/1000 time = 2.7751688957214355
I0123 13:57:55.080581 139631609110528 ddar.py:60] Depth 3/1000 time = 4.486199140548706
I0123 13:57:58.137400 139631609110528 ddar.py:60] Depth 4/1000 time = 3.0564563274383545
I0123 13:58:02.854910 139631609110528 ddar.py:60] Depth 5/1000 time = 4.717200994491577
I0123 13:58:05.992139 139631609110528 ddar.py:60] Depth 6/1000 time = 3.136969566345215
I0123 13:58:10.925975 139631609110528 ddar.py:60] Depth 7/1000 time = 4.933591604232788
I0123 13:58:14.294228 139631609110528 ddar.py:60] Depth 8/1000 time = 3.367919683456421
I0123 13:58:17.697041 139631609110528 ddar.py:60] Depth 9/1000 time = 3.402365207672119
I0123 13:58:22.697566 139631609110528 ddar.py:60] Depth 10/1000 time = 5.0002281665802
I0123 13:58:26.112386 139631609110528 ddar.py:60] Depth 11/1000 time = 3.4142796993255615
I0123 13:58:31.119477 139631609110528 ddar.py:60] Depth 12/1000 time = 4.981647253036499
I0123 13:58:34.555449 139631609110528 ddar.py:60] Depth 13/1000 time = 3.435626983642578
I0123 13:58:39.678735 139631609110528 ddar.py:60] Depth 14/1000 time = 5.103235483169556
I0123 13:58:39.679030 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:58:39.679091 139631609110528 alphageometry.py:566] LM output (score=-2.143209): "l : C c i l 15 D c l i l 16 ;"
I0123 13:58:39.679126 139631609110528 alphageometry.py:567] Translation: "l = on_line l c i, on_bline l i c"

I0123 13:58:39.679164 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l c i, on_bline l i c ? perp j b b g"
I0123 13:58:39.679344 139631609110528 graph.py:498] 
I0123 13:58:39.679405 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l c i, on_bline l i c ? perp j b b g
I0123 13:58:40.909821 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1653637886047363
I0123 13:58:43.291977 139631609110528 ddar.py:60] Depth 2/1000 time = 2.381936550140381
I0123 13:58:47.231674 139631609110528 ddar.py:60] Depth 3/1000 time = 3.9394633769989014
I0123 13:58:49.628759 139631609110528 ddar.py:60] Depth 4/1000 time = 2.39682936668396
I0123 13:58:52.039323 139631609110528 ddar.py:60] Depth 5/1000 time = 2.4100098609924316
I0123 13:58:56.259687 139631609110528 ddar.py:60] Depth 6/1000 time = 4.196904420852661
I0123 13:58:58.682447 139631609110528 ddar.py:60] Depth 7/1000 time = 2.4225099086761475
I0123 13:59:01.104035 139631609110528 ddar.py:60] Depth 8/1000 time = 2.4213178157806396
I0123 13:59:01.111816 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:59:01.111889 139631609110528 alphageometry.py:566] LM output (score=-2.268930): "l : C a c l 15 D a l c l 16 ;"
I0123 13:59:01.111926 139631609110528 alphageometry.py:567] Translation: "l = on_line l a c, on_bline l c a"

I0123 13:59:01.111968 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l a c, on_bline l c a ? perp j b b g"
I0123 13:59:01.112160 139631609110528 graph.py:498] 
I0123 13:59:01.112223 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l a c, on_bline l c a ? perp j b b g
I0123 13:59:02.285159 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1086740493774414
I0123 13:59:06.043408 139631609110528 ddar.py:60] Depth 2/1000 time = 3.758049488067627
I0123 13:59:08.350241 139631609110528 ddar.py:60] Depth 3/1000 time = 2.306612014770508
I0123 13:59:10.677116 139631609110528 ddar.py:60] Depth 4/1000 time = 2.32658314704895
I0123 13:59:13.022800 139631609110528 ddar.py:60] Depth 5/1000 time = 2.3451642990112305
I0123 13:59:15.445833 139631609110528 ddar.py:60] Depth 6/1000 time = 2.391726493835449
I0123 13:59:19.451734 139631609110528 ddar.py:60] Depth 7/1000 time = 4.005568265914917
I0123 13:59:21.821407 139631609110528 ddar.py:60] Depth 8/1000 time = 2.3693909645080566
I0123 13:59:21.829991 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:59:21.830049 139631609110528 alphageometry.py:566] LM output (score=-2.353315): "l : C a d l 15 D a l d l 16 ;"
I0123 13:59:21.830084 139631609110528 alphageometry.py:567] Translation: "l = on_line l a d, on_bline l d a"

I0123 13:59:21.830122 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l a d, on_bline l d a ? perp j b b g"
I0123 13:59:21.830312 139631609110528 graph.py:498] 
I0123 13:59:21.830374 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l a d, on_bline l d a ? perp j b b g
I0123 13:59:22.941656 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0470495223999023
I0123 13:59:24.737688 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7958335876464844
I0123 13:59:26.783761 139631609110528 ddar.py:60] Depth 3/1000 time = 2.0458383560180664
I0123 13:59:30.409741 139631609110528 ddar.py:60] Depth 4/1000 time = 3.6257312297821045
I0123 13:59:32.452259 139631609110528 ddar.py:60] Depth 5/1000 time = 2.0420384407043457
I0123 13:59:34.551404 139631609110528 ddar.py:60] Depth 6/1000 time = 2.079937219619751
I0123 13:59:36.600006 139631609110528 ddar.py:60] Depth 7/1000 time = 2.0482425689697266
I0123 13:59:38.648474 139631609110528 ddar.py:60] Depth 8/1000 time = 2.0481700897216797
I0123 13:59:38.655308 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:59:38.655410 139631609110528 alphageometry.py:566] LM output (score=-2.421826): "l : T a c a l 15 ;"
I0123 13:59:38.655446 139631609110528 alphageometry.py:567] Translation: "l = on_tline l a a c"

I0123 13:59:38.655511 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_tline l a a c ? perp j b b g"
I0123 13:59:38.655750 139631609110528 graph.py:498] 
I0123 13:59:38.655825 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_tline l a a c ? perp j b b g
I0123 13:59:39.678902 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9680905342102051
I0123 13:59:42.797893 139631609110528 ddar.py:60] Depth 2/1000 time = 3.118807077407837
I0123 13:59:44.647439 139631609110528 ddar.py:60] Depth 3/1000 time = 1.8493025302886963
I0123 13:59:46.501649 139631609110528 ddar.py:60] Depth 4/1000 time = 1.8539550304412842
I0123 13:59:48.356228 139631609110528 ddar.py:60] Depth 5/1000 time = 1.854139804840088
I0123 13:59:50.275218 139631609110528 ddar.py:60] Depth 6/1000 time = 1.8931684494018555
I0123 13:59:53.862463 139631609110528 ddar.py:60] Depth 7/1000 time = 3.586951732635498
I0123 13:59:55.722965 139631609110528 ddar.py:60] Depth 8/1000 time = 1.8601069450378418
I0123 13:59:55.728317 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 13:59:55.728403 139631609110528 alphageometry.py:566] LM output (score=-2.436842): "l : T d k f l 15 ;"
I0123 13:59:55.728439 139631609110528 alphageometry.py:567] Translation: "l = on_tline l f d k"

I0123 13:59:55.728489 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_tline l f d k ? perp j b b g"
I0123 13:59:55.728676 139631609110528 graph.py:498] 
I0123 13:59:55.728740 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_tline l f d k ? perp j b b g
I0123 13:59:56.774163 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9882838726043701
I0123 13:59:58.430899 139631609110528 ddar.py:60] Depth 2/1000 time = 1.6565678119659424
I0123 14:00:00.185303 139631609110528 ddar.py:60] Depth 3/1000 time = 1.7541921138763428
I0123 14:00:01.907469 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7219278812408447
I0123 14:00:03.618633 139631609110528 ddar.py:60] Depth 5/1000 time = 1.7107338905334473
I0123 14:00:06.994162 139631609110528 ddar.py:60] Depth 6/1000 time = 3.3559722900390625
I0123 14:00:08.733295 139631609110528 ddar.py:60] Depth 7/1000 time = 1.7389004230499268
I0123 14:00:10.473938 139631609110528 ddar.py:60] Depth 8/1000 time = 1.7404184341430664
I0123 14:00:10.479026 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:00:10.479091 139631609110528 alphageometry.py:566] LM output (score=-2.517001): "l : C f i l 15 D f l i l 16 ;"
I0123 14:00:10.479125 139631609110528 alphageometry.py:567] Translation: "l = on_line l f i, on_bline l i f"

I0123 14:00:10.479165 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l f i, on_bline l i f ? perp j b b g"
I0123 14:00:10.479330 139631609110528 graph.py:498] 
I0123 14:00:10.479389 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l f i, on_bline l i f ? perp j b b g
I0123 14:00:11.604599 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0616371631622314
I0123 14:00:13.488590 139631609110528 ddar.py:60] Depth 2/1000 time = 1.883718729019165
I0123 14:00:15.410477 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9215378761291504
I0123 14:00:19.153444 139631609110528 ddar.py:60] Depth 4/1000 time = 3.742671251296997
I0123 14:00:21.119900 139631609110528 ddar.py:60] Depth 5/1000 time = 1.965888261795044
I0123 14:00:23.154632 139631609110528 ddar.py:60] Depth 6/1000 time = 2.015981674194336
I0123 14:00:25.154202 139631609110528 ddar.py:60] Depth 7/1000 time = 1.99932861328125
I0123 14:00:27.166028 139631609110528 ddar.py:60] Depth 8/1000 time = 2.0115702152252197
I0123 14:00:27.173418 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:00:27.173494 139631609110528 alphageometry.py:566] LM output (score=-2.523616): "l : P a b c l 15 ;"
I0123 14:00:27.173532 139631609110528 alphageometry.py:567] Translation: "l = on_pline l c a b"

I0123 14:00:27.173571 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_pline l c a b ? perp j b b g"
I0123 14:00:27.173774 139631609110528 graph.py:498] 
I0123 14:00:27.173834 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_pline l c a b ? perp j b b g
I0123 14:00:28.202975 139631609110528 ddar.py:60] Depth 1/1000 time = 0.9767212867736816
I0123 14:00:31.201713 139631609110528 ddar.py:60] Depth 2/1000 time = 2.998520612716675
I0123 14:00:32.827800 139631609110528 ddar.py:60] Depth 3/1000 time = 1.6257920265197754
I0123 14:00:34.465060 139631609110528 ddar.py:60] Depth 4/1000 time = 1.6369094848632812
I0123 14:00:36.117976 139631609110528 ddar.py:60] Depth 5/1000 time = 1.6524405479431152
I0123 14:00:37.816987 139631609110528 ddar.py:60] Depth 6/1000 time = 1.6798310279846191
I0123 14:00:39.470108 139631609110528 ddar.py:60] Depth 7/1000 time = 1.652909517288208
I0123 14:00:42.756723 139631609110528 ddar.py:60] Depth 8/1000 time = 3.286377191543579
I0123 14:00:42.761311 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:00:42.761377 139631609110528 alphageometry.py:566] LM output (score=-2.542609): "l : D a b a l 15 D a b b l 16 ;"
I0123 14:00:42.761413 139631609110528 alphageometry.py:567] Translation: "l = on_circle l a b, on_circle l b a"

I0123 14:00:42.761449 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_circle l a b, on_circle l b a ? perp j b b g"
I0123 14:00:42.761616 139631609110528 graph.py:498] 
I0123 14:00:42.761689 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_circle l a b, on_circle l b a ? perp j b b g
I0123 14:00:43.977944 139631609110528 ddar.py:60] Depth 1/1000 time = 1.1436407566070557
I0123 14:00:45.791385 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8132388591766357
I0123 14:00:48.019684 139631609110528 ddar.py:60] Depth 3/1000 time = 2.228081703186035
I0123 14:00:50.296162 139631609110528 ddar.py:60] Depth 4/1000 time = 2.276024580001831
I0123 14:00:52.589919 139631609110528 ddar.py:60] Depth 5/1000 time = 2.2932379245758057
I0123 14:00:56.593536 139631609110528 ddar.py:60] Depth 6/1000 time = 4.002105236053467
I0123 14:00:58.907351 139631609110528 ddar.py:60] Depth 7/1000 time = 2.287137985229492
I0123 14:01:01.176718 139631609110528 ddar.py:60] Depth 8/1000 time = 2.2691328525543213
I0123 14:01:03.465131 139631609110528 ddar.py:60] Depth 9/1000 time = 2.288161277770996
I0123 14:01:03.470512 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:01:03.470587 139631609110528 alphageometry.py:566] LM output (score=-2.603297): "l : D a l c l 15 ;"
I0123 14:01:03.470641 139631609110528 alphageometry.py:567] Translation: "l = on_bline l c a"

I0123 14:01:03.470683 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_bline l c a ? perp j b b g"
I0123 14:01:03.470850 139631609110528 graph.py:498] 
I0123 14:01:03.470918 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_bline l c a ? perp j b b g
I0123 14:01:04.586330 139631609110528 ddar.py:60] Depth 1/1000 time = 1.049525499343872
I0123 14:01:06.377974 139631609110528 ddar.py:60] Depth 2/1000 time = 1.791442632675171
I0123 14:01:10.200954 139631609110528 ddar.py:60] Depth 3/1000 time = 3.8227484226226807
I0123 14:01:12.338235 139631609110528 ddar.py:60] Depth 4/1000 time = 2.136956214904785
I0123 14:01:14.475041 139631609110528 ddar.py:60] Depth 5/1000 time = 2.1361634731292725
I0123 14:01:16.682102 139631609110528 ddar.py:60] Depth 6/1000 time = 2.1819005012512207
I0123 14:01:18.827995 139631609110528 ddar.py:60] Depth 7/1000 time = 2.145658493041992
I0123 14:01:22.606527 139631609110528 ddar.py:60] Depth 8/1000 time = 3.778266668319702
I0123 14:01:22.611765 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:01:22.611823 139631609110528 alphageometry.py:566] LM output (score=-2.625358): "l : P a j i l 15 P a l i j 16 ;"
I0123 14:01:22.611860 139631609110528 alphageometry.py:567] Translation: "l = on_pline l i a j, on_pline l a i j"

I0123 14:01:22.611900 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_pline l i a j, on_pline l a i j ? perp j b b g"
I0123 14:01:22.612094 139631609110528 graph.py:498] 
I0123 14:01:22.612156 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_pline l i a j, on_pline l a i j ? perp j b b g
I0123 14:01:23.757854 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0880517959594727
I0123 14:01:25.626259 139631609110528 ddar.py:60] Depth 2/1000 time = 1.8681840896606445
I0123 14:01:27.724059 139631609110528 ddar.py:60] Depth 3/1000 time = 2.097576379776001
I0123 14:01:29.853505 139631609110528 ddar.py:60] Depth 4/1000 time = 2.1291701793670654
I0123 14:01:31.993874 139631609110528 ddar.py:60] Depth 5/1000 time = 2.139810562133789
I0123 14:01:35.890607 139631609110528 ddar.py:60] Depth 6/1000 time = 3.874971389770508
I0123 14:01:38.015086 139631609110528 ddar.py:60] Depth 7/1000 time = 2.124232530593872
I0123 14:01:40.165124 139631609110528 ddar.py:60] Depth 8/1000 time = 2.1497890949249268
I0123 14:01:40.172024 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:01:40.172100 139631609110528 alphageometry.py:566] LM output (score=-2.694209): "l : C a h l 15 D a l h l 16 ;"
I0123 14:01:40.172140 139631609110528 alphageometry.py:567] Translation: "l = on_line l a h, on_bline l h a"

I0123 14:01:40.172183 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l a h, on_bline l h a ? perp j b b g"
I0123 14:01:40.172362 139631609110528 graph.py:498] 
I0123 14:01:40.172428 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l a h, on_bline l h a ? perp j b b g
I0123 14:01:41.316190 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0781128406524658
I0123 14:01:43.092697 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7763214111328125
I0123 14:01:46.656603 139631609110528 ddar.py:60] Depth 3/1000 time = 3.563645839691162
I0123 14:01:48.597797 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9409072399139404
I0123 14:01:50.550038 139631609110528 ddar.py:60] Depth 5/1000 time = 1.9517180919647217
I0123 14:01:52.552957 139631609110528 ddar.py:60] Depth 6/1000 time = 1.9837226867675781
I0123 14:01:54.513701 139631609110528 ddar.py:60] Depth 7/1000 time = 1.960383653640747
I0123 14:01:58.230543 139631609110528 ddar.py:60] Depth 8/1000 time = 3.7165439128875732
I0123 14:01:58.237994 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:01:58.238061 139631609110528 alphageometry.py:566] LM output (score=-2.702420): "l : C c j l 15 D c l j l 16 ;"
I0123 14:01:58.238097 139631609110528 alphageometry.py:567] Translation: "l = on_line l c j, on_bline l j c"

I0123 14:01:58.238134 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l c j, on_bline l j c ? perp j b b g"
I0123 14:01:58.238327 139631609110528 graph.py:498] 
I0123 14:01:58.238388 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_line l c j, on_bline l j c ? perp j b b g
I0123 14:01:59.358341 139631609110528 ddar.py:60] Depth 1/1000 time = 1.0559823513031006
I0123 14:02:01.329739 139631609110528 ddar.py:60] Depth 2/1000 time = 1.971198558807373
I0123 14:02:03.269515 139631609110528 ddar.py:60] Depth 3/1000 time = 1.9395420551300049
I0123 14:02:05.249175 139631609110528 ddar.py:60] Depth 4/1000 time = 1.9793899059295654
I0123 14:02:07.240399 139631609110528 ddar.py:60] Depth 5/1000 time = 1.990696907043457
I0123 14:02:10.917487 139631609110528 ddar.py:60] Depth 6/1000 time = 3.657292127609253
I0123 14:02:12.932312 139631609110528 ddar.py:60] Depth 7/1000 time = 2.0145082473754883
I0123 14:02:15.048783 139631609110528 ddar.py:60] Depth 8/1000 time = 2.116058588027954
I0123 14:02:15.055795 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:02:15.055918 139631609110528 alphageometry.py:566] LM output (score=-2.850960): "l : T d k d l 15 ;"
I0123 14:02:15.055957 139631609110528 alphageometry.py:567] Translation: "l = on_tline l d d k"

I0123 14:02:15.056017 139631609110528 alphageometry.py:576] Solving: "a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_tline l d d k ? perp j b b g"
I0123 14:02:15.056242 139631609110528 graph.py:498] 
I0123 14:02:15.056309 139631609110528 graph.py:499] a b c = triangle a b c; d = circle d a b c; e = on_line e b d; f = midpoint f c e; g = on_circle g e b, on_circle g f c; h = on_circle h e b, on_circle h f c; i = on_circle i d c, on_line i g c; j = lc_tangent j c i, on_line j e i; k = on_line k a i, on_bline k i a; l = on_tline l d d k ? perp j b b g
I0123 14:02:16.097529 139631609110528 ddar.py:60] Depth 1/1000 time = 0.989438533782959
I0123 14:02:17.845348 139631609110528 ddar.py:60] Depth 2/1000 time = 1.7476141452789307
I0123 14:02:21.273212 139631609110528 ddar.py:60] Depth 3/1000 time = 3.4276485443115234
I0123 14:02:23.037639 139631609110528 ddar.py:60] Depth 4/1000 time = 1.7641637325286865
I0123 14:02:23.038063 139631609110528 alphageometry.py:221] DD+AR failed to solve the problem.
I0123 14:02:23.038104 139631609110528 alphageometry.py:585] Timeout.
